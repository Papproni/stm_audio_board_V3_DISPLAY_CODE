
stm_audio_board_v3_display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000266d0  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002634  080269a0  080269a0  000369a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006a34  08028fd4  08028fd4  00038fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000064  0802fa08  0802fa08  0003fa08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0001cd40  0802fa6c  0802fa6c  0003fa6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000b8  0804c7ac  0804c7ac  0005c7ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .init_array   00000018  0804c864  0804c864  0005c864  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   0000000c  0804c87c  0804c87c  0005c87c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         000000fc  24000000  0804c888  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00003ad8  240000fc  0804c984  000600fc  2**2
                  ALLOC
 11 ._user_heap_stack 0000c004  24003bd4  0804c984  00063bd4  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000600fc  2**0
                  CONTENTS, READONLY
 13 .comment      000000c2  00000000  00000000  0006012a  2**0
                  CONTENTS, READONLY
 14 .debug_info   0009dc8e  00000000  00000000  000601ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00012791  00000000  00000000  000fde7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00002f98  00000000  00000000  00110610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000228b  00000000  00000000  001135a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0003ef9b  00000000  00000000  00115833  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0003b1ac  00000000  00000000  001547ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00174063  00000000  00000000  0018f97a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000cf4c  00000000  00000000  003039e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000075  00000000  00000000  0031092c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240000fc 	.word	0x240000fc
 80002ec:	00000000 	.word	0x00000000
 80002f0:	08026988 	.word	0x08026988

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	24000100 	.word	0x24000100
 800030c:	08026988 	.word	0x08026988

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <ILI9341_Init>:
static void DC_H(void);
static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 80003b4:	f000 f99d 	bl	80006f2 <ILI9341_Reset>
	ILI9341_SoftReset();
 80003b8:	f000 f9ae 	bl	8000718 <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 80003bc:	20cb      	movs	r0, #203	; 0xcb
 80003be:	f000 f9c5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 80003c2:	2039      	movs	r0, #57	; 0x39
 80003c4:	f000 f9dc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80003c8:	202c      	movs	r0, #44	; 0x2c
 80003ca:	f000 f9d9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80003ce:	2000      	movs	r0, #0
 80003d0:	f000 f9d6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80003d4:	2034      	movs	r0, #52	; 0x34
 80003d6:	f000 f9d3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80003da:	2002      	movs	r0, #2
 80003dc:	f000 f9d0 	bl	8000780 <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80003e0:	20cf      	movs	r0, #207	; 0xcf
 80003e2:	f000 f9b3 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003e6:	2000      	movs	r0, #0
 80003e8:	f000 f9ca 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80003ec:	20c1      	movs	r0, #193	; 0xc1
 80003ee:	f000 f9c7 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80003f2:	2030      	movs	r0, #48	; 0x30
 80003f4:	f000 f9c4 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80003f8:	20e8      	movs	r0, #232	; 0xe8
 80003fa:	f000 f9a7 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80003fe:	2085      	movs	r0, #133	; 0x85
 8000400:	f000 f9be 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f9bb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 800040a:	2078      	movs	r0, #120	; 0x78
 800040c:	f000 f9b8 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 8000410:	20ea      	movs	r0, #234	; 0xea
 8000412:	f000 f99b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000416:	2000      	movs	r0, #0
 8000418:	f000 f9b2 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800041c:	2000      	movs	r0, #0
 800041e:	f000 f9af 	bl	8000780 <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 8000422:	20ed      	movs	r0, #237	; 0xed
 8000424:	f000 f992 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000428:	2064      	movs	r0, #100	; 0x64
 800042a:	f000 f9a9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800042e:	2003      	movs	r0, #3
 8000430:	f000 f9a6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000434:	2012      	movs	r0, #18
 8000436:	f000 f9a3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 800043a:	2081      	movs	r0, #129	; 0x81
 800043c:	f000 f9a0 	bl	8000780 <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 8000440:	20f7      	movs	r0, #247	; 0xf7
 8000442:	f000 f983 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000446:	2020      	movs	r0, #32
 8000448:	f000 f99a 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 800044c:	20c0      	movs	r0, #192	; 0xc0
 800044e:	f000 f97d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 8000452:	2010      	movs	r0, #16
 8000454:	f000 f994 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000458:	20c1      	movs	r0, #193	; 0xc1
 800045a:	f000 f977 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800045e:	2010      	movs	r0, #16
 8000460:	f000 f98e 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000464:	20c5      	movs	r0, #197	; 0xc5
 8000466:	f000 f971 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 800046a:	203e      	movs	r0, #62	; 0x3e
 800046c:	f000 f988 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8000470:	2028      	movs	r0, #40	; 0x28
 8000472:	f000 f985 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000476:	20c7      	movs	r0, #199	; 0xc7
 8000478:	f000 f968 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 800047c:	2086      	movs	r0, #134	; 0x86
 800047e:	f000 f97f 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 8000482:	2036      	movs	r0, #54	; 0x36
 8000484:	f000 f962 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000488:	2048      	movs	r0, #72	; 0x48
 800048a:	f000 f979 	bl	8000780 <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800048e:	203a      	movs	r0, #58	; 0x3a
 8000490:	f000 f95c 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000494:	2055      	movs	r0, #85	; 0x55
 8000496:	f000 f973 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 800049a:	20b1      	movs	r0, #177	; 0xb1
 800049c:	f000 f956 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004a0:	2000      	movs	r0, #0
 80004a2:	f000 f96d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 80004a6:	2018      	movs	r0, #24
 80004a8:	f000 f96a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 80004ac:	20b6      	movs	r0, #182	; 0xb6
 80004ae:	f000 f94d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 80004b2:	2008      	movs	r0, #8
 80004b4:	f000 f964 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 80004b8:	2082      	movs	r0, #130	; 0x82
 80004ba:	f000 f961 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 80004be:	2027      	movs	r0, #39	; 0x27
 80004c0:	f000 f95e 	bl	8000780 <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80004c4:	20f2      	movs	r0, #242	; 0xf2
 80004c6:	f000 f941 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004ca:	2000      	movs	r0, #0
 80004cc:	f000 f958 	bl	8000780 <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80004d0:	2026      	movs	r0, #38	; 0x26
 80004d2:	f000 f93b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80004d6:	2001      	movs	r0, #1
 80004d8:	f000 f952 	bl	8000780 <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80004dc:	20e0      	movs	r0, #224	; 0xe0
 80004de:	f000 f935 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80004e2:	200f      	movs	r0, #15
 80004e4:	f000 f94c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80004e8:	2031      	movs	r0, #49	; 0x31
 80004ea:	f000 f949 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80004ee:	202b      	movs	r0, #43	; 0x2b
 80004f0:	f000 f946 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80004f4:	200c      	movs	r0, #12
 80004f6:	f000 f943 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80004fa:	200e      	movs	r0, #14
 80004fc:	f000 f940 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000500:	2008      	movs	r0, #8
 8000502:	f000 f93d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 8000506:	204e      	movs	r0, #78	; 0x4e
 8000508:	f000 f93a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 800050c:	20f1      	movs	r0, #241	; 0xf1
 800050e:	f000 f937 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 8000512:	2037      	movs	r0, #55	; 0x37
 8000514:	f000 f934 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000518:	2007      	movs	r0, #7
 800051a:	f000 f931 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800051e:	2010      	movs	r0, #16
 8000520:	f000 f92e 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000524:	2003      	movs	r0, #3
 8000526:	f000 f92b 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800052a:	200e      	movs	r0, #14
 800052c:	f000 f928 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 8000530:	2009      	movs	r0, #9
 8000532:	f000 f925 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000536:	2000      	movs	r0, #0
 8000538:	f000 f922 	bl	8000780 <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 800053c:	20e1      	movs	r0, #225	; 0xe1
 800053e:	f000 f905 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000542:	2000      	movs	r0, #0
 8000544:	f000 f91c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000548:	200e      	movs	r0, #14
 800054a:	f000 f919 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800054e:	2014      	movs	r0, #20
 8000550:	f000 f916 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000554:	2003      	movs	r0, #3
 8000556:	f000 f913 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 800055a:	2011      	movs	r0, #17
 800055c:	f000 f910 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000560:	2007      	movs	r0, #7
 8000562:	f000 f90d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000566:	2031      	movs	r0, #49	; 0x31
 8000568:	f000 f90a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 800056c:	20c1      	movs	r0, #193	; 0xc1
 800056e:	f000 f907 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 8000572:	2048      	movs	r0, #72	; 0x48
 8000574:	f000 f904 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000578:	2008      	movs	r0, #8
 800057a:	f000 f901 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800057e:	200f      	movs	r0, #15
 8000580:	f000 f8fe 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000584:	200c      	movs	r0, #12
 8000586:	f000 f8fb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 800058a:	2031      	movs	r0, #49	; 0x31
 800058c:	f000 f8f8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 8000590:	2036      	movs	r0, #54	; 0x36
 8000592:	f000 f8f5 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000596:	200f      	movs	r0, #15
 8000598:	f000 f8f2 	bl	8000780 <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 800059c:	2011      	movs	r0, #17
 800059e:	f000 f8d5 	bl	800074c <LCD_WR_REG>

	HAL_Delay(120);
 80005a2:	2078      	movs	r0, #120	; 0x78
 80005a4:	f001 fc60 	bl	8001e68 <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 80005a8:	2029      	movs	r0, #41	; 0x29
 80005aa:	f000 f8cf 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 80005ae:	202c      	movs	r0, #44	; 0x2c
 80005b0:	f000 f8e6 	bl	8000780 <LCD_WR_DATA>

	LCD_direction(ROTATE_90);
 80005b4:	2001      	movs	r0, #1
 80005b6:	f000 f8fd 	bl	80007b4 <LCD_direction>
//	LCD_direction(ROTATE_270);

}
 80005ba:	bf00      	nop
 80005bc:	bd80      	pop	{r7, pc}

080005be <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 80005be:	b590      	push	{r4, r7, lr}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	4604      	mov	r4, r0
 80005c6:	4608      	mov	r0, r1
 80005c8:	4611      	mov	r1, r2
 80005ca:	461a      	mov	r2, r3
 80005cc:	4623      	mov	r3, r4
 80005ce:	80fb      	strh	r3, [r7, #6]
 80005d0:	4603      	mov	r3, r0
 80005d2:	80bb      	strh	r3, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4613      	mov	r3, r2
 80005da:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80005dc:	202a      	movs	r0, #42	; 0x2a
 80005de:	f000 f8b5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80005e2:	88fb      	ldrh	r3, [r7, #6]
 80005e4:	0a1b      	lsrs	r3, r3, #8
 80005e6:	b29b      	uxth	r3, r3
 80005e8:	b2db      	uxtb	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	f000 f8c8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	4618      	mov	r0, r3
 80005f6:	f000 f8c3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80005fa:	887b      	ldrh	r3, [r7, #2]
 80005fc:	0a1b      	lsrs	r3, r3, #8
 80005fe:	b29b      	uxth	r3, r3
 8000600:	b2db      	uxtb	r3, r3
 8000602:	4618      	mov	r0, r3
 8000604:	f000 f8bc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	b2db      	uxtb	r3, r3
 800060c:	4618      	mov	r0, r3
 800060e:	f000 f8b7 	bl	8000780 <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 8000612:	202b      	movs	r0, #43	; 0x2b
 8000614:	f000 f89a 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 8000618:	88bb      	ldrh	r3, [r7, #4]
 800061a:	0a1b      	lsrs	r3, r3, #8
 800061c:	b29b      	uxth	r3, r3
 800061e:	b2db      	uxtb	r3, r3
 8000620:	4618      	mov	r0, r3
 8000622:	f000 f8ad 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000626:	88bb      	ldrh	r3, [r7, #4]
 8000628:	b2db      	uxtb	r3, r3
 800062a:	4618      	mov	r0, r3
 800062c:	f000 f8a8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 8000630:	883b      	ldrh	r3, [r7, #0]
 8000632:	0a1b      	lsrs	r3, r3, #8
 8000634:	b29b      	uxth	r3, r3
 8000636:	b2db      	uxtb	r3, r3
 8000638:	4618      	mov	r0, r3
 800063a:	f000 f8a1 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800063e:	883b      	ldrh	r3, [r7, #0]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	4618      	mov	r0, r3
 8000644:	f000 f89c 	bl	8000780 <LCD_WR_DATA>

}
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bd90      	pop	{r4, r7, pc}

08000650 <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 8000650:	b480      	push	{r7}
 8000652:	b085      	sub	sp, #20
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 800065a:	e010      	b.n	800067e <ConvHL+0x2e>
		v = *(s+1);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	785b      	ldrb	r3, [r3, #1]
 8000660:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	3301      	adds	r3, #1
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7812      	ldrb	r2, [r2, #0]
 800066a:	701a      	strb	r2, [r3, #0]
		*s = v;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	7bfa      	ldrb	r2, [r7, #15]
 8000670:	701a      	strb	r2, [r3, #0]
		s += 2;
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	3302      	adds	r3, #2
 8000676:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000678:	683b      	ldr	r3, [r7, #0]
 800067a:	3b02      	subs	r3, #2
 800067c:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800067e:	683b      	ldr	r3, [r7, #0]
 8000680:	2b00      	cmp	r3, #0
 8000682:	dceb      	bgt.n	800065c <ConvHL+0xc>
	}
}
 8000684:	bf00      	nop
 8000686:	bf00      	nop
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
	...

08000694 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	4603      	mov	r3, r0
 800069c:	603a      	str	r2, [r7, #0]
 800069e:	80fb      	strh	r3, [r7, #6]
 80006a0:	460b      	mov	r3, r1
 80006a2:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 80006a4:	202c      	movs	r0, #44	; 0x2c
 80006a6:	f000 f851 	bl	800074c <LCD_WR_REG>

	DC_H();
 80006aa:	f000 f8e7 	bl	800087c <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
	ConvHL(s, (int32_t)w*h*2);
 80006ae:	88fb      	ldrh	r3, [r7, #6]
 80006b0:	88ba      	ldrh	r2, [r7, #4]
 80006b2:	fb02 f303 	mul.w	r3, r2, r3
 80006b6:	005b      	lsls	r3, r3, #1
 80006b8:	4619      	mov	r1, r3
 80006ba:	6838      	ldr	r0, [r7, #0]
 80006bc:	f7ff ffc8 	bl	8000650 <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)s, w * h *2);
 80006c0:	88fa      	ldrh	r2, [r7, #6]
 80006c2:	88bb      	ldrh	r3, [r7, #4]
 80006c4:	fb12 f303 	smulbb	r3, r2, r3
 80006c8:	b29b      	uxth	r3, r3
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	b29b      	uxth	r3, r3
 80006ce:	461a      	mov	r2, r3
 80006d0:	6839      	ldr	r1, [r7, #0]
 80006d2:	4803      	ldr	r0, [pc, #12]	; (80006e0 <ILI9341_DrawBitmap+0x4c>)
 80006d4:	f00a fe08 	bl	800b2e8 <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006d8:	bf00      	nop
 80006da:	3708      	adds	r7, #8
 80006dc:	46bd      	mov	sp, r7
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	24000290 	.word	0x24000290

080006e4 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80006e4:	b480      	push	{r7}
 80006e6:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006e8:	bf00      	nop
 80006ea:	46bd      	mov	sp, r7
 80006ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f0:	4770      	bx	lr

080006f2 <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80006f2:	b580      	push	{r7, lr}
 80006f4:	af00      	add	r7, sp, #0
	RESET_L();
 80006f6:	f000 f891 	bl	800081c <RESET_L>
	HAL_Delay(100);
 80006fa:	2064      	movs	r0, #100	; 0x64
 80006fc:	f001 fbb4 	bl	8001e68 <HAL_Delay>
	RESET_H();
 8000700:	f000 f898 	bl	8000834 <RESET_H>
	HAL_Delay(100);
 8000704:	2064      	movs	r0, #100	; 0x64
 8000706:	f001 fbaf 	bl	8001e68 <HAL_Delay>
	CS_L();
 800070a:	f000 f89f 	bl	800084c <CS_L>
	LED_H();
 800070e:	f000 f8c1 	bl	8000894 <LED_H>
}
 8000712:	bf00      	nop
 8000714:	bd80      	pop	{r7, pc}
	...

08000718 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 8000718:	b580      	push	{r7, lr}
 800071a:	b082      	sub	sp, #8
 800071c:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 800071e:	2301      	movs	r3, #1
 8000720:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000722:	f000 f89f 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000) != HAL_OK) {
 8000726:	1df9      	adds	r1, r7, #7
 8000728:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800072c:	2201      	movs	r2, #1
 800072e:	4806      	ldr	r0, [pc, #24]	; (8000748 <ILI9341_SoftReset+0x30>)
 8000730:	f00a f97a 	bl	800aa28 <HAL_SPI_Transmit>
 8000734:	4603      	mov	r3, r0
 8000736:	2b00      	cmp	r3, #0
 8000738:	d001      	beq.n	800073e <ILI9341_SoftReset+0x26>
		Error_Handler();
 800073a:	f000 fc03 	bl	8000f44 <Error_Handler>
	}

}
 800073e:	bf00      	nop
 8000740:	3708      	adds	r7, #8
 8000742:	46bd      	mov	sp, r7
 8000744:	bd80      	pop	{r7, pc}
 8000746:	bf00      	nop
 8000748:	24000290 	.word	0x24000290

0800074c <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	b082      	sub	sp, #8
 8000750:	af00      	add	r7, sp, #0
 8000752:	4603      	mov	r3, r0
 8000754:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000756:	f000 f885 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800075a:	1df9      	adds	r1, r7, #7
 800075c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000760:	2201      	movs	r2, #1
 8000762:	4806      	ldr	r0, [pc, #24]	; (800077c <LCD_WR_REG+0x30>)
 8000764:	f00a f960 	bl	800aa28 <HAL_SPI_Transmit>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <LCD_WR_REG+0x26>
		Error_Handler();
 800076e:	f000 fbe9 	bl	8000f44 <Error_Handler>
	}
}
 8000772:	bf00      	nop
 8000774:	3708      	adds	r7, #8
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}
 800077a:	bf00      	nop
 800077c:	24000290 	.word	0x24000290

08000780 <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	b082      	sub	sp, #8
 8000784:	af00      	add	r7, sp, #0
 8000786:	4603      	mov	r3, r0
 8000788:	71fb      	strb	r3, [r7, #7]
	DC_H();
 800078a:	f000 f877 	bl	800087c <DC_H>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800078e:	1df9      	adds	r1, r7, #7
 8000790:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000794:	2201      	movs	r2, #1
 8000796:	4806      	ldr	r0, [pc, #24]	; (80007b0 <LCD_WR_DATA+0x30>)
 8000798:	f00a f946 	bl	800aa28 <HAL_SPI_Transmit>
 800079c:	4603      	mov	r3, r0
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d001      	beq.n	80007a6 <LCD_WR_DATA+0x26>
		Error_Handler();
 80007a2:	f000 fbcf 	bl	8000f44 <Error_Handler>
	}
}
 80007a6:	bf00      	nop
 80007a8:	3708      	adds	r7, #8
 80007aa:	46bd      	mov	sp, r7
 80007ac:	bd80      	pop	{r7, pc}
 80007ae:	bf00      	nop
 80007b0:	24000290 	.word	0x24000290

080007b4 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b082      	sub	sp, #8
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	4603      	mov	r3, r0
 80007bc:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b03      	cmp	r3, #3
 80007c2:	d827      	bhi.n	8000814 <LCD_direction+0x60>
 80007c4:	a201      	add	r2, pc, #4	; (adr r2, 80007cc <LCD_direction+0x18>)
 80007c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007ca:	bf00      	nop
 80007cc:	080007dd 	.word	0x080007dd
 80007d0:	080007eb 	.word	0x080007eb
 80007d4:	080007f9 	.word	0x080007f9
 80007d8:	08000807 	.word	0x08000807
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80007dc:	2036      	movs	r0, #54	; 0x36
 80007de:	f7ff ffb5 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80007e2:	2048      	movs	r0, #72	; 0x48
 80007e4:	f7ff ffcc 	bl	8000780 <LCD_WR_DATA>
		break;
 80007e8:	e014      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80007ea:	2036      	movs	r0, #54	; 0x36
 80007ec:	f7ff ffae 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80007f0:	2028      	movs	r0, #40	; 0x28
 80007f2:	f7ff ffc5 	bl	8000780 <LCD_WR_DATA>
		break;
 80007f6:	e00d      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80007f8:	2036      	movs	r0, #54	; 0x36
 80007fa:	f7ff ffa7 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80007fe:	2088      	movs	r0, #136	; 0x88
 8000800:	f7ff ffbe 	bl	8000780 <LCD_WR_DATA>
		break;
 8000804:	e006      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 8000806:	2036      	movs	r0, #54	; 0x36
 8000808:	f7ff ffa0 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 800080c:	20e8      	movs	r0, #232	; 0xe8
 800080e:	f7ff ffb7 	bl	8000780 <LCD_WR_DATA>
		break;
 8000812:	bf00      	nop
	}
}
 8000814:	bf00      	nop
 8000816:	3708      	adds	r7, #8
 8000818:	46bd      	mov	sp, r7
 800081a:	bd80      	pop	{r7, pc}

0800081c <RESET_L>:

static void RESET_L(void)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000820:	2200      	movs	r2, #0
 8000822:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000826:	4802      	ldr	r0, [pc, #8]	; (8000830 <RESET_L+0x14>)
 8000828:	f005 fd86 	bl	8006338 <HAL_GPIO_WritePin>
}
 800082c:	bf00      	nop
 800082e:	bd80      	pop	{r7, pc}
 8000830:	58021800 	.word	0x58021800

08000834 <RESET_H>:

static void RESET_H(void)
{
 8000834:	b580      	push	{r7, lr}
 8000836:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000838:	2201      	movs	r2, #1
 800083a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800083e:	4802      	ldr	r0, [pc, #8]	; (8000848 <RESET_H+0x14>)
 8000840:	f005 fd7a 	bl	8006338 <HAL_GPIO_WritePin>
}
 8000844:	bf00      	nop
 8000846:	bd80      	pop	{r7, pc}
 8000848:	58021800 	.word	0x58021800

0800084c <CS_L>:

static void CS_L(void)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI5_NSS_GPIO_Port, SPI5_NSS_Pin, GPIO_PIN_RESET);
 8000850:	2200      	movs	r2, #0
 8000852:	2140      	movs	r1, #64	; 0x40
 8000854:	4802      	ldr	r0, [pc, #8]	; (8000860 <CS_L+0x14>)
 8000856:	f005 fd6f 	bl	8006338 <HAL_GPIO_WritePin>
}
 800085a:	bf00      	nop
 800085c:	bd80      	pop	{r7, pc}
 800085e:	bf00      	nop
 8000860:	58021400 	.word	0x58021400

08000864 <DC_L>:

static void DC_L(void)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8000868:	2200      	movs	r2, #0
 800086a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800086e:	4802      	ldr	r0, [pc, #8]	; (8000878 <DC_L+0x14>)
 8000870:	f005 fd62 	bl	8006338 <HAL_GPIO_WritePin>
}
 8000874:	bf00      	nop
 8000876:	bd80      	pop	{r7, pc}
 8000878:	58020800 	.word	0x58020800

0800087c <DC_H>:

static void DC_H(void)
{
 800087c:	b580      	push	{r7, lr}
 800087e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000886:	4802      	ldr	r0, [pc, #8]	; (8000890 <DC_H+0x14>)
 8000888:	f005 fd56 	bl	8006338 <HAL_GPIO_WritePin>
}
 800088c:	bf00      	nop
 800088e:	bd80      	pop	{r7, pc}
 8000890:	58020800 	.word	0x58020800

08000894 <LED_H>:

static void LED_H(void)
{
 8000894:	b480      	push	{r7}
 8000896:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8000898:	bf00      	nop
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr

080008a2 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008a2:	b580      	push	{r7, lr}
 80008a4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008a6:	f001 fa4d 	bl	8001d44 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008aa:	f000 f81f 	bl	80008ec <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008ae:	f000 fa51 	bl	8000d54 <MX_GPIO_Init>
  MX_DMA_Init();
 80008b2:	f000 fa2f 	bl	8000d14 <MX_DMA_Init>
  MX_SPI1_Init();
 80008b6:	f000 f981 	bl	8000bbc <MX_SPI1_Init>
  MX_SPI5_Init();
 80008ba:	f000 f9d5 	bl	8000c68 <MX_SPI5_Init>
  MX_CRC_Init();
 80008be:	f000 f8fd 	bl	8000abc <MX_CRC_Init>
  MX_ADC1_Init();
 80008c2:	f000 f883 	bl	80009cc <MX_ADC1_Init>
  MX_OCTOSPI1_Init();
 80008c6:	f000 f91b 	bl	8000b00 <MX_OCTOSPI1_Init>
  MX_TouchGFX_Init();
 80008ca:	f00b f9a6 	bl	800bc1a <MX_TouchGFX_Init>
//	  uint8_t cmd = 0x01;
//	  HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000);
//  }


  ILI9341_Init();
 80008ce:	f7ff fd6f 	bl	80003b0 <ILI9341_Init>
  XPT2046_Init();
 80008d2:	f001 f94f 	bl	8001b74 <XPT2046_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  MX_TouchGFX_Process();
 80008d6:	f00b f9a8 	bl	800bc2a <MX_TouchGFX_Process>
	  HAL_Delay(1);
 80008da:	2001      	movs	r0, #1
 80008dc:	f001 fac4 	bl	8001e68 <HAL_Delay>
	  touchgfxSignalVSync();
 80008e0:	f010 ffd7 	bl	8011892 <touchgfxSignalVSync>
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80008e4:	f00b f9a1 	bl	800bc2a <MX_TouchGFX_Process>
  {
 80008e8:	e7f5      	b.n	80008d6 <main+0x34>
	...

080008ec <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	b09c      	sub	sp, #112	; 0x70
 80008f0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008f2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008f6:	224c      	movs	r2, #76	; 0x4c
 80008f8:	2100      	movs	r1, #0
 80008fa:	4618      	mov	r0, r3
 80008fc:	f025 fa1f 	bl	8025d3e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000900:	1d3b      	adds	r3, r7, #4
 8000902:	2220      	movs	r2, #32
 8000904:	2100      	movs	r1, #0
 8000906:	4618      	mov	r0, r3
 8000908:	f025 fa19 	bl	8025d3e <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 800090c:	2002      	movs	r0, #2
 800090e:	f006 fbf7 	bl	8007100 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 8000912:	2300      	movs	r3, #0
 8000914:	603b      	str	r3, [r7, #0]
 8000916:	4b2c      	ldr	r3, [pc, #176]	; (80009c8 <SystemClock_Config+0xdc>)
 8000918:	699b      	ldr	r3, [r3, #24]
 800091a:	4a2b      	ldr	r2, [pc, #172]	; (80009c8 <SystemClock_Config+0xdc>)
 800091c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000920:	6193      	str	r3, [r2, #24]
 8000922:	4b29      	ldr	r3, [pc, #164]	; (80009c8 <SystemClock_Config+0xdc>)
 8000924:	699b      	ldr	r3, [r3, #24]
 8000926:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800092a:	603b      	str	r3, [r7, #0]
 800092c:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 800092e:	bf00      	nop
 8000930:	4b25      	ldr	r3, [pc, #148]	; (80009c8 <SystemClock_Config+0xdc>)
 8000932:	699b      	ldr	r3, [r3, #24]
 8000934:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000938:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800093c:	d1f8      	bne.n	8000930 <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800093e:	2302      	movs	r3, #2
 8000940:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 8000942:	2301      	movs	r3, #1
 8000944:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = 64;
 8000946:	2340      	movs	r3, #64	; 0x40
 8000948:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800094a:	2302      	movs	r3, #2
 800094c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800094e:	2300      	movs	r3, #0
 8000950:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000952:	2304      	movs	r3, #4
 8000954:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 34;
 8000956:	2322      	movs	r3, #34	; 0x22
 8000958:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 800095a:	2301      	movs	r3, #1
 800095c:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800095e:	2302      	movs	r3, #2
 8000960:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000962:	2302      	movs	r3, #2
 8000964:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000966:	230c      	movs	r3, #12
 8000968:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800096a:	2300      	movs	r3, #0
 800096c:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 800096e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8000972:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000974:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000978:	4618      	mov	r0, r3
 800097a:	f006 fbfb 	bl	8007174 <HAL_RCC_OscConfig>
 800097e:	4603      	mov	r3, r0
 8000980:	2b00      	cmp	r3, #0
 8000982:	d001      	beq.n	8000988 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000984:	f000 fade 	bl	8000f44 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000988:	233f      	movs	r3, #63	; 0x3f
 800098a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800098c:	2303      	movs	r3, #3
 800098e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000990:	2300      	movs	r3, #0
 8000992:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000994:	2308      	movs	r3, #8
 8000996:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000998:	2340      	movs	r3, #64	; 0x40
 800099a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800099c:	2340      	movs	r3, #64	; 0x40
 800099e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 80009a0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009a4:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 80009a6:	2340      	movs	r3, #64	; 0x40
 80009a8:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80009aa:	1d3b      	adds	r3, r7, #4
 80009ac:	2103      	movs	r1, #3
 80009ae:	4618      	mov	r0, r3
 80009b0:	f006 ffba 	bl	8007928 <HAL_RCC_ClockConfig>
 80009b4:	4603      	mov	r3, r0
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	d001      	beq.n	80009be <SystemClock_Config+0xd2>
  {
    Error_Handler();
 80009ba:	f000 fac3 	bl	8000f44 <Error_Handler>
  }
}
 80009be:	bf00      	nop
 80009c0:	3770      	adds	r7, #112	; 0x70
 80009c2:	46bd      	mov	sp, r7
 80009c4:	bd80      	pop	{r7, pc}
 80009c6:	bf00      	nop
 80009c8:	58024800 	.word	0x58024800

080009cc <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b08c      	sub	sp, #48	; 0x30
 80009d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80009d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009d6:	2200      	movs	r2, #0
 80009d8:	601a      	str	r2, [r3, #0]
 80009da:	605a      	str	r2, [r3, #4]
 80009dc:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80009de:	463b      	mov	r3, r7
 80009e0:	2224      	movs	r2, #36	; 0x24
 80009e2:	2100      	movs	r1, #0
 80009e4:	4618      	mov	r0, r3
 80009e6:	f025 f9aa 	bl	8025d3e <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80009ea:	4b31      	ldr	r3, [pc, #196]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 80009ec:	4a31      	ldr	r2, [pc, #196]	; (8000ab4 <MX_ADC1_Init+0xe8>)
 80009ee:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80009f0:	4b2f      	ldr	r3, [pc, #188]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 80009f6:	4b2e      	ldr	r3, [pc, #184]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 80009f8:	2200      	movs	r2, #0
 80009fa:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80009fc:	4b2c      	ldr	r3, [pc, #176]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 80009fe:	2200      	movs	r2, #0
 8000a00:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a02:	4b2b      	ldr	r3, [pc, #172]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a04:	2204      	movs	r2, #4
 8000a06:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000a08:	4b29      	ldr	r3, [pc, #164]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000a0e:	4b28      	ldr	r3, [pc, #160]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a10:	2200      	movs	r2, #0
 8000a12:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000a14:	4b26      	ldr	r3, [pc, #152]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a16:	2201      	movs	r2, #1
 8000a18:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a1a:	4b25      	ldr	r3, [pc, #148]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a22:	4b23      	ldr	r3, [pc, #140]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a24:	2200      	movs	r2, #0
 8000a26:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000a28:	4b21      	ldr	r3, [pc, #132]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000a2e:	4b20      	ldr	r3, [pc, #128]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a30:	2200      	movs	r2, #0
 8000a32:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000a34:	4b1e      	ldr	r3, [pc, #120]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a36:	2200      	movs	r2, #0
 8000a38:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000a3a:	4b1d      	ldr	r3, [pc, #116]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a3c:	2200      	movs	r2, #0
 8000a3e:	641a      	str	r2, [r3, #64]	; 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 8000a40:	4b1b      	ldr	r3, [pc, #108]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a42:	2200      	movs	r2, #0
 8000a44:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000a48:	4819      	ldr	r0, [pc, #100]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a4a:	f001 fc77 	bl	800233c <HAL_ADC_Init>
 8000a4e:	4603      	mov	r3, r0
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	d001      	beq.n	8000a58 <MX_ADC1_Init+0x8c>
  {
    Error_Handler();
 8000a54:	f000 fa76 	bl	8000f44 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000a58:	2300      	movs	r3, #0
 8000a5a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000a5c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a60:	4619      	mov	r1, r3
 8000a62:	4813      	ldr	r0, [pc, #76]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a64:	f002 fcb6 	bl	80033d4 <HAL_ADCEx_MultiModeConfigChannel>
 8000a68:	4603      	mov	r3, r0
 8000a6a:	2b00      	cmp	r3, #0
 8000a6c:	d001      	beq.n	8000a72 <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 8000a6e:	f000 fa69 	bl	8000f44 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000a72:	4b11      	ldr	r3, [pc, #68]	; (8000ab8 <MX_ADC1_Init+0xec>)
 8000a74:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a76:	2306      	movs	r3, #6
 8000a78:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000a7a:	2300      	movs	r3, #0
 8000a7c:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000a7e:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000a82:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000a84:	2304      	movs	r3, #4
 8000a86:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000a88:	2300      	movs	r3, #0
 8000a8a:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000a92:	463b      	mov	r3, r7
 8000a94:	4619      	mov	r1, r3
 8000a96:	4806      	ldr	r0, [pc, #24]	; (8000ab0 <MX_ADC1_Init+0xe4>)
 8000a98:	f001 fe58 	bl	800274c <HAL_ADC_ConfigChannel>
 8000a9c:	4603      	mov	r3, r0
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d001      	beq.n	8000aa6 <MX_ADC1_Init+0xda>
  {
    Error_Handler();
 8000aa2:	f000 fa4f 	bl	8000f44 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000aa6:	bf00      	nop
 8000aa8:	3730      	adds	r7, #48	; 0x30
 8000aaa:	46bd      	mov	sp, r7
 8000aac:	bd80      	pop	{r7, pc}
 8000aae:	bf00      	nop
 8000ab0:	24000118 	.word	0x24000118
 8000ab4:	40022000 	.word	0x40022000
 8000ab8:	0c900008 	.word	0x0c900008

08000abc <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000ac0:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ac2:	4a0e      	ldr	r2, [pc, #56]	; (8000afc <MX_CRC_Init+0x40>)
 8000ac4:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000ac6:	4b0c      	ldr	r3, [pc, #48]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ac8:	2200      	movs	r2, #0
 8000aca:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000acc:	4b0a      	ldr	r3, [pc, #40]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ace:	2200      	movs	r2, #0
 8000ad0:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000ad2:	4b09      	ldr	r3, [pc, #36]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ad4:	2200      	movs	r2, #0
 8000ad6:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000ad8:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ada:	2200      	movs	r2, #0
 8000adc:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000ade:	4b06      	ldr	r3, [pc, #24]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ae0:	2201      	movs	r2, #1
 8000ae2:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000ae4:	4804      	ldr	r0, [pc, #16]	; (8000af8 <MX_CRC_Init+0x3c>)
 8000ae6:	f002 fe67 	bl	80037b8 <HAL_CRC_Init>
 8000aea:	4603      	mov	r3, r0
 8000aec:	2b00      	cmp	r3, #0
 8000aee:	d001      	beq.n	8000af4 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000af0:	f000 fa28 	bl	8000f44 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000af4:	bf00      	nop
 8000af6:	bd80      	pop	{r7, pc}
 8000af8:	24000188 	.word	0x24000188
 8000afc:	58024c00 	.word	0x58024c00

08000b00 <MX_OCTOSPI1_Init>:
  * @brief OCTOSPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_OCTOSPI1_Init(void)
{
 8000b00:	b580      	push	{r7, lr}
 8000b02:	b086      	sub	sp, #24
 8000b04:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN OCTOSPI1_Init 0 */

  /* USER CODE END OCTOSPI1_Init 0 */

  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000b06:	463b      	mov	r3, r7
 8000b08:	2200      	movs	r2, #0
 8000b0a:	601a      	str	r2, [r3, #0]
 8000b0c:	605a      	str	r2, [r3, #4]
 8000b0e:	609a      	str	r2, [r3, #8]
 8000b10:	60da      	str	r2, [r3, #12]
 8000b12:	611a      	str	r2, [r3, #16]
 8000b14:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN OCTOSPI1_Init 1 */

  /* USER CODE END OCTOSPI1_Init 1 */
  /* OCTOSPI1 parameter configuration*/
  hospi1.Instance = OCTOSPI1;
 8000b16:	4b27      	ldr	r3, [pc, #156]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b18:	4a27      	ldr	r2, [pc, #156]	; (8000bb8 <MX_OCTOSPI1_Init+0xb8>)
 8000b1a:	601a      	str	r2, [r3, #0]
  hospi1.Init.FifoThreshold = 1;
 8000b1c:	4b25      	ldr	r3, [pc, #148]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b1e:	2201      	movs	r2, #1
 8000b20:	605a      	str	r2, [r3, #4]
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000b22:	4b24      	ldr	r3, [pc, #144]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b24:	2200      	movs	r2, #0
 8000b26:	609a      	str	r2, [r3, #8]
  hospi1.Init.MemoryType = HAL_OSPI_MEMTYPE_MICRON;
 8000b28:	4b22      	ldr	r3, [pc, #136]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	60da      	str	r2, [r3, #12]
  hospi1.Init.DeviceSize = 32;
 8000b2e:	4b21      	ldr	r3, [pc, #132]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b30:	2220      	movs	r2, #32
 8000b32:	611a      	str	r2, [r3, #16]
  hospi1.Init.ChipSelectHighTime = 1;
 8000b34:	4b1f      	ldr	r3, [pc, #124]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b36:	2201      	movs	r2, #1
 8000b38:	615a      	str	r2, [r3, #20]
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000b3a:	4b1e      	ldr	r3, [pc, #120]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b3c:	2200      	movs	r2, #0
 8000b3e:	619a      	str	r2, [r3, #24]
  hospi1.Init.ClockMode = HAL_OSPI_CLOCK_MODE_0;
 8000b40:	4b1c      	ldr	r3, [pc, #112]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b42:	2200      	movs	r2, #0
 8000b44:	61da      	str	r2, [r3, #28]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000b46:	4b1b      	ldr	r3, [pc, #108]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b48:	2200      	movs	r2, #0
 8000b4a:	621a      	str	r2, [r3, #32]
  hospi1.Init.ClockPrescaler = 1;
 8000b4c:	4b19      	ldr	r3, [pc, #100]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b4e:	2201      	movs	r2, #1
 8000b50:	625a      	str	r2, [r3, #36]	; 0x24
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000b52:	4b18      	ldr	r3, [pc, #96]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b54:	2200      	movs	r2, #0
 8000b56:	629a      	str	r2, [r3, #40]	; 0x28
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8000b58:	4b16      	ldr	r3, [pc, #88]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	62da      	str	r2, [r3, #44]	; 0x2c
  hospi1.Init.ChipSelectBoundary = 0;
 8000b5e:	4b15      	ldr	r3, [pc, #84]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b60:	2200      	movs	r2, #0
 8000b62:	631a      	str	r2, [r3, #48]	; 0x30
  hospi1.Init.DelayBlockBypass = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8000b64:	4b13      	ldr	r3, [pc, #76]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b66:	2208      	movs	r2, #8
 8000b68:	635a      	str	r2, [r3, #52]	; 0x34
  hospi1.Init.MaxTran = 0;
 8000b6a:	4b12      	ldr	r3, [pc, #72]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b6c:	2200      	movs	r2, #0
 8000b6e:	639a      	str	r2, [r3, #56]	; 0x38
  hospi1.Init.Refresh = 0;
 8000b70:	4b10      	ldr	r3, [pc, #64]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b72:	2200      	movs	r2, #0
 8000b74:	63da      	str	r2, [r3, #60]	; 0x3c
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000b76:	480f      	ldr	r0, [pc, #60]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b78:	f005 fc1c 	bl	80063b4 <HAL_OSPI_Init>
 8000b7c:	4603      	mov	r3, r0
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	d001      	beq.n	8000b86 <MX_OCTOSPI1_Init+0x86>
  {
    Error_Handler();
 8000b82:	f000 f9df 	bl	8000f44 <Error_Handler>
  }
  sOspiManagerCfg.ClkPort = 1;
 8000b86:	2301      	movs	r3, #1
 8000b88:	603b      	str	r3, [r7, #0]
  sOspiManagerCfg.NCSPort = 1;
 8000b8a:	2301      	movs	r3, #1
 8000b8c:	60bb      	str	r3, [r7, #8]
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000b8e:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 8000b92:	60fb      	str	r3, [r7, #12]
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000b94:	463b      	mov	r3, r7
 8000b96:	f241 3288 	movw	r2, #5000	; 0x1388
 8000b9a:	4619      	mov	r1, r3
 8000b9c:	4805      	ldr	r0, [pc, #20]	; (8000bb4 <MX_OCTOSPI1_Init+0xb4>)
 8000b9e:	f005 fcd5 	bl	800654c <HAL_OSPIM_Config>
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d001      	beq.n	8000bac <MX_OCTOSPI1_Init+0xac>
  {
    Error_Handler();
 8000ba8:	f000 f9cc 	bl	8000f44 <Error_Handler>
  }
  /* USER CODE BEGIN OCTOSPI1_Init 2 */

  /* USER CODE END OCTOSPI1_Init 2 */

}
 8000bac:	bf00      	nop
 8000bae:	3718      	adds	r7, #24
 8000bb0:	46bd      	mov	sp, r7
 8000bb2:	bd80      	pop	{r7, pc}
 8000bb4:	240001ac 	.word	0x240001ac
 8000bb8:	52005000 	.word	0x52005000

08000bbc <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000bc0:	4b27      	ldr	r3, [pc, #156]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bc2:	4a28      	ldr	r2, [pc, #160]	; (8000c64 <MX_SPI1_Init+0xa8>)
 8000bc4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000bc6:	4b26      	ldr	r3, [pc, #152]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bc8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000bcc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000bce:	4b24      	ldr	r3, [pc, #144]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000bd4:	4b22      	ldr	r3, [pc, #136]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bd6:	2207      	movs	r2, #7
 8000bd8:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000bda:	4b21      	ldr	r3, [pc, #132]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bdc:	2200      	movs	r2, #0
 8000bde:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000be0:	4b1f      	ldr	r3, [pc, #124]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000be2:	2200      	movs	r2, #0
 8000be4:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000be6:	4b1e      	ldr	r3, [pc, #120]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000be8:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000bec:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000bee:	4b1c      	ldr	r3, [pc, #112]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bf0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bf4:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bf6:	4b1a      	ldr	r3, [pc, #104]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bfc:	4b18      	ldr	r3, [pc, #96]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000c02:	4b17      	ldr	r3, [pc, #92]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 0x0;
 8000c08:	4b15      	ldr	r3, [pc, #84]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c0a:	2200      	movs	r2, #0
 8000c0c:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000c0e:	4b14      	ldr	r3, [pc, #80]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c10:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000c14:	635a      	str	r2, [r3, #52]	; 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000c16:	4b12      	ldr	r3, [pc, #72]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c18:	2200      	movs	r2, #0
 8000c1a:	639a      	str	r2, [r3, #56]	; 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000c1c:	4b10      	ldr	r3, [pc, #64]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c1e:	2200      	movs	r2, #0
 8000c20:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c22:	4b0f      	ldr	r3, [pc, #60]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c24:	2200      	movs	r2, #0
 8000c26:	641a      	str	r2, [r3, #64]	; 0x40
  hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c28:	4b0d      	ldr	r3, [pc, #52]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	645a      	str	r2, [r3, #68]	; 0x44
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000c2e:	4b0c      	ldr	r3, [pc, #48]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c30:	2200      	movs	r2, #0
 8000c32:	649a      	str	r2, [r3, #72]	; 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000c34:	4b0a      	ldr	r3, [pc, #40]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c36:	2200      	movs	r2, #0
 8000c38:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000c3a:	4b09      	ldr	r3, [pc, #36]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	651a      	str	r2, [r3, #80]	; 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000c40:	4b07      	ldr	r3, [pc, #28]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c42:	2200      	movs	r2, #0
 8000c44:	655a      	str	r2, [r3, #84]	; 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000c46:	4b06      	ldr	r3, [pc, #24]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000c4c:	4804      	ldr	r0, [pc, #16]	; (8000c60 <MX_SPI1_Init+0xa4>)
 8000c4e:	f009 fdc7 	bl	800a7e0 <HAL_SPI_Init>
 8000c52:	4603      	mov	r3, r0
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d001      	beq.n	8000c5c <MX_SPI1_Init+0xa0>
  {
    Error_Handler();
 8000c58:	f000 f974 	bl	8000f44 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000c5c:	bf00      	nop
 8000c5e:	bd80      	pop	{r7, pc}
 8000c60:	24000208 	.word	0x24000208
 8000c64:	40013000 	.word	0x40013000

08000c68 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8000c68:	b580      	push	{r7, lr}
 8000c6a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8000c6c:	4b27      	ldr	r3, [pc, #156]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c6e:	4a28      	ldr	r2, [pc, #160]	; (8000d10 <MX_SPI5_Init+0xa8>)
 8000c70:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000c72:	4b26      	ldr	r3, [pc, #152]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c74:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000c78:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8000c7a:	4b24      	ldr	r3, [pc, #144]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c80:	4b22      	ldr	r3, [pc, #136]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c82:	2207      	movs	r2, #7
 8000c84:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000c86:	4b21      	ldr	r3, [pc, #132]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c88:	2200      	movs	r2, #0
 8000c8a:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c8c:	4b1f      	ldr	r3, [pc, #124]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c8e:	2200      	movs	r2, #0
 8000c90:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8000c92:	4b1e      	ldr	r3, [pc, #120]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c94:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000c98:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000c9a:	4b1c      	ldr	r3, [pc, #112]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000ca0:	4b1a      	ldr	r3, [pc, #104]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000ca6:	4b19      	ldr	r3, [pc, #100]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000ca8:	2200      	movs	r2, #0
 8000caa:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000cac:	4b17      	ldr	r3, [pc, #92]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cae:	2200      	movs	r2, #0
 8000cb0:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 0x0;
 8000cb2:	4b16      	ldr	r3, [pc, #88]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000cb8:	4b14      	ldr	r3, [pc, #80]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cba:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000cbe:	635a      	str	r2, [r3, #52]	; 0x34
  hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000cc0:	4b12      	ldr	r3, [pc, #72]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	639a      	str	r2, [r3, #56]	; 0x38
  hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000cc6:	4b11      	ldr	r3, [pc, #68]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cc8:	2200      	movs	r2, #0
 8000cca:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000ccc:	4b0f      	ldr	r3, [pc, #60]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cce:	2200      	movs	r2, #0
 8000cd0:	641a      	str	r2, [r3, #64]	; 0x40
  hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000cd2:	4b0e      	ldr	r3, [pc, #56]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	645a      	str	r2, [r3, #68]	; 0x44
  hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000cd8:	4b0c      	ldr	r3, [pc, #48]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cda:	2200      	movs	r2, #0
 8000cdc:	649a      	str	r2, [r3, #72]	; 0x48
  hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000cde:	4b0b      	ldr	r3, [pc, #44]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000ce4:	4b09      	ldr	r3, [pc, #36]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	651a      	str	r2, [r3, #80]	; 0x50
  hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000cea:	4b08      	ldr	r3, [pc, #32]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	655a      	str	r2, [r3, #84]	; 0x54
  hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000cf0:	4b06      	ldr	r3, [pc, #24]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cf2:	2200      	movs	r2, #0
 8000cf4:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000cf6:	4805      	ldr	r0, [pc, #20]	; (8000d0c <MX_SPI5_Init+0xa4>)
 8000cf8:	f009 fd72 	bl	800a7e0 <HAL_SPI_Init>
 8000cfc:	4603      	mov	r3, r0
 8000cfe:	2b00      	cmp	r3, #0
 8000d00:	d001      	beq.n	8000d06 <MX_SPI5_Init+0x9e>
  {
    Error_Handler();
 8000d02:	f000 f91f 	bl	8000f44 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8000d06:	bf00      	nop
 8000d08:	bd80      	pop	{r7, pc}
 8000d0a:	bf00      	nop
 8000d0c:	24000290 	.word	0x24000290
 8000d10:	40015000 	.word	0x40015000

08000d14 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000d14:	b580      	push	{r7, lr}
 8000d16:	b082      	sub	sp, #8
 8000d18:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000d1a:	4b0d      	ldr	r3, [pc, #52]	; (8000d50 <MX_DMA_Init+0x3c>)
 8000d1c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d20:	4a0b      	ldr	r2, [pc, #44]	; (8000d50 <MX_DMA_Init+0x3c>)
 8000d22:	f043 0301 	orr.w	r3, r3, #1
 8000d26:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000d2a:	4b09      	ldr	r3, [pc, #36]	; (8000d50 <MX_DMA_Init+0x3c>)
 8000d2c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d30:	f003 0301 	and.w	r3, r3, #1
 8000d34:	607b      	str	r3, [r7, #4]
 8000d36:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8000d38:	2200      	movs	r2, #0
 8000d3a:	2100      	movs	r1, #0
 8000d3c:	200b      	movs	r0, #11
 8000d3e:	f002 fd06 	bl	800374e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000d42:	200b      	movs	r0, #11
 8000d44:	f002 fd1d 	bl	8003782 <HAL_NVIC_EnableIRQ>

}
 8000d48:	bf00      	nop
 8000d4a:	3708      	adds	r7, #8
 8000d4c:	46bd      	mov	sp, r7
 8000d4e:	bd80      	pop	{r7, pc}
 8000d50:	58024400 	.word	0x58024400

08000d54 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d54:	b580      	push	{r7, lr}
 8000d56:	b08e      	sub	sp, #56	; 0x38
 8000d58:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d5a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000d5e:	2200      	movs	r2, #0
 8000d60:	601a      	str	r2, [r3, #0]
 8000d62:	605a      	str	r2, [r3, #4]
 8000d64:	609a      	str	r2, [r3, #8]
 8000d66:	60da      	str	r2, [r3, #12]
 8000d68:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d6a:	4b70      	ldr	r3, [pc, #448]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d6c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d70:	4a6e      	ldr	r2, [pc, #440]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d72:	f043 0310 	orr.w	r3, r3, #16
 8000d76:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d7a:	4b6c      	ldr	r3, [pc, #432]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d7c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d80:	f003 0310 	and.w	r3, r3, #16
 8000d84:	623b      	str	r3, [r7, #32]
 8000d86:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d88:	4b68      	ldr	r3, [pc, #416]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d8a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d8e:	4a67      	ldr	r2, [pc, #412]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d90:	f043 0304 	orr.w	r3, r3, #4
 8000d94:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d98:	4b64      	ldr	r3, [pc, #400]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000d9a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d9e:	f003 0304 	and.w	r3, r3, #4
 8000da2:	61fb      	str	r3, [r7, #28]
 8000da4:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000da6:	4b61      	ldr	r3, [pc, #388]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000da8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dac:	4a5f      	ldr	r2, [pc, #380]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000dae:	f043 0320 	orr.w	r3, r3, #32
 8000db2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000db6:	4b5d      	ldr	r3, [pc, #372]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000db8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dbc:	f003 0320 	and.w	r3, r3, #32
 8000dc0:	61bb      	str	r3, [r7, #24]
 8000dc2:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000dc4:	4b59      	ldr	r3, [pc, #356]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000dc6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dca:	4a58      	ldr	r2, [pc, #352]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000dcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000dd0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000dd4:	4b55      	ldr	r3, [pc, #340]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000dd6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dda:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000dde:	617b      	str	r3, [r7, #20]
 8000de0:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000de2:	4b52      	ldr	r3, [pc, #328]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000de4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000de8:	4a50      	ldr	r2, [pc, #320]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000dea:	f043 0301 	orr.w	r3, r3, #1
 8000dee:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000df2:	4b4e      	ldr	r3, [pc, #312]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000df4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000df8:	f003 0301 	and.w	r3, r3, #1
 8000dfc:	613b      	str	r3, [r7, #16]
 8000dfe:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e00:	4b4a      	ldr	r3, [pc, #296]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e02:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e06:	4a49      	ldr	r2, [pc, #292]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e08:	f043 0302 	orr.w	r3, r3, #2
 8000e0c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e10:	4b46      	ldr	r3, [pc, #280]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e12:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e16:	f003 0302 	and.w	r3, r3, #2
 8000e1a:	60fb      	str	r3, [r7, #12]
 8000e1c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000e1e:	4b43      	ldr	r3, [pc, #268]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e20:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e24:	4a41      	ldr	r2, [pc, #260]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e26:	f043 0308 	orr.w	r3, r3, #8
 8000e2a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e2e:	4b3f      	ldr	r3, [pc, #252]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e30:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e34:	f003 0308 	and.w	r3, r3, #8
 8000e38:	60bb      	str	r3, [r7, #8]
 8000e3a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e3c:	4b3b      	ldr	r3, [pc, #236]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e3e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e42:	4a3a      	ldr	r2, [pc, #232]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e48:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e4c:	4b37      	ldr	r3, [pc, #220]	; (8000f2c <MX_GPIO_Init+0x1d8>)
 8000e4e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e56:	607b      	str	r3, [r7, #4]
 8000e58:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_OK_GPIO_Port, LED_OK_Pin, GPIO_PIN_SET);
 8000e5a:	2201      	movs	r2, #1
 8000e5c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000e60:	4833      	ldr	r0, [pc, #204]	; (8000f30 <MX_GPIO_Init+0x1dc>)
 8000e62:	f005 fa69 	bl	8006338 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_CS_GPIO_Port, ILI9341_CS_Pin, GPIO_PIN_SET);
 8000e66:	2201      	movs	r2, #1
 8000e68:	2140      	movs	r1, #64	; 0x40
 8000e6a:	4832      	ldr	r0, [pc, #200]	; (8000f34 <MX_GPIO_Init+0x1e0>)
 8000e6c:	f005 fa64 	bl	8006338 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(T_CS_GPIO_Port, T_CS_Pin, GPIO_PIN_SET);
 8000e70:	2201      	movs	r2, #1
 8000e72:	2110      	movs	r1, #16
 8000e74:	4830      	ldr	r0, [pc, #192]	; (8000f38 <MX_GPIO_Init+0x1e4>)
 8000e76:	f005 fa5f 	bl	8006338 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_RESET_GPIO_Port, ILI9341_RESET_Pin, GPIO_PIN_SET);
 8000e7a:	2201      	movs	r2, #1
 8000e7c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e80:	482e      	ldr	r0, [pc, #184]	; (8000f3c <MX_GPIO_Init+0x1e8>)
 8000e82:	f005 fa59 	bl	8006338 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_OK_Pin */
  GPIO_InitStruct.Pin = LED_OK_Pin;
 8000e86:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e8a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e8c:	2301      	movs	r3, #1
 8000e8e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e90:	2300      	movs	r3, #0
 8000e92:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e94:	2300      	movs	r3, #0
 8000e96:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(LED_OK_GPIO_Port, &GPIO_InitStruct);
 8000e98:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e9c:	4619      	mov	r1, r3
 8000e9e:	4824      	ldr	r0, [pc, #144]	; (8000f30 <MX_GPIO_Init+0x1dc>)
 8000ea0:	f005 f8a2 	bl	8005fe8 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_CS_Pin */
  GPIO_InitStruct.Pin = ILI9341_CS_Pin;
 8000ea4:	2340      	movs	r3, #64	; 0x40
 8000ea6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ea8:	2301      	movs	r3, #1
 8000eaa:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000eac:	2301      	movs	r3, #1
 8000eae:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000eb0:	2303      	movs	r3, #3
 8000eb2:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_CS_GPIO_Port, &GPIO_InitStruct);
 8000eb4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000eb8:	4619      	mov	r1, r3
 8000eba:	481e      	ldr	r0, [pc, #120]	; (8000f34 <MX_GPIO_Init+0x1e0>)
 8000ebc:	f005 f894 	bl	8005fe8 <HAL_GPIO_Init>

  /*Configure GPIO pin : T_CS_Pin */
  GPIO_InitStruct.Pin = T_CS_Pin;
 8000ec0:	2310      	movs	r3, #16
 8000ec2:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ec8:	2300      	movs	r3, #0
 8000eca:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ecc:	2303      	movs	r3, #3
 8000ece:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(T_CS_GPIO_Port, &GPIO_InitStruct);
 8000ed0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ed4:	4619      	mov	r1, r3
 8000ed6:	4818      	ldr	r0, [pc, #96]	; (8000f38 <MX_GPIO_Init+0x1e4>)
 8000ed8:	f005 f886 	bl	8005fe8 <HAL_GPIO_Init>

  /*Configure GPIO pin : T_IRQ_Pin */
  GPIO_InitStruct.Pin = T_IRQ_Pin;
 8000edc:	2340      	movs	r3, #64	; 0x40
 8000ede:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000ee0:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000ee4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000ee6:	2301      	movs	r3, #1
 8000ee8:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(T_IRQ_GPIO_Port, &GPIO_InitStruct);
 8000eea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000eee:	4619      	mov	r1, r3
 8000ef0:	4813      	ldr	r0, [pc, #76]	; (8000f40 <MX_GPIO_Init+0x1ec>)
 8000ef2:	f005 f879 	bl	8005fe8 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_RESET_Pin */
  GPIO_InitStruct.Pin = ILI9341_RESET_Pin;
 8000ef6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000efa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000efc:	2301      	movs	r3, #1
 8000efe:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000f00:	2301      	movs	r3, #1
 8000f02:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f04:	2303      	movs	r3, #3
 8000f06:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_RESET_GPIO_Port, &GPIO_InitStruct);
 8000f08:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000f0c:	4619      	mov	r1, r3
 8000f0e:	480b      	ldr	r0, [pc, #44]	; (8000f3c <MX_GPIO_Init+0x1e8>)
 8000f10:	f005 f86a 	bl	8005fe8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000f14:	2200      	movs	r2, #0
 8000f16:	2100      	movs	r1, #0
 8000f18:	2017      	movs	r0, #23
 8000f1a:	f002 fc18 	bl	800374e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000f1e:	2017      	movs	r0, #23
 8000f20:	f002 fc2f 	bl	8003782 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000f24:	bf00      	nop
 8000f26:	3738      	adds	r7, #56	; 0x38
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	bd80      	pop	{r7, pc}
 8000f2c:	58024400 	.word	0x58024400
 8000f30:	58020800 	.word	0x58020800
 8000f34:	58021400 	.word	0x58021400
 8000f38:	58020000 	.word	0x58020000
 8000f3c:	58021800 	.word	0x58021800
 8000f40:	58020c00 	.word	0x58020c00

08000f44 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f44:	b480      	push	{r7}
 8000f46:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f48:	b672      	cpsid	i
}
 8000f4a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f4c:	e7fe      	b.n	8000f4c <Error_Handler+0x8>
	...

08000f50 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f50:	b480      	push	{r7}
 8000f52:	b083      	sub	sp, #12
 8000f54:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f56:	4b0a      	ldr	r3, [pc, #40]	; (8000f80 <HAL_MspInit+0x30>)
 8000f58:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f5c:	4a08      	ldr	r2, [pc, #32]	; (8000f80 <HAL_MspInit+0x30>)
 8000f5e:	f043 0302 	orr.w	r3, r3, #2
 8000f62:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000f66:	4b06      	ldr	r3, [pc, #24]	; (8000f80 <HAL_MspInit+0x30>)
 8000f68:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f6c:	f003 0302 	and.w	r3, r3, #2
 8000f70:	607b      	str	r3, [r7, #4]
 8000f72:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f74:	bf00      	nop
 8000f76:	370c      	adds	r7, #12
 8000f78:	46bd      	mov	sp, r7
 8000f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7e:	4770      	bx	lr
 8000f80:	58024400 	.word	0x58024400

08000f84 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000f84:	b580      	push	{r7, lr}
 8000f86:	b0bc      	sub	sp, #240	; 0xf0
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f8c:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f90:	2200      	movs	r2, #0
 8000f92:	601a      	str	r2, [r3, #0]
 8000f94:	605a      	str	r2, [r3, #4]
 8000f96:	609a      	str	r2, [r3, #8]
 8000f98:	60da      	str	r2, [r3, #12]
 8000f9a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000f9c:	f107 0320 	add.w	r3, r7, #32
 8000fa0:	22b8      	movs	r2, #184	; 0xb8
 8000fa2:	2100      	movs	r1, #0
 8000fa4:	4618      	mov	r0, r3
 8000fa6:	f024 feca 	bl	8025d3e <memset>
  if(hadc->Instance==ADC1)
 8000faa:	687b      	ldr	r3, [r7, #4]
 8000fac:	681b      	ldr	r3, [r3, #0]
 8000fae:	4a59      	ldr	r2, [pc, #356]	; (8001114 <HAL_ADC_MspInit+0x190>)
 8000fb0:	4293      	cmp	r3, r2
 8000fb2:	f040 80ab 	bne.w	800110c <HAL_ADC_MspInit+0x188>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000fb6:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8000fba:	f04f 0300 	mov.w	r3, #0
 8000fbe:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL2.PLL2M = 4;
 8000fc2:	2304      	movs	r3, #4
 8000fc4:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.PLL2.PLL2N = 12;
 8000fc6:	230c      	movs	r3, #12
 8000fc8:	62fb      	str	r3, [r7, #44]	; 0x2c
    PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000fca:	2302      	movs	r3, #2
 8000fcc:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000fce:	2302      	movs	r3, #2
 8000fd0:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000fd2:	2302      	movs	r3, #2
 8000fd4:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000fd6:	23c0      	movs	r3, #192	; 0xc0
 8000fd8:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000fda:	2300      	movs	r3, #0
 8000fdc:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000fde:	2300      	movs	r3, #0
 8000fe0:	647b      	str	r3, [r7, #68]	; 0x44
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fe8:	f107 0320 	add.w	r3, r7, #32
 8000fec:	4618      	mov	r0, r3
 8000fee:	f007 f811 	bl	8008014 <HAL_RCCEx_PeriphCLKConfig>
 8000ff2:	4603      	mov	r3, r0
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d001      	beq.n	8000ffc <HAL_ADC_MspInit+0x78>
    {
      Error_Handler();
 8000ff8:	f7ff ffa4 	bl	8000f44 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000ffc:	4b46      	ldr	r3, [pc, #280]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8000ffe:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8001002:	4a45      	ldr	r2, [pc, #276]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001004:	f043 0320 	orr.w	r3, r3, #32
 8001008:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 800100c:	4b42      	ldr	r3, [pc, #264]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800100e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8001012:	f003 0320 	and.w	r3, r3, #32
 8001016:	61fb      	str	r3, [r7, #28]
 8001018:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800101a:	4b3f      	ldr	r3, [pc, #252]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800101c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001020:	4a3d      	ldr	r2, [pc, #244]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001022:	f043 0301 	orr.w	r3, r3, #1
 8001026:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800102a:	4b3b      	ldr	r3, [pc, #236]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800102c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001030:	f003 0301 	and.w	r3, r3, #1
 8001034:	61bb      	str	r3, [r7, #24]
 8001036:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001038:	4b37      	ldr	r3, [pc, #220]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800103a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800103e:	4a36      	ldr	r2, [pc, #216]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001040:	f043 0304 	orr.w	r3, r3, #4
 8001044:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001048:	4b33      	ldr	r3, [pc, #204]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800104a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800104e:	f003 0304 	and.w	r3, r3, #4
 8001052:	617b      	str	r3, [r7, #20]
 8001054:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001056:	4b30      	ldr	r3, [pc, #192]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001058:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800105c:	4a2e      	ldr	r2, [pc, #184]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800105e:	f043 0302 	orr.w	r3, r3, #2
 8001062:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001066:	4b2c      	ldr	r3, [pc, #176]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001068:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800106c:	f003 0302 	and.w	r3, r3, #2
 8001070:	613b      	str	r3, [r7, #16]
 8001072:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001074:	4b28      	ldr	r3, [pc, #160]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001076:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800107a:	4a27      	ldr	r2, [pc, #156]	; (8001118 <HAL_ADC_MspInit+0x194>)
 800107c:	f043 0320 	orr.w	r3, r3, #32
 8001080:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001084:	4b24      	ldr	r3, [pc, #144]	; (8001118 <HAL_ADC_MspInit+0x194>)
 8001086:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800108a:	f003 0320 	and.w	r3, r3, #32
 800108e:	60fb      	str	r3, [r7, #12]
 8001090:	68fb      	ldr	r3, [r7, #12]
    PC4     ------> ADC1_INP4
    PB1     ------> ADC1_INP5
    PF11     ------> ADC1_INP2
    PF12     ------> ADC1_INP6
    */
    GPIO_InitStruct.Pin = POT1_Pin|POT2_Pin;
 8001092:	23c0      	movs	r3, #192	; 0xc0
 8001094:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001098:	2303      	movs	r3, #3
 800109a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109e:	2300      	movs	r3, #0
 80010a0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010a4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010a8:	4619      	mov	r1, r3
 80010aa:	481c      	ldr	r0, [pc, #112]	; (800111c <HAL_ADC_MspInit+0x198>)
 80010ac:	f004 ff9c 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT4_Pin;
 80010b0:	2310      	movs	r3, #16
 80010b2:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010b6:	2303      	movs	r3, #3
 80010b8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010bc:	2300      	movs	r3, #0
 80010be:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT4_GPIO_Port, &GPIO_InitStruct);
 80010c2:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010c6:	4619      	mov	r1, r3
 80010c8:	4815      	ldr	r0, [pc, #84]	; (8001120 <HAL_ADC_MspInit+0x19c>)
 80010ca:	f004 ff8d 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT3_Pin;
 80010ce:	2302      	movs	r3, #2
 80010d0:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010d4:	2303      	movs	r3, #3
 80010d6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010da:	2300      	movs	r3, #0
 80010dc:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT3_GPIO_Port, &GPIO_InitStruct);
 80010e0:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010e4:	4619      	mov	r1, r3
 80010e6:	480f      	ldr	r0, [pc, #60]	; (8001124 <HAL_ADC_MspInit+0x1a0>)
 80010e8:	f004 ff7e 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT5_Pin|POT6_Pin;
 80010ec:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80010f0:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010f4:	2303      	movs	r3, #3
 80010f6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010fa:	2300      	movs	r3, #0
 80010fc:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001100:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001104:	4619      	mov	r1, r3
 8001106:	4808      	ldr	r0, [pc, #32]	; (8001128 <HAL_ADC_MspInit+0x1a4>)
 8001108:	f004 ff6e 	bl	8005fe8 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800110c:	bf00      	nop
 800110e:	37f0      	adds	r7, #240	; 0xf0
 8001110:	46bd      	mov	sp, r7
 8001112:	bd80      	pop	{r7, pc}
 8001114:	40022000 	.word	0x40022000
 8001118:	58024400 	.word	0x58024400
 800111c:	58020000 	.word	0x58020000
 8001120:	58020800 	.word	0x58020800
 8001124:	58020400 	.word	0x58020400
 8001128:	58021400 	.word	0x58021400

0800112c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 800112c:	b480      	push	{r7}
 800112e:	b085      	sub	sp, #20
 8001130:	af00      	add	r7, sp, #0
 8001132:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	4a0b      	ldr	r2, [pc, #44]	; (8001168 <HAL_CRC_MspInit+0x3c>)
 800113a:	4293      	cmp	r3, r2
 800113c:	d10e      	bne.n	800115c <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800113e:	4b0b      	ldr	r3, [pc, #44]	; (800116c <HAL_CRC_MspInit+0x40>)
 8001140:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001144:	4a09      	ldr	r2, [pc, #36]	; (800116c <HAL_CRC_MspInit+0x40>)
 8001146:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800114a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800114e:	4b07      	ldr	r3, [pc, #28]	; (800116c <HAL_CRC_MspInit+0x40>)
 8001150:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001154:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001158:	60fb      	str	r3, [r7, #12]
 800115a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800115c:	bf00      	nop
 800115e:	3714      	adds	r7, #20
 8001160:	46bd      	mov	sp, r7
 8001162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001166:	4770      	bx	lr
 8001168:	58024c00 	.word	0x58024c00
 800116c:	58024400 	.word	0x58024400

08001170 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8001170:	b580      	push	{r7, lr}
 8001172:	b0be      	sub	sp, #248	; 0xf8
 8001174:	af00      	add	r7, sp, #0
 8001176:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001178:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800117c:	2200      	movs	r2, #0
 800117e:	601a      	str	r2, [r3, #0]
 8001180:	605a      	str	r2, [r3, #4]
 8001182:	609a      	str	r2, [r3, #8]
 8001184:	60da      	str	r2, [r3, #12]
 8001186:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001188:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800118c:	22b8      	movs	r2, #184	; 0xb8
 800118e:	2100      	movs	r1, #0
 8001190:	4618      	mov	r0, r3
 8001192:	f024 fdd4 	bl	8025d3e <memset>
  if(hospi->Instance==OCTOSPI1)
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	4a81      	ldr	r2, [pc, #516]	; (80013a0 <HAL_OSPI_MspInit+0x230>)
 800119c:	4293      	cmp	r3, r2
 800119e:	f040 80fb 	bne.w	8001398 <HAL_OSPI_MspInit+0x228>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 80011a2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80011a6:	f04f 0300 	mov.w	r3, #0
 80011aa:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_D1HCLK;
 80011ae:	2300      	movs	r3, #0
 80011b0:	677b      	str	r3, [r7, #116]	; 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80011b2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80011b6:	4618      	mov	r0, r3
 80011b8:	f006 ff2c 	bl	8008014 <HAL_RCCEx_PeriphCLKConfig>
 80011bc:	4603      	mov	r3, r0
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d001      	beq.n	80011c6 <HAL_OSPI_MspInit+0x56>
    {
      Error_Handler();
 80011c2:	f7ff febf 	bl	8000f44 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 80011c6:	4b77      	ldr	r3, [pc, #476]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011c8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011cc:	4a75      	ldr	r2, [pc, #468]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011ce:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80011d2:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80011d6:	4b73      	ldr	r3, [pc, #460]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011d8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011dc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80011e0:	627b      	str	r3, [r7, #36]	; 0x24
 80011e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_OSPI1_CLK_ENABLE();
 80011e4:	4b6f      	ldr	r3, [pc, #444]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011e6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011ea:	4a6e      	ldr	r2, [pc, #440]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011f0:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80011f4:	4b6b      	ldr	r3, [pc, #428]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 80011f6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011fa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011fe:	623b      	str	r3, [r7, #32]
 8001200:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001202:	4b68      	ldr	r3, [pc, #416]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001204:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001208:	4a66      	ldr	r2, [pc, #408]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 800120a:	f043 0310 	orr.w	r3, r3, #16
 800120e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001212:	4b64      	ldr	r3, [pc, #400]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001214:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001218:	f003 0310 	and.w	r3, r3, #16
 800121c:	61fb      	str	r3, [r7, #28]
 800121e:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001220:	4b60      	ldr	r3, [pc, #384]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001222:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001226:	4a5f      	ldr	r2, [pc, #380]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001228:	f043 0320 	orr.w	r3, r3, #32
 800122c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001230:	4b5c      	ldr	r3, [pc, #368]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001232:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001236:	f003 0320 	and.w	r3, r3, #32
 800123a:	61bb      	str	r3, [r7, #24]
 800123c:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800123e:	4b59      	ldr	r3, [pc, #356]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001240:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001244:	4a57      	ldr	r2, [pc, #348]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001246:	f043 0304 	orr.w	r3, r3, #4
 800124a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800124e:	4b55      	ldr	r3, [pc, #340]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001250:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001254:	f003 0304 	and.w	r3, r3, #4
 8001258:	617b      	str	r3, [r7, #20]
 800125a:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800125c:	4b51      	ldr	r3, [pc, #324]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 800125e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001262:	4a50      	ldr	r2, [pc, #320]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001264:	f043 0301 	orr.w	r3, r3, #1
 8001268:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800126c:	4b4d      	ldr	r3, [pc, #308]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 800126e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001272:	f003 0301 	and.w	r3, r3, #1
 8001276:	613b      	str	r3, [r7, #16]
 8001278:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800127a:	4b4a      	ldr	r3, [pc, #296]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 800127c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001280:	4a48      	ldr	r2, [pc, #288]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 8001282:	f043 0302 	orr.w	r3, r3, #2
 8001286:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800128a:	4b46      	ldr	r3, [pc, #280]	; (80013a4 <HAL_OSPI_MspInit+0x234>)
 800128c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001290:	f003 0302 	and.w	r3, r3, #2
 8001294:	60fb      	str	r3, [r7, #12]
 8001296:	68fb      	ldr	r3, [r7, #12]
    PC3_C     ------> OCTOSPIM_P1_IO0
    PA1     ------> OCTOSPIM_P1_IO3
    PB0     ------> OCTOSPIM_P1_IO1
    PE11     ------> OCTOSPIM_P1_NCS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001298:	2304      	movs	r3, #4
 800129a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800129e:	2302      	movs	r3, #2
 80012a0:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a4:	2300      	movs	r3, #0
 80012a6:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012aa:	2303      	movs	r3, #3
 80012ac:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012b0:	2309      	movs	r3, #9
 80012b2:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80012b6:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012ba:	4619      	mov	r1, r3
 80012bc:	483a      	ldr	r0, [pc, #232]	; (80013a8 <HAL_OSPI_MspInit+0x238>)
 80012be:	f004 fe93 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80012c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012c6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012ca:	2302      	movs	r3, #2
 80012cc:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012d0:	2300      	movs	r3, #0
 80012d2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012d6:	2303      	movs	r3, #3
 80012d8:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012dc:	2309      	movs	r3, #9
 80012de:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012e2:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012e6:	4619      	mov	r1, r3
 80012e8:	4830      	ldr	r0, [pc, #192]	; (80013ac <HAL_OSPI_MspInit+0x23c>)
 80012ea:	f004 fe7d 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80012ee:	2308      	movs	r3, #8
 80012f0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012f4:	2302      	movs	r3, #2
 80012f6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012fa:	2300      	movs	r3, #0
 80012fc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001300:	2303      	movs	r3, #3
 8001302:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001306:	2309      	movs	r3, #9
 8001308:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800130c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001310:	4619      	mov	r1, r3
 8001312:	4827      	ldr	r0, [pc, #156]	; (80013b0 <HAL_OSPI_MspInit+0x240>)
 8001314:	f004 fe68 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001318:	2302      	movs	r3, #2
 800131a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800131e:	2302      	movs	r3, #2
 8001320:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001324:	2300      	movs	r3, #0
 8001326:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800132a:	2303      	movs	r3, #3
 800132c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001330:	2309      	movs	r3, #9
 8001332:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001336:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800133a:	4619      	mov	r1, r3
 800133c:	481d      	ldr	r0, [pc, #116]	; (80013b4 <HAL_OSPI_MspInit+0x244>)
 800133e:	f004 fe53 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001342:	2301      	movs	r3, #1
 8001344:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001348:	2302      	movs	r3, #2
 800134a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800134e:	2300      	movs	r3, #0
 8001350:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001354:	2303      	movs	r3, #3
 8001356:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF4_OCTOSPIM_P1;
 800135a:	2304      	movs	r3, #4
 800135c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001360:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001364:	4619      	mov	r1, r3
 8001366:	4814      	ldr	r0, [pc, #80]	; (80013b8 <HAL_OSPI_MspInit+0x248>)
 8001368:	f004 fe3e 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 800136c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001370:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001374:	2302      	movs	r3, #2
 8001376:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800137a:	2300      	movs	r3, #0
 800137c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001380:	2303      	movs	r3, #3
 8001382:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF11_OCTOSPIM_P1;
 8001386:	230b      	movs	r3, #11
 8001388:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800138c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001390:	4619      	mov	r1, r3
 8001392:	4805      	ldr	r0, [pc, #20]	; (80013a8 <HAL_OSPI_MspInit+0x238>)
 8001394:	f004 fe28 	bl	8005fe8 <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }

}
 8001398:	bf00      	nop
 800139a:	37f8      	adds	r7, #248	; 0xf8
 800139c:	46bd      	mov	sp, r7
 800139e:	bd80      	pop	{r7, pc}
 80013a0:	52005000 	.word	0x52005000
 80013a4:	58024400 	.word	0x58024400
 80013a8:	58021000 	.word	0x58021000
 80013ac:	58021400 	.word	0x58021400
 80013b0:	58020800 	.word	0x58020800
 80013b4:	58020000 	.word	0x58020000
 80013b8:	58020400 	.word	0x58020400

080013bc <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80013bc:	b580      	push	{r7, lr}
 80013be:	b0bc      	sub	sp, #240	; 0xf0
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013c4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80013c8:	2200      	movs	r2, #0
 80013ca:	601a      	str	r2, [r3, #0]
 80013cc:	605a      	str	r2, [r3, #4]
 80013ce:	609a      	str	r2, [r3, #8]
 80013d0:	60da      	str	r2, [r3, #12]
 80013d2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013d4:	f107 0320 	add.w	r3, r7, #32
 80013d8:	22b8      	movs	r2, #184	; 0xb8
 80013da:	2100      	movs	r1, #0
 80013dc:	4618      	mov	r0, r3
 80013de:	f024 fcae 	bl	8025d3e <memset>
  if(hspi->Instance==SPI1)
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	4a9e      	ldr	r2, [pc, #632]	; (8001660 <HAL_SPI_MspInit+0x2a4>)
 80013e8:	4293      	cmp	r3, r2
 80013ea:	f040 80a9 	bne.w	8001540 <HAL_SPI_MspInit+0x184>

  /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 80013ee:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80013f2:	f04f 0300 	mov.w	r3, #0
 80013f6:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL3.PLL3M = 32;
 80013fa:	2320      	movs	r3, #32
 80013fc:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLL3.PLL3N = 100;
 80013fe:	2364      	movs	r3, #100	; 0x64
 8001400:	64fb      	str	r3, [r7, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3P = 1;
 8001402:	2301      	movs	r3, #1
 8001404:	653b      	str	r3, [r7, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8001406:	2302      	movs	r3, #2
 8001408:	657b      	str	r3, [r7, #84]	; 0x54
    PeriphClkInitStruct.PLL3.PLL3R = 2;
 800140a:	2302      	movs	r3, #2
 800140c:	65bb      	str	r3, [r7, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 800140e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001412:	65fb      	str	r3, [r7, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 8001414:	2300      	movs	r3, #0
 8001416:	663b      	str	r3, [r7, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 8001418:	2300      	movs	r3, #0
 800141a:	667b      	str	r3, [r7, #100]	; 0x64
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL3;
 800141c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001420:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001422:	f107 0320 	add.w	r3, r7, #32
 8001426:	4618      	mov	r0, r3
 8001428:	f006 fdf4 	bl	8008014 <HAL_RCCEx_PeriphCLKConfig>
 800142c:	4603      	mov	r3, r0
 800142e:	2b00      	cmp	r3, #0
 8001430:	d001      	beq.n	8001436 <HAL_SPI_MspInit+0x7a>
    {
      Error_Handler();
 8001432:	f7ff fd87 	bl	8000f44 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001436:	4b8b      	ldr	r3, [pc, #556]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001438:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800143c:	4a89      	ldr	r2, [pc, #548]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 800143e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001442:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001446:	4b87      	ldr	r3, [pc, #540]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001448:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800144c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001450:	61fb      	str	r3, [r7, #28]
 8001452:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001454:	4b83      	ldr	r3, [pc, #524]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001456:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800145a:	4a82      	ldr	r2, [pc, #520]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 800145c:	f043 0301 	orr.w	r3, r3, #1
 8001460:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001464:	4b7f      	ldr	r3, [pc, #508]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001466:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800146a:	f003 0301 	and.w	r3, r3, #1
 800146e:	61bb      	str	r3, [r7, #24]
 8001470:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001472:	4b7c      	ldr	r3, [pc, #496]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001474:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001478:	4a7a      	ldr	r2, [pc, #488]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 800147a:	f043 0308 	orr.w	r3, r3, #8
 800147e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001482:	4b78      	ldr	r3, [pc, #480]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001484:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001488:	f003 0308 	and.w	r3, r3, #8
 800148c:	617b      	str	r3, [r7, #20]
 800148e:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001490:	4b74      	ldr	r3, [pc, #464]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001492:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001496:	4a73      	ldr	r2, [pc, #460]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001498:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800149c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80014a0:	4b70      	ldr	r3, [pc, #448]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 80014a2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80014a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80014aa:	613b      	str	r3, [r7, #16]
 80014ac:	693b      	ldr	r3, [r7, #16]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PD7     ------> SPI1_MOSI
    PG9     ------> SPI1_MISO
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 80014ae:	2320      	movs	r3, #32
 80014b0:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014b4:	2302      	movs	r3, #2
 80014b6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ba:	2300      	movs	r3, #0
 80014bc:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014c0:	2300      	movs	r3, #0
 80014c2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014c6:	2305      	movs	r3, #5
 80014c8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014cc:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014d0:	4619      	mov	r1, r3
 80014d2:	4865      	ldr	r0, [pc, #404]	; (8001668 <HAL_SPI_MspInit+0x2ac>)
 80014d4:	f004 fd88 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80014d8:	2380      	movs	r3, #128	; 0x80
 80014da:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014de:	2302      	movs	r3, #2
 80014e0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014e4:	2300      	movs	r3, #0
 80014e6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014ea:	2300      	movs	r3, #0
 80014ec:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014f0:	2305      	movs	r3, #5
 80014f2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014f6:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014fa:	4619      	mov	r1, r3
 80014fc:	485b      	ldr	r0, [pc, #364]	; (800166c <HAL_SPI_MspInit+0x2b0>)
 80014fe:	f004 fd73 	bl	8005fe8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001502:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001506:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800150a:	2302      	movs	r3, #2
 800150c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001510:	2300      	movs	r3, #0
 8001512:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001516:	2300      	movs	r3, #0
 8001518:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800151c:	2305      	movs	r3, #5
 800151e:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001522:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001526:	4619      	mov	r1, r3
 8001528:	4851      	ldr	r0, [pc, #324]	; (8001670 <HAL_SPI_MspInit+0x2b4>)
 800152a:	f004 fd5d 	bl	8005fe8 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 800152e:	2200      	movs	r2, #0
 8001530:	2100      	movs	r1, #0
 8001532:	2023      	movs	r0, #35	; 0x23
 8001534:	f002 f90b 	bl	800374e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8001538:	2023      	movs	r0, #35	; 0x23
 800153a:	f002 f922 	bl	8003782 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 800153e:	e08b      	b.n	8001658 <HAL_SPI_MspInit+0x29c>
  else if(hspi->Instance==SPI5)
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	4a4b      	ldr	r2, [pc, #300]	; (8001674 <HAL_SPI_MspInit+0x2b8>)
 8001546:	4293      	cmp	r3, r2
 8001548:	f040 8086 	bne.w	8001658 <HAL_SPI_MspInit+0x29c>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI5;
 800154c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001550:	f04f 0300 	mov.w	r3, #0
 8001554:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_HSI;
 8001558:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800155c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001560:	f107 0320 	add.w	r3, r7, #32
 8001564:	4618      	mov	r0, r3
 8001566:	f006 fd55 	bl	8008014 <HAL_RCCEx_PeriphCLKConfig>
 800156a:	4603      	mov	r3, r0
 800156c:	2b00      	cmp	r3, #0
 800156e:	d001      	beq.n	8001574 <HAL_SPI_MspInit+0x1b8>
      Error_Handler();
 8001570:	f7ff fce8 	bl	8000f44 <Error_Handler>
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001574:	4b3b      	ldr	r3, [pc, #236]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001576:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800157a:	4a3a      	ldr	r2, [pc, #232]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 800157c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001580:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001584:	4b37      	ldr	r3, [pc, #220]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001586:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800158a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800158e:	60fb      	str	r3, [r7, #12]
 8001590:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001592:	4b34      	ldr	r3, [pc, #208]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 8001594:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001598:	4a32      	ldr	r2, [pc, #200]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 800159a:	f043 0320 	orr.w	r3, r3, #32
 800159e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80015a2:	4b30      	ldr	r3, [pc, #192]	; (8001664 <HAL_SPI_MspInit+0x2a8>)
 80015a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80015a8:	f003 0320 	and.w	r3, r3, #32
 80015ac:	60bb      	str	r3, [r7, #8]
 80015ae:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80015b0:	f44f 7360 	mov.w	r3, #896	; 0x380
 80015b4:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015b8:	2302      	movs	r3, #2
 80015ba:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015be:	2300      	movs	r3, #0
 80015c0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c4:	2300      	movs	r3, #0
 80015c6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80015ca:	2305      	movs	r3, #5
 80015cc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80015d0:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80015d4:	4619      	mov	r1, r3
 80015d6:	4828      	ldr	r0, [pc, #160]	; (8001678 <HAL_SPI_MspInit+0x2bc>)
 80015d8:	f004 fd06 	bl	8005fe8 <HAL_GPIO_Init>
    hdma_spi5_tx.Instance = DMA1_Stream0;
 80015dc:	4b27      	ldr	r3, [pc, #156]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015de:	4a28      	ldr	r2, [pc, #160]	; (8001680 <HAL_SPI_MspInit+0x2c4>)
 80015e0:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Request = DMA_REQUEST_SPI5_TX;
 80015e2:	4b26      	ldr	r3, [pc, #152]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015e4:	2256      	movs	r2, #86	; 0x56
 80015e6:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80015e8:	4b24      	ldr	r3, [pc, #144]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015ea:	2240      	movs	r2, #64	; 0x40
 80015ec:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80015ee:	4b23      	ldr	r3, [pc, #140]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015f0:	2200      	movs	r2, #0
 80015f2:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 80015f4:	4b21      	ldr	r3, [pc, #132]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015fa:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80015fc:	4b1f      	ldr	r3, [pc, #124]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 80015fe:	2200      	movs	r2, #0
 8001600:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001602:	4b1e      	ldr	r3, [pc, #120]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001604:	2200      	movs	r2, #0
 8001606:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 8001608:	4b1c      	ldr	r3, [pc, #112]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 800160a:	2200      	movs	r2, #0
 800160c:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 800160e:	4b1b      	ldr	r3, [pc, #108]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001610:	2200      	movs	r2, #0
 8001612:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001614:	4b19      	ldr	r3, [pc, #100]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001616:	2204      	movs	r2, #4
 8001618:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi5_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 800161a:	4b18      	ldr	r3, [pc, #96]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 800161c:	2203      	movs	r2, #3
 800161e:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi5_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 8001620:	4b16      	ldr	r3, [pc, #88]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001622:	2200      	movs	r2, #0
 8001624:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi5_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001626:	4b15      	ldr	r3, [pc, #84]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001628:	2200      	movs	r2, #0
 800162a:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 800162c:	4813      	ldr	r0, [pc, #76]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 800162e:	f002 f9b5 	bl	800399c <HAL_DMA_Init>
 8001632:	4603      	mov	r3, r0
 8001634:	2b00      	cmp	r3, #0
 8001636:	d001      	beq.n	800163c <HAL_SPI_MspInit+0x280>
      Error_Handler();
 8001638:	f7ff fc84 	bl	8000f44 <Error_Handler>
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi5_tx);
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	4a0f      	ldr	r2, [pc, #60]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001640:	679a      	str	r2, [r3, #120]	; 0x78
 8001642:	4a0e      	ldr	r2, [pc, #56]	; (800167c <HAL_SPI_MspInit+0x2c0>)
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI5_IRQn, 0, 0);
 8001648:	2200      	movs	r2, #0
 800164a:	2100      	movs	r1, #0
 800164c:	2055      	movs	r0, #85	; 0x55
 800164e:	f002 f87e 	bl	800374e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI5_IRQn);
 8001652:	2055      	movs	r0, #85	; 0x55
 8001654:	f002 f895 	bl	8003782 <HAL_NVIC_EnableIRQ>
}
 8001658:	bf00      	nop
 800165a:	37f0      	adds	r7, #240	; 0xf0
 800165c:	46bd      	mov	sp, r7
 800165e:	bd80      	pop	{r7, pc}
 8001660:	40013000 	.word	0x40013000
 8001664:	58024400 	.word	0x58024400
 8001668:	58020000 	.word	0x58020000
 800166c:	58020c00 	.word	0x58020c00
 8001670:	58021800 	.word	0x58021800
 8001674:	40015000 	.word	0x40015000
 8001678:	58021400 	.word	0x58021400
 800167c:	24000318 	.word	0x24000318
 8001680:	40020010 	.word	0x40020010

08001684 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001684:	b480      	push	{r7}
 8001686:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001688:	e7fe      	b.n	8001688 <NMI_Handler+0x4>

0800168a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800168a:	b480      	push	{r7}
 800168c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800168e:	e7fe      	b.n	800168e <HardFault_Handler+0x4>

08001690 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001690:	b480      	push	{r7}
 8001692:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001694:	e7fe      	b.n	8001694 <MemManage_Handler+0x4>

08001696 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001696:	b480      	push	{r7}
 8001698:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800169a:	e7fe      	b.n	800169a <BusFault_Handler+0x4>

0800169c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800169c:	b480      	push	{r7}
 800169e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80016a0:	e7fe      	b.n	80016a0 <UsageFault_Handler+0x4>

080016a2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80016a2:	b480      	push	{r7}
 80016a4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80016a6:	bf00      	nop
 80016a8:	46bd      	mov	sp, r7
 80016aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ae:	4770      	bx	lr

080016b0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80016b0:	b480      	push	{r7}
 80016b2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80016b4:	bf00      	nop
 80016b6:	46bd      	mov	sp, r7
 80016b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016bc:	4770      	bx	lr

080016be <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80016be:	b480      	push	{r7}
 80016c0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80016c2:	bf00      	nop
 80016c4:	46bd      	mov	sp, r7
 80016c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ca:	4770      	bx	lr

080016cc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80016cc:	b580      	push	{r7, lr}
 80016ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80016d0:	f000 fbaa 	bl	8001e28 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80016d4:	bf00      	nop
 80016d6:	bd80      	pop	{r7, pc}

080016d8 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 80016dc:	4802      	ldr	r0, [pc, #8]	; (80016e8 <DMA1_Stream0_IRQHandler+0x10>)
 80016de:	f003 f965 	bl	80049ac <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80016e2:	bf00      	nop
 80016e4:	bd80      	pop	{r7, pc}
 80016e6:	bf00      	nop
 80016e8:	24000318 	.word	0x24000318

080016ec <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80016ec:	b580      	push	{r7, lr}
 80016ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(T_IRQ_Pin);
 80016f0:	2040      	movs	r0, #64	; 0x40
 80016f2:	f004 fe3a 	bl	800636a <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80016f6:	bf00      	nop
 80016f8:	bd80      	pop	{r7, pc}
	...

080016fc <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80016fc:	b580      	push	{r7, lr}
 80016fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8001700:	4802      	ldr	r0, [pc, #8]	; (800170c <SPI1_IRQHandler+0x10>)
 8001702:	f009 ff33 	bl	800b56c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8001706:	bf00      	nop
 8001708:	bd80      	pop	{r7, pc}
 800170a:	bf00      	nop
 800170c:	24000208 	.word	0x24000208

08001710 <SPI5_IRQHandler>:

/**
  * @brief This function handles SPI5 global interrupt.
  */
void SPI5_IRQHandler(void)
{
 8001710:	b580      	push	{r7, lr}
 8001712:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI5_IRQn 0 */

  /* USER CODE END SPI5_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi5);
 8001714:	4802      	ldr	r0, [pc, #8]	; (8001720 <SPI5_IRQHandler+0x10>)
 8001716:	f009 ff29 	bl	800b56c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI5_IRQn 1 */

  /* USER CODE END SPI5_IRQn 1 */
}
 800171a:	bf00      	nop
 800171c:	bd80      	pop	{r7, pc}
 800171e:	bf00      	nop
 8001720:	24000290 	.word	0x24000290

08001724 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001724:	b480      	push	{r7}
 8001726:	af00      	add	r7, sp, #0
  return 1;
 8001728:	2301      	movs	r3, #1
}
 800172a:	4618      	mov	r0, r3
 800172c:	46bd      	mov	sp, r7
 800172e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001732:	4770      	bx	lr

08001734 <_kill>:

int _kill(int pid, int sig)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	b082      	sub	sp, #8
 8001738:	af00      	add	r7, sp, #0
 800173a:	6078      	str	r0, [r7, #4]
 800173c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800173e:	f024 fba1 	bl	8025e84 <__errno>
 8001742:	4603      	mov	r3, r0
 8001744:	2216      	movs	r2, #22
 8001746:	601a      	str	r2, [r3, #0]
  return -1;
 8001748:	f04f 33ff 	mov.w	r3, #4294967295
}
 800174c:	4618      	mov	r0, r3
 800174e:	3708      	adds	r7, #8
 8001750:	46bd      	mov	sp, r7
 8001752:	bd80      	pop	{r7, pc}

08001754 <_exit>:

void _exit (int status)
{
 8001754:	b580      	push	{r7, lr}
 8001756:	b082      	sub	sp, #8
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800175c:	f04f 31ff 	mov.w	r1, #4294967295
 8001760:	6878      	ldr	r0, [r7, #4]
 8001762:	f7ff ffe7 	bl	8001734 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001766:	e7fe      	b.n	8001766 <_exit+0x12>

08001768 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001768:	b580      	push	{r7, lr}
 800176a:	b086      	sub	sp, #24
 800176c:	af00      	add	r7, sp, #0
 800176e:	60f8      	str	r0, [r7, #12]
 8001770:	60b9      	str	r1, [r7, #8]
 8001772:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001774:	2300      	movs	r3, #0
 8001776:	617b      	str	r3, [r7, #20]
 8001778:	e00a      	b.n	8001790 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800177a:	f3af 8000 	nop.w
 800177e:	4601      	mov	r1, r0
 8001780:	68bb      	ldr	r3, [r7, #8]
 8001782:	1c5a      	adds	r2, r3, #1
 8001784:	60ba      	str	r2, [r7, #8]
 8001786:	b2ca      	uxtb	r2, r1
 8001788:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800178a:	697b      	ldr	r3, [r7, #20]
 800178c:	3301      	adds	r3, #1
 800178e:	617b      	str	r3, [r7, #20]
 8001790:	697a      	ldr	r2, [r7, #20]
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	429a      	cmp	r2, r3
 8001796:	dbf0      	blt.n	800177a <_read+0x12>
  }

  return len;
 8001798:	687b      	ldr	r3, [r7, #4]
}
 800179a:	4618      	mov	r0, r3
 800179c:	3718      	adds	r7, #24
 800179e:	46bd      	mov	sp, r7
 80017a0:	bd80      	pop	{r7, pc}

080017a2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80017a2:	b580      	push	{r7, lr}
 80017a4:	b086      	sub	sp, #24
 80017a6:	af00      	add	r7, sp, #0
 80017a8:	60f8      	str	r0, [r7, #12]
 80017aa:	60b9      	str	r1, [r7, #8]
 80017ac:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017ae:	2300      	movs	r3, #0
 80017b0:	617b      	str	r3, [r7, #20]
 80017b2:	e009      	b.n	80017c8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80017b4:	68bb      	ldr	r3, [r7, #8]
 80017b6:	1c5a      	adds	r2, r3, #1
 80017b8:	60ba      	str	r2, [r7, #8]
 80017ba:	781b      	ldrb	r3, [r3, #0]
 80017bc:	4618      	mov	r0, r3
 80017be:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017c2:	697b      	ldr	r3, [r7, #20]
 80017c4:	3301      	adds	r3, #1
 80017c6:	617b      	str	r3, [r7, #20]
 80017c8:	697a      	ldr	r2, [r7, #20]
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	429a      	cmp	r2, r3
 80017ce:	dbf1      	blt.n	80017b4 <_write+0x12>
  }
  return len;
 80017d0:	687b      	ldr	r3, [r7, #4]
}
 80017d2:	4618      	mov	r0, r3
 80017d4:	3718      	adds	r7, #24
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}

080017da <_close>:

int _close(int file)
{
 80017da:	b480      	push	{r7}
 80017dc:	b083      	sub	sp, #12
 80017de:	af00      	add	r7, sp, #0
 80017e0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80017e2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80017e6:	4618      	mov	r0, r3
 80017e8:	370c      	adds	r7, #12
 80017ea:	46bd      	mov	sp, r7
 80017ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f0:	4770      	bx	lr

080017f2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80017f2:	b480      	push	{r7}
 80017f4:	b083      	sub	sp, #12
 80017f6:	af00      	add	r7, sp, #0
 80017f8:	6078      	str	r0, [r7, #4]
 80017fa:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80017fc:	683b      	ldr	r3, [r7, #0]
 80017fe:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001802:	605a      	str	r2, [r3, #4]
  return 0;
 8001804:	2300      	movs	r3, #0
}
 8001806:	4618      	mov	r0, r3
 8001808:	370c      	adds	r7, #12
 800180a:	46bd      	mov	sp, r7
 800180c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001810:	4770      	bx	lr

08001812 <_isatty>:

int _isatty(int file)
{
 8001812:	b480      	push	{r7}
 8001814:	b083      	sub	sp, #12
 8001816:	af00      	add	r7, sp, #0
 8001818:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800181a:	2301      	movs	r3, #1
}
 800181c:	4618      	mov	r0, r3
 800181e:	370c      	adds	r7, #12
 8001820:	46bd      	mov	sp, r7
 8001822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001826:	4770      	bx	lr

08001828 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001828:	b480      	push	{r7}
 800182a:	b085      	sub	sp, #20
 800182c:	af00      	add	r7, sp, #0
 800182e:	60f8      	str	r0, [r7, #12]
 8001830:	60b9      	str	r1, [r7, #8]
 8001832:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001834:	2300      	movs	r3, #0
}
 8001836:	4618      	mov	r0, r3
 8001838:	3714      	adds	r7, #20
 800183a:	46bd      	mov	sp, r7
 800183c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001840:	4770      	bx	lr
	...

08001844 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001844:	b580      	push	{r7, lr}
 8001846:	b086      	sub	sp, #24
 8001848:	af00      	add	r7, sp, #0
 800184a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800184c:	4a14      	ldr	r2, [pc, #80]	; (80018a0 <_sbrk+0x5c>)
 800184e:	4b15      	ldr	r3, [pc, #84]	; (80018a4 <_sbrk+0x60>)
 8001850:	1ad3      	subs	r3, r2, r3
 8001852:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001854:	697b      	ldr	r3, [r7, #20]
 8001856:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001858:	4b13      	ldr	r3, [pc, #76]	; (80018a8 <_sbrk+0x64>)
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	2b00      	cmp	r3, #0
 800185e:	d102      	bne.n	8001866 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001860:	4b11      	ldr	r3, [pc, #68]	; (80018a8 <_sbrk+0x64>)
 8001862:	4a12      	ldr	r2, [pc, #72]	; (80018ac <_sbrk+0x68>)
 8001864:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001866:	4b10      	ldr	r3, [pc, #64]	; (80018a8 <_sbrk+0x64>)
 8001868:	681a      	ldr	r2, [r3, #0]
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	4413      	add	r3, r2
 800186e:	693a      	ldr	r2, [r7, #16]
 8001870:	429a      	cmp	r2, r3
 8001872:	d207      	bcs.n	8001884 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001874:	f024 fb06 	bl	8025e84 <__errno>
 8001878:	4603      	mov	r3, r0
 800187a:	220c      	movs	r2, #12
 800187c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800187e:	f04f 33ff 	mov.w	r3, #4294967295
 8001882:	e009      	b.n	8001898 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001884:	4b08      	ldr	r3, [pc, #32]	; (80018a8 <_sbrk+0x64>)
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800188a:	4b07      	ldr	r3, [pc, #28]	; (80018a8 <_sbrk+0x64>)
 800188c:	681a      	ldr	r2, [r3, #0]
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	4413      	add	r3, r2
 8001892:	4a05      	ldr	r2, [pc, #20]	; (80018a8 <_sbrk+0x64>)
 8001894:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001896:	68fb      	ldr	r3, [r7, #12]
}
 8001898:	4618      	mov	r0, r3
 800189a:	3718      	adds	r7, #24
 800189c:	46bd      	mov	sp, r7
 800189e:	bd80      	pop	{r7, pc}
 80018a0:	24050000 	.word	0x24050000
 80018a4:	00008000 	.word	0x00008000
 80018a8:	24000390 	.word	0x24000390
 80018ac:	24003bd8 	.word	0x24003bd8

080018b0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80018b0:	b480      	push	{r7}
 80018b2:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80018b4:	4b32      	ldr	r3, [pc, #200]	; (8001980 <SystemInit+0xd0>)
 80018b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018ba:	4a31      	ldr	r2, [pc, #196]	; (8001980 <SystemInit+0xd0>)
 80018bc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018c0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80018c4:	4b2f      	ldr	r3, [pc, #188]	; (8001984 <SystemInit+0xd4>)
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	f003 030f 	and.w	r3, r3, #15
 80018cc:	2b06      	cmp	r3, #6
 80018ce:	d807      	bhi.n	80018e0 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80018d0:	4b2c      	ldr	r3, [pc, #176]	; (8001984 <SystemInit+0xd4>)
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	f023 030f 	bic.w	r3, r3, #15
 80018d8:	4a2a      	ldr	r2, [pc, #168]	; (8001984 <SystemInit+0xd4>)
 80018da:	f043 0307 	orr.w	r3, r3, #7
 80018de:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80018e0:	4b29      	ldr	r3, [pc, #164]	; (8001988 <SystemInit+0xd8>)
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a28      	ldr	r2, [pc, #160]	; (8001988 <SystemInit+0xd8>)
 80018e6:	f043 0301 	orr.w	r3, r3, #1
 80018ea:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80018ec:	4b26      	ldr	r3, [pc, #152]	; (8001988 <SystemInit+0xd8>)
 80018ee:	2200      	movs	r2, #0
 80018f0:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80018f2:	4b25      	ldr	r3, [pc, #148]	; (8001988 <SystemInit+0xd8>)
 80018f4:	681a      	ldr	r2, [r3, #0]
 80018f6:	4924      	ldr	r1, [pc, #144]	; (8001988 <SystemInit+0xd8>)
 80018f8:	4b24      	ldr	r3, [pc, #144]	; (800198c <SystemInit+0xdc>)
 80018fa:	4013      	ands	r3, r2
 80018fc:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80018fe:	4b21      	ldr	r3, [pc, #132]	; (8001984 <SystemInit+0xd4>)
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	f003 0308 	and.w	r3, r3, #8
 8001906:	2b00      	cmp	r3, #0
 8001908:	d007      	beq.n	800191a <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800190a:	4b1e      	ldr	r3, [pc, #120]	; (8001984 <SystemInit+0xd4>)
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f023 030f 	bic.w	r3, r3, #15
 8001912:	4a1c      	ldr	r2, [pc, #112]	; (8001984 <SystemInit+0xd4>)
 8001914:	f043 0307 	orr.w	r3, r3, #7
 8001918:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 800191a:	4b1b      	ldr	r3, [pc, #108]	; (8001988 <SystemInit+0xd8>)
 800191c:	2200      	movs	r2, #0
 800191e:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8001920:	4b19      	ldr	r3, [pc, #100]	; (8001988 <SystemInit+0xd8>)
 8001922:	2200      	movs	r2, #0
 8001924:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8001926:	4b18      	ldr	r3, [pc, #96]	; (8001988 <SystemInit+0xd8>)
 8001928:	2200      	movs	r2, #0
 800192a:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 800192c:	4b16      	ldr	r3, [pc, #88]	; (8001988 <SystemInit+0xd8>)
 800192e:	4a18      	ldr	r2, [pc, #96]	; (8001990 <SystemInit+0xe0>)
 8001930:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8001932:	4b15      	ldr	r3, [pc, #84]	; (8001988 <SystemInit+0xd8>)
 8001934:	4a17      	ldr	r2, [pc, #92]	; (8001994 <SystemInit+0xe4>)
 8001936:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8001938:	4b13      	ldr	r3, [pc, #76]	; (8001988 <SystemInit+0xd8>)
 800193a:	4a17      	ldr	r2, [pc, #92]	; (8001998 <SystemInit+0xe8>)
 800193c:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800193e:	4b12      	ldr	r3, [pc, #72]	; (8001988 <SystemInit+0xd8>)
 8001940:	2200      	movs	r2, #0
 8001942:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8001944:	4b10      	ldr	r3, [pc, #64]	; (8001988 <SystemInit+0xd8>)
 8001946:	4a14      	ldr	r2, [pc, #80]	; (8001998 <SystemInit+0xe8>)
 8001948:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 800194a:	4b0f      	ldr	r3, [pc, #60]	; (8001988 <SystemInit+0xd8>)
 800194c:	2200      	movs	r2, #0
 800194e:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 8001950:	4b0d      	ldr	r3, [pc, #52]	; (8001988 <SystemInit+0xd8>)
 8001952:	4a11      	ldr	r2, [pc, #68]	; (8001998 <SystemInit+0xe8>)
 8001954:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8001956:	4b0c      	ldr	r3, [pc, #48]	; (8001988 <SystemInit+0xd8>)
 8001958:	2200      	movs	r2, #0
 800195a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800195c:	4b0a      	ldr	r3, [pc, #40]	; (8001988 <SystemInit+0xd8>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	4a09      	ldr	r2, [pc, #36]	; (8001988 <SystemInit+0xd8>)
 8001962:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001966:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8001968:	4b07      	ldr	r3, [pc, #28]	; (8001988 <SystemInit+0xd8>)
 800196a:	2200      	movs	r2, #0
 800196c:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800196e:	4b0b      	ldr	r3, [pc, #44]	; (800199c <SystemInit+0xec>)
 8001970:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001974:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001976:	bf00      	nop
 8001978:	46bd      	mov	sp, r7
 800197a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197e:	4770      	bx	lr
 8001980:	e000ed00 	.word	0xe000ed00
 8001984:	52002000 	.word	0x52002000
 8001988:	58024400 	.word	0x58024400
 800198c:	eaf6ed7f 	.word	0xeaf6ed7f
 8001990:	02020200 	.word	0x02020200
 8001994:	01ff0000 	.word	0x01ff0000
 8001998:	01010280 	.word	0x01010280
 800199c:	52004000 	.word	0x52004000

080019a0 <XPT2046_SetCS>:
extern void Error_Handler(void);
static uint8_t XPT2046_initilazed = 0;


static void XPT2046_SetCS(void)
{
 80019a0:	b580      	push	{r7, lr}
 80019a2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(T_CS_GPIO_Port, T_CS_Pin, GPIO_PIN_SET);
 80019a4:	2201      	movs	r2, #1
 80019a6:	2110      	movs	r1, #16
 80019a8:	4802      	ldr	r0, [pc, #8]	; (80019b4 <XPT2046_SetCS+0x14>)
 80019aa:	f004 fcc5 	bl	8006338 <HAL_GPIO_WritePin>
}
 80019ae:	bf00      	nop
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	58020000 	.word	0x58020000

080019b8 <XPT2046_ResetCS>:

static void XPT2046_ResetCS(void)
{
 80019b8:	b580      	push	{r7, lr}
 80019ba:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(T_CS_GPIO_Port, T_CS_Pin, GPIO_PIN_RESET);
 80019bc:	2200      	movs	r2, #0
 80019be:	2110      	movs	r1, #16
 80019c0:	4802      	ldr	r0, [pc, #8]	; (80019cc <XPT2046_ResetCS+0x14>)
 80019c2:	f004 fcb9 	bl	8006338 <HAL_GPIO_WritePin>
}
 80019c6:	bf00      	nop
 80019c8:	bd80      	pop	{r7, pc}
 80019ca:	bf00      	nop
 80019cc:	58020000 	.word	0x58020000

080019d0 <XPT2046_Write_Byte>:

static void XPT2046_Write_Byte(uint8_t num)
{
 80019d0:	b580      	push	{r7, lr}
 80019d2:	b082      	sub	sp, #8
 80019d4:	af00      	add	r7, sp, #0
 80019d6:	4603      	mov	r3, r0
 80019d8:	71fb      	strb	r3, [r7, #7]
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
 80019da:	4b0c      	ldr	r3, [pc, #48]	; (8001a0c <XPT2046_Write_Byte+0x3c>)
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	685a      	ldr	r2, [r3, #4]
 80019e0:	4b0a      	ldr	r3, [pc, #40]	; (8001a0c <XPT2046_Write_Byte+0x3c>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f022 020f 	bic.w	r2, r2, #15
 80019e8:	605a      	str	r2, [r3, #4]
//	__HAL_SPI_ENABLE(&hspi1);
	if (HAL_SPI_Transmit(&hspi1, &num, 1, 1000) != HAL_OK) {
 80019ea:	1df9      	adds	r1, r7, #7
 80019ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80019f0:	2201      	movs	r2, #1
 80019f2:	4806      	ldr	r0, [pc, #24]	; (8001a0c <XPT2046_Write_Byte+0x3c>)
 80019f4:	f009 f818 	bl	800aa28 <HAL_SPI_Transmit>
 80019f8:	4603      	mov	r3, r0
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d001      	beq.n	8001a02 <XPT2046_Write_Byte+0x32>
		Error_Handler();
 80019fe:	f7ff faa1 	bl	8000f44 <Error_Handler>
	}
//	__HAL_SPI_DISABLE(&hspi1);
}
 8001a02:	bf00      	nop
 8001a04:	3708      	adds	r7, #8
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bd80      	pop	{r7, pc}
 8001a0a:	bf00      	nop
 8001a0c:	24000208 	.word	0x24000208

08001a10 <XPT2046_Read_AD>:

static uint16_t XPT2046_Read_AD(uint8_t CMD)
{
 8001a10:	b580      	push	{r7, lr}
 8001a12:	b084      	sub	sp, #16
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	4603      	mov	r3, r0
 8001a18:	71fb      	strb	r3, [r7, #7]
	uint8_t num[2];
	uint16_t ret;

	T_CS_OFF;
 8001a1a:	f7ff ffcd 	bl	80019b8 <XPT2046_ResetCS>
	XPT2046_Write_Byte(CMD);
 8001a1e:	79fb      	ldrb	r3, [r7, #7]
 8001a20:	4618      	mov	r0, r3
 8001a22:	f7ff ffd5 	bl	80019d0 <XPT2046_Write_Byte>
	HAL_Delay(6);
 8001a26:	2006      	movs	r0, #6
 8001a28:	f000 fa1e 	bl	8001e68 <HAL_Delay>

	hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
 8001a2c:	4b15      	ldr	r3, [pc, #84]	; (8001a84 <XPT2046_Read_AD+0x74>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	685a      	ldr	r2, [r3, #4]
 8001a32:	4b14      	ldr	r3, [pc, #80]	; (8001a84 <XPT2046_Read_AD+0x74>)
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	f042 020f 	orr.w	r2, r2, #15
 8001a3a:	605a      	str	r2, [r3, #4]
//	__HAL_SPI_ENABLE(&hspi1);
	if (HAL_SPI_Receive(&hspi1, num, 1, 1000) != HAL_OK) {
 8001a3c:	f107 010c 	add.w	r1, r7, #12
 8001a40:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a44:	2201      	movs	r2, #1
 8001a46:	480f      	ldr	r0, [pc, #60]	; (8001a84 <XPT2046_Read_AD+0x74>)
 8001a48:	f009 f9dc 	bl	800ae04 <HAL_SPI_Receive>
 8001a4c:	4603      	mov	r3, r0
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d001      	beq.n	8001a56 <XPT2046_Read_AD+0x46>
		Error_Handler();
 8001a52:	f7ff fa77 	bl	8000f44 <Error_Handler>
	}
//	__HAL_SPI_DISABLE(&hspi1);
	T_CS_ON;
 8001a56:	f7ff ffa3 	bl	80019a0 <XPT2046_SetCS>

	ret = num[0] << 8 | num[1];
 8001a5a:	7b3b      	ldrb	r3, [r7, #12]
 8001a5c:	021b      	lsls	r3, r3, #8
 8001a5e:	b21a      	sxth	r2, r3
 8001a60:	7b7b      	ldrb	r3, [r7, #13]
 8001a62:	b21b      	sxth	r3, r3
 8001a64:	4313      	orrs	r3, r2
 8001a66:	b21b      	sxth	r3, r3
 8001a68:	81fb      	strh	r3, [r7, #14]
	ret >>= 3;
 8001a6a:	89fb      	ldrh	r3, [r7, #14]
 8001a6c:	08db      	lsrs	r3, r3, #3
 8001a6e:	81fb      	strh	r3, [r7, #14]
	ret &= (1<<12)-1;
 8001a70:	89fb      	ldrh	r3, [r7, #14]
 8001a72:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001a76:	81fb      	strh	r3, [r7, #14]

	return ret;
 8001a78:	89fb      	ldrh	r3, [r7, #14]
}
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	3710      	adds	r7, #16
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	bd80      	pop	{r7, pc}
 8001a82:	bf00      	nop
 8001a84:	24000208 	.word	0x24000208

08001a88 <besttwoavg>:

static int16_t besttwoavg( int16_t x , int16_t y , int16_t z ) {
 8001a88:	b480      	push	{r7}
 8001a8a:	b085      	sub	sp, #20
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	4603      	mov	r3, r0
 8001a90:	80fb      	strh	r3, [r7, #6]
 8001a92:	460b      	mov	r3, r1
 8001a94:	80bb      	strh	r3, [r7, #4]
 8001a96:	4613      	mov	r3, r2
 8001a98:	807b      	strh	r3, [r7, #2]
  int16_t da, db, dc;
  int16_t reta = 0;
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	813b      	strh	r3, [r7, #8]
  if ( x > y ) da = x - y; else da = y - x;
 8001a9e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001aa2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001aa6:	429a      	cmp	r2, r3
 8001aa8:	dd05      	ble.n	8001ab6 <besttwoavg+0x2e>
 8001aaa:	88fa      	ldrh	r2, [r7, #6]
 8001aac:	88bb      	ldrh	r3, [r7, #4]
 8001aae:	1ad3      	subs	r3, r2, r3
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	81fb      	strh	r3, [r7, #14]
 8001ab4:	e004      	b.n	8001ac0 <besttwoavg+0x38>
 8001ab6:	88ba      	ldrh	r2, [r7, #4]
 8001ab8:	88fb      	ldrh	r3, [r7, #6]
 8001aba:	1ad3      	subs	r3, r2, r3
 8001abc:	b29b      	uxth	r3, r3
 8001abe:	81fb      	strh	r3, [r7, #14]
  if ( x > z ) db = x - z; else db = z - x;
 8001ac0:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001ac4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001ac8:	429a      	cmp	r2, r3
 8001aca:	dd05      	ble.n	8001ad8 <besttwoavg+0x50>
 8001acc:	88fa      	ldrh	r2, [r7, #6]
 8001ace:	887b      	ldrh	r3, [r7, #2]
 8001ad0:	1ad3      	subs	r3, r2, r3
 8001ad2:	b29b      	uxth	r3, r3
 8001ad4:	81bb      	strh	r3, [r7, #12]
 8001ad6:	e004      	b.n	8001ae2 <besttwoavg+0x5a>
 8001ad8:	887a      	ldrh	r2, [r7, #2]
 8001ada:	88fb      	ldrh	r3, [r7, #6]
 8001adc:	1ad3      	subs	r3, r2, r3
 8001ade:	b29b      	uxth	r3, r3
 8001ae0:	81bb      	strh	r3, [r7, #12]
  if ( z > y ) dc = z - y; else dc = y - z;
 8001ae2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8001ae6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001aea:	429a      	cmp	r2, r3
 8001aec:	dd05      	ble.n	8001afa <besttwoavg+0x72>
 8001aee:	887a      	ldrh	r2, [r7, #2]
 8001af0:	88bb      	ldrh	r3, [r7, #4]
 8001af2:	1ad3      	subs	r3, r2, r3
 8001af4:	b29b      	uxth	r3, r3
 8001af6:	817b      	strh	r3, [r7, #10]
 8001af8:	e004      	b.n	8001b04 <besttwoavg+0x7c>
 8001afa:	88ba      	ldrh	r2, [r7, #4]
 8001afc:	887b      	ldrh	r3, [r7, #2]
 8001afe:	1ad3      	subs	r3, r2, r3
 8001b00:	b29b      	uxth	r3, r3
 8001b02:	817b      	strh	r3, [r7, #10]

  if ( da <= db && da <= dc ) reta = (x + y) >> 1;
 8001b04:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8001b08:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001b0c:	429a      	cmp	r2, r3
 8001b0e:	dc0d      	bgt.n	8001b2c <besttwoavg+0xa4>
 8001b10:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8001b14:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001b18:	429a      	cmp	r2, r3
 8001b1a:	dc07      	bgt.n	8001b2c <besttwoavg+0xa4>
 8001b1c:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001b20:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001b24:	4413      	add	r3, r2
 8001b26:	105b      	asrs	r3, r3, #1
 8001b28:	813b      	strh	r3, [r7, #8]
 8001b2a:	e01a      	b.n	8001b62 <besttwoavg+0xda>
  else if ( db <= da && db <= dc ) reta = (x + z) >> 1;
 8001b2c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001b30:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001b34:	429a      	cmp	r2, r3
 8001b36:	dc0d      	bgt.n	8001b54 <besttwoavg+0xcc>
 8001b38:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001b3c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001b40:	429a      	cmp	r2, r3
 8001b42:	dc07      	bgt.n	8001b54 <besttwoavg+0xcc>
 8001b44:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001b48:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001b4c:	4413      	add	r3, r2
 8001b4e:	105b      	asrs	r3, r3, #1
 8001b50:	813b      	strh	r3, [r7, #8]
 8001b52:	e006      	b.n	8001b62 <besttwoavg+0xda>
  else reta = (y + z) >> 1;   //    else if ( dc <= da && dc <= db ) reta = (x + y) >> 1;
 8001b54:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8001b58:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001b5c:	4413      	add	r3, r2
 8001b5e:	105b      	asrs	r3, r3, #1
 8001b60:	813b      	strh	r3, [r7, #8]

  return (reta);
 8001b62:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
}
 8001b66:	4618      	mov	r0, r3
 8001b68:	3714      	adds	r7, #20
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b70:	4770      	bx	lr
	...

08001b74 <XPT2046_Init>:

void XPT2046_Init(void)
{
 8001b74:	b480      	push	{r7}
 8001b76:	af00      	add	r7, sp, #0
	XPT2046_initilazed = 1;
 8001b78:	4b03      	ldr	r3, [pc, #12]	; (8001b88 <XPT2046_Init+0x14>)
 8001b7a:	2201      	movs	r2, #1
 8001b7c:	701a      	strb	r2, [r3, #0]
}
 8001b7e:	bf00      	nop
 8001b80:	46bd      	mov	sp, r7
 8001b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b86:	4770      	bx	lr
 8001b88:	24000394 	.word	0x24000394

08001b8c <XPT2046_Update>:

void XPT2046_Update(uint16_t *x, uint16_t *y)
{
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b088      	sub	sp, #32
 8001b90:	af00      	add	r7, sp, #0
 8001b92:	6078      	str	r0, [r7, #4]
 8001b94:	6039      	str	r1, [r7, #0]
	int16_t data[6];
	static uint32_t ptime = 0;

	if (XPT2046_initilazed == 0) {
 8001b96:	4b43      	ldr	r3, [pc, #268]	; (8001ca4 <XPT2046_Update+0x118>)
 8001b98:	781b      	ldrb	r3, [r3, #0]
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d07b      	beq.n	8001c96 <XPT2046_Update+0x10a>
		return;
	}

	if (HAL_GetTick() - ptime < MSEC_THRESHOLD) {
 8001b9e:	f000 f957 	bl	8001e50 <HAL_GetTick>
 8001ba2:	4602      	mov	r2, r0
 8001ba4:	4b40      	ldr	r3, [pc, #256]	; (8001ca8 <XPT2046_Update+0x11c>)
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	1ad3      	subs	r3, r2, r3
 8001baa:	2b02      	cmp	r3, #2
 8001bac:	d975      	bls.n	8001c9a <XPT2046_Update+0x10e>
		return;
	}

	int16_t z1 = XPT2046_Read_AD(0xb1); // z1
 8001bae:	20b1      	movs	r0, #177	; 0xb1
 8001bb0:	f7ff ff2e 	bl	8001a10 <XPT2046_Read_AD>
 8001bb4:	4603      	mov	r3, r0
 8001bb6:	837b      	strh	r3, [r7, #26]
	int32_t z = z1 + 4095;
 8001bb8:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 8001bbc:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001bc0:	61fb      	str	r3, [r7, #28]
	int16_t z2 = XPT2046_Read_AD(0xc1); // z2
 8001bc2:	20c1      	movs	r0, #193	; 0xc1
 8001bc4:	f7ff ff24 	bl	8001a10 <XPT2046_Read_AD>
 8001bc8:	4603      	mov	r3, r0
 8001bca:	833b      	strh	r3, [r7, #24]
	z -= z2;
 8001bcc:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001bd0:	69fa      	ldr	r2, [r7, #28]
 8001bd2:	1ad3      	subs	r3, r2, r3
 8001bd4:	61fb      	str	r3, [r7, #28]
	if (z >= Z_THRESHOLD) {
 8001bd6:	69fb      	ldr	r3, [r7, #28]
 8001bd8:	2bf9      	cmp	r3, #249	; 0xf9
 8001bda:	dd1b      	ble.n	8001c14 <XPT2046_Update+0x88>
		XPT2046_Read_AD(0x91);  // dummy 1st X measure
 8001bdc:	2091      	movs	r0, #145	; 0x91
 8001bde:	f7ff ff17 	bl	8001a10 <XPT2046_Read_AD>
		data[0] = XPT2046_Read_AD(0x91);
 8001be2:	2091      	movs	r0, #145	; 0x91
 8001be4:	f7ff ff14 	bl	8001a10 <XPT2046_Read_AD>
 8001be8:	4603      	mov	r3, r0
 8001bea:	b21b      	sxth	r3, r3
 8001bec:	813b      	strh	r3, [r7, #8]
		data[1] = XPT2046_Read_AD(0xd1);
 8001bee:	20d1      	movs	r0, #209	; 0xd1
 8001bf0:	f7ff ff0e 	bl	8001a10 <XPT2046_Read_AD>
 8001bf4:	4603      	mov	r3, r0
 8001bf6:	b21b      	sxth	r3, r3
 8001bf8:	817b      	strh	r3, [r7, #10]
		data[2] = XPT2046_Read_AD(0x91);
 8001bfa:	2091      	movs	r0, #145	; 0x91
 8001bfc:	f7ff ff08 	bl	8001a10 <XPT2046_Read_AD>
 8001c00:	4603      	mov	r3, r0
 8001c02:	b21b      	sxth	r3, r3
 8001c04:	81bb      	strh	r3, [r7, #12]
		data[3] = XPT2046_Read_AD(0xd1);
 8001c06:	20d1      	movs	r0, #209	; 0xd1
 8001c08:	f7ff ff02 	bl	8001a10 <XPT2046_Read_AD>
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	b21b      	sxth	r3, r3
 8001c10:	81fb      	strh	r3, [r7, #14]
 8001c12:	e00a      	b.n	8001c2a <XPT2046_Update+0x9e>
	} else {
		data[0] = data[1] = data[2] = data[3] = 0;
 8001c14:	2300      	movs	r3, #0
 8001c16:	81fb      	strh	r3, [r7, #14]
 8001c18:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001c1c:	81bb      	strh	r3, [r7, #12]
 8001c1e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001c22:	817b      	strh	r3, [r7, #10]
 8001c24:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001c28:	813b      	strh	r3, [r7, #8]
	}
	data[4] = XPT2046_Read_AD(0x91);
 8001c2a:	2091      	movs	r0, #145	; 0x91
 8001c2c:	f7ff fef0 	bl	8001a10 <XPT2046_Read_AD>
 8001c30:	4603      	mov	r3, r0
 8001c32:	b21b      	sxth	r3, r3
 8001c34:	823b      	strh	r3, [r7, #16]
	data[5] = XPT2046_Read_AD(0xd0);
 8001c36:	20d0      	movs	r0, #208	; 0xd0
 8001c38:	f7ff feea 	bl	8001a10 <XPT2046_Read_AD>
 8001c3c:	4603      	mov	r3, r0
 8001c3e:	b21b      	sxth	r3, r3
 8001c40:	827b      	strh	r3, [r7, #18]
	ptime = HAL_GetTick();
 8001c42:	f000 f905 	bl	8001e50 <HAL_GetTick>
 8001c46:	4603      	mov	r3, r0
 8001c48:	4a17      	ldr	r2, [pc, #92]	; (8001ca8 <XPT2046_Update+0x11c>)
 8001c4a:	6013      	str	r3, [r2, #0]
	if (z < 0) z = 0;
 8001c4c:	69fb      	ldr	r3, [r7, #28]
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	da01      	bge.n	8001c56 <XPT2046_Update+0xca>
 8001c52:	2300      	movs	r3, #0
 8001c54:	61fb      	str	r3, [r7, #28]
	int16_t intx = besttwoavg( data[0], data[2], data[4] );
 8001c56:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001c5a:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8001c5e:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8001c62:	4618      	mov	r0, r3
 8001c64:	f7ff ff10 	bl	8001a88 <besttwoavg>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	82fb      	strh	r3, [r7, #22]
	int16_t inty = besttwoavg( data[1], data[3], data[5] );
 8001c6c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001c70:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8001c74:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8001c78:	4618      	mov	r0, r3
 8001c7a:	f7ff ff05 	bl	8001a88 <besttwoavg>
 8001c7e:	4603      	mov	r3, r0
 8001c80:	82bb      	strh	r3, [r7, #20]
	if (z >= Z_THRESHOLD) {
 8001c82:	69fb      	ldr	r3, [r7, #28]
 8001c84:	2bf9      	cmp	r3, #249	; 0xf9
 8001c86:	dd09      	ble.n	8001c9c <XPT2046_Update+0x110>
		*x = intx;
 8001c88:	8afa      	ldrh	r2, [r7, #22]
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	801a      	strh	r2, [r3, #0]
		*y = inty;
 8001c8e:	8aba      	ldrh	r2, [r7, #20]
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	801a      	strh	r2, [r3, #0]
 8001c94:	e002      	b.n	8001c9c <XPT2046_Update+0x110>
		return;
 8001c96:	bf00      	nop
 8001c98:	e000      	b.n	8001c9c <XPT2046_Update+0x110>
		return;
 8001c9a:	bf00      	nop
	}
}
 8001c9c:	3720      	adds	r7, #32
 8001c9e:	46bd      	mov	sp, r7
 8001ca0:	bd80      	pop	{r7, pc}
 8001ca2:	bf00      	nop
 8001ca4:	24000394 	.word	0x24000394
 8001ca8:	24000398 	.word	0x24000398

08001cac <XPT2046_IsReasonable>:

uint8_t XPT2046_IsReasonable(uint16_t x, uint16_t y)
{
 8001cac:	b480      	push	{r7}
 8001cae:	b083      	sub	sp, #12
 8001cb0:	af00      	add	r7, sp, #0
 8001cb2:	4603      	mov	r3, r0
 8001cb4:	460a      	mov	r2, r1
 8001cb6:	80fb      	strh	r3, [r7, #6]
 8001cb8:	4613      	mov	r3, r2
 8001cba:	80bb      	strh	r3, [r7, #4]
	if (x >= XPT_XMIN && x <= XPT_XMAX && y >= XPT_YMIN && y <= XPT_YMAX) {
 8001cbc:	88fb      	ldrh	r3, [r7, #6]
 8001cbe:	f5b3 7faf 	cmp.w	r3, #350	; 0x15e
 8001cc2:	d30e      	bcc.n	8001ce2 <XPT2046_IsReasonable+0x36>
 8001cc4:	88fb      	ldrh	r3, [r7, #6]
 8001cc6:	f640 62d8 	movw	r2, #3800	; 0xed8
 8001cca:	4293      	cmp	r3, r2
 8001ccc:	d809      	bhi.n	8001ce2 <XPT2046_IsReasonable+0x36>
 8001cce:	88bb      	ldrh	r3, [r7, #4]
 8001cd0:	f5b3 7faf 	cmp.w	r3, #350	; 0x15e
 8001cd4:	d305      	bcc.n	8001ce2 <XPT2046_IsReasonable+0x36>
 8001cd6:	88bb      	ldrh	r3, [r7, #4]
 8001cd8:	f5b3 6f61 	cmp.w	r3, #3600	; 0xe10
 8001cdc:	d801      	bhi.n	8001ce2 <XPT2046_IsReasonable+0x36>
		return 1;
 8001cde:	2301      	movs	r3, #1
 8001ce0:	e000      	b.n	8001ce4 <XPT2046_IsReasonable+0x38>
	}
	return 0;
 8001ce2:	2300      	movs	r3, #0
}
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	370c      	adds	r7, #12
 8001ce8:	46bd      	mov	sp, r7
 8001cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cee:	4770      	bx	lr

08001cf0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8001cf0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001d28 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001cf4:	f7ff fddc 	bl	80018b0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001cf8:	480c      	ldr	r0, [pc, #48]	; (8001d2c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001cfa:	490d      	ldr	r1, [pc, #52]	; (8001d30 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001cfc:	4a0d      	ldr	r2, [pc, #52]	; (8001d34 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001cfe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001d00:	e002      	b.n	8001d08 <LoopCopyDataInit>

08001d02 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001d02:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001d04:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001d06:	3304      	adds	r3, #4

08001d08 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001d08:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001d0a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001d0c:	d3f9      	bcc.n	8001d02 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001d0e:	4a0a      	ldr	r2, [pc, #40]	; (8001d38 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001d10:	4c0a      	ldr	r4, [pc, #40]	; (8001d3c <LoopFillZerobss+0x22>)
  movs r3, #0
 8001d12:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001d14:	e001      	b.n	8001d1a <LoopFillZerobss>

08001d16 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001d16:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001d18:	3204      	adds	r2, #4

08001d1a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001d1a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001d1c:	d3fb      	bcc.n	8001d16 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001d1e:	f024 f8b7 	bl	8025e90 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001d22:	f7fe fdbe 	bl	80008a2 <main>
  bx  lr
 8001d26:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001d28:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 8001d2c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8001d30:	240000fc 	.word	0x240000fc
  ldr r2, =_sidata
 8001d34:	0804c888 	.word	0x0804c888
  ldr r2, =_sbss
 8001d38:	240000fc 	.word	0x240000fc
  ldr r4, =_ebss
 8001d3c:	24003bd4 	.word	0x24003bd4

08001d40 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001d40:	e7fe      	b.n	8001d40 <ADC3_IRQHandler>
	...

08001d44 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001d44:	b580      	push	{r7, lr}
 8001d46:	b082      	sub	sp, #8
 8001d48:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001d4a:	2003      	movs	r0, #3
 8001d4c:	f001 fcf4 	bl	8003738 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8001d50:	f005 ffa0 	bl	8007c94 <HAL_RCC_GetSysClockFreq>
 8001d54:	4602      	mov	r2, r0
 8001d56:	4b15      	ldr	r3, [pc, #84]	; (8001dac <HAL_Init+0x68>)
 8001d58:	699b      	ldr	r3, [r3, #24]
 8001d5a:	0a1b      	lsrs	r3, r3, #8
 8001d5c:	f003 030f 	and.w	r3, r3, #15
 8001d60:	4913      	ldr	r1, [pc, #76]	; (8001db0 <HAL_Init+0x6c>)
 8001d62:	5ccb      	ldrb	r3, [r1, r3]
 8001d64:	f003 031f 	and.w	r3, r3, #31
 8001d68:	fa22 f303 	lsr.w	r3, r2, r3
 8001d6c:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8001d6e:	4b0f      	ldr	r3, [pc, #60]	; (8001dac <HAL_Init+0x68>)
 8001d70:	699b      	ldr	r3, [r3, #24]
 8001d72:	f003 030f 	and.w	r3, r3, #15
 8001d76:	4a0e      	ldr	r2, [pc, #56]	; (8001db0 <HAL_Init+0x6c>)
 8001d78:	5cd3      	ldrb	r3, [r2, r3]
 8001d7a:	f003 031f 	and.w	r3, r3, #31
 8001d7e:	687a      	ldr	r2, [r7, #4]
 8001d80:	fa22 f303 	lsr.w	r3, r2, r3
 8001d84:	4a0b      	ldr	r2, [pc, #44]	; (8001db4 <HAL_Init+0x70>)
 8001d86:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8001d88:	4a0b      	ldr	r2, [pc, #44]	; (8001db8 <HAL_Init+0x74>)
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8001d8e:	200f      	movs	r0, #15
 8001d90:	f000 f814 	bl	8001dbc <HAL_InitTick>
 8001d94:	4603      	mov	r3, r0
 8001d96:	2b00      	cmp	r3, #0
 8001d98:	d001      	beq.n	8001d9e <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 8001d9a:	2301      	movs	r3, #1
 8001d9c:	e002      	b.n	8001da4 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8001d9e:	f7ff f8d7 	bl	8000f50 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001da2:	2300      	movs	r3, #0
}
 8001da4:	4618      	mov	r0, r3
 8001da6:	3708      	adds	r7, #8
 8001da8:	46bd      	mov	sp, r7
 8001daa:	bd80      	pop	{r7, pc}
 8001dac:	58024400 	.word	0x58024400
 8001db0:	08027c80 	.word	0x08027c80
 8001db4:	24000008 	.word	0x24000008
 8001db8:	24000004 	.word	0x24000004

08001dbc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001dbc:	b580      	push	{r7, lr}
 8001dbe:	b082      	sub	sp, #8
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8001dc4:	4b15      	ldr	r3, [pc, #84]	; (8001e1c <HAL_InitTick+0x60>)
 8001dc6:	781b      	ldrb	r3, [r3, #0]
 8001dc8:	2b00      	cmp	r3, #0
 8001dca:	d101      	bne.n	8001dd0 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8001dcc:	2301      	movs	r3, #1
 8001dce:	e021      	b.n	8001e14 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8001dd0:	4b13      	ldr	r3, [pc, #76]	; (8001e20 <HAL_InitTick+0x64>)
 8001dd2:	681a      	ldr	r2, [r3, #0]
 8001dd4:	4b11      	ldr	r3, [pc, #68]	; (8001e1c <HAL_InitTick+0x60>)
 8001dd6:	781b      	ldrb	r3, [r3, #0]
 8001dd8:	4619      	mov	r1, r3
 8001dda:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001dde:	fbb3 f3f1 	udiv	r3, r3, r1
 8001de2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001de6:	4618      	mov	r0, r3
 8001de8:	f001 fcd9 	bl	800379e <HAL_SYSTICK_Config>
 8001dec:	4603      	mov	r3, r0
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d001      	beq.n	8001df6 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8001df2:	2301      	movs	r3, #1
 8001df4:	e00e      	b.n	8001e14 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	2b0f      	cmp	r3, #15
 8001dfa:	d80a      	bhi.n	8001e12 <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	6879      	ldr	r1, [r7, #4]
 8001e00:	f04f 30ff 	mov.w	r0, #4294967295
 8001e04:	f001 fca3 	bl	800374e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001e08:	4a06      	ldr	r2, [pc, #24]	; (8001e24 <HAL_InitTick+0x68>)
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001e0e:	2300      	movs	r3, #0
 8001e10:	e000      	b.n	8001e14 <HAL_InitTick+0x58>
    return HAL_ERROR;
 8001e12:	2301      	movs	r3, #1
}
 8001e14:	4618      	mov	r0, r3
 8001e16:	3708      	adds	r7, #8
 8001e18:	46bd      	mov	sp, r7
 8001e1a:	bd80      	pop	{r7, pc}
 8001e1c:	24000010 	.word	0x24000010
 8001e20:	24000004 	.word	0x24000004
 8001e24:	2400000c 	.word	0x2400000c

08001e28 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001e28:	b480      	push	{r7}
 8001e2a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001e2c:	4b06      	ldr	r3, [pc, #24]	; (8001e48 <HAL_IncTick+0x20>)
 8001e2e:	781b      	ldrb	r3, [r3, #0]
 8001e30:	461a      	mov	r2, r3
 8001e32:	4b06      	ldr	r3, [pc, #24]	; (8001e4c <HAL_IncTick+0x24>)
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	4413      	add	r3, r2
 8001e38:	4a04      	ldr	r2, [pc, #16]	; (8001e4c <HAL_IncTick+0x24>)
 8001e3a:	6013      	str	r3, [r2, #0]
}
 8001e3c:	bf00      	nop
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e44:	4770      	bx	lr
 8001e46:	bf00      	nop
 8001e48:	24000010 	.word	0x24000010
 8001e4c:	2400039c 	.word	0x2400039c

08001e50 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001e50:	b480      	push	{r7}
 8001e52:	af00      	add	r7, sp, #0
  return uwTick;
 8001e54:	4b03      	ldr	r3, [pc, #12]	; (8001e64 <HAL_GetTick+0x14>)
 8001e56:	681b      	ldr	r3, [r3, #0]
}
 8001e58:	4618      	mov	r0, r3
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e60:	4770      	bx	lr
 8001e62:	bf00      	nop
 8001e64:	2400039c 	.word	0x2400039c

08001e68 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001e68:	b580      	push	{r7, lr}
 8001e6a:	b084      	sub	sp, #16
 8001e6c:	af00      	add	r7, sp, #0
 8001e6e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001e70:	f7ff ffee 	bl	8001e50 <HAL_GetTick>
 8001e74:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001e7a:	68fb      	ldr	r3, [r7, #12]
 8001e7c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e80:	d005      	beq.n	8001e8e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001e82:	4b0a      	ldr	r3, [pc, #40]	; (8001eac <HAL_Delay+0x44>)
 8001e84:	781b      	ldrb	r3, [r3, #0]
 8001e86:	461a      	mov	r2, r3
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	4413      	add	r3, r2
 8001e8c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001e8e:	bf00      	nop
 8001e90:	f7ff ffde 	bl	8001e50 <HAL_GetTick>
 8001e94:	4602      	mov	r2, r0
 8001e96:	68bb      	ldr	r3, [r7, #8]
 8001e98:	1ad3      	subs	r3, r2, r3
 8001e9a:	68fa      	ldr	r2, [r7, #12]
 8001e9c:	429a      	cmp	r2, r3
 8001e9e:	d8f7      	bhi.n	8001e90 <HAL_Delay+0x28>
  {
  }
}
 8001ea0:	bf00      	nop
 8001ea2:	bf00      	nop
 8001ea4:	3710      	adds	r7, #16
 8001ea6:	46bd      	mov	sp, r7
 8001ea8:	bd80      	pop	{r7, pc}
 8001eaa:	bf00      	nop
 8001eac:	24000010 	.word	0x24000010

08001eb0 <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 8001eb0:	b480      	push	{r7}
 8001eb2:	b083      	sub	sp, #12
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	6078      	str	r0, [r7, #4]
 8001eb8:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	689b      	ldr	r3, [r3, #8]
 8001ebe:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8001ec2:	683b      	ldr	r3, [r7, #0]
 8001ec4:	431a      	orrs	r2, r3
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	609a      	str	r2, [r3, #8]
}
 8001eca:	bf00      	nop
 8001ecc:	370c      	adds	r7, #12
 8001ece:	46bd      	mov	sp, r7
 8001ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed4:	4770      	bx	lr

08001ed6 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8001ed6:	b480      	push	{r7}
 8001ed8:	b083      	sub	sp, #12
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	6078      	str	r0, [r7, #4]
 8001ede:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	689b      	ldr	r3, [r3, #8]
 8001ee4:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8001ee8:	683b      	ldr	r3, [r7, #0]
 8001eea:	431a      	orrs	r2, r3
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	609a      	str	r2, [r3, #8]
}
 8001ef0:	bf00      	nop
 8001ef2:	370c      	adds	r7, #12
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efa:	4770      	bx	lr

08001efc <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 8001efc:	b480      	push	{r7}
 8001efe:	b083      	sub	sp, #12
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	689b      	ldr	r3, [r3, #8]
 8001f08:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 8001f0c:	4618      	mov	r0, r3
 8001f0e:	370c      	adds	r7, #12
 8001f10:	46bd      	mov	sp, r7
 8001f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f16:	4770      	bx	lr

08001f18 <LL_ADC_SetOffset>:
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 8001f18:	b480      	push	{r7}
 8001f1a:	b087      	sub	sp, #28
 8001f1c:	af00      	add	r7, sp, #0
 8001f1e:	60f8      	str	r0, [r7, #12]
 8001f20:	60b9      	str	r1, [r7, #8]
 8001f22:	607a      	str	r2, [r7, #4]
 8001f24:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	3360      	adds	r3, #96	; 0x60
 8001f2a:	461a      	mov	r2, r3
 8001f2c:	68bb      	ldr	r3, [r7, #8]
 8001f2e:	009b      	lsls	r3, r3, #2
 8001f30:	4413      	add	r3, r2
 8001f32:	617b      	str	r3, [r7, #20]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	4a10      	ldr	r2, [pc, #64]	; (8001f78 <LL_ADC_SetOffset+0x60>)
 8001f38:	4293      	cmp	r3, r2
 8001f3a:	d10b      	bne.n	8001f54 <LL_ADC_SetOffset+0x3c>
  {
    MODIFY_REG(*preg,
 8001f3c:	697b      	ldr	r3, [r7, #20]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	4313      	orrs	r3, r2
 8001f4a:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8001f4e:	697b      	ldr	r3, [r7, #20]
 8001f50:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
               (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
}
 8001f52:	e00b      	b.n	8001f6c <LL_ADC_SetOffset+0x54>
    MODIFY_REG(*preg,
 8001f54:	697b      	ldr	r3, [r7, #20]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 8001f62:	683b      	ldr	r3, [r7, #0]
 8001f64:	430b      	orrs	r3, r1
 8001f66:	431a      	orrs	r2, r3
 8001f68:	697b      	ldr	r3, [r7, #20]
 8001f6a:	601a      	str	r2, [r3, #0]
}
 8001f6c:	bf00      	nop
 8001f6e:	371c      	adds	r7, #28
 8001f70:	46bd      	mov	sp, r7
 8001f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f76:	4770      	bx	lr
 8001f78:	58026000 	.word	0x58026000

08001f7c <LL_ADC_GetOffsetChannel>:
  *         (1, 2) For ADC channel read back from ADC register,
  *                comparison with internal channel parameter to be done
  *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
  */
__STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
{
 8001f7c:	b480      	push	{r7}
 8001f7e:	b085      	sub	sp, #20
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
 8001f84:	6039      	str	r1, [r7, #0]
  const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	3360      	adds	r3, #96	; 0x60
 8001f8a:	461a      	mov	r2, r3
 8001f8c:	683b      	ldr	r3, [r7, #0]
 8001f8e:	009b      	lsls	r3, r3, #2
 8001f90:	4413      	add	r3, r2
 8001f92:	60fb      	str	r3, [r7, #12]

  return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 8001f94:	68fb      	ldr	r3, [r7, #12]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
}
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	3714      	adds	r7, #20
 8001fa0:	46bd      	mov	sp, r7
 8001fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa6:	4770      	bx	lr

08001fa8 <LL_ADC_SetDataRightShift>:
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthShift)
{
 8001fa8:	b480      	push	{r7}
 8001faa:	b085      	sub	sp, #20
 8001fac:	af00      	add	r7, sp, #0
 8001fae:	60f8      	str	r0, [r7, #12]
 8001fb0:	60b9      	str	r1, [r7, #8]
 8001fb2:	607a      	str	r2, [r7, #4]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
 8001fb4:	68fb      	ldr	r3, [r7, #12]
 8001fb6:	691b      	ldr	r3, [r3, #16]
 8001fb8:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 8001fbc:	68bb      	ldr	r3, [r7, #8]
 8001fbe:	f003 031f 	and.w	r3, r3, #31
 8001fc2:	6879      	ldr	r1, [r7, #4]
 8001fc4:	fa01 f303 	lsl.w	r3, r1, r3
 8001fc8:	431a      	orrs	r2, r3
 8001fca:	68fb      	ldr	r3, [r7, #12]
 8001fcc:	611a      	str	r2, [r3, #16]
}
 8001fce:	bf00      	nop
 8001fd0:	3714      	adds	r7, #20
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fd8:	4770      	bx	lr
	...

08001fdc <LL_ADC_SetOffsetSignedSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSignedSaturation)
{
 8001fdc:	b480      	push	{r7}
 8001fde:	b087      	sub	sp, #28
 8001fe0:	af00      	add	r7, sp, #0
 8001fe2:	60f8      	str	r0, [r7, #12]
 8001fe4:	60b9      	str	r1, [r7, #8]
 8001fe6:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	4a0c      	ldr	r2, [pc, #48]	; (800201c <LL_ADC_SetOffsetSignedSaturation+0x40>)
 8001fec:	4293      	cmp	r3, r2
 8001fee:	d00e      	beq.n	800200e <LL_ADC_SetOffsetSignedSaturation+0x32>
    /* Function not available on this instance */
  }
  else
#endif  /* ADC_VER_V5_V90 */
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001ff0:	68fb      	ldr	r3, [r7, #12]
 8001ff2:	3360      	adds	r3, #96	; 0x60
 8001ff4:	461a      	mov	r2, r3
 8001ff6:	68bb      	ldr	r3, [r7, #8]
 8001ff8:	009b      	lsls	r3, r3, #2
 8001ffa:	4413      	add	r3, r2
 8001ffc:	617b      	str	r3, [r7, #20]
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 8001ffe:	697b      	ldr	r3, [r7, #20]
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	431a      	orrs	r2, r3
 800200a:	697b      	ldr	r3, [r7, #20]
 800200c:	601a      	str	r2, [r3, #0]
  }
}
 800200e:	bf00      	nop
 8002010:	371c      	adds	r7, #28
 8002012:	46bd      	mov	sp, r7
 8002014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop
 800201c:	58026000 	.word	0x58026000

08002020 <LL_ADC_SetOffsetSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSaturation)
{
 8002020:	b480      	push	{r7}
 8002022:	b087      	sub	sp, #28
 8002024:	af00      	add	r7, sp, #0
 8002026:	60f8      	str	r0, [r7, #12]
 8002028:	60b9      	str	r1, [r7, #8]
 800202a:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	4a0c      	ldr	r2, [pc, #48]	; (8002060 <LL_ADC_SetOffsetSaturation+0x40>)
 8002030:	4293      	cmp	r3, r2
 8002032:	d10e      	bne.n	8002052 <LL_ADC_SetOffsetSaturation+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	3360      	adds	r3, #96	; 0x60
 8002038:	461a      	mov	r2, r3
 800203a:	68bb      	ldr	r3, [r7, #8]
 800203c:	009b      	lsls	r3, r3, #2
 800203e:	4413      	add	r3, r2
 8002040:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8002042:	697b      	ldr	r3, [r7, #20]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	431a      	orrs	r2, r3
 800204e:	697b      	ldr	r3, [r7, #20]
 8002050:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_SATEN,
               OffsetSaturation);
  }
}
 8002052:	bf00      	nop
 8002054:	371c      	adds	r7, #28
 8002056:	46bd      	mov	sp, r7
 8002058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205c:	4770      	bx	lr
 800205e:	bf00      	nop
 8002060:	58026000 	.word	0x58026000

08002064 <LL_ADC_SetOffsetSign>:
  *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
  *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
{
 8002064:	b480      	push	{r7}
 8002066:	b087      	sub	sp, #28
 8002068:	af00      	add	r7, sp, #0
 800206a:	60f8      	str	r0, [r7, #12]
 800206c:	60b9      	str	r1, [r7, #8]
 800206e:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	4a0c      	ldr	r2, [pc, #48]	; (80020a4 <LL_ADC_SetOffsetSign+0x40>)
 8002074:	4293      	cmp	r3, r2
 8002076:	d10e      	bne.n	8002096 <LL_ADC_SetOffsetSign+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	3360      	adds	r3, #96	; 0x60
 800207c:	461a      	mov	r2, r3
 800207e:	68bb      	ldr	r3, [r7, #8]
 8002080:	009b      	lsls	r3, r3, #2
 8002082:	4413      	add	r3, r2
 8002084:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8002086:	697b      	ldr	r3, [r7, #20]
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	431a      	orrs	r2, r3
 8002092:	697b      	ldr	r3, [r7, #20]
 8002094:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_OFFSETPOS,
               OffsetSign);
  }
}
 8002096:	bf00      	nop
 8002098:	371c      	adds	r7, #28
 800209a:	46bd      	mov	sp, r7
 800209c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020a0:	4770      	bx	lr
 80020a2:	bf00      	nop
 80020a4:	58026000 	.word	0x58026000

080020a8 <LL_ADC_SetOffsetState>:
  *         @arg @ref LL_ADC_OFFSET_DISABLE
  *         @arg @ref LL_ADC_OFFSET_ENABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetState)
{
 80020a8:	b480      	push	{r7}
 80020aa:	b087      	sub	sp, #28
 80020ac:	af00      	add	r7, sp, #0
 80020ae:	60f8      	str	r0, [r7, #12]
 80020b0:	60b9      	str	r1, [r7, #8]
 80020b2:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 80020b4:	68fb      	ldr	r3, [r7, #12]
 80020b6:	3360      	adds	r3, #96	; 0x60
 80020b8:	461a      	mov	r2, r3
 80020ba:	68bb      	ldr	r3, [r7, #8]
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	4413      	add	r3, r2
 80020c0:	617b      	str	r3, [r7, #20]
  if (ADCx == ADC3)
 80020c2:	68fb      	ldr	r3, [r7, #12]
 80020c4:	4a0c      	ldr	r2, [pc, #48]	; (80020f8 <LL_ADC_SetOffsetState+0x50>)
 80020c6:	4293      	cmp	r3, r2
 80020c8:	d108      	bne.n	80020dc <LL_ADC_SetOffsetState+0x34>
  {
    MODIFY_REG(*preg,
 80020ca:	697b      	ldr	r3, [r7, #20]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	431a      	orrs	r2, r3
 80020d6:	697b      	ldr	r3, [r7, #20]
 80020d8:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_SSATE,
               OffsetState);
  }
}
 80020da:	e007      	b.n	80020ec <LL_ADC_SetOffsetState+0x44>
    MODIFY_REG(*preg,
 80020dc:	697b      	ldr	r3, [r7, #20]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	431a      	orrs	r2, r3
 80020e8:	697b      	ldr	r3, [r7, #20]
 80020ea:	601a      	str	r2, [r3, #0]
}
 80020ec:	bf00      	nop
 80020ee:	371c      	adds	r7, #28
 80020f0:	46bd      	mov	sp, r7
 80020f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f6:	4770      	bx	lr
 80020f8:	58026000 	.word	0x58026000

080020fc <LL_ADC_REG_SetSequencerRanks>:
  *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to 8 Ms/s)).
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 80020fc:	b480      	push	{r7}
 80020fe:	b087      	sub	sp, #28
 8002100:	af00      	add	r7, sp, #0
 8002102:	60f8      	str	r0, [r7, #12]
 8002104:	60b9      	str	r1, [r7, #8]
 8002106:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	3330      	adds	r3, #48	; 0x30
 800210c:	461a      	mov	r2, r3
 800210e:	68bb      	ldr	r3, [r7, #8]
 8002110:	0a1b      	lsrs	r3, r3, #8
 8002112:	009b      	lsls	r3, r3, #2
 8002114:	f003 030c 	and.w	r3, r3, #12
 8002118:	4413      	add	r3, r2
 800211a:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 800211c:	697b      	ldr	r3, [r7, #20]
 800211e:	681a      	ldr	r2, [r3, #0]
 8002120:	68bb      	ldr	r3, [r7, #8]
 8002122:	f003 031f 	and.w	r3, r3, #31
 8002126:	211f      	movs	r1, #31
 8002128:	fa01 f303 	lsl.w	r3, r1, r3
 800212c:	43db      	mvns	r3, r3
 800212e:	401a      	ands	r2, r3
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	0e9b      	lsrs	r3, r3, #26
 8002134:	f003 011f 	and.w	r1, r3, #31
 8002138:	68bb      	ldr	r3, [r7, #8]
 800213a:	f003 031f 	and.w	r3, r3, #31
 800213e:	fa01 f303 	lsl.w	r3, r1, r3
 8002142:	431a      	orrs	r2, r3
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8002148:	bf00      	nop
 800214a:	371c      	adds	r7, #28
 800214c:	46bd      	mov	sp, r7
 800214e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002152:	4770      	bx	lr

08002154 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
  *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8002154:	b480      	push	{r7}
 8002156:	b087      	sub	sp, #28
 8002158:	af00      	add	r7, sp, #0
 800215a:	60f8      	str	r0, [r7, #12]
 800215c:	60b9      	str	r1, [r7, #8]
 800215e:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	3314      	adds	r3, #20
 8002164:	461a      	mov	r2, r3
 8002166:	68bb      	ldr	r3, [r7, #8]
 8002168:	0e5b      	lsrs	r3, r3, #25
 800216a:	009b      	lsls	r3, r3, #2
 800216c:	f003 0304 	and.w	r3, r3, #4
 8002170:	4413      	add	r3, r2
 8002172:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8002174:	697b      	ldr	r3, [r7, #20]
 8002176:	681a      	ldr	r2, [r3, #0]
 8002178:	68bb      	ldr	r3, [r7, #8]
 800217a:	0d1b      	lsrs	r3, r3, #20
 800217c:	f003 031f 	and.w	r3, r3, #31
 8002180:	2107      	movs	r1, #7
 8002182:	fa01 f303 	lsl.w	r3, r1, r3
 8002186:	43db      	mvns	r3, r3
 8002188:	401a      	ands	r2, r3
 800218a:	68bb      	ldr	r3, [r7, #8]
 800218c:	0d1b      	lsrs	r3, r3, #20
 800218e:	f003 031f 	and.w	r3, r3, #31
 8002192:	6879      	ldr	r1, [r7, #4]
 8002194:	fa01 f303 	lsl.w	r3, r1, r3
 8002198:	431a      	orrs	r2, r3
 800219a:	697b      	ldr	r3, [r7, #20]
 800219c:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 800219e:	bf00      	nop
 80021a0:	371c      	adds	r7, #28
 80021a2:	46bd      	mov	sp, r7
 80021a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a8:	4770      	bx	lr
	...

080021ac <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 80021ac:	b480      	push	{r7}
 80021ae:	b085      	sub	sp, #20
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	60f8      	str	r0, [r7, #12]
 80021b4:	60b9      	str	r1, [r7, #8]
 80021b6:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  /* Bits of channels in single or differential mode are set only for         */
  /* differential mode (for single mode, mask of bits allowed to be set is    */
  /* shifted out of range of bits of channels in single or differential mode. */
  if (ADCx == ADC3)
 80021b8:	68fb      	ldr	r3, [r7, #12]
 80021ba:	4a1a      	ldr	r2, [pc, #104]	; (8002224 <LL_ADC_SetChannelSingleDiff+0x78>)
 80021bc:	4293      	cmp	r3, r2
 80021be:	d115      	bne.n	80021ec <LL_ADC_SetChannelSingleDiff+0x40>
  {
    MODIFY_REG(ADCx->LTR2_DIFSEL,
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 80021c6:	68bb      	ldr	r3, [r7, #8]
 80021c8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021cc:	43db      	mvns	r3, r3
 80021ce:	401a      	ands	r2, r3
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	f003 0318 	and.w	r3, r3, #24
 80021d6:	4914      	ldr	r1, [pc, #80]	; (8002228 <LL_ADC_SetChannelSingleDiff+0x7c>)
 80021d8:	40d9      	lsrs	r1, r3
 80021da:	68bb      	ldr	r3, [r7, #8]
 80021dc:	400b      	ands	r3, r1
 80021de:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021e2:	431a      	orrs	r2, r3
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  /* shifted out of range of bits of channels in single or differential mode. */
  MODIFY_REG(ADCx->DIFSEL,
             Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
             (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
#endif /* ADC_VER_V5_V90 */
}
 80021ea:	e014      	b.n	8002216 <LL_ADC_SetChannelSingleDiff+0x6a>
    MODIFY_REG(ADCx->DIFSEL_RES12,
 80021ec:	68fb      	ldr	r3, [r7, #12]
 80021ee:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 80021f2:	68bb      	ldr	r3, [r7, #8]
 80021f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021f8:	43db      	mvns	r3, r3
 80021fa:	401a      	ands	r2, r3
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	f003 0318 	and.w	r3, r3, #24
 8002202:	4909      	ldr	r1, [pc, #36]	; (8002228 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8002204:	40d9      	lsrs	r1, r3
 8002206:	68bb      	ldr	r3, [r7, #8]
 8002208:	400b      	ands	r3, r1
 800220a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800220e:	431a      	orrs	r2, r3
 8002210:	68fb      	ldr	r3, [r7, #12]
 8002212:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
}
 8002216:	bf00      	nop
 8002218:	3714      	adds	r7, #20
 800221a:	46bd      	mov	sp, r7
 800221c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002220:	4770      	bx	lr
 8002222:	bf00      	nop
 8002224:	58026000 	.word	0x58026000
 8002228:	000fffff 	.word	0x000fffff

0800222c <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 800222c:	b480      	push	{r7}
 800222e:	b083      	sub	sp, #12
 8002230:	af00      	add	r7, sp, #0
 8002232:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	689a      	ldr	r2, [r3, #8]
 8002238:	4b04      	ldr	r3, [pc, #16]	; (800224c <LL_ADC_DisableDeepPowerDown+0x20>)
 800223a:	4013      	ands	r3, r2
 800223c:	687a      	ldr	r2, [r7, #4]
 800223e:	6093      	str	r3, [r2, #8]
}
 8002240:	bf00      	nop
 8002242:	370c      	adds	r7, #12
 8002244:	46bd      	mov	sp, r7
 8002246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224a:	4770      	bx	lr
 800224c:	5fffffc0 	.word	0x5fffffc0

08002250 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8002250:	b480      	push	{r7}
 8002252:	b083      	sub	sp, #12
 8002254:	af00      	add	r7, sp, #0
 8002256:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	689b      	ldr	r3, [r3, #8]
 800225c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002260:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8002264:	d101      	bne.n	800226a <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8002266:	2301      	movs	r3, #1
 8002268:	e000      	b.n	800226c <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 800226a:	2300      	movs	r3, #0
}
 800226c:	4618      	mov	r0, r3
 800226e:	370c      	adds	r7, #12
 8002270:	46bd      	mov	sp, r7
 8002272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002276:	4770      	bx	lr

08002278 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8002278:	b480      	push	{r7}
 800227a:	b083      	sub	sp, #12
 800227c:	af00      	add	r7, sp, #0
 800227e:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	689a      	ldr	r2, [r3, #8]
 8002284:	4b05      	ldr	r3, [pc, #20]	; (800229c <LL_ADC_EnableInternalRegulator+0x24>)
 8002286:	4013      	ands	r3, r2
 8002288:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 8002290:	bf00      	nop
 8002292:	370c      	adds	r7, #12
 8002294:	46bd      	mov	sp, r7
 8002296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800229a:	4770      	bx	lr
 800229c:	6fffffc0 	.word	0x6fffffc0

080022a0 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 80022a0:	b480      	push	{r7}
 80022a2:	b083      	sub	sp, #12
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	689b      	ldr	r3, [r3, #8]
 80022ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80022b0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80022b4:	d101      	bne.n	80022ba <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80022b6:	2301      	movs	r3, #1
 80022b8:	e000      	b.n	80022bc <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80022ba:	2300      	movs	r3, #0
}
 80022bc:	4618      	mov	r0, r3
 80022be:	370c      	adds	r7, #12
 80022c0:	46bd      	mov	sp, r7
 80022c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c6:	4770      	bx	lr

080022c8 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 80022c8:	b480      	push	{r7}
 80022ca:	b083      	sub	sp, #12
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	689b      	ldr	r3, [r3, #8]
 80022d4:	f003 0301 	and.w	r3, r3, #1
 80022d8:	2b01      	cmp	r3, #1
 80022da:	d101      	bne.n	80022e0 <LL_ADC_IsEnabled+0x18>
 80022dc:	2301      	movs	r3, #1
 80022de:	e000      	b.n	80022e2 <LL_ADC_IsEnabled+0x1a>
 80022e0:	2300      	movs	r3, #0
}
 80022e2:	4618      	mov	r0, r3
 80022e4:	370c      	adds	r7, #12
 80022e6:	46bd      	mov	sp, r7
 80022e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ec:	4770      	bx	lr

080022ee <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 80022ee:	b480      	push	{r7}
 80022f0:	b083      	sub	sp, #12
 80022f2:	af00      	add	r7, sp, #0
 80022f4:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	689b      	ldr	r3, [r3, #8]
 80022fa:	f003 0304 	and.w	r3, r3, #4
 80022fe:	2b04      	cmp	r3, #4
 8002300:	d101      	bne.n	8002306 <LL_ADC_REG_IsConversionOngoing+0x18>
 8002302:	2301      	movs	r3, #1
 8002304:	e000      	b.n	8002308 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002306:	2300      	movs	r3, #0
}
 8002308:	4618      	mov	r0, r3
 800230a:	370c      	adds	r7, #12
 800230c:	46bd      	mov	sp, r7
 800230e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002312:	4770      	bx	lr

08002314 <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8002314:	b480      	push	{r7}
 8002316:	b083      	sub	sp, #12
 8002318:	af00      	add	r7, sp, #0
 800231a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	689b      	ldr	r3, [r3, #8]
 8002320:	f003 0308 	and.w	r3, r3, #8
 8002324:	2b08      	cmp	r3, #8
 8002326:	d101      	bne.n	800232c <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002328:	2301      	movs	r3, #1
 800232a:	e000      	b.n	800232e <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800232c:	2300      	movs	r3, #0
}
 800232e:	4618      	mov	r0, r3
 8002330:	370c      	adds	r7, #12
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
	...

0800233c <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 800233c:	b590      	push	{r4, r7, lr}
 800233e:	b089      	sub	sp, #36	; 0x24
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002344:	2300      	movs	r3, #0
 8002346:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8002348:	2300      	movs	r3, #0
 800234a:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	2b00      	cmp	r3, #0
 8002350:	d101      	bne.n	8002356 <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 8002352:	2301      	movs	r3, #1
 8002354:	e1ee      	b.n	8002734 <HAL_ADC_Init+0x3f8>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	691b      	ldr	r3, [r3, #16]
 800235a:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002360:	2b00      	cmp	r3, #0
 8002362:	d109      	bne.n	8002378 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002364:	6878      	ldr	r0, [r7, #4]
 8002366:	f7fe fe0d 	bl	8000f84 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	2200      	movs	r2, #0
 800236e:	665a      	str	r2, [r3, #100]	; 0x64

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	2200      	movs	r2, #0
 8002374:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	4618      	mov	r0, r3
 800237e:	f7ff ff67 	bl	8002250 <LL_ADC_IsDeepPowerDownEnabled>
 8002382:	4603      	mov	r3, r0
 8002384:	2b00      	cmp	r3, #0
 8002386:	d004      	beq.n	8002392 <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4618      	mov	r0, r3
 800238e:	f7ff ff4d 	bl	800222c <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4618      	mov	r0, r3
 8002398:	f7ff ff82 	bl	80022a0 <LL_ADC_IsInternalRegulatorEnabled>
 800239c:	4603      	mov	r3, r0
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d114      	bne.n	80023cc <HAL_ADC_Init+0x90>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	4618      	mov	r0, r3
 80023a8:	f7ff ff66 	bl	8002278 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 80023ac:	4b8e      	ldr	r3, [pc, #568]	; (80025e8 <HAL_ADC_Init+0x2ac>)
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	099b      	lsrs	r3, r3, #6
 80023b2:	4a8e      	ldr	r2, [pc, #568]	; (80025ec <HAL_ADC_Init+0x2b0>)
 80023b4:	fba2 2303 	umull	r2, r3, r2, r3
 80023b8:	099b      	lsrs	r3, r3, #6
 80023ba:	3301      	adds	r3, #1
 80023bc:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 80023be:	e002      	b.n	80023c6 <HAL_ADC_Init+0x8a>
    {
      wait_loop_index--;
 80023c0:	68bb      	ldr	r3, [r7, #8]
 80023c2:	3b01      	subs	r3, #1
 80023c4:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 80023c6:	68bb      	ldr	r3, [r7, #8]
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	d1f9      	bne.n	80023c0 <HAL_ADC_Init+0x84>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	4618      	mov	r0, r3
 80023d2:	f7ff ff65 	bl	80022a0 <LL_ADC_IsInternalRegulatorEnabled>
 80023d6:	4603      	mov	r3, r0
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d10d      	bne.n	80023f8 <HAL_ADC_Init+0xbc>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80023e0:	f043 0210 	orr.w	r2, r3, #16
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	661a      	str	r2, [r3, #96]	; 0x60

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80023ec:	f043 0201 	orr.w	r2, r3, #1
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	665a      	str	r2, [r3, #100]	; 0x64

    tmp_hal_status = HAL_ERROR;
 80023f4:	2301      	movs	r3, #1
 80023f6:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4618      	mov	r0, r3
 80023fe:	f7ff ff76 	bl	80022ee <LL_ADC_REG_IsConversionOngoing>
 8002402:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002408:	f003 0310 	and.w	r3, r3, #16
 800240c:	2b00      	cmp	r3, #0
 800240e:	f040 8188 	bne.w	8002722 <HAL_ADC_Init+0x3e6>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 8002412:	697b      	ldr	r3, [r7, #20]
 8002414:	2b00      	cmp	r3, #0
 8002416:	f040 8184 	bne.w	8002722 <HAL_ADC_Init+0x3e6>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800241e:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8002422:	f043 0202 	orr.w	r2, r3, #2
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	661a      	str	r2, [r3, #96]	; 0x60
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	4618      	mov	r0, r3
 8002430:	f7ff ff4a 	bl	80022c8 <LL_ADC_IsEnabled>
 8002434:	4603      	mov	r3, r0
 8002436:	2b00      	cmp	r3, #0
 8002438:	d136      	bne.n	80024a8 <HAL_ADC_Init+0x16c>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	4a6c      	ldr	r2, [pc, #432]	; (80025f0 <HAL_ADC_Init+0x2b4>)
 8002440:	4293      	cmp	r3, r2
 8002442:	d004      	beq.n	800244e <HAL_ADC_Init+0x112>
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	4a6a      	ldr	r2, [pc, #424]	; (80025f4 <HAL_ADC_Init+0x2b8>)
 800244a:	4293      	cmp	r3, r2
 800244c:	d10e      	bne.n	800246c <HAL_ADC_Init+0x130>
 800244e:	4868      	ldr	r0, [pc, #416]	; (80025f0 <HAL_ADC_Init+0x2b4>)
 8002450:	f7ff ff3a 	bl	80022c8 <LL_ADC_IsEnabled>
 8002454:	4604      	mov	r4, r0
 8002456:	4867      	ldr	r0, [pc, #412]	; (80025f4 <HAL_ADC_Init+0x2b8>)
 8002458:	f7ff ff36 	bl	80022c8 <LL_ADC_IsEnabled>
 800245c:	4603      	mov	r3, r0
 800245e:	4323      	orrs	r3, r4
 8002460:	2b00      	cmp	r3, #0
 8002462:	bf0c      	ite	eq
 8002464:	2301      	moveq	r3, #1
 8002466:	2300      	movne	r3, #0
 8002468:	b2db      	uxtb	r3, r3
 800246a:	e008      	b.n	800247e <HAL_ADC_Init+0x142>
 800246c:	4862      	ldr	r0, [pc, #392]	; (80025f8 <HAL_ADC_Init+0x2bc>)
 800246e:	f7ff ff2b 	bl	80022c8 <LL_ADC_IsEnabled>
 8002472:	4603      	mov	r3, r0
 8002474:	2b00      	cmp	r3, #0
 8002476:	bf0c      	ite	eq
 8002478:	2301      	moveq	r3, #1
 800247a:	2300      	movne	r3, #0
 800247c:	b2db      	uxtb	r3, r3
 800247e:	2b00      	cmp	r3, #0
 8002480:	d012      	beq.n	80024a8 <HAL_ADC_Init+0x16c>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	4a5a      	ldr	r2, [pc, #360]	; (80025f0 <HAL_ADC_Init+0x2b4>)
 8002488:	4293      	cmp	r3, r2
 800248a:	d004      	beq.n	8002496 <HAL_ADC_Init+0x15a>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	4a58      	ldr	r2, [pc, #352]	; (80025f4 <HAL_ADC_Init+0x2b8>)
 8002492:	4293      	cmp	r3, r2
 8002494:	d101      	bne.n	800249a <HAL_ADC_Init+0x15e>
 8002496:	4a59      	ldr	r2, [pc, #356]	; (80025fc <HAL_ADC_Init+0x2c0>)
 8002498:	e000      	b.n	800249c <HAL_ADC_Init+0x160>
 800249a:	4a59      	ldr	r2, [pc, #356]	; (8002600 <HAL_ADC_Init+0x2c4>)
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	685b      	ldr	r3, [r3, #4]
 80024a0:	4619      	mov	r1, r3
 80024a2:	4610      	mov	r0, r2
 80024a4:	f7ff fd04 	bl	8001eb0 <LL_ADC_SetCommonClock>
                hadc->Init.Overrun                                                    |
                hadc->Init.Resolution                                                 |
                ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));

#elif defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a52      	ldr	r2, [pc, #328]	; (80025f8 <HAL_ADC_Init+0x2bc>)
 80024ae:	4293      	cmp	r3, r2
 80024b0:	d129      	bne.n	8002506 <HAL_ADC_Init+0x1ca>
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	7e5b      	ldrb	r3, [r3, #25]
 80024b6:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                     |
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80024bc:	431a      	orrs	r2, r3
                  hadc->Init.DataAlign                                                   |
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	68db      	ldr	r3, [r3, #12]
                  hadc->Init.Overrun                                                     |
 80024c2:	431a      	orrs	r2, r3
                  ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)) << 1UL)                                                   |
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	689b      	ldr	r3, [r3, #8]
 80024c8:	2b08      	cmp	r3, #8
 80024ca:	d013      	beq.n	80024f4 <HAL_ADC_Init+0x1b8>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	689b      	ldr	r3, [r3, #8]
 80024d0:	2b0c      	cmp	r3, #12
 80024d2:	d00d      	beq.n	80024f0 <HAL_ADC_Init+0x1b4>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	689b      	ldr	r3, [r3, #8]
 80024d8:	2b1c      	cmp	r3, #28
 80024da:	d007      	beq.n	80024ec <HAL_ADC_Init+0x1b0>
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	689b      	ldr	r3, [r3, #8]
 80024e0:	2b18      	cmp	r3, #24
 80024e2:	d101      	bne.n	80024e8 <HAL_ADC_Init+0x1ac>
 80024e4:	2318      	movs	r3, #24
 80024e6:	e006      	b.n	80024f6 <HAL_ADC_Init+0x1ba>
 80024e8:	2300      	movs	r3, #0
 80024ea:	e004      	b.n	80024f6 <HAL_ADC_Init+0x1ba>
 80024ec:	2310      	movs	r3, #16
 80024ee:	e002      	b.n	80024f6 <HAL_ADC_Init+0x1ba>
 80024f0:	2308      	movs	r3, #8
 80024f2:	e000      	b.n	80024f6 <HAL_ADC_Init+0x1ba>
 80024f4:	2300      	movs	r3, #0
                  hadc->Init.DataAlign                                                   |
 80024f6:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	f893 3020 	ldrb.w	r3, [r3, #32]
 80024fe:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8002500:	4313      	orrs	r3, r2
 8002502:	61bb      	str	r3, [r7, #24]
 8002504:	e00e      	b.n	8002524 <HAL_ADC_Init+0x1e8>
    }
    else
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	7e5b      	ldrb	r3, [r3, #25]
 800250a:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002510:	431a      	orrs	r2, r3
                  hadc->Init.Resolution                                                 |
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8002516:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800251e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002520:	4313      	orrs	r3, r2
 8002522:	61bb      	str	r3, [r7, #24]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
    }

#endif /* ADC_VER_V5_3 */

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	f893 3020 	ldrb.w	r3, [r3, #32]
 800252a:	2b01      	cmp	r3, #1
 800252c:	d106      	bne.n	800253c <HAL_ADC_Init+0x200>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002532:	3b01      	subs	r3, #1
 8002534:	045b      	lsls	r3, r3, #17
 8002536:	69ba      	ldr	r2, [r7, #24]
 8002538:	4313      	orrs	r3, r2
 800253a:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002540:	2b00      	cmp	r3, #0
 8002542:	d009      	beq.n	8002558 <HAL_ADC_Init+0x21c>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002548:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002550:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002552:	69ba      	ldr	r2, [r7, #24]
 8002554:	4313      	orrs	r3, r2
 8002556:	61bb      	str	r3, [r7, #24]
                 );
    }


#if defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	4a26      	ldr	r2, [pc, #152]	; (80025f8 <HAL_ADC_Init+0x2bc>)
 800255e:	4293      	cmp	r3, r2
 8002560:	d115      	bne.n	800258e <HAL_ADC_Init+0x252>
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	68da      	ldr	r2, [r3, #12]
 8002568:	4b26      	ldr	r3, [pc, #152]	; (8002604 <HAL_ADC_Init+0x2c8>)
 800256a:	4013      	ands	r3, r2
 800256c:	687a      	ldr	r2, [r7, #4]
 800256e:	6812      	ldr	r2, [r2, #0]
 8002570:	69b9      	ldr	r1, [r7, #24]
 8002572:	430b      	orrs	r3, r1
 8002574:	60d3      	str	r3, [r2, #12]
      /* Configuration of sampling mode */
      MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	691b      	ldr	r3, [r3, #16]
 800257c:	f023 6140 	bic.w	r1, r3, #201326592	; 0xc000000
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	430a      	orrs	r2, r1
 800258a:	611a      	str	r2, [r3, #16]
 800258c:	e009      	b.n	80025a2 <HAL_ADC_Init+0x266>
    }
    else
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	68da      	ldr	r2, [r3, #12]
 8002594:	4b1c      	ldr	r3, [pc, #112]	; (8002608 <HAL_ADC_Init+0x2cc>)
 8002596:	4013      	ands	r3, r2
 8002598:	687a      	ldr	r2, [r7, #4]
 800259a:	6812      	ldr	r2, [r2, #0]
 800259c:	69b9      	ldr	r1, [r7, #24]
 800259e:	430b      	orrs	r3, r1
 80025a0:	60d3      	str	r3, [r2, #12]
    /* Parameters that can be updated when ADC is disabled or enabled without */
    /* conversion on going on regular and injected groups:                    */
    /*  - Conversion data management      Init.ConversionDataManagement       */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	4618      	mov	r0, r3
 80025a8:	f7ff fea1 	bl	80022ee <LL_ADC_REG_IsConversionOngoing>
 80025ac:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	4618      	mov	r0, r3
 80025b4:	f7ff feae 	bl	8002314 <LL_ADC_INJ_IsConversionOngoing>
 80025b8:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 80025ba:	693b      	ldr	r3, [r7, #16]
 80025bc:	2b00      	cmp	r3, #0
 80025be:	f040 808e 	bne.w	80026de <HAL_ADC_Init+0x3a2>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	f040 808a 	bne.w	80026de <HAL_ADC_Init+0x3a2>
       )
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	4a0a      	ldr	r2, [pc, #40]	; (80025f8 <HAL_ADC_Init+0x2bc>)
 80025d0:	4293      	cmp	r3, r2
 80025d2:	d11b      	bne.n	800260c <HAL_ADC_Init+0x2d0>
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	7e1b      	ldrb	r3, [r3, #24]
 80025d8:	039a      	lsls	r2, r3, #14
                    ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80025e0:	005b      	lsls	r3, r3, #1
        tmpCFGR = (
 80025e2:	4313      	orrs	r3, r2
 80025e4:	61bb      	str	r3, [r7, #24]
 80025e6:	e018      	b.n	800261a <HAL_ADC_Init+0x2de>
 80025e8:	24000004 	.word	0x24000004
 80025ec:	053e2d63 	.word	0x053e2d63
 80025f0:	40022000 	.word	0x40022000
 80025f4:	40022100 	.word	0x40022100
 80025f8:	58026000 	.word	0x58026000
 80025fc:	40022300 	.word	0x40022300
 8002600:	58026300 	.word	0x58026300
 8002604:	fff04007 	.word	0xfff04007
 8002608:	fff0c003 	.word	0xfff0c003
      }
      else
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	7e1b      	ldrb	r3, [r3, #24]
 8002610:	039a      	lsls	r2, r3, #14
                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        tmpCFGR = (
 8002616:	4313      	orrs	r3, r2
 8002618:	61bb      	str	r3, [r7, #24]
      tmpCFGR = (
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
#endif

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	68da      	ldr	r2, [r3, #12]
 8002620:	4b46      	ldr	r3, [pc, #280]	; (800273c <HAL_ADC_Init+0x400>)
 8002622:	4013      	ands	r3, r2
 8002624:	687a      	ldr	r2, [r7, #4]
 8002626:	6812      	ldr	r2, [r2, #0]
 8002628:	69b9      	ldr	r1, [r7, #24]
 800262a:	430b      	orrs	r3, r1
 800262c:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.OversamplingMode == ENABLE)
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002634:	2b01      	cmp	r3, #1
 8002636:	d137      	bne.n	80026a8 <HAL_ADC_Init+0x36c>
#endif
        assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
        assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
        assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));

        if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800263c:	2b00      	cmp	r3, #0
          /* Multi trigger is not applicable to software-triggered conversions */
          assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER));
        }

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	4a3f      	ldr	r2, [pc, #252]	; (8002740 <HAL_ADC_Init+0x404>)
 8002644:	4293      	cmp	r3, r2
 8002646:	d116      	bne.n	8002676 <HAL_ADC_Init+0x33a>
          /* Configuration of Oversampler:                                      */
          /*  - Oversampling Ratio                                              */
          /*  - Right bit shift                                                 */
          /*  - Triggered mode                                                  */
          /*  - Oversampling mode (continued/resumed)                           */
          MODIFY_REG(hadc->Instance->CFGR2,
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	691a      	ldr	r2, [r3, #16]
 800264e:	4b3d      	ldr	r3, [pc, #244]	; (8002744 <HAL_ADC_Init+0x408>)
 8002650:	4013      	ands	r3, r2
 8002652:	687a      	ldr	r2, [r7, #4]
 8002654:	6c91      	ldr	r1, [r2, #72]	; 0x48
 8002656:	687a      	ldr	r2, [r7, #4]
 8002658:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800265a:	4311      	orrs	r1, r2
 800265c:	687a      	ldr	r2, [r7, #4]
 800265e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8002660:	4311      	orrs	r1, r2
 8002662:	687a      	ldr	r2, [r7, #4]
 8002664:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8002666:	430a      	orrs	r2, r1
 8002668:	431a      	orrs	r2, r3
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	f042 0201 	orr.w	r2, r2, #1
 8002672:	611a      	str	r2, [r3, #16]
 8002674:	e020      	b.n	80026b8 <HAL_ADC_Init+0x37c>
          /*  - Oversampling Ratio                                               */
          /*  - Right bit shift                                                  */
          /*  - Left bit shift                                                   */
          /*  - Triggered mode                                                   */
          /*  - Oversampling mode (continued/resumed)                            */
          MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	691a      	ldr	r2, [r3, #16]
 800267c:	4b32      	ldr	r3, [pc, #200]	; (8002748 <HAL_ADC_Init+0x40c>)
 800267e:	4013      	ands	r3, r2
 8002680:	687a      	ldr	r2, [r7, #4]
 8002682:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8002684:	3a01      	subs	r2, #1
 8002686:	0411      	lsls	r1, r2, #16
 8002688:	687a      	ldr	r2, [r7, #4]
 800268a:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800268c:	4311      	orrs	r1, r2
 800268e:	687a      	ldr	r2, [r7, #4]
 8002690:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8002692:	4311      	orrs	r1, r2
 8002694:	687a      	ldr	r2, [r7, #4]
 8002696:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8002698:	430a      	orrs	r2, r1
 800269a:	431a      	orrs	r2, r3
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	f042 0201 	orr.w	r2, r2, #1
 80026a4:	611a      	str	r2, [r3, #16]
 80026a6:	e007      	b.n	80026b8 <HAL_ADC_Init+0x37c>

      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	691a      	ldr	r2, [r3, #16]
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	f022 0201 	bic.w	r2, r2, #1
 80026b6:	611a      	str	r2, [r3, #16]
      }

      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling */
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	691b      	ldr	r3, [r3, #16]
 80026be:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	430a      	orrs	r2, r1
 80026cc:	611a      	str	r2, [r3, #16]
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	4a1b      	ldr	r2, [pc, #108]	; (8002740 <HAL_ADC_Init+0x404>)
 80026d4:	4293      	cmp	r3, r2
 80026d6:	d002      	beq.n	80026de <HAL_ADC_Init+0x3a2>
      {
        /* Configure the BOOST Mode */
        ADC_ConfigureBoostMode(hadc);
 80026d8:	6878      	ldr	r0, [r7, #4]
 80026da:	f000 fd67 	bl	80031ac <ADC_ConfigureBoostMode>
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	691b      	ldr	r3, [r3, #16]
 80026e2:	2b01      	cmp	r3, #1
 80026e4:	d10c      	bne.n	8002700 <HAL_ADC_Init+0x3c4>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026ec:	f023 010f 	bic.w	r1, r3, #15
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	69db      	ldr	r3, [r3, #28]
 80026f4:	1e5a      	subs	r2, r3, #1
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	430a      	orrs	r2, r1
 80026fc:	631a      	str	r2, [r3, #48]	; 0x30
 80026fe:	e007      	b.n	8002710 <HAL_ADC_Init+0x3d4>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f022 020f 	bic.w	r2, r2, #15
 800270e:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002714:	f023 0303 	bic.w	r3, r3, #3
 8002718:	f043 0201 	orr.w	r2, r3, #1
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	661a      	str	r2, [r3, #96]	; 0x60
 8002720:	e007      	b.n	8002732 <HAL_ADC_Init+0x3f6>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002726:	f043 0210 	orr.w	r2, r3, #16
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 800272e:	2301      	movs	r3, #1
 8002730:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 8002732:	7ffb      	ldrb	r3, [r7, #31]
}
 8002734:	4618      	mov	r0, r3
 8002736:	3724      	adds	r7, #36	; 0x24
 8002738:	46bd      	mov	sp, r7
 800273a:	bd90      	pop	{r4, r7, pc}
 800273c:	ffffbffc 	.word	0xffffbffc
 8002740:	58026000 	.word	0x58026000
 8002744:	fc00f81f 	.word	0xfc00f81f
 8002748:	fc00f81e 	.word	0xfc00f81e

0800274c <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 800274c:	b590      	push	{r4, r7, lr}
 800274e:	b0b9      	sub	sp, #228	; 0xe4
 8002750:	af00      	add	r7, sp, #0
 8002752:	6078      	str	r0, [r7, #4]
 8002754:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002756:	2300      	movs	r3, #0
 8002758:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
 800275c:	2300      	movs	r3, #0
 800275e:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
  assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
  /* Check offset range according to oversampling setting */
  if (hadc->Init.OversamplingMode == ENABLE)
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002766:	2b01      	cmp	r3, #1
  /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
     ignored (considered as reset) */
  assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENABLE)));

  /* Verification of channel number */
  if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 8002768:	683b      	ldr	r3, [r7, #0]
 800276a:	68db      	ldr	r3, [r3, #12]
 800276c:	4aab      	ldr	r2, [pc, #684]	; (8002a1c <HAL_ADC_ConfigChannel+0x2d0>)
 800276e:	4293      	cmp	r3, r2
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8002776:	2b01      	cmp	r3, #1
 8002778:	d102      	bne.n	8002780 <HAL_ADC_ConfigChannel+0x34>
 800277a:	2302      	movs	r3, #2
 800277c:	f000 bcfe 	b.w	800317c <HAL_ADC_ConfigChannel+0xa30>
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	2201      	movs	r2, #1
 8002784:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	4618      	mov	r0, r3
 800278e:	f7ff fdae 	bl	80022ee <LL_ADC_REG_IsConversionOngoing>
 8002792:	4603      	mov	r3, r0
 8002794:	2b00      	cmp	r3, #0
 8002796:	f040 84e2 	bne.w	800315e <HAL_ADC_ConfigChannel+0xa12>
  {
    if (!(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel)))
 800279a:	683b      	ldr	r3, [r7, #0]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	db38      	blt.n	8002814 <HAL_ADC_ConfigChannel+0xc8>
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	4a9e      	ldr	r2, [pc, #632]	; (8002a20 <HAL_ADC_ConfigChannel+0x2d4>)
 80027a8:	4293      	cmp	r3, r2
 80027aa:	d033      	beq.n	8002814 <HAL_ADC_ConfigChannel+0xc8>
      {
        /* ADC channels preselection */
        hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
 80027ac:	683b      	ldr	r3, [r7, #0]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d108      	bne.n	80027ca <HAL_ADC_ConfigChannel+0x7e>
 80027b8:	683b      	ldr	r3, [r7, #0]
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	0e9b      	lsrs	r3, r3, #26
 80027be:	f003 031f 	and.w	r3, r3, #31
 80027c2:	2201      	movs	r2, #1
 80027c4:	fa02 f303 	lsl.w	r3, r2, r3
 80027c8:	e01d      	b.n	8002806 <HAL_ADC_ConfigChannel+0xba>
 80027ca:	683b      	ldr	r3, [r7, #0]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027d2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 80027d6:	fa93 f3a3 	rbit	r3, r3
 80027da:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 80027de:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 80027e2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 80027e6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d101      	bne.n	80027f2 <HAL_ADC_ConfigChannel+0xa6>
  {
    return 32U;
 80027ee:	2320      	movs	r3, #32
 80027f0:	e004      	b.n	80027fc <HAL_ADC_ConfigChannel+0xb0>
  }
  return __builtin_clz(value);
 80027f2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80027f6:	fab3 f383 	clz	r3, r3
 80027fa:	b2db      	uxtb	r3, r3
 80027fc:	f003 031f 	and.w	r3, r3, #31
 8002800:	2201      	movs	r2, #1
 8002802:	fa02 f303 	lsl.w	r3, r2, r3
 8002806:	687a      	ldr	r2, [r7, #4]
 8002808:	6812      	ldr	r2, [r2, #0]
 800280a:	69d1      	ldr	r1, [r2, #28]
 800280c:	687a      	ldr	r2, [r7, #4]
 800280e:	6812      	ldr	r2, [r2, #0]
 8002810:	430b      	orrs	r3, r1
 8002812:	61d3      	str	r3, [r2, #28]
      hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
#endif /* ADC_VER_V5_V90 */
    }

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	6818      	ldr	r0, [r3, #0]
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	6859      	ldr	r1, [r3, #4]
 800281c:	683b      	ldr	r3, [r7, #0]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	461a      	mov	r2, r3
 8002822:	f7ff fc6b 	bl	80020fc <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	4618      	mov	r0, r3
 800282c:	f7ff fd5f 	bl	80022ee <LL_ADC_REG_IsConversionOngoing>
 8002830:	f8c7 00d4 	str.w	r0, [r7, #212]	; 0xd4
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	4618      	mov	r0, r3
 800283a:	f7ff fd6b 	bl	8002314 <LL_ADC_INJ_IsConversionOngoing>
 800283e:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002842:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8002846:	2b00      	cmp	r3, #0
 8002848:	f040 8270 	bne.w	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 800284c:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8002850:	2b00      	cmp	r3, #0
 8002852:	f040 826b 	bne.w	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
       )
    {
      /* Set sampling time of the selected ADC channel */
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	6818      	ldr	r0, [r3, #0]
 800285a:	683b      	ldr	r3, [r7, #0]
 800285c:	6819      	ldr	r1, [r3, #0]
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	689b      	ldr	r3, [r3, #8]
 8002862:	461a      	mov	r2, r3
 8002864:	f7ff fc76 	bl	8002154 <LL_ADC_SetChannelSamplingTime>
      /* Configure the offset: offset enable/disable, channel, offset value */

      /* Shift the offset with respect to the selected ADC resolution. */
      /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	4a6c      	ldr	r2, [pc, #432]	; (8002a20 <HAL_ADC_ConfigChannel+0x2d4>)
 800286e:	4293      	cmp	r3, r2
 8002870:	d10d      	bne.n	800288e <HAL_ADC_ConfigChannel+0x142>
      {
        tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 8002872:	683b      	ldr	r3, [r7, #0]
 8002874:	695a      	ldr	r2, [r3, #20]
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	68db      	ldr	r3, [r3, #12]
 800287c:	08db      	lsrs	r3, r3, #3
 800287e:	f003 0303 	and.w	r3, r3, #3
 8002882:	005b      	lsls	r3, r3, #1
 8002884:	fa02 f303 	lsl.w	r3, r2, r3
 8002888:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800288c:	e032      	b.n	80028f4 <HAL_ADC_ConfigChannel+0x1a8>
      }
      else
#endif /* ADC_VER_V5_V90 */
      {
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 800288e:	4b65      	ldr	r3, [pc, #404]	; (8002a24 <HAL_ADC_ConfigChannel+0x2d8>)
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8002896:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800289a:	d10b      	bne.n	80028b4 <HAL_ADC_ConfigChannel+0x168>
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	695a      	ldr	r2, [r3, #20]
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	68db      	ldr	r3, [r3, #12]
 80028a6:	089b      	lsrs	r3, r3, #2
 80028a8:	f003 0307 	and.w	r3, r3, #7
 80028ac:	005b      	lsls	r3, r3, #1
 80028ae:	fa02 f303 	lsl.w	r3, r2, r3
 80028b2:	e01d      	b.n	80028f0 <HAL_ADC_ConfigChannel+0x1a4>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	68db      	ldr	r3, [r3, #12]
 80028ba:	f003 0310 	and.w	r3, r3, #16
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d10b      	bne.n	80028da <HAL_ADC_ConfigChannel+0x18e>
 80028c2:	683b      	ldr	r3, [r7, #0]
 80028c4:	695a      	ldr	r2, [r3, #20]
 80028c6:	687b      	ldr	r3, [r7, #4]
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	68db      	ldr	r3, [r3, #12]
 80028cc:	089b      	lsrs	r3, r3, #2
 80028ce:	f003 0307 	and.w	r3, r3, #7
 80028d2:	005b      	lsls	r3, r3, #1
 80028d4:	fa02 f303 	lsl.w	r3, r2, r3
 80028d8:	e00a      	b.n	80028f0 <HAL_ADC_ConfigChannel+0x1a4>
 80028da:	683b      	ldr	r3, [r7, #0]
 80028dc:	695a      	ldr	r2, [r3, #20]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	68db      	ldr	r3, [r3, #12]
 80028e4:	089b      	lsrs	r3, r3, #2
 80028e6:	f003 0304 	and.w	r3, r3, #4
 80028ea:	005b      	lsls	r3, r3, #1
 80028ec:	fa02 f303 	lsl.w	r3, r2, r3
 80028f0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
      }
      
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 80028f4:	683b      	ldr	r3, [r7, #0]
 80028f6:	691b      	ldr	r3, [r3, #16]
 80028f8:	2b04      	cmp	r3, #4
 80028fa:	d048      	beq.n	800298e <HAL_ADC_ConfigChannel+0x242>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	6818      	ldr	r0, [r3, #0]
 8002900:	683b      	ldr	r3, [r7, #0]
 8002902:	6919      	ldr	r1, [r3, #16]
 8002904:	683b      	ldr	r3, [r7, #0]
 8002906:	681a      	ldr	r2, [r3, #0]
 8002908:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800290c:	f7ff fb04 	bl	8001f18 <LL_ADC_SetOffset>

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	4a42      	ldr	r2, [pc, #264]	; (8002a20 <HAL_ADC_ConfigChannel+0x2d4>)
 8002916:	4293      	cmp	r3, r2
 8002918:	d119      	bne.n	800294e <HAL_ADC_ConfigChannel+0x202>
        {
          assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
          /* Set ADC selected offset sign & saturation */
          LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	6818      	ldr	r0, [r3, #0]
 800291e:	683b      	ldr	r3, [r7, #0]
 8002920:	6919      	ldr	r1, [r3, #16]
 8002922:	683b      	ldr	r3, [r7, #0]
 8002924:	69db      	ldr	r3, [r3, #28]
 8002926:	461a      	mov	r2, r3
 8002928:	f7ff fb9c 	bl	8002064 <LL_ADC_SetOffsetSign>
          LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturation == ENABLE) ? LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE);
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	6818      	ldr	r0, [r3, #0]
 8002930:	683b      	ldr	r3, [r7, #0]
 8002932:	6919      	ldr	r1, [r3, #16]
 8002934:	683b      	ldr	r3, [r7, #0]
 8002936:	f893 3020 	ldrb.w	r3, [r3, #32]
 800293a:	2b01      	cmp	r3, #1
 800293c:	d102      	bne.n	8002944 <HAL_ADC_ConfigChannel+0x1f8>
 800293e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002942:	e000      	b.n	8002946 <HAL_ADC_ConfigChannel+0x1fa>
 8002944:	2300      	movs	r3, #0
 8002946:	461a      	mov	r2, r3
 8002948:	f7ff fb6a 	bl	8002020 <LL_ADC_SetOffsetSaturation>
 800294c:	e1ee      	b.n	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
        else
#endif /* ADC_VER_V5_V90 */
        {
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
          /* Set ADC selected offset signed saturation */
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	6818      	ldr	r0, [r3, #0]
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	6919      	ldr	r1, [r3, #16]
 8002956:	683b      	ldr	r3, [r7, #0]
 8002958:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800295c:	2b01      	cmp	r3, #1
 800295e:	d102      	bne.n	8002966 <HAL_ADC_ConfigChannel+0x21a>
 8002960:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8002964:	e000      	b.n	8002968 <HAL_ADC_ConfigChannel+0x21c>
 8002966:	2300      	movs	r3, #0
 8002968:	461a      	mov	r2, r3
 800296a:	f7ff fb37 	bl	8001fdc <LL_ADC_SetOffsetSignedSaturation>

          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
          /* Set ADC selected offset right shift */
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	6818      	ldr	r0, [r3, #0]
 8002972:	683b      	ldr	r3, [r7, #0]
 8002974:	6919      	ldr	r1, [r3, #16]
 8002976:	683b      	ldr	r3, [r7, #0]
 8002978:	7e1b      	ldrb	r3, [r3, #24]
 800297a:	2b01      	cmp	r3, #1
 800297c:	d102      	bne.n	8002984 <HAL_ADC_ConfigChannel+0x238>
 800297e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002982:	e000      	b.n	8002986 <HAL_ADC_ConfigChannel+0x23a>
 8002984:	2300      	movs	r3, #0
 8002986:	461a      	mov	r2, r3
 8002988:	f7ff fb0e 	bl	8001fa8 <LL_ADC_SetDataRightShift>
 800298c:	e1ce      	b.n	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
      {
        /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
          If this is the case, offset OFRx is disabled since
          sConfig->OffsetNumber = ADC_OFFSET_NONE. */
#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	4a23      	ldr	r2, [pc, #140]	; (8002a20 <HAL_ADC_ConfigChannel+0x2d4>)
 8002994:	4293      	cmp	r3, r2
 8002996:	f040 8181 	bne.w	8002c9c <HAL_ADC_ConfigChannel+0x550>
        {
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	2100      	movs	r1, #0
 80029a0:	4618      	mov	r0, r3
 80029a2:	f7ff faeb 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 80029a6:	4603      	mov	r3, r0
 80029a8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d10a      	bne.n	80029c6 <HAL_ADC_ConfigChannel+0x27a>
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	2100      	movs	r1, #0
 80029b6:	4618      	mov	r0, r3
 80029b8:	f7ff fae0 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 80029bc:	4603      	mov	r3, r0
 80029be:	0e9b      	lsrs	r3, r3, #26
 80029c0:	f003 021f 	and.w	r2, r3, #31
 80029c4:	e01e      	b.n	8002a04 <HAL_ADC_ConfigChannel+0x2b8>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	2100      	movs	r1, #0
 80029cc:	4618      	mov	r0, r3
 80029ce:	f7ff fad5 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 80029d2:	4603      	mov	r3, r0
 80029d4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80029d8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 80029dc:	fa93 f3a3 	rbit	r3, r3
 80029e0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  return result;
 80029e4:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 80029e8:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  if (value == 0U)
 80029ec:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d101      	bne.n	80029f8 <HAL_ADC_ConfigChannel+0x2ac>
    return 32U;
 80029f4:	2320      	movs	r3, #32
 80029f6:	e004      	b.n	8002a02 <HAL_ADC_ConfigChannel+0x2b6>
  return __builtin_clz(value);
 80029f8:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 80029fc:	fab3 f383 	clz	r3, r3
 8002a00:	b2db      	uxtb	r3, r3
 8002a02:	461a      	mov	r2, r3
 8002a04:	683b      	ldr	r3, [r7, #0]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a0c:	2b00      	cmp	r3, #0
 8002a0e:	d10b      	bne.n	8002a28 <HAL_ADC_ConfigChannel+0x2dc>
 8002a10:	683b      	ldr	r3, [r7, #0]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	0e9b      	lsrs	r3, r3, #26
 8002a16:	f003 031f 	and.w	r3, r3, #31
 8002a1a:	e01e      	b.n	8002a5a <HAL_ADC_ConfigChannel+0x30e>
 8002a1c:	47ff0000 	.word	0x47ff0000
 8002a20:	58026000 	.word	0x58026000
 8002a24:	5c001000 	.word	0x5c001000
 8002a28:	683b      	ldr	r3, [r7, #0]
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a30:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002a34:	fa93 f3a3 	rbit	r3, r3
 8002a38:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  return result;
 8002a3c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002a40:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  if (value == 0U)
 8002a44:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d101      	bne.n	8002a50 <HAL_ADC_ConfigChannel+0x304>
    return 32U;
 8002a4c:	2320      	movs	r3, #32
 8002a4e:	e004      	b.n	8002a5a <HAL_ADC_ConfigChannel+0x30e>
  return __builtin_clz(value);
 8002a50:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002a54:	fab3 f383 	clz	r3, r3
 8002a58:	b2db      	uxtb	r3, r3
 8002a5a:	429a      	cmp	r2, r3
 8002a5c:	d106      	bne.n	8002a6c <HAL_ADC_ConfigChannel+0x320>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	2200      	movs	r2, #0
 8002a64:	2100      	movs	r1, #0
 8002a66:	4618      	mov	r0, r3
 8002a68:	f7ff fb1e 	bl	80020a8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	2101      	movs	r1, #1
 8002a72:	4618      	mov	r0, r3
 8002a74:	f7ff fa82 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002a78:	4603      	mov	r3, r0
 8002a7a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d10a      	bne.n	8002a98 <HAL_ADC_ConfigChannel+0x34c>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	2101      	movs	r1, #1
 8002a88:	4618      	mov	r0, r3
 8002a8a:	f7ff fa77 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002a8e:	4603      	mov	r3, r0
 8002a90:	0e9b      	lsrs	r3, r3, #26
 8002a92:	f003 021f 	and.w	r2, r3, #31
 8002a96:	e01e      	b.n	8002ad6 <HAL_ADC_ConfigChannel+0x38a>
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	2101      	movs	r1, #1
 8002a9e:	4618      	mov	r0, r3
 8002aa0:	f7ff fa6c 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002aa4:	4603      	mov	r3, r0
 8002aa6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002aaa:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8002aae:	fa93 f3a3 	rbit	r3, r3
 8002ab2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  return result;
 8002ab6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8002aba:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  if (value == 0U)
 8002abe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d101      	bne.n	8002aca <HAL_ADC_ConfigChannel+0x37e>
    return 32U;
 8002ac6:	2320      	movs	r3, #32
 8002ac8:	e004      	b.n	8002ad4 <HAL_ADC_ConfigChannel+0x388>
  return __builtin_clz(value);
 8002aca:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002ace:	fab3 f383 	clz	r3, r3
 8002ad2:	b2db      	uxtb	r3, r3
 8002ad4:	461a      	mov	r2, r3
 8002ad6:	683b      	ldr	r3, [r7, #0]
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d105      	bne.n	8002aee <HAL_ADC_ConfigChannel+0x3a2>
 8002ae2:	683b      	ldr	r3, [r7, #0]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	0e9b      	lsrs	r3, r3, #26
 8002ae8:	f003 031f 	and.w	r3, r3, #31
 8002aec:	e018      	b.n	8002b20 <HAL_ADC_ConfigChannel+0x3d4>
 8002aee:	683b      	ldr	r3, [r7, #0]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002af6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002afa:	fa93 f3a3 	rbit	r3, r3
 8002afe:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  return result;
 8002b02:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002b06:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  if (value == 0U)
 8002b0a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d101      	bne.n	8002b16 <HAL_ADC_ConfigChannel+0x3ca>
    return 32U;
 8002b12:	2320      	movs	r3, #32
 8002b14:	e004      	b.n	8002b20 <HAL_ADC_ConfigChannel+0x3d4>
  return __builtin_clz(value);
 8002b16:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8002b1a:	fab3 f383 	clz	r3, r3
 8002b1e:	b2db      	uxtb	r3, r3
 8002b20:	429a      	cmp	r2, r3
 8002b22:	d106      	bne.n	8002b32 <HAL_ADC_ConfigChannel+0x3e6>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	2200      	movs	r2, #0
 8002b2a:	2101      	movs	r1, #1
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	f7ff fabb 	bl	80020a8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	2102      	movs	r1, #2
 8002b38:	4618      	mov	r0, r3
 8002b3a:	f7ff fa1f 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002b3e:	4603      	mov	r3, r0
 8002b40:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	d10a      	bne.n	8002b5e <HAL_ADC_ConfigChannel+0x412>
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	2102      	movs	r1, #2
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f7ff fa14 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002b54:	4603      	mov	r3, r0
 8002b56:	0e9b      	lsrs	r3, r3, #26
 8002b58:	f003 021f 	and.w	r2, r3, #31
 8002b5c:	e01e      	b.n	8002b9c <HAL_ADC_ConfigChannel+0x450>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	2102      	movs	r1, #2
 8002b64:	4618      	mov	r0, r3
 8002b66:	f7ff fa09 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002b6a:	4603      	mov	r3, r0
 8002b6c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b70:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8002b74:	fa93 f3a3 	rbit	r3, r3
 8002b78:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  return result;
 8002b7c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002b80:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  if (value == 0U)
 8002b84:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d101      	bne.n	8002b90 <HAL_ADC_ConfigChannel+0x444>
    return 32U;
 8002b8c:	2320      	movs	r3, #32
 8002b8e:	e004      	b.n	8002b9a <HAL_ADC_ConfigChannel+0x44e>
  return __builtin_clz(value);
 8002b90:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002b94:	fab3 f383 	clz	r3, r3
 8002b98:	b2db      	uxtb	r3, r3
 8002b9a:	461a      	mov	r2, r3
 8002b9c:	683b      	ldr	r3, [r7, #0]
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d105      	bne.n	8002bb4 <HAL_ADC_ConfigChannel+0x468>
 8002ba8:	683b      	ldr	r3, [r7, #0]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	0e9b      	lsrs	r3, r3, #26
 8002bae:	f003 031f 	and.w	r3, r3, #31
 8002bb2:	e014      	b.n	8002bde <HAL_ADC_ConfigChannel+0x492>
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bba:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002bbc:	fa93 f3a3 	rbit	r3, r3
 8002bc0:	67bb      	str	r3, [r7, #120]	; 0x78
  return result;
 8002bc2:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002bc4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  if (value == 0U)
 8002bc8:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d101      	bne.n	8002bd4 <HAL_ADC_ConfigChannel+0x488>
    return 32U;
 8002bd0:	2320      	movs	r3, #32
 8002bd2:	e004      	b.n	8002bde <HAL_ADC_ConfigChannel+0x492>
  return __builtin_clz(value);
 8002bd4:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002bd8:	fab3 f383 	clz	r3, r3
 8002bdc:	b2db      	uxtb	r3, r3
 8002bde:	429a      	cmp	r2, r3
 8002be0:	d106      	bne.n	8002bf0 <HAL_ADC_ConfigChannel+0x4a4>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	2200      	movs	r2, #0
 8002be8:	2102      	movs	r1, #2
 8002bea:	4618      	mov	r0, r3
 8002bec:	f7ff fa5c 	bl	80020a8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	2103      	movs	r1, #3
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	f7ff f9c0 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002bfc:	4603      	mov	r3, r0
 8002bfe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d10a      	bne.n	8002c1c <HAL_ADC_ConfigChannel+0x4d0>
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	2103      	movs	r1, #3
 8002c0c:	4618      	mov	r0, r3
 8002c0e:	f7ff f9b5 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002c12:	4603      	mov	r3, r0
 8002c14:	0e9b      	lsrs	r3, r3, #26
 8002c16:	f003 021f 	and.w	r2, r3, #31
 8002c1a:	e017      	b.n	8002c4c <HAL_ADC_ConfigChannel+0x500>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	2103      	movs	r1, #3
 8002c22:	4618      	mov	r0, r3
 8002c24:	f7ff f9aa 	bl	8001f7c <LL_ADC_GetOffsetChannel>
 8002c28:	4603      	mov	r3, r0
 8002c2a:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c2c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002c2e:	fa93 f3a3 	rbit	r3, r3
 8002c32:	66fb      	str	r3, [r7, #108]	; 0x6c
  return result;
 8002c34:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002c36:	677b      	str	r3, [r7, #116]	; 0x74
  if (value == 0U)
 8002c38:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d101      	bne.n	8002c42 <HAL_ADC_ConfigChannel+0x4f6>
    return 32U;
 8002c3e:	2320      	movs	r3, #32
 8002c40:	e003      	b.n	8002c4a <HAL_ADC_ConfigChannel+0x4fe>
  return __builtin_clz(value);
 8002c42:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002c44:	fab3 f383 	clz	r3, r3
 8002c48:	b2db      	uxtb	r3, r3
 8002c4a:	461a      	mov	r2, r3
 8002c4c:	683b      	ldr	r3, [r7, #0]
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d105      	bne.n	8002c64 <HAL_ADC_ConfigChannel+0x518>
 8002c58:	683b      	ldr	r3, [r7, #0]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	0e9b      	lsrs	r3, r3, #26
 8002c5e:	f003 031f 	and.w	r3, r3, #31
 8002c62:	e011      	b.n	8002c88 <HAL_ADC_ConfigChannel+0x53c>
 8002c64:	683b      	ldr	r3, [r7, #0]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c6a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002c6c:	fa93 f3a3 	rbit	r3, r3
 8002c70:	663b      	str	r3, [r7, #96]	; 0x60
  return result;
 8002c72:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002c74:	66bb      	str	r3, [r7, #104]	; 0x68
  if (value == 0U)
 8002c76:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d101      	bne.n	8002c80 <HAL_ADC_ConfigChannel+0x534>
    return 32U;
 8002c7c:	2320      	movs	r3, #32
 8002c7e:	e003      	b.n	8002c88 <HAL_ADC_ConfigChannel+0x53c>
  return __builtin_clz(value);
 8002c80:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002c82:	fab3 f383 	clz	r3, r3
 8002c86:	b2db      	uxtb	r3, r3
 8002c88:	429a      	cmp	r2, r3
 8002c8a:	d14f      	bne.n	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	2200      	movs	r2, #0
 8002c92:	2103      	movs	r1, #3
 8002c94:	4618      	mov	r0, r3
 8002c96:	f7ff fa07 	bl	80020a8 <LL_ADC_SetOffsetState>
 8002c9a:	e047      	b.n	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
          }
        }
        else
#endif /* ADC_VER_V5_V90 */
        {
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002ca2:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002ca6:	683b      	ldr	r3, [r7, #0]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	069b      	lsls	r3, r3, #26
 8002cac:	429a      	cmp	r2, r3
 8002cae:	d107      	bne.n	8002cc0 <HAL_ADC_ConfigChannel+0x574>
          {
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002cbe:	661a      	str	r2, [r3, #96]	; 0x60
          }
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002cc6:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002cca:	683b      	ldr	r3, [r7, #0]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	069b      	lsls	r3, r3, #26
 8002cd0:	429a      	cmp	r2, r3
 8002cd2:	d107      	bne.n	8002ce4 <HAL_ADC_ConfigChannel+0x598>
          {
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002ce2:	665a      	str	r2, [r3, #100]	; 0x64
          }
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8002cea:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002cee:	683b      	ldr	r3, [r7, #0]
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	069b      	lsls	r3, r3, #26
 8002cf4:	429a      	cmp	r2, r3
 8002cf6:	d107      	bne.n	8002d08 <HAL_ADC_ConfigChannel+0x5bc>
          {
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002d06:	669a      	str	r2, [r3, #104]	; 0x68
          }
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8002d0e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002d12:	683b      	ldr	r3, [r7, #0]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	069b      	lsls	r3, r3, #26
 8002d18:	429a      	cmp	r2, r3
 8002d1a:	d107      	bne.n	8002d2c <HAL_ADC_ConfigChannel+0x5e0>
          {
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002d2a:	66da      	str	r2, [r3, #108]	; 0x6c

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	4618      	mov	r0, r3
 8002d32:	f7ff fac9 	bl	80022c8 <LL_ADC_IsEnabled>
 8002d36:	4603      	mov	r3, r0
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	f040 8219 	bne.w	8003170 <HAL_ADC_ConfigChannel+0xa24>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	6818      	ldr	r0, [r3, #0]
 8002d42:	683b      	ldr	r3, [r7, #0]
 8002d44:	6819      	ldr	r1, [r3, #0]
 8002d46:	683b      	ldr	r3, [r7, #0]
 8002d48:	68db      	ldr	r3, [r3, #12]
 8002d4a:	461a      	mov	r2, r3
 8002d4c:	f7ff fa2e 	bl	80021ac <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 8002d50:	683b      	ldr	r3, [r7, #0]
 8002d52:	68db      	ldr	r3, [r3, #12]
 8002d54:	4aa1      	ldr	r2, [pc, #644]	; (8002fdc <HAL_ADC_ConfigChannel+0x890>)
 8002d56:	4293      	cmp	r3, r2
 8002d58:	f040 812e 	bne.w	8002fb8 <HAL_ADC_ConfigChannel+0x86c>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002d60:	683b      	ldr	r3, [r7, #0]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d10b      	bne.n	8002d84 <HAL_ADC_ConfigChannel+0x638>
 8002d6c:	683b      	ldr	r3, [r7, #0]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	0e9b      	lsrs	r3, r3, #26
 8002d72:	3301      	adds	r3, #1
 8002d74:	f003 031f 	and.w	r3, r3, #31
 8002d78:	2b09      	cmp	r3, #9
 8002d7a:	bf94      	ite	ls
 8002d7c:	2301      	movls	r3, #1
 8002d7e:	2300      	movhi	r3, #0
 8002d80:	b2db      	uxtb	r3, r3
 8002d82:	e019      	b.n	8002db8 <HAL_ADC_ConfigChannel+0x66c>
 8002d84:	683b      	ldr	r3, [r7, #0]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	65bb      	str	r3, [r7, #88]	; 0x58
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002d8a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002d8c:	fa93 f3a3 	rbit	r3, r3
 8002d90:	657b      	str	r3, [r7, #84]	; 0x54
  return result;
 8002d92:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002d94:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (value == 0U)
 8002d96:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d101      	bne.n	8002da0 <HAL_ADC_ConfigChannel+0x654>
    return 32U;
 8002d9c:	2320      	movs	r3, #32
 8002d9e:	e003      	b.n	8002da8 <HAL_ADC_ConfigChannel+0x65c>
  return __builtin_clz(value);
 8002da0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002da2:	fab3 f383 	clz	r3, r3
 8002da6:	b2db      	uxtb	r3, r3
 8002da8:	3301      	adds	r3, #1
 8002daa:	f003 031f 	and.w	r3, r3, #31
 8002dae:	2b09      	cmp	r3, #9
 8002db0:	bf94      	ite	ls
 8002db2:	2301      	movls	r3, #1
 8002db4:	2300      	movhi	r3, #0
 8002db6:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d079      	beq.n	8002eb0 <HAL_ADC_ConfigChannel+0x764>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002dbc:	683b      	ldr	r3, [r7, #0]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d107      	bne.n	8002dd8 <HAL_ADC_ConfigChannel+0x68c>
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	0e9b      	lsrs	r3, r3, #26
 8002dce:	3301      	adds	r3, #1
 8002dd0:	069b      	lsls	r3, r3, #26
 8002dd2:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002dd6:	e015      	b.n	8002e04 <HAL_ADC_ConfigChannel+0x6b8>
 8002dd8:	683b      	ldr	r3, [r7, #0]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002dde:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002de0:	fa93 f3a3 	rbit	r3, r3
 8002de4:	64bb      	str	r3, [r7, #72]	; 0x48
  return result;
 8002de6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002de8:	653b      	str	r3, [r7, #80]	; 0x50
  if (value == 0U)
 8002dea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d101      	bne.n	8002df4 <HAL_ADC_ConfigChannel+0x6a8>
    return 32U;
 8002df0:	2320      	movs	r3, #32
 8002df2:	e003      	b.n	8002dfc <HAL_ADC_ConfigChannel+0x6b0>
  return __builtin_clz(value);
 8002df4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002df6:	fab3 f383 	clz	r3, r3
 8002dfa:	b2db      	uxtb	r3, r3
 8002dfc:	3301      	adds	r3, #1
 8002dfe:	069b      	lsls	r3, r3, #26
 8002e00:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002e04:	683b      	ldr	r3, [r7, #0]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d109      	bne.n	8002e24 <HAL_ADC_ConfigChannel+0x6d8>
 8002e10:	683b      	ldr	r3, [r7, #0]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	0e9b      	lsrs	r3, r3, #26
 8002e16:	3301      	adds	r3, #1
 8002e18:	f003 031f 	and.w	r3, r3, #31
 8002e1c:	2101      	movs	r1, #1
 8002e1e:	fa01 f303 	lsl.w	r3, r1, r3
 8002e22:	e017      	b.n	8002e54 <HAL_ADC_ConfigChannel+0x708>
 8002e24:	683b      	ldr	r3, [r7, #0]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002e2a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002e2c:	fa93 f3a3 	rbit	r3, r3
 8002e30:	63fb      	str	r3, [r7, #60]	; 0x3c
  return result;
 8002e32:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002e34:	647b      	str	r3, [r7, #68]	; 0x44
  if (value == 0U)
 8002e36:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d101      	bne.n	8002e40 <HAL_ADC_ConfigChannel+0x6f4>
    return 32U;
 8002e3c:	2320      	movs	r3, #32
 8002e3e:	e003      	b.n	8002e48 <HAL_ADC_ConfigChannel+0x6fc>
  return __builtin_clz(value);
 8002e40:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e42:	fab3 f383 	clz	r3, r3
 8002e46:	b2db      	uxtb	r3, r3
 8002e48:	3301      	adds	r3, #1
 8002e4a:	f003 031f 	and.w	r3, r3, #31
 8002e4e:	2101      	movs	r1, #1
 8002e50:	fa01 f303 	lsl.w	r3, r1, r3
 8002e54:	ea42 0103 	orr.w	r1, r2, r3
 8002e58:	683b      	ldr	r3, [r7, #0]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d10a      	bne.n	8002e7a <HAL_ADC_ConfigChannel+0x72e>
 8002e64:	683b      	ldr	r3, [r7, #0]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	0e9b      	lsrs	r3, r3, #26
 8002e6a:	3301      	adds	r3, #1
 8002e6c:	f003 021f 	and.w	r2, r3, #31
 8002e70:	4613      	mov	r3, r2
 8002e72:	005b      	lsls	r3, r3, #1
 8002e74:	4413      	add	r3, r2
 8002e76:	051b      	lsls	r3, r3, #20
 8002e78:	e018      	b.n	8002eac <HAL_ADC_ConfigChannel+0x760>
 8002e7a:	683b      	ldr	r3, [r7, #0]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002e80:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e82:	fa93 f3a3 	rbit	r3, r3
 8002e86:	633b      	str	r3, [r7, #48]	; 0x30
  return result;
 8002e88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e8a:	63bb      	str	r3, [r7, #56]	; 0x38
  if (value == 0U)
 8002e8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d101      	bne.n	8002e96 <HAL_ADC_ConfigChannel+0x74a>
    return 32U;
 8002e92:	2320      	movs	r3, #32
 8002e94:	e003      	b.n	8002e9e <HAL_ADC_ConfigChannel+0x752>
  return __builtin_clz(value);
 8002e96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002e98:	fab3 f383 	clz	r3, r3
 8002e9c:	b2db      	uxtb	r3, r3
 8002e9e:	3301      	adds	r3, #1
 8002ea0:	f003 021f 	and.w	r2, r3, #31
 8002ea4:	4613      	mov	r3, r2
 8002ea6:	005b      	lsls	r3, r3, #1
 8002ea8:	4413      	add	r3, r2
 8002eaa:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002eac:	430b      	orrs	r3, r1
 8002eae:	e07e      	b.n	8002fae <HAL_ADC_ConfigChannel+0x862>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d107      	bne.n	8002ecc <HAL_ADC_ConfigChannel+0x780>
 8002ebc:	683b      	ldr	r3, [r7, #0]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	0e9b      	lsrs	r3, r3, #26
 8002ec2:	3301      	adds	r3, #1
 8002ec4:	069b      	lsls	r3, r3, #26
 8002ec6:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002eca:	e015      	b.n	8002ef8 <HAL_ADC_ConfigChannel+0x7ac>
 8002ecc:	683b      	ldr	r3, [r7, #0]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002ed2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ed4:	fa93 f3a3 	rbit	r3, r3
 8002ed8:	627b      	str	r3, [r7, #36]	; 0x24
  return result;
 8002eda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002edc:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (value == 0U)
 8002ede:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	d101      	bne.n	8002ee8 <HAL_ADC_ConfigChannel+0x79c>
    return 32U;
 8002ee4:	2320      	movs	r3, #32
 8002ee6:	e003      	b.n	8002ef0 <HAL_ADC_ConfigChannel+0x7a4>
  return __builtin_clz(value);
 8002ee8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002eea:	fab3 f383 	clz	r3, r3
 8002eee:	b2db      	uxtb	r3, r3
 8002ef0:	3301      	adds	r3, #1
 8002ef2:	069b      	lsls	r3, r3, #26
 8002ef4:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002ef8:	683b      	ldr	r3, [r7, #0]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d109      	bne.n	8002f18 <HAL_ADC_ConfigChannel+0x7cc>
 8002f04:	683b      	ldr	r3, [r7, #0]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	0e9b      	lsrs	r3, r3, #26
 8002f0a:	3301      	adds	r3, #1
 8002f0c:	f003 031f 	and.w	r3, r3, #31
 8002f10:	2101      	movs	r1, #1
 8002f12:	fa01 f303 	lsl.w	r3, r1, r3
 8002f16:	e017      	b.n	8002f48 <HAL_ADC_ConfigChannel+0x7fc>
 8002f18:	683b      	ldr	r3, [r7, #0]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002f1e:	69fb      	ldr	r3, [r7, #28]
 8002f20:	fa93 f3a3 	rbit	r3, r3
 8002f24:	61bb      	str	r3, [r7, #24]
  return result;
 8002f26:	69bb      	ldr	r3, [r7, #24]
 8002f28:	623b      	str	r3, [r7, #32]
  if (value == 0U)
 8002f2a:	6a3b      	ldr	r3, [r7, #32]
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d101      	bne.n	8002f34 <HAL_ADC_ConfigChannel+0x7e8>
    return 32U;
 8002f30:	2320      	movs	r3, #32
 8002f32:	e003      	b.n	8002f3c <HAL_ADC_ConfigChannel+0x7f0>
  return __builtin_clz(value);
 8002f34:	6a3b      	ldr	r3, [r7, #32]
 8002f36:	fab3 f383 	clz	r3, r3
 8002f3a:	b2db      	uxtb	r3, r3
 8002f3c:	3301      	adds	r3, #1
 8002f3e:	f003 031f 	and.w	r3, r3, #31
 8002f42:	2101      	movs	r1, #1
 8002f44:	fa01 f303 	lsl.w	r3, r1, r3
 8002f48:	ea42 0103 	orr.w	r1, r2, r3
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d10d      	bne.n	8002f74 <HAL_ADC_ConfigChannel+0x828>
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	0e9b      	lsrs	r3, r3, #26
 8002f5e:	3301      	adds	r3, #1
 8002f60:	f003 021f 	and.w	r2, r3, #31
 8002f64:	4613      	mov	r3, r2
 8002f66:	005b      	lsls	r3, r3, #1
 8002f68:	4413      	add	r3, r2
 8002f6a:	3b1e      	subs	r3, #30
 8002f6c:	051b      	lsls	r3, r3, #20
 8002f6e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002f72:	e01b      	b.n	8002fac <HAL_ADC_ConfigChannel+0x860>
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002f7a:	693b      	ldr	r3, [r7, #16]
 8002f7c:	fa93 f3a3 	rbit	r3, r3
 8002f80:	60fb      	str	r3, [r7, #12]
  return result;
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 8002f86:	697b      	ldr	r3, [r7, #20]
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d101      	bne.n	8002f90 <HAL_ADC_ConfigChannel+0x844>
    return 32U;
 8002f8c:	2320      	movs	r3, #32
 8002f8e:	e003      	b.n	8002f98 <HAL_ADC_ConfigChannel+0x84c>
  return __builtin_clz(value);
 8002f90:	697b      	ldr	r3, [r7, #20]
 8002f92:	fab3 f383 	clz	r3, r3
 8002f96:	b2db      	uxtb	r3, r3
 8002f98:	3301      	adds	r3, #1
 8002f9a:	f003 021f 	and.w	r2, r3, #31
 8002f9e:	4613      	mov	r3, r2
 8002fa0:	005b      	lsls	r3, r3, #1
 8002fa2:	4413      	add	r3, r2
 8002fa4:	3b1e      	subs	r3, #30
 8002fa6:	051b      	lsls	r3, r3, #20
 8002fa8:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002fac:	430b      	orrs	r3, r1
 8002fae:	683a      	ldr	r2, [r7, #0]
 8002fb0:	6892      	ldr	r2, [r2, #8]
 8002fb2:	4619      	mov	r1, r3
 8002fb4:	f7ff f8ce 	bl	8002154 <LL_ADC_SetChannelSamplingTime>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	f280 80d7 	bge.w	8003170 <HAL_ADC_ConfigChannel+0xa24>
      {
        /* Configuration of common ADC parameters                                 */

        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	4a06      	ldr	r2, [pc, #24]	; (8002fe0 <HAL_ADC_ConfigChannel+0x894>)
 8002fc8:	4293      	cmp	r3, r2
 8002fca:	d004      	beq.n	8002fd6 <HAL_ADC_ConfigChannel+0x88a>
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	4a04      	ldr	r2, [pc, #16]	; (8002fe4 <HAL_ADC_ConfigChannel+0x898>)
 8002fd2:	4293      	cmp	r3, r2
 8002fd4:	d10a      	bne.n	8002fec <HAL_ADC_ConfigChannel+0x8a0>
 8002fd6:	4b04      	ldr	r3, [pc, #16]	; (8002fe8 <HAL_ADC_ConfigChannel+0x89c>)
 8002fd8:	e009      	b.n	8002fee <HAL_ADC_ConfigChannel+0x8a2>
 8002fda:	bf00      	nop
 8002fdc:	47ff0000 	.word	0x47ff0000
 8002fe0:	40022000 	.word	0x40022000
 8002fe4:	40022100 	.word	0x40022100
 8002fe8:	40022300 	.word	0x40022300
 8002fec:	4b65      	ldr	r3, [pc, #404]	; (8003184 <HAL_ADC_ConfigChannel+0xa38>)
 8002fee:	4618      	mov	r0, r3
 8002ff0:	f7fe ff84 	bl	8001efc <LL_ADC_GetCommonPathInternalCh>
 8002ff4:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

        /* Software is allowed to change common parameters only when all ADCs   */
        /* of the common group are disabled.                                    */
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	4a62      	ldr	r2, [pc, #392]	; (8003188 <HAL_ADC_ConfigChannel+0xa3c>)
 8002ffe:	4293      	cmp	r3, r2
 8003000:	d004      	beq.n	800300c <HAL_ADC_ConfigChannel+0x8c0>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	4a61      	ldr	r2, [pc, #388]	; (800318c <HAL_ADC_ConfigChannel+0xa40>)
 8003008:	4293      	cmp	r3, r2
 800300a:	d10e      	bne.n	800302a <HAL_ADC_ConfigChannel+0x8de>
 800300c:	485e      	ldr	r0, [pc, #376]	; (8003188 <HAL_ADC_ConfigChannel+0xa3c>)
 800300e:	f7ff f95b 	bl	80022c8 <LL_ADC_IsEnabled>
 8003012:	4604      	mov	r4, r0
 8003014:	485d      	ldr	r0, [pc, #372]	; (800318c <HAL_ADC_ConfigChannel+0xa40>)
 8003016:	f7ff f957 	bl	80022c8 <LL_ADC_IsEnabled>
 800301a:	4603      	mov	r3, r0
 800301c:	4323      	orrs	r3, r4
 800301e:	2b00      	cmp	r3, #0
 8003020:	bf0c      	ite	eq
 8003022:	2301      	moveq	r3, #1
 8003024:	2300      	movne	r3, #0
 8003026:	b2db      	uxtb	r3, r3
 8003028:	e008      	b.n	800303c <HAL_ADC_ConfigChannel+0x8f0>
 800302a:	4859      	ldr	r0, [pc, #356]	; (8003190 <HAL_ADC_ConfigChannel+0xa44>)
 800302c:	f7ff f94c 	bl	80022c8 <LL_ADC_IsEnabled>
 8003030:	4603      	mov	r3, r0
 8003032:	2b00      	cmp	r3, #0
 8003034:	bf0c      	ite	eq
 8003036:	2301      	moveq	r3, #1
 8003038:	2300      	movne	r3, #0
 800303a:	b2db      	uxtb	r3, r3
 800303c:	2b00      	cmp	r3, #0
 800303e:	f000 8084 	beq.w	800314a <HAL_ADC_ConfigChannel+0x9fe>
        {
          /* If the requested internal measurement path has already been enabled, */
          /* bypass the configuration processing.                                 */
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4a53      	ldr	r2, [pc, #332]	; (8003194 <HAL_ADC_ConfigChannel+0xa48>)
 8003048:	4293      	cmp	r3, r2
 800304a:	d132      	bne.n	80030b2 <HAL_ADC_ConfigChannel+0x966>
 800304c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8003050:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003054:	2b00      	cmp	r3, #0
 8003056:	d12c      	bne.n	80030b2 <HAL_ADC_ConfigChannel+0x966>
          {
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	4a4c      	ldr	r2, [pc, #304]	; (8003190 <HAL_ADC_ConfigChannel+0xa44>)
 800305e:	4293      	cmp	r3, r2
 8003060:	f040 8086 	bne.w	8003170 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channel);
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	4a47      	ldr	r2, [pc, #284]	; (8003188 <HAL_ADC_ConfigChannel+0xa3c>)
 800306a:	4293      	cmp	r3, r2
 800306c:	d004      	beq.n	8003078 <HAL_ADC_ConfigChannel+0x92c>
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	4a46      	ldr	r2, [pc, #280]	; (800318c <HAL_ADC_ConfigChannel+0xa40>)
 8003074:	4293      	cmp	r3, r2
 8003076:	d101      	bne.n	800307c <HAL_ADC_ConfigChannel+0x930>
 8003078:	4a47      	ldr	r2, [pc, #284]	; (8003198 <HAL_ADC_ConfigChannel+0xa4c>)
 800307a:	e000      	b.n	800307e <HAL_ADC_ConfigChannel+0x932>
 800307c:	4a41      	ldr	r2, [pc, #260]	; (8003184 <HAL_ADC_ConfigChannel+0xa38>)
 800307e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8003082:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003086:	4619      	mov	r1, r3
 8003088:	4610      	mov	r0, r2
 800308a:	f7fe ff24 	bl	8001ed6 <LL_ADC_SetCommonPathInternalCh>
              /* Delay for temperature sensor stabilization time */
              /* Wait loop initialization and execution */
              /* Note: Variable divided by 2 to compensate partially              */
              /*       CPU processing cycles, scaling in us split to not          */
              /*       exceed 32 bits register capacity and handle low frequency. */
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 800308e:	4b43      	ldr	r3, [pc, #268]	; (800319c <HAL_ADC_ConfigChannel+0xa50>)
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	099b      	lsrs	r3, r3, #6
 8003094:	4a42      	ldr	r2, [pc, #264]	; (80031a0 <HAL_ADC_ConfigChannel+0xa54>)
 8003096:	fba2 2303 	umull	r2, r3, r2, r3
 800309a:	099b      	lsrs	r3, r3, #6
 800309c:	3301      	adds	r3, #1
 800309e:	005b      	lsls	r3, r3, #1
 80030a0:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 80030a2:	e002      	b.n	80030aa <HAL_ADC_ConfigChannel+0x95e>
              {
                wait_loop_index--;
 80030a4:	68bb      	ldr	r3, [r7, #8]
 80030a6:	3b01      	subs	r3, #1
 80030a8:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 80030aa:	68bb      	ldr	r3, [r7, #8]
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d1f9      	bne.n	80030a4 <HAL_ADC_ConfigChannel+0x958>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 80030b0:	e05e      	b.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
              }
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 80030b2:	683b      	ldr	r3, [r7, #0]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4a3b      	ldr	r2, [pc, #236]	; (80031a4 <HAL_ADC_ConfigChannel+0xa58>)
 80030b8:	4293      	cmp	r3, r2
 80030ba:	d120      	bne.n	80030fe <HAL_ADC_ConfigChannel+0x9b2>
 80030bc:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80030c0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	d11a      	bne.n	80030fe <HAL_ADC_ConfigChannel+0x9b2>
          {
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	4a30      	ldr	r2, [pc, #192]	; (8003190 <HAL_ADC_ConfigChannel+0xa44>)
 80030ce:	4293      	cmp	r3, r2
 80030d0:	d14e      	bne.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	4a2c      	ldr	r2, [pc, #176]	; (8003188 <HAL_ADC_ConfigChannel+0xa3c>)
 80030d8:	4293      	cmp	r3, r2
 80030da:	d004      	beq.n	80030e6 <HAL_ADC_ConfigChannel+0x99a>
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	4a2a      	ldr	r2, [pc, #168]	; (800318c <HAL_ADC_ConfigChannel+0xa40>)
 80030e2:	4293      	cmp	r3, r2
 80030e4:	d101      	bne.n	80030ea <HAL_ADC_ConfigChannel+0x99e>
 80030e6:	4a2c      	ldr	r2, [pc, #176]	; (8003198 <HAL_ADC_ConfigChannel+0xa4c>)
 80030e8:	e000      	b.n	80030ec <HAL_ADC_ConfigChannel+0x9a0>
 80030ea:	4a26      	ldr	r2, [pc, #152]	; (8003184 <HAL_ADC_ConfigChannel+0xa38>)
 80030ec:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80030f0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80030f4:	4619      	mov	r1, r3
 80030f6:	4610      	mov	r0, r2
 80030f8:	f7fe feed 	bl	8001ed6 <LL_ADC_SetCommonPathInternalCh>
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 80030fc:	e038      	b.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 80030fe:	683b      	ldr	r3, [r7, #0]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	4a29      	ldr	r2, [pc, #164]	; (80031a8 <HAL_ADC_ConfigChannel+0xa5c>)
 8003104:	4293      	cmp	r3, r2
 8003106:	d133      	bne.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
 8003108:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800310c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003110:	2b00      	cmp	r3, #0
 8003112:	d12d      	bne.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
          {
            if (ADC_VREFINT_INSTANCE(hadc))
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	4a1d      	ldr	r2, [pc, #116]	; (8003190 <HAL_ADC_ConfigChannel+0xa44>)
 800311a:	4293      	cmp	r3, r2
 800311c:	d128      	bne.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	4a19      	ldr	r2, [pc, #100]	; (8003188 <HAL_ADC_ConfigChannel+0xa3c>)
 8003124:	4293      	cmp	r3, r2
 8003126:	d004      	beq.n	8003132 <HAL_ADC_ConfigChannel+0x9e6>
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	4a17      	ldr	r2, [pc, #92]	; (800318c <HAL_ADC_ConfigChannel+0xa40>)
 800312e:	4293      	cmp	r3, r2
 8003130:	d101      	bne.n	8003136 <HAL_ADC_ConfigChannel+0x9ea>
 8003132:	4a19      	ldr	r2, [pc, #100]	; (8003198 <HAL_ADC_ConfigChannel+0xa4c>)
 8003134:	e000      	b.n	8003138 <HAL_ADC_ConfigChannel+0x9ec>
 8003136:	4a13      	ldr	r2, [pc, #76]	; (8003184 <HAL_ADC_ConfigChannel+0xa38>)
 8003138:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800313c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003140:	4619      	mov	r1, r3
 8003142:	4610      	mov	r0, r2
 8003144:	f7fe fec7 	bl	8001ed6 <LL_ADC_SetCommonPathInternalCh>
 8003148:	e012      	b.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800314e:	f043 0220 	orr.w	r2, r3, #32
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	661a      	str	r2, [r3, #96]	; 0x60

          tmp_hal_status = HAL_ERROR;
 8003156:	2301      	movs	r3, #1
 8003158:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800315c:	e008      	b.n	8003170 <HAL_ADC_ConfigChannel+0xa24>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003162:	f043 0220 	orr.w	r2, r3, #32
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 800316a:	2301      	movs	r3, #1
 800316c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	2200      	movs	r2, #0
 8003174:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8003178:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
}
 800317c:	4618      	mov	r0, r3
 800317e:	37e4      	adds	r7, #228	; 0xe4
 8003180:	46bd      	mov	sp, r7
 8003182:	bd90      	pop	{r4, r7, pc}
 8003184:	58026300 	.word	0x58026300
 8003188:	40022000 	.word	0x40022000
 800318c:	40022100 	.word	0x40022100
 8003190:	58026000 	.word	0x58026000
 8003194:	c7520000 	.word	0xc7520000
 8003198:	40022300 	.word	0x40022300
 800319c:	24000004 	.word	0x24000004
 80031a0:	053e2d63 	.word	0x053e2d63
 80031a4:	c3210000 	.word	0xc3210000
 80031a8:	cb840000 	.word	0xcb840000

080031ac <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
 80031ac:	b580      	push	{r7, lr}
 80031ae:	b084      	sub	sp, #16
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	6078      	str	r0, [r7, #4]
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	4a6c      	ldr	r2, [pc, #432]	; (800336c <ADC_ConfigureBoostMode+0x1c0>)
 80031ba:	4293      	cmp	r3, r2
 80031bc:	d004      	beq.n	80031c8 <ADC_ConfigureBoostMode+0x1c>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	4a6b      	ldr	r2, [pc, #428]	; (8003370 <ADC_ConfigureBoostMode+0x1c4>)
 80031c4:	4293      	cmp	r3, r2
 80031c6:	d109      	bne.n	80031dc <ADC_ConfigureBoostMode+0x30>
 80031c8:	4b6a      	ldr	r3, [pc, #424]	; (8003374 <ADC_ConfigureBoostMode+0x1c8>)
 80031ca:	689b      	ldr	r3, [r3, #8]
 80031cc:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	bf14      	ite	ne
 80031d4:	2301      	movne	r3, #1
 80031d6:	2300      	moveq	r3, #0
 80031d8:	b2db      	uxtb	r3, r3
 80031da:	e008      	b.n	80031ee <ADC_ConfigureBoostMode+0x42>
 80031dc:	4b66      	ldr	r3, [pc, #408]	; (8003378 <ADC_ConfigureBoostMode+0x1cc>)
 80031de:	689b      	ldr	r3, [r3, #8]
 80031e0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80031e4:	2b00      	cmp	r3, #0
 80031e6:	bf14      	ite	ne
 80031e8:	2301      	movne	r3, #1
 80031ea:	2300      	moveq	r3, #0
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d01c      	beq.n	800322c <ADC_ConfigureBoostMode+0x80>
  {
    freq = HAL_RCC_GetHCLKFreq();
 80031f2:	f004 fec9 	bl	8007f88 <HAL_RCC_GetHCLKFreq>
 80031f6:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	685b      	ldr	r3, [r3, #4]
 80031fc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003200:	d010      	beq.n	8003224 <ADC_ConfigureBoostMode+0x78>
 8003202:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003206:	d873      	bhi.n	80032f0 <ADC_ConfigureBoostMode+0x144>
 8003208:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800320c:	d002      	beq.n	8003214 <ADC_ConfigureBoostMode+0x68>
 800320e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8003212:	d16d      	bne.n	80032f0 <ADC_ConfigureBoostMode+0x144>
    {
      case ADC_CLOCK_SYNC_PCLK_DIV1:
      case ADC_CLOCK_SYNC_PCLK_DIV2:
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	685b      	ldr	r3, [r3, #4]
 8003218:	0c1b      	lsrs	r3, r3, #16
 800321a:	68fa      	ldr	r2, [r7, #12]
 800321c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003220:	60fb      	str	r3, [r7, #12]
        break;
 8003222:	e068      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_SYNC_PCLK_DIV4:
        freq /= 4UL;
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	089b      	lsrs	r3, r3, #2
 8003228:	60fb      	str	r3, [r7, #12]
        break;
 800322a:	e064      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
        break;
    }
  }
  else
  {
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
 800322c:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8003230:	f04f 0100 	mov.w	r1, #0
 8003234:	f006 f88e 	bl	8009354 <HAL_RCCEx_GetPeriphCLKFreq>
 8003238:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	685b      	ldr	r3, [r3, #4]
 800323e:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8003242:	d051      	beq.n	80032e8 <ADC_ConfigureBoostMode+0x13c>
 8003244:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8003248:	d854      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 800324a:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 800324e:	d047      	beq.n	80032e0 <ADC_ConfigureBoostMode+0x134>
 8003250:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8003254:	d84e      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 8003256:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 800325a:	d03d      	beq.n	80032d8 <ADC_ConfigureBoostMode+0x12c>
 800325c:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8003260:	d848      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 8003262:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8003266:	d033      	beq.n	80032d0 <ADC_ConfigureBoostMode+0x124>
 8003268:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800326c:	d842      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 800326e:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8003272:	d029      	beq.n	80032c8 <ADC_ConfigureBoostMode+0x11c>
 8003274:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8003278:	d83c      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 800327a:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 800327e:	d01a      	beq.n	80032b6 <ADC_ConfigureBoostMode+0x10a>
 8003280:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8003284:	d836      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 8003286:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 800328a:	d014      	beq.n	80032b6 <ADC_ConfigureBoostMode+0x10a>
 800328c:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8003290:	d830      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 8003292:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003296:	d00e      	beq.n	80032b6 <ADC_ConfigureBoostMode+0x10a>
 8003298:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800329c:	d82a      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 800329e:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 80032a2:	d008      	beq.n	80032b6 <ADC_ConfigureBoostMode+0x10a>
 80032a4:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 80032a8:	d824      	bhi.n	80032f4 <ADC_ConfigureBoostMode+0x148>
 80032aa:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80032ae:	d002      	beq.n	80032b6 <ADC_ConfigureBoostMode+0x10a>
 80032b0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80032b4:	d11e      	bne.n	80032f4 <ADC_ConfigureBoostMode+0x148>
      case ADC_CLOCK_ASYNC_DIV4:
      case ADC_CLOCK_ASYNC_DIV6:
      case ADC_CLOCK_ASYNC_DIV8:
      case ADC_CLOCK_ASYNC_DIV10:
      case ADC_CLOCK_ASYNC_DIV12:
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	685b      	ldr	r3, [r3, #4]
 80032ba:	0c9b      	lsrs	r3, r3, #18
 80032bc:	005b      	lsls	r3, r3, #1
 80032be:	68fa      	ldr	r2, [r7, #12]
 80032c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80032c4:	60fb      	str	r3, [r7, #12]
        break;
 80032c6:	e016      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV16:
        freq /= 16UL;
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	091b      	lsrs	r3, r3, #4
 80032cc:	60fb      	str	r3, [r7, #12]
        break;
 80032ce:	e012      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV32:
        freq /= 32UL;
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	095b      	lsrs	r3, r3, #5
 80032d4:	60fb      	str	r3, [r7, #12]
        break;
 80032d6:	e00e      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV64:
        freq /= 64UL;
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	099b      	lsrs	r3, r3, #6
 80032dc:	60fb      	str	r3, [r7, #12]
        break;
 80032de:	e00a      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV128:
        freq /= 128UL;
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	09db      	lsrs	r3, r3, #7
 80032e4:	60fb      	str	r3, [r7, #12]
        break;
 80032e6:	e006      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV256:
        freq /= 256UL;
 80032e8:	68fb      	ldr	r3, [r7, #12]
 80032ea:	0a1b      	lsrs	r3, r3, #8
 80032ec:	60fb      	str	r3, [r7, #12]
        break;
 80032ee:	e002      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
        break;
 80032f0:	bf00      	nop
 80032f2:	e000      	b.n	80032f6 <ADC_ConfigureBoostMode+0x14a>
      default:
        break;
 80032f4:	bf00      	nop
    }
  }

#if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
  freq /= 2U;
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	085b      	lsrs	r3, r3, #1
 80032fa:	60fb      	str	r3, [r7, #12]
  if (freq <= 6250000UL)
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	4a1f      	ldr	r2, [pc, #124]	; (800337c <ADC_ConfigureBoostMode+0x1d0>)
 8003300:	4293      	cmp	r3, r2
 8003302:	d808      	bhi.n	8003316 <ADC_ConfigureBoostMode+0x16a>
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	689a      	ldr	r2, [r3, #8]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8003312:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
 8003314:	e025      	b.n	8003362 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 12500000UL)
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	4a19      	ldr	r2, [pc, #100]	; (8003380 <ADC_ConfigureBoostMode+0x1d4>)
 800331a:	4293      	cmp	r3, r2
 800331c:	d80a      	bhi.n	8003334 <ADC_ConfigureBoostMode+0x188>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	689b      	ldr	r3, [r3, #8]
 8003324:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003330:	609a      	str	r2, [r3, #8]
}
 8003332:	e016      	b.n	8003362 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 25000000UL)
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	4a13      	ldr	r2, [pc, #76]	; (8003384 <ADC_ConfigureBoostMode+0x1d8>)
 8003338:	4293      	cmp	r3, r2
 800333a:	d80a      	bhi.n	8003352 <ADC_ConfigureBoostMode+0x1a6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	689b      	ldr	r3, [r3, #8]
 8003342:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800334e:	609a      	str	r2, [r3, #8]
}
 8003350:	e007      	b.n	8003362 <ADC_ConfigureBoostMode+0x1b6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	689a      	ldr	r2, [r3, #8]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8003360:	609a      	str	r2, [r3, #8]
}
 8003362:	bf00      	nop
 8003364:	3710      	adds	r7, #16
 8003366:	46bd      	mov	sp, r7
 8003368:	bd80      	pop	{r7, pc}
 800336a:	bf00      	nop
 800336c:	40022000 	.word	0x40022000
 8003370:	40022100 	.word	0x40022100
 8003374:	40022300 	.word	0x40022300
 8003378:	58026300 	.word	0x58026300
 800337c:	005f5e10 	.word	0x005f5e10
 8003380:	00bebc20 	.word	0x00bebc20
 8003384:	017d7840 	.word	0x017d7840

08003388 <LL_ADC_IsEnabled>:
{
 8003388:	b480      	push	{r7}
 800338a:	b083      	sub	sp, #12
 800338c:	af00      	add	r7, sp, #0
 800338e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	689b      	ldr	r3, [r3, #8]
 8003394:	f003 0301 	and.w	r3, r3, #1
 8003398:	2b01      	cmp	r3, #1
 800339a:	d101      	bne.n	80033a0 <LL_ADC_IsEnabled+0x18>
 800339c:	2301      	movs	r3, #1
 800339e:	e000      	b.n	80033a2 <LL_ADC_IsEnabled+0x1a>
 80033a0:	2300      	movs	r3, #0
}
 80033a2:	4618      	mov	r0, r3
 80033a4:	370c      	adds	r7, #12
 80033a6:	46bd      	mov	sp, r7
 80033a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ac:	4770      	bx	lr

080033ae <LL_ADC_REG_IsConversionOngoing>:
{
 80033ae:	b480      	push	{r7}
 80033b0:	b083      	sub	sp, #12
 80033b2:	af00      	add	r7, sp, #0
 80033b4:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	689b      	ldr	r3, [r3, #8]
 80033ba:	f003 0304 	and.w	r3, r3, #4
 80033be:	2b04      	cmp	r3, #4
 80033c0:	d101      	bne.n	80033c6 <LL_ADC_REG_IsConversionOngoing+0x18>
 80033c2:	2301      	movs	r3, #1
 80033c4:	e000      	b.n	80033c8 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80033c6:	2300      	movs	r3, #0
}
 80033c8:	4618      	mov	r0, r3
 80033ca:	370c      	adds	r7, #12
 80033cc:	46bd      	mov	sp, r7
 80033ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d2:	4770      	bx	lr

080033d4 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
 80033d4:	b590      	push	{r4, r7, lr}
 80033d6:	b0a3      	sub	sp, #140	; 0x8c
 80033d8:	af00      	add	r7, sp, #0
 80033da:	6078      	str	r0, [r7, #4]
 80033dc:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80033de:	2300      	movs	r3, #0
 80033e0:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
    assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80033ea:	2b01      	cmp	r3, #1
 80033ec:	d101      	bne.n	80033f2 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 80033ee:	2302      	movs	r3, #2
 80033f0:	e0c1      	b.n	8003576 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	2201      	movs	r2, #1
 80033f6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  tmphadcSlave.State = HAL_ADC_STATE_RESET;
 80033fa:	2300      	movs	r3, #0
 80033fc:	66fb      	str	r3, [r7, #108]	; 0x6c
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 80033fe:	2300      	movs	r3, #0
 8003400:	673b      	str	r3, [r7, #112]	; 0x70

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	4a5e      	ldr	r2, [pc, #376]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003408:	4293      	cmp	r3, r2
 800340a:	d102      	bne.n	8003412 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 800340c:	4b5d      	ldr	r3, [pc, #372]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800340e:	60fb      	str	r3, [r7, #12]
 8003410:	e001      	b.n	8003416 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003412:	2300      	movs	r3, #0
 8003414:	60fb      	str	r3, [r7, #12]

  if (tmphadcSlave.Instance == NULL)
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	2b00      	cmp	r3, #0
 800341a:	d10b      	bne.n	8003434 <HAL_ADCEx_MultiModeConfigChannel+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003420:	f043 0220 	orr.w	r2, r3, #32
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	661a      	str	r2, [r3, #96]	; 0x60

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2200      	movs	r2, #0
 800342c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    return HAL_ERROR;
 8003430:	2301      	movs	r3, #1
 8003432:	e0a0      	b.n	8003576 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>

  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Multimode DATA Format configuration                                   */
  tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	4618      	mov	r0, r3
 8003438:	f7ff ffb9 	bl	80033ae <LL_ADC_REG_IsConversionOngoing>
 800343c:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80
  if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	4618      	mov	r0, r3
 8003446:	f7ff ffb2 	bl	80033ae <LL_ADC_REG_IsConversionOngoing>
 800344a:	4603      	mov	r3, r0
 800344c:	2b00      	cmp	r3, #0
 800344e:	f040 8081 	bne.w	8003554 <HAL_ADCEx_MultiModeConfigChannel+0x180>
      && (tmphadcSlave_conversion_on_going == 0UL))
 8003452:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8003456:	2b00      	cmp	r3, #0
 8003458:	d17c      	bne.n	8003554 <HAL_ADCEx_MultiModeConfigChannel+0x180>
  {
    /* Pointer to the common control register */
    tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	4a48      	ldr	r2, [pc, #288]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003460:	4293      	cmp	r3, r2
 8003462:	d004      	beq.n	800346e <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	4a46      	ldr	r2, [pc, #280]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800346a:	4293      	cmp	r3, r2
 800346c:	d101      	bne.n	8003472 <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 800346e:	4b46      	ldr	r3, [pc, #280]	; (8003588 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8003470:	e000      	b.n	8003474 <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 8003472:	4b46      	ldr	r3, [pc, #280]	; (800358c <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8003474:	67fb      	str	r3, [r7, #124]	; 0x7c

    /* If multimode is selected, configure all multimode parameters.          */
    /* Otherwise, reset multimode parameters (can be used in case of          */
    /* transition from multimode to independent mode).                        */
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	2b00      	cmp	r3, #0
 800347c:	d039      	beq.n	80034f2 <HAL_ADCEx_MultiModeConfigChannel+0x11e>
    {
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 800347e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003480:	689b      	ldr	r3, [r3, #8]
 8003482:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8003486:	683b      	ldr	r3, [r7, #0]
 8003488:	685b      	ldr	r3, [r3, #4]
 800348a:	431a      	orrs	r2, r3
 800348c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800348e:	609a      	str	r2, [r3, #8]
      /*      from 1 to 8 clock cycles for 12 bits                              */
      /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
      /*    If a higher delay is selected, it will be clipped to maximum delay  */
      /*    range                                                               */

      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	4a3a      	ldr	r2, [pc, #232]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003496:	4293      	cmp	r3, r2
 8003498:	d004      	beq.n	80034a4 <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	4a39      	ldr	r2, [pc, #228]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80034a0:	4293      	cmp	r3, r2
 80034a2:	d10e      	bne.n	80034c2 <HAL_ADCEx_MultiModeConfigChannel+0xee>
 80034a4:	4836      	ldr	r0, [pc, #216]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80034a6:	f7ff ff6f 	bl	8003388 <LL_ADC_IsEnabled>
 80034aa:	4604      	mov	r4, r0
 80034ac:	4835      	ldr	r0, [pc, #212]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80034ae:	f7ff ff6b 	bl	8003388 <LL_ADC_IsEnabled>
 80034b2:	4603      	mov	r3, r0
 80034b4:	4323      	orrs	r3, r4
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	bf0c      	ite	eq
 80034ba:	2301      	moveq	r3, #1
 80034bc:	2300      	movne	r3, #0
 80034be:	b2db      	uxtb	r3, r3
 80034c0:	e008      	b.n	80034d4 <HAL_ADCEx_MultiModeConfigChannel+0x100>
 80034c2:	4833      	ldr	r0, [pc, #204]	; (8003590 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 80034c4:	f7ff ff60 	bl	8003388 <LL_ADC_IsEnabled>
 80034c8:	4603      	mov	r3, r0
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	bf0c      	ite	eq
 80034ce:	2301      	moveq	r3, #1
 80034d0:	2300      	movne	r3, #0
 80034d2:	b2db      	uxtb	r3, r3
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	d047      	beq.n	8003568 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        MODIFY_REG(tmpADC_Common->CCR,
 80034d8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80034da:	689a      	ldr	r2, [r3, #8]
 80034dc:	4b2d      	ldr	r3, [pc, #180]	; (8003594 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 80034de:	4013      	ands	r3, r2
 80034e0:	683a      	ldr	r2, [r7, #0]
 80034e2:	6811      	ldr	r1, [r2, #0]
 80034e4:	683a      	ldr	r2, [r7, #0]
 80034e6:	6892      	ldr	r2, [r2, #8]
 80034e8:	430a      	orrs	r2, r1
 80034ea:	431a      	orrs	r2, r3
 80034ec:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80034ee:	609a      	str	r2, [r3, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80034f0:	e03a      	b.n	8003568 <HAL_ADCEx_MultiModeConfigChannel+0x194>
                  );
      }
    }
    else /* ADC_MODE_INDEPENDENT */
    {
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 80034f2:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80034f4:	689b      	ldr	r3, [r3, #8]
 80034f6:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80034fa:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80034fc:	609a      	str	r2, [r3, #8]

      /* Parameters that can be updated only when ADC is disabled:                */
      /*  - Multimode mode selection                                              */
      /*  - Multimode delay                                                       */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	4a1f      	ldr	r2, [pc, #124]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003504:	4293      	cmp	r3, r2
 8003506:	d004      	beq.n	8003512 <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	4a1d      	ldr	r2, [pc, #116]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800350e:	4293      	cmp	r3, r2
 8003510:	d10e      	bne.n	8003530 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 8003512:	481b      	ldr	r0, [pc, #108]	; (8003580 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003514:	f7ff ff38 	bl	8003388 <LL_ADC_IsEnabled>
 8003518:	4604      	mov	r4, r0
 800351a:	481a      	ldr	r0, [pc, #104]	; (8003584 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800351c:	f7ff ff34 	bl	8003388 <LL_ADC_IsEnabled>
 8003520:	4603      	mov	r3, r0
 8003522:	4323      	orrs	r3, r4
 8003524:	2b00      	cmp	r3, #0
 8003526:	bf0c      	ite	eq
 8003528:	2301      	moveq	r3, #1
 800352a:	2300      	movne	r3, #0
 800352c:	b2db      	uxtb	r3, r3
 800352e:	e008      	b.n	8003542 <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 8003530:	4817      	ldr	r0, [pc, #92]	; (8003590 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8003532:	f7ff ff29 	bl	8003388 <LL_ADC_IsEnabled>
 8003536:	4603      	mov	r3, r0
 8003538:	2b00      	cmp	r3, #0
 800353a:	bf0c      	ite	eq
 800353c:	2301      	moveq	r3, #1
 800353e:	2300      	movne	r3, #0
 8003540:	b2db      	uxtb	r3, r3
 8003542:	2b00      	cmp	r3, #0
 8003544:	d010      	beq.n	8003568 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 8003546:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003548:	689a      	ldr	r2, [r3, #8]
 800354a:	4b12      	ldr	r3, [pc, #72]	; (8003594 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800354c:	4013      	ands	r3, r2
 800354e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8003550:	6093      	str	r3, [r2, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003552:	e009      	b.n	8003568 <HAL_ADCEx_MultiModeConfigChannel+0x194>
  /* If one of the ADC sharing the same common group is enabled, no update    */
  /* could be done on neither of the multimode structure parameters.          */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003558:	f043 0220 	orr.w	r2, r3, #32
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 8003560:	2301      	movs	r3, #1
 8003562:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 8003566:	e000      	b.n	800356a <HAL_ADCEx_MultiModeConfigChannel+0x196>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003568:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	2200      	movs	r2, #0
 800356e:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8003572:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
}
 8003576:	4618      	mov	r0, r3
 8003578:	378c      	adds	r7, #140	; 0x8c
 800357a:	46bd      	mov	sp, r7
 800357c:	bd90      	pop	{r4, r7, pc}
 800357e:	bf00      	nop
 8003580:	40022000 	.word	0x40022000
 8003584:	40022100 	.word	0x40022100
 8003588:	40022300 	.word	0x40022300
 800358c:	58026300 	.word	0x58026300
 8003590:	58026000 	.word	0x58026000
 8003594:	fffff0e0 	.word	0xfffff0e0

08003598 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003598:	b480      	push	{r7}
 800359a:	b085      	sub	sp, #20
 800359c:	af00      	add	r7, sp, #0
 800359e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	f003 0307 	and.w	r3, r3, #7
 80035a6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80035a8:	4b0b      	ldr	r3, [pc, #44]	; (80035d8 <__NVIC_SetPriorityGrouping+0x40>)
 80035aa:	68db      	ldr	r3, [r3, #12]
 80035ac:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80035ae:	68ba      	ldr	r2, [r7, #8]
 80035b0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80035b4:	4013      	ands	r3, r2
 80035b6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80035bc:	68bb      	ldr	r3, [r7, #8]
 80035be:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 80035c0:	4b06      	ldr	r3, [pc, #24]	; (80035dc <__NVIC_SetPriorityGrouping+0x44>)
 80035c2:	4313      	orrs	r3, r2
 80035c4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80035c6:	4a04      	ldr	r2, [pc, #16]	; (80035d8 <__NVIC_SetPriorityGrouping+0x40>)
 80035c8:	68bb      	ldr	r3, [r7, #8]
 80035ca:	60d3      	str	r3, [r2, #12]
}
 80035cc:	bf00      	nop
 80035ce:	3714      	adds	r7, #20
 80035d0:	46bd      	mov	sp, r7
 80035d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035d6:	4770      	bx	lr
 80035d8:	e000ed00 	.word	0xe000ed00
 80035dc:	05fa0000 	.word	0x05fa0000

080035e0 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80035e0:	b480      	push	{r7}
 80035e2:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80035e4:	4b04      	ldr	r3, [pc, #16]	; (80035f8 <__NVIC_GetPriorityGrouping+0x18>)
 80035e6:	68db      	ldr	r3, [r3, #12]
 80035e8:	0a1b      	lsrs	r3, r3, #8
 80035ea:	f003 0307 	and.w	r3, r3, #7
}
 80035ee:	4618      	mov	r0, r3
 80035f0:	46bd      	mov	sp, r7
 80035f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f6:	4770      	bx	lr
 80035f8:	e000ed00 	.word	0xe000ed00

080035fc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80035fc:	b480      	push	{r7}
 80035fe:	b083      	sub	sp, #12
 8003600:	af00      	add	r7, sp, #0
 8003602:	4603      	mov	r3, r0
 8003604:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003606:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800360a:	2b00      	cmp	r3, #0
 800360c:	db0b      	blt.n	8003626 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800360e:	88fb      	ldrh	r3, [r7, #6]
 8003610:	f003 021f 	and.w	r2, r3, #31
 8003614:	4907      	ldr	r1, [pc, #28]	; (8003634 <__NVIC_EnableIRQ+0x38>)
 8003616:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800361a:	095b      	lsrs	r3, r3, #5
 800361c:	2001      	movs	r0, #1
 800361e:	fa00 f202 	lsl.w	r2, r0, r2
 8003622:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8003626:	bf00      	nop
 8003628:	370c      	adds	r7, #12
 800362a:	46bd      	mov	sp, r7
 800362c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003630:	4770      	bx	lr
 8003632:	bf00      	nop
 8003634:	e000e100 	.word	0xe000e100

08003638 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003638:	b480      	push	{r7}
 800363a:	b083      	sub	sp, #12
 800363c:	af00      	add	r7, sp, #0
 800363e:	4603      	mov	r3, r0
 8003640:	6039      	str	r1, [r7, #0]
 8003642:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003644:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003648:	2b00      	cmp	r3, #0
 800364a:	db0a      	blt.n	8003662 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800364c:	683b      	ldr	r3, [r7, #0]
 800364e:	b2da      	uxtb	r2, r3
 8003650:	490c      	ldr	r1, [pc, #48]	; (8003684 <__NVIC_SetPriority+0x4c>)
 8003652:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003656:	0112      	lsls	r2, r2, #4
 8003658:	b2d2      	uxtb	r2, r2
 800365a:	440b      	add	r3, r1
 800365c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003660:	e00a      	b.n	8003678 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003662:	683b      	ldr	r3, [r7, #0]
 8003664:	b2da      	uxtb	r2, r3
 8003666:	4908      	ldr	r1, [pc, #32]	; (8003688 <__NVIC_SetPriority+0x50>)
 8003668:	88fb      	ldrh	r3, [r7, #6]
 800366a:	f003 030f 	and.w	r3, r3, #15
 800366e:	3b04      	subs	r3, #4
 8003670:	0112      	lsls	r2, r2, #4
 8003672:	b2d2      	uxtb	r2, r2
 8003674:	440b      	add	r3, r1
 8003676:	761a      	strb	r2, [r3, #24]
}
 8003678:	bf00      	nop
 800367a:	370c      	adds	r7, #12
 800367c:	46bd      	mov	sp, r7
 800367e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003682:	4770      	bx	lr
 8003684:	e000e100 	.word	0xe000e100
 8003688:	e000ed00 	.word	0xe000ed00

0800368c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800368c:	b480      	push	{r7}
 800368e:	b089      	sub	sp, #36	; 0x24
 8003690:	af00      	add	r7, sp, #0
 8003692:	60f8      	str	r0, [r7, #12]
 8003694:	60b9      	str	r1, [r7, #8]
 8003696:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	f003 0307 	and.w	r3, r3, #7
 800369e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80036a0:	69fb      	ldr	r3, [r7, #28]
 80036a2:	f1c3 0307 	rsb	r3, r3, #7
 80036a6:	2b04      	cmp	r3, #4
 80036a8:	bf28      	it	cs
 80036aa:	2304      	movcs	r3, #4
 80036ac:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80036ae:	69fb      	ldr	r3, [r7, #28]
 80036b0:	3304      	adds	r3, #4
 80036b2:	2b06      	cmp	r3, #6
 80036b4:	d902      	bls.n	80036bc <NVIC_EncodePriority+0x30>
 80036b6:	69fb      	ldr	r3, [r7, #28]
 80036b8:	3b03      	subs	r3, #3
 80036ba:	e000      	b.n	80036be <NVIC_EncodePriority+0x32>
 80036bc:	2300      	movs	r3, #0
 80036be:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80036c0:	f04f 32ff 	mov.w	r2, #4294967295
 80036c4:	69bb      	ldr	r3, [r7, #24]
 80036c6:	fa02 f303 	lsl.w	r3, r2, r3
 80036ca:	43da      	mvns	r2, r3
 80036cc:	68bb      	ldr	r3, [r7, #8]
 80036ce:	401a      	ands	r2, r3
 80036d0:	697b      	ldr	r3, [r7, #20]
 80036d2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80036d4:	f04f 31ff 	mov.w	r1, #4294967295
 80036d8:	697b      	ldr	r3, [r7, #20]
 80036da:	fa01 f303 	lsl.w	r3, r1, r3
 80036de:	43d9      	mvns	r1, r3
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80036e4:	4313      	orrs	r3, r2
         );
}
 80036e6:	4618      	mov	r0, r3
 80036e8:	3724      	adds	r7, #36	; 0x24
 80036ea:	46bd      	mov	sp, r7
 80036ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036f0:	4770      	bx	lr
	...

080036f4 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80036f4:	b580      	push	{r7, lr}
 80036f6:	b082      	sub	sp, #8
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	3b01      	subs	r3, #1
 8003700:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003704:	d301      	bcc.n	800370a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003706:	2301      	movs	r3, #1
 8003708:	e00f      	b.n	800372a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800370a:	4a0a      	ldr	r2, [pc, #40]	; (8003734 <SysTick_Config+0x40>)
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	3b01      	subs	r3, #1
 8003710:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003712:	210f      	movs	r1, #15
 8003714:	f04f 30ff 	mov.w	r0, #4294967295
 8003718:	f7ff ff8e 	bl	8003638 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800371c:	4b05      	ldr	r3, [pc, #20]	; (8003734 <SysTick_Config+0x40>)
 800371e:	2200      	movs	r2, #0
 8003720:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003722:	4b04      	ldr	r3, [pc, #16]	; (8003734 <SysTick_Config+0x40>)
 8003724:	2207      	movs	r2, #7
 8003726:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003728:	2300      	movs	r3, #0
}
 800372a:	4618      	mov	r0, r3
 800372c:	3708      	adds	r7, #8
 800372e:	46bd      	mov	sp, r7
 8003730:	bd80      	pop	{r7, pc}
 8003732:	bf00      	nop
 8003734:	e000e010 	.word	0xe000e010

08003738 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003738:	b580      	push	{r7, lr}
 800373a:	b082      	sub	sp, #8
 800373c:	af00      	add	r7, sp, #0
 800373e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003740:	6878      	ldr	r0, [r7, #4]
 8003742:	f7ff ff29 	bl	8003598 <__NVIC_SetPriorityGrouping>
}
 8003746:	bf00      	nop
 8003748:	3708      	adds	r7, #8
 800374a:	46bd      	mov	sp, r7
 800374c:	bd80      	pop	{r7, pc}

0800374e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800374e:	b580      	push	{r7, lr}
 8003750:	b086      	sub	sp, #24
 8003752:	af00      	add	r7, sp, #0
 8003754:	4603      	mov	r3, r0
 8003756:	60b9      	str	r1, [r7, #8]
 8003758:	607a      	str	r2, [r7, #4]
 800375a:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 800375c:	f7ff ff40 	bl	80035e0 <__NVIC_GetPriorityGrouping>
 8003760:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003762:	687a      	ldr	r2, [r7, #4]
 8003764:	68b9      	ldr	r1, [r7, #8]
 8003766:	6978      	ldr	r0, [r7, #20]
 8003768:	f7ff ff90 	bl	800368c <NVIC_EncodePriority>
 800376c:	4602      	mov	r2, r0
 800376e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003772:	4611      	mov	r1, r2
 8003774:	4618      	mov	r0, r3
 8003776:	f7ff ff5f 	bl	8003638 <__NVIC_SetPriority>
}
 800377a:	bf00      	nop
 800377c:	3718      	adds	r7, #24
 800377e:	46bd      	mov	sp, r7
 8003780:	bd80      	pop	{r7, pc}

08003782 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003782:	b580      	push	{r7, lr}
 8003784:	b082      	sub	sp, #8
 8003786:	af00      	add	r7, sp, #0
 8003788:	4603      	mov	r3, r0
 800378a:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800378c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003790:	4618      	mov	r0, r3
 8003792:	f7ff ff33 	bl	80035fc <__NVIC_EnableIRQ>
}
 8003796:	bf00      	nop
 8003798:	3708      	adds	r7, #8
 800379a:	46bd      	mov	sp, r7
 800379c:	bd80      	pop	{r7, pc}

0800379e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800379e:	b580      	push	{r7, lr}
 80037a0:	b082      	sub	sp, #8
 80037a2:	af00      	add	r7, sp, #0
 80037a4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80037a6:	6878      	ldr	r0, [r7, #4]
 80037a8:	f7ff ffa4 	bl	80036f4 <SysTick_Config>
 80037ac:	4603      	mov	r3, r0
}
 80037ae:	4618      	mov	r0, r3
 80037b0:	3708      	adds	r7, #8
 80037b2:	46bd      	mov	sp, r7
 80037b4:	bd80      	pop	{r7, pc}
	...

080037b8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80037b8:	b580      	push	{r7, lr}
 80037ba:	b082      	sub	sp, #8
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d101      	bne.n	80037ca <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80037c6:	2301      	movs	r3, #1
 80037c8:	e054      	b.n	8003874 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	7f5b      	ldrb	r3, [r3, #29]
 80037ce:	b2db      	uxtb	r3, r3
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	d105      	bne.n	80037e0 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	2200      	movs	r2, #0
 80037d8:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80037da:	6878      	ldr	r0, [r7, #4]
 80037dc:	f7fd fca6 	bl	800112c <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	2202      	movs	r2, #2
 80037e4:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	791b      	ldrb	r3, [r3, #4]
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d10c      	bne.n	8003808 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	4a22      	ldr	r2, [pc, #136]	; (800387c <HAL_CRC_Init+0xc4>)
 80037f4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	689a      	ldr	r2, [r3, #8]
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	f022 0218 	bic.w	r2, r2, #24
 8003804:	609a      	str	r2, [r3, #8]
 8003806:	e00c      	b.n	8003822 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	6899      	ldr	r1, [r3, #8]
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	68db      	ldr	r3, [r3, #12]
 8003810:	461a      	mov	r2, r3
 8003812:	6878      	ldr	r0, [r7, #4]
 8003814:	f000 f834 	bl	8003880 <HAL_CRCEx_Polynomial_Set>
 8003818:	4603      	mov	r3, r0
 800381a:	2b00      	cmp	r3, #0
 800381c:	d001      	beq.n	8003822 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800381e:	2301      	movs	r3, #1
 8003820:	e028      	b.n	8003874 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	795b      	ldrb	r3, [r3, #5]
 8003826:	2b00      	cmp	r3, #0
 8003828:	d105      	bne.n	8003836 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	f04f 32ff 	mov.w	r2, #4294967295
 8003832:	611a      	str	r2, [r3, #16]
 8003834:	e004      	b.n	8003840 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	687a      	ldr	r2, [r7, #4]
 800383c:	6912      	ldr	r2, [r2, #16]
 800383e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	689b      	ldr	r3, [r3, #8]
 8003846:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	695a      	ldr	r2, [r3, #20]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	430a      	orrs	r2, r1
 8003854:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	689b      	ldr	r3, [r3, #8]
 800385c:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	699a      	ldr	r2, [r3, #24]
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	430a      	orrs	r2, r1
 800386a:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	2201      	movs	r2, #1
 8003870:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8003872:	2300      	movs	r3, #0
}
 8003874:	4618      	mov	r0, r3
 8003876:	3708      	adds	r7, #8
 8003878:	46bd      	mov	sp, r7
 800387a:	bd80      	pop	{r7, pc}
 800387c:	04c11db7 	.word	0x04c11db7

08003880 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8003880:	b480      	push	{r7}
 8003882:	b087      	sub	sp, #28
 8003884:	af00      	add	r7, sp, #0
 8003886:	60f8      	str	r0, [r7, #12]
 8003888:	60b9      	str	r1, [r7, #8]
 800388a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800388c:	2300      	movs	r3, #0
 800388e:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003890:	231f      	movs	r3, #31
 8003892:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003894:	68bb      	ldr	r3, [r7, #8]
 8003896:	f003 0301 	and.w	r3, r3, #1
 800389a:	2b00      	cmp	r3, #0
 800389c:	d102      	bne.n	80038a4 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 800389e:	2301      	movs	r3, #1
 80038a0:	75fb      	strb	r3, [r7, #23]
 80038a2:	e063      	b.n	800396c <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80038a4:	bf00      	nop
 80038a6:	693b      	ldr	r3, [r7, #16]
 80038a8:	1e5a      	subs	r2, r3, #1
 80038aa:	613a      	str	r2, [r7, #16]
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d009      	beq.n	80038c4 <HAL_CRCEx_Polynomial_Set+0x44>
 80038b0:	693b      	ldr	r3, [r7, #16]
 80038b2:	f003 031f 	and.w	r3, r3, #31
 80038b6:	68ba      	ldr	r2, [r7, #8]
 80038b8:	fa22 f303 	lsr.w	r3, r2, r3
 80038bc:	f003 0301 	and.w	r3, r3, #1
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d0f0      	beq.n	80038a6 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2b18      	cmp	r3, #24
 80038c8:	d846      	bhi.n	8003958 <HAL_CRCEx_Polynomial_Set+0xd8>
 80038ca:	a201      	add	r2, pc, #4	; (adr r2, 80038d0 <HAL_CRCEx_Polynomial_Set+0x50>)
 80038cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038d0:	0800395f 	.word	0x0800395f
 80038d4:	08003959 	.word	0x08003959
 80038d8:	08003959 	.word	0x08003959
 80038dc:	08003959 	.word	0x08003959
 80038e0:	08003959 	.word	0x08003959
 80038e4:	08003959 	.word	0x08003959
 80038e8:	08003959 	.word	0x08003959
 80038ec:	08003959 	.word	0x08003959
 80038f0:	0800394d 	.word	0x0800394d
 80038f4:	08003959 	.word	0x08003959
 80038f8:	08003959 	.word	0x08003959
 80038fc:	08003959 	.word	0x08003959
 8003900:	08003959 	.word	0x08003959
 8003904:	08003959 	.word	0x08003959
 8003908:	08003959 	.word	0x08003959
 800390c:	08003959 	.word	0x08003959
 8003910:	08003941 	.word	0x08003941
 8003914:	08003959 	.word	0x08003959
 8003918:	08003959 	.word	0x08003959
 800391c:	08003959 	.word	0x08003959
 8003920:	08003959 	.word	0x08003959
 8003924:	08003959 	.word	0x08003959
 8003928:	08003959 	.word	0x08003959
 800392c:	08003959 	.word	0x08003959
 8003930:	08003935 	.word	0x08003935
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8003934:	693b      	ldr	r3, [r7, #16]
 8003936:	2b06      	cmp	r3, #6
 8003938:	d913      	bls.n	8003962 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800393a:	2301      	movs	r3, #1
 800393c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800393e:	e010      	b.n	8003962 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8003940:	693b      	ldr	r3, [r7, #16]
 8003942:	2b07      	cmp	r3, #7
 8003944:	d90f      	bls.n	8003966 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8003946:	2301      	movs	r3, #1
 8003948:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800394a:	e00c      	b.n	8003966 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800394c:	693b      	ldr	r3, [r7, #16]
 800394e:	2b0f      	cmp	r3, #15
 8003950:	d90b      	bls.n	800396a <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8003952:	2301      	movs	r3, #1
 8003954:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003956:	e008      	b.n	800396a <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8003958:	2301      	movs	r3, #1
 800395a:	75fb      	strb	r3, [r7, #23]
        break;
 800395c:	e006      	b.n	800396c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800395e:	bf00      	nop
 8003960:	e004      	b.n	800396c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003962:	bf00      	nop
 8003964:	e002      	b.n	800396c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003966:	bf00      	nop
 8003968:	e000      	b.n	800396c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800396a:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 800396c:	7dfb      	ldrb	r3, [r7, #23]
 800396e:	2b00      	cmp	r3, #0
 8003970:	d10d      	bne.n	800398e <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	68ba      	ldr	r2, [r7, #8]
 8003978:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	689b      	ldr	r3, [r3, #8]
 8003980:	f023 0118 	bic.w	r1, r3, #24
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	687a      	ldr	r2, [r7, #4]
 800398a:	430a      	orrs	r2, r1
 800398c:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 800398e:	7dfb      	ldrb	r3, [r7, #23]
}
 8003990:	4618      	mov	r0, r3
 8003992:	371c      	adds	r7, #28
 8003994:	46bd      	mov	sp, r7
 8003996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399a:	4770      	bx	lr

0800399c <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800399c:	b580      	push	{r7, lr}
 800399e:	b086      	sub	sp, #24
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 80039a4:	f7fe fa54 	bl	8001e50 <HAL_GetTick>
 80039a8:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d101      	bne.n	80039b4 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 80039b0:	2301      	movs	r3, #1
 80039b2:	e312      	b.n	8003fda <HAL_DMA_Init+0x63e>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	4a66      	ldr	r2, [pc, #408]	; (8003b54 <HAL_DMA_Init+0x1b8>)
 80039ba:	4293      	cmp	r3, r2
 80039bc:	d04a      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	4a65      	ldr	r2, [pc, #404]	; (8003b58 <HAL_DMA_Init+0x1bc>)
 80039c4:	4293      	cmp	r3, r2
 80039c6:	d045      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	4a63      	ldr	r2, [pc, #396]	; (8003b5c <HAL_DMA_Init+0x1c0>)
 80039ce:	4293      	cmp	r3, r2
 80039d0:	d040      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	4a62      	ldr	r2, [pc, #392]	; (8003b60 <HAL_DMA_Init+0x1c4>)
 80039d8:	4293      	cmp	r3, r2
 80039da:	d03b      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	4a60      	ldr	r2, [pc, #384]	; (8003b64 <HAL_DMA_Init+0x1c8>)
 80039e2:	4293      	cmp	r3, r2
 80039e4:	d036      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	4a5f      	ldr	r2, [pc, #380]	; (8003b68 <HAL_DMA_Init+0x1cc>)
 80039ec:	4293      	cmp	r3, r2
 80039ee:	d031      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	4a5d      	ldr	r2, [pc, #372]	; (8003b6c <HAL_DMA_Init+0x1d0>)
 80039f6:	4293      	cmp	r3, r2
 80039f8:	d02c      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	4a5c      	ldr	r2, [pc, #368]	; (8003b70 <HAL_DMA_Init+0x1d4>)
 8003a00:	4293      	cmp	r3, r2
 8003a02:	d027      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	4a5a      	ldr	r2, [pc, #360]	; (8003b74 <HAL_DMA_Init+0x1d8>)
 8003a0a:	4293      	cmp	r3, r2
 8003a0c:	d022      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	4a59      	ldr	r2, [pc, #356]	; (8003b78 <HAL_DMA_Init+0x1dc>)
 8003a14:	4293      	cmp	r3, r2
 8003a16:	d01d      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	4a57      	ldr	r2, [pc, #348]	; (8003b7c <HAL_DMA_Init+0x1e0>)
 8003a1e:	4293      	cmp	r3, r2
 8003a20:	d018      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	4a56      	ldr	r2, [pc, #344]	; (8003b80 <HAL_DMA_Init+0x1e4>)
 8003a28:	4293      	cmp	r3, r2
 8003a2a:	d013      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	4a54      	ldr	r2, [pc, #336]	; (8003b84 <HAL_DMA_Init+0x1e8>)
 8003a32:	4293      	cmp	r3, r2
 8003a34:	d00e      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	4a53      	ldr	r2, [pc, #332]	; (8003b88 <HAL_DMA_Init+0x1ec>)
 8003a3c:	4293      	cmp	r3, r2
 8003a3e:	d009      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	4a51      	ldr	r2, [pc, #324]	; (8003b8c <HAL_DMA_Init+0x1f0>)
 8003a46:	4293      	cmp	r3, r2
 8003a48:	d004      	beq.n	8003a54 <HAL_DMA_Init+0xb8>
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4a50      	ldr	r2, [pc, #320]	; (8003b90 <HAL_DMA_Init+0x1f4>)
 8003a50:	4293      	cmp	r3, r2
 8003a52:	d101      	bne.n	8003a58 <HAL_DMA_Init+0xbc>
 8003a54:	2301      	movs	r3, #1
 8003a56:	e000      	b.n	8003a5a <HAL_DMA_Init+0xbe>
 8003a58:	2300      	movs	r3, #0
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	f000 813c 	beq.w	8003cd8 <HAL_DMA_Init+0x33c>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2202      	movs	r2, #2
 8003a64:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	4a37      	ldr	r2, [pc, #220]	; (8003b54 <HAL_DMA_Init+0x1b8>)
 8003a76:	4293      	cmp	r3, r2
 8003a78:	d04a      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4a36      	ldr	r2, [pc, #216]	; (8003b58 <HAL_DMA_Init+0x1bc>)
 8003a80:	4293      	cmp	r3, r2
 8003a82:	d045      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	4a34      	ldr	r2, [pc, #208]	; (8003b5c <HAL_DMA_Init+0x1c0>)
 8003a8a:	4293      	cmp	r3, r2
 8003a8c:	d040      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	4a33      	ldr	r2, [pc, #204]	; (8003b60 <HAL_DMA_Init+0x1c4>)
 8003a94:	4293      	cmp	r3, r2
 8003a96:	d03b      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	681b      	ldr	r3, [r3, #0]
 8003a9c:	4a31      	ldr	r2, [pc, #196]	; (8003b64 <HAL_DMA_Init+0x1c8>)
 8003a9e:	4293      	cmp	r3, r2
 8003aa0:	d036      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	4a30      	ldr	r2, [pc, #192]	; (8003b68 <HAL_DMA_Init+0x1cc>)
 8003aa8:	4293      	cmp	r3, r2
 8003aaa:	d031      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	4a2e      	ldr	r2, [pc, #184]	; (8003b6c <HAL_DMA_Init+0x1d0>)
 8003ab2:	4293      	cmp	r3, r2
 8003ab4:	d02c      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	4a2d      	ldr	r2, [pc, #180]	; (8003b70 <HAL_DMA_Init+0x1d4>)
 8003abc:	4293      	cmp	r3, r2
 8003abe:	d027      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	4a2b      	ldr	r2, [pc, #172]	; (8003b74 <HAL_DMA_Init+0x1d8>)
 8003ac6:	4293      	cmp	r3, r2
 8003ac8:	d022      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	4a2a      	ldr	r2, [pc, #168]	; (8003b78 <HAL_DMA_Init+0x1dc>)
 8003ad0:	4293      	cmp	r3, r2
 8003ad2:	d01d      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	4a28      	ldr	r2, [pc, #160]	; (8003b7c <HAL_DMA_Init+0x1e0>)
 8003ada:	4293      	cmp	r3, r2
 8003adc:	d018      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	4a27      	ldr	r2, [pc, #156]	; (8003b80 <HAL_DMA_Init+0x1e4>)
 8003ae4:	4293      	cmp	r3, r2
 8003ae6:	d013      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	4a25      	ldr	r2, [pc, #148]	; (8003b84 <HAL_DMA_Init+0x1e8>)
 8003aee:	4293      	cmp	r3, r2
 8003af0:	d00e      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	4a24      	ldr	r2, [pc, #144]	; (8003b88 <HAL_DMA_Init+0x1ec>)
 8003af8:	4293      	cmp	r3, r2
 8003afa:	d009      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	4a22      	ldr	r2, [pc, #136]	; (8003b8c <HAL_DMA_Init+0x1f0>)
 8003b02:	4293      	cmp	r3, r2
 8003b04:	d004      	beq.n	8003b10 <HAL_DMA_Init+0x174>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	4a21      	ldr	r2, [pc, #132]	; (8003b90 <HAL_DMA_Init+0x1f4>)
 8003b0c:	4293      	cmp	r3, r2
 8003b0e:	d108      	bne.n	8003b22 <HAL_DMA_Init+0x186>
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	681a      	ldr	r2, [r3, #0]
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f022 0201 	bic.w	r2, r2, #1
 8003b1e:	601a      	str	r2, [r3, #0]
 8003b20:	e007      	b.n	8003b32 <HAL_DMA_Init+0x196>
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	681a      	ldr	r2, [r3, #0]
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	f022 0201 	bic.w	r2, r2, #1
 8003b30:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003b32:	e02f      	b.n	8003b94 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003b34:	f7fe f98c 	bl	8001e50 <HAL_GetTick>
 8003b38:	4602      	mov	r2, r0
 8003b3a:	693b      	ldr	r3, [r7, #16]
 8003b3c:	1ad3      	subs	r3, r2, r3
 8003b3e:	2b05      	cmp	r3, #5
 8003b40:	d928      	bls.n	8003b94 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	2220      	movs	r2, #32
 8003b46:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	2203      	movs	r2, #3
 8003b4c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 8003b50:	2301      	movs	r3, #1
 8003b52:	e242      	b.n	8003fda <HAL_DMA_Init+0x63e>
 8003b54:	40020010 	.word	0x40020010
 8003b58:	40020028 	.word	0x40020028
 8003b5c:	40020040 	.word	0x40020040
 8003b60:	40020058 	.word	0x40020058
 8003b64:	40020070 	.word	0x40020070
 8003b68:	40020088 	.word	0x40020088
 8003b6c:	400200a0 	.word	0x400200a0
 8003b70:	400200b8 	.word	0x400200b8
 8003b74:	40020410 	.word	0x40020410
 8003b78:	40020428 	.word	0x40020428
 8003b7c:	40020440 	.word	0x40020440
 8003b80:	40020458 	.word	0x40020458
 8003b84:	40020470 	.word	0x40020470
 8003b88:	40020488 	.word	0x40020488
 8003b8c:	400204a0 	.word	0x400204a0
 8003b90:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	f003 0301 	and.w	r3, r3, #1
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d1c8      	bne.n	8003b34 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003baa:	697a      	ldr	r2, [r7, #20]
 8003bac:	4b83      	ldr	r3, [pc, #524]	; (8003dbc <HAL_DMA_Init+0x420>)
 8003bae:	4013      	ands	r3, r2
 8003bb0:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 8003bba:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	691b      	ldr	r3, [r3, #16]
 8003bc0:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003bc6:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	699b      	ldr	r3, [r3, #24]
 8003bcc:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003bd2:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	6a1b      	ldr	r3, [r3, #32]
 8003bd8:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 8003bda:	697a      	ldr	r2, [r7, #20]
 8003bdc:	4313      	orrs	r3, r2
 8003bde:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003be4:	2b04      	cmp	r3, #4
 8003be6:	d107      	bne.n	8003bf8 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bf0:	4313      	orrs	r3, r2
 8003bf2:	697a      	ldr	r2, [r7, #20]
 8003bf4:	4313      	orrs	r3, r2
 8003bf6:	617b      	str	r3, [r7, #20]
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	685b      	ldr	r3, [r3, #4]
 8003bfc:	2b28      	cmp	r3, #40	; 0x28
 8003bfe:	d903      	bls.n	8003c08 <HAL_DMA_Init+0x26c>
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	685b      	ldr	r3, [r3, #4]
 8003c04:	2b2e      	cmp	r3, #46	; 0x2e
 8003c06:	d91f      	bls.n	8003c48 <HAL_DMA_Init+0x2ac>
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	685b      	ldr	r3, [r3, #4]
 8003c0c:	2b3e      	cmp	r3, #62	; 0x3e
 8003c0e:	d903      	bls.n	8003c18 <HAL_DMA_Init+0x27c>
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	685b      	ldr	r3, [r3, #4]
 8003c14:	2b42      	cmp	r3, #66	; 0x42
 8003c16:	d917      	bls.n	8003c48 <HAL_DMA_Init+0x2ac>
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	685b      	ldr	r3, [r3, #4]
 8003c1c:	2b46      	cmp	r3, #70	; 0x46
 8003c1e:	d903      	bls.n	8003c28 <HAL_DMA_Init+0x28c>
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	685b      	ldr	r3, [r3, #4]
 8003c24:	2b48      	cmp	r3, #72	; 0x48
 8003c26:	d90f      	bls.n	8003c48 <HAL_DMA_Init+0x2ac>
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	685b      	ldr	r3, [r3, #4]
 8003c2c:	2b4e      	cmp	r3, #78	; 0x4e
 8003c2e:	d903      	bls.n	8003c38 <HAL_DMA_Init+0x29c>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	685b      	ldr	r3, [r3, #4]
 8003c34:	2b52      	cmp	r3, #82	; 0x52
 8003c36:	d907      	bls.n	8003c48 <HAL_DMA_Init+0x2ac>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	685b      	ldr	r3, [r3, #4]
 8003c3c:	2b73      	cmp	r3, #115	; 0x73
 8003c3e:	d905      	bls.n	8003c4c <HAL_DMA_Init+0x2b0>
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	685b      	ldr	r3, [r3, #4]
 8003c44:	2b77      	cmp	r3, #119	; 0x77
 8003c46:	d801      	bhi.n	8003c4c <HAL_DMA_Init+0x2b0>
 8003c48:	2301      	movs	r3, #1
 8003c4a:	e000      	b.n	8003c4e <HAL_DMA_Init+0x2b2>
 8003c4c:	2300      	movs	r3, #0
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	d003      	beq.n	8003c5a <HAL_DMA_Init+0x2be>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 8003c52:	697b      	ldr	r3, [r7, #20]
 8003c54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003c58:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	697a      	ldr	r2, [r7, #20]
 8003c60:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	695b      	ldr	r3, [r3, #20]
 8003c68:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003c6a:	697b      	ldr	r3, [r7, #20]
 8003c6c:	f023 0307 	bic.w	r3, r3, #7
 8003c70:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c76:	697a      	ldr	r2, [r7, #20]
 8003c78:	4313      	orrs	r3, r2
 8003c7a:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c80:	2b04      	cmp	r3, #4
 8003c82:	d117      	bne.n	8003cb4 <HAL_DMA_Init+0x318>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c88:	697a      	ldr	r2, [r7, #20]
 8003c8a:	4313      	orrs	r3, r2
 8003c8c:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d00e      	beq.n	8003cb4 <HAL_DMA_Init+0x318>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003c96:	6878      	ldr	r0, [r7, #4]
 8003c98:	f002 f81c 	bl	8005cd4 <DMA_CheckFifoParam>
 8003c9c:	4603      	mov	r3, r0
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d008      	beq.n	8003cb4 <HAL_DMA_Init+0x318>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	2240      	movs	r2, #64	; 0x40
 8003ca6:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	2201      	movs	r2, #1
 8003cac:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	e192      	b.n	8003fda <HAL_DMA_Init+0x63e>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	697a      	ldr	r2, [r7, #20]
 8003cba:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003cbc:	6878      	ldr	r0, [r7, #4]
 8003cbe:	f001 ff57 	bl	8005b70 <DMA_CalcBaseAndBitshift>
 8003cc2:	4603      	mov	r3, r0
 8003cc4:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003cca:	f003 031f 	and.w	r3, r3, #31
 8003cce:	223f      	movs	r2, #63	; 0x3f
 8003cd0:	409a      	lsls	r2, r3
 8003cd2:	68bb      	ldr	r3, [r7, #8]
 8003cd4:	609a      	str	r2, [r3, #8]
 8003cd6:	e0c8      	b.n	8003e6a <HAL_DMA_Init+0x4ce>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	681b      	ldr	r3, [r3, #0]
 8003cdc:	4a38      	ldr	r2, [pc, #224]	; (8003dc0 <HAL_DMA_Init+0x424>)
 8003cde:	4293      	cmp	r3, r2
 8003ce0:	d022      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	4a37      	ldr	r2, [pc, #220]	; (8003dc4 <HAL_DMA_Init+0x428>)
 8003ce8:	4293      	cmp	r3, r2
 8003cea:	d01d      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	4a35      	ldr	r2, [pc, #212]	; (8003dc8 <HAL_DMA_Init+0x42c>)
 8003cf2:	4293      	cmp	r3, r2
 8003cf4:	d018      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	4a34      	ldr	r2, [pc, #208]	; (8003dcc <HAL_DMA_Init+0x430>)
 8003cfc:	4293      	cmp	r3, r2
 8003cfe:	d013      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	4a32      	ldr	r2, [pc, #200]	; (8003dd0 <HAL_DMA_Init+0x434>)
 8003d06:	4293      	cmp	r3, r2
 8003d08:	d00e      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	4a31      	ldr	r2, [pc, #196]	; (8003dd4 <HAL_DMA_Init+0x438>)
 8003d10:	4293      	cmp	r3, r2
 8003d12:	d009      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	4a2f      	ldr	r2, [pc, #188]	; (8003dd8 <HAL_DMA_Init+0x43c>)
 8003d1a:	4293      	cmp	r3, r2
 8003d1c:	d004      	beq.n	8003d28 <HAL_DMA_Init+0x38c>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	4a2e      	ldr	r2, [pc, #184]	; (8003ddc <HAL_DMA_Init+0x440>)
 8003d24:	4293      	cmp	r3, r2
 8003d26:	d101      	bne.n	8003d2c <HAL_DMA_Init+0x390>
 8003d28:	2301      	movs	r3, #1
 8003d2a:	e000      	b.n	8003d2e <HAL_DMA_Init+0x392>
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	f000 8092 	beq.w	8003e58 <HAL_DMA_Init+0x4bc>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	4a21      	ldr	r2, [pc, #132]	; (8003dc0 <HAL_DMA_Init+0x424>)
 8003d3a:	4293      	cmp	r3, r2
 8003d3c:	d021      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	4a20      	ldr	r2, [pc, #128]	; (8003dc4 <HAL_DMA_Init+0x428>)
 8003d44:	4293      	cmp	r3, r2
 8003d46:	d01c      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	4a1e      	ldr	r2, [pc, #120]	; (8003dc8 <HAL_DMA_Init+0x42c>)
 8003d4e:	4293      	cmp	r3, r2
 8003d50:	d017      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	4a1d      	ldr	r2, [pc, #116]	; (8003dcc <HAL_DMA_Init+0x430>)
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d012      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	4a1b      	ldr	r2, [pc, #108]	; (8003dd0 <HAL_DMA_Init+0x434>)
 8003d62:	4293      	cmp	r3, r2
 8003d64:	d00d      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	4a1a      	ldr	r2, [pc, #104]	; (8003dd4 <HAL_DMA_Init+0x438>)
 8003d6c:	4293      	cmp	r3, r2
 8003d6e:	d008      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4a18      	ldr	r2, [pc, #96]	; (8003dd8 <HAL_DMA_Init+0x43c>)
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d003      	beq.n	8003d82 <HAL_DMA_Init+0x3e6>
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	4a17      	ldr	r2, [pc, #92]	; (8003ddc <HAL_DMA_Init+0x440>)
 8003d80:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2202      	movs	r2, #2
 8003d86:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 8003d9a:	697a      	ldr	r2, [r7, #20]
 8003d9c:	4b10      	ldr	r3, [pc, #64]	; (8003de0 <HAL_DMA_Init+0x444>)
 8003d9e:	4013      	ands	r3, r2
 8003da0:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	689b      	ldr	r3, [r3, #8]
 8003da6:	2b40      	cmp	r3, #64	; 0x40
 8003da8:	d01c      	beq.n	8003de4 <HAL_DMA_Init+0x448>
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	689b      	ldr	r3, [r3, #8]
 8003dae:	2b80      	cmp	r3, #128	; 0x80
 8003db0:	d102      	bne.n	8003db8 <HAL_DMA_Init+0x41c>
 8003db2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003db6:	e016      	b.n	8003de6 <HAL_DMA_Init+0x44a>
 8003db8:	2300      	movs	r3, #0
 8003dba:	e014      	b.n	8003de6 <HAL_DMA_Init+0x44a>
 8003dbc:	fe10803f 	.word	0xfe10803f
 8003dc0:	58025408 	.word	0x58025408
 8003dc4:	5802541c 	.word	0x5802541c
 8003dc8:	58025430 	.word	0x58025430
 8003dcc:	58025444 	.word	0x58025444
 8003dd0:	58025458 	.word	0x58025458
 8003dd4:	5802546c 	.word	0x5802546c
 8003dd8:	58025480 	.word	0x58025480
 8003ddc:	58025494 	.word	0x58025494
 8003de0:	fffe000f 	.word	0xfffe000f
 8003de4:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003de6:	687a      	ldr	r2, [r7, #4]
 8003de8:	68d2      	ldr	r2, [r2, #12]
 8003dea:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003dec:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	691b      	ldr	r3, [r3, #16]
 8003df2:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003df4:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	695b      	ldr	r3, [r3, #20]
 8003dfa:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003dfc:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	699b      	ldr	r3, [r3, #24]
 8003e02:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003e04:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	69db      	ldr	r3, [r3, #28]
 8003e0a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003e0c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	6a1b      	ldr	r3, [r3, #32]
 8003e12:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003e14:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003e16:	697a      	ldr	r2, [r7, #20]
 8003e18:	4313      	orrs	r3, r2
 8003e1a:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	697a      	ldr	r2, [r7, #20]
 8003e22:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	461a      	mov	r2, r3
 8003e2a:	4b6e      	ldr	r3, [pc, #440]	; (8003fe4 <HAL_DMA_Init+0x648>)
 8003e2c:	4413      	add	r3, r2
 8003e2e:	4a6e      	ldr	r2, [pc, #440]	; (8003fe8 <HAL_DMA_Init+0x64c>)
 8003e30:	fba2 2303 	umull	r2, r3, r2, r3
 8003e34:	091b      	lsrs	r3, r3, #4
 8003e36:	009a      	lsls	r2, r3, #2
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003e3c:	6878      	ldr	r0, [r7, #4]
 8003e3e:	f001 fe97 	bl	8005b70 <DMA_CalcBaseAndBitshift>
 8003e42:	4603      	mov	r3, r0
 8003e44:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003e4a:	f003 031f 	and.w	r3, r3, #31
 8003e4e:	2201      	movs	r2, #1
 8003e50:	409a      	lsls	r2, r3
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	605a      	str	r2, [r3, #4]
 8003e56:	e008      	b.n	8003e6a <HAL_DMA_Init+0x4ce>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	2240      	movs	r2, #64	; 0x40
 8003e5c:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	2203      	movs	r2, #3
 8003e62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 8003e66:	2301      	movs	r3, #1
 8003e68:	e0b7      	b.n	8003fda <HAL_DMA_Init+0x63e>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	4a5f      	ldr	r2, [pc, #380]	; (8003fec <HAL_DMA_Init+0x650>)
 8003e70:	4293      	cmp	r3, r2
 8003e72:	d072      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	4a5d      	ldr	r2, [pc, #372]	; (8003ff0 <HAL_DMA_Init+0x654>)
 8003e7a:	4293      	cmp	r3, r2
 8003e7c:	d06d      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	681b      	ldr	r3, [r3, #0]
 8003e82:	4a5c      	ldr	r2, [pc, #368]	; (8003ff4 <HAL_DMA_Init+0x658>)
 8003e84:	4293      	cmp	r3, r2
 8003e86:	d068      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	4a5a      	ldr	r2, [pc, #360]	; (8003ff8 <HAL_DMA_Init+0x65c>)
 8003e8e:	4293      	cmp	r3, r2
 8003e90:	d063      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	4a59      	ldr	r2, [pc, #356]	; (8003ffc <HAL_DMA_Init+0x660>)
 8003e98:	4293      	cmp	r3, r2
 8003e9a:	d05e      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	4a57      	ldr	r2, [pc, #348]	; (8004000 <HAL_DMA_Init+0x664>)
 8003ea2:	4293      	cmp	r3, r2
 8003ea4:	d059      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	4a56      	ldr	r2, [pc, #344]	; (8004004 <HAL_DMA_Init+0x668>)
 8003eac:	4293      	cmp	r3, r2
 8003eae:	d054      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	4a54      	ldr	r2, [pc, #336]	; (8004008 <HAL_DMA_Init+0x66c>)
 8003eb6:	4293      	cmp	r3, r2
 8003eb8:	d04f      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	4a53      	ldr	r2, [pc, #332]	; (800400c <HAL_DMA_Init+0x670>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d04a      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	4a51      	ldr	r2, [pc, #324]	; (8004010 <HAL_DMA_Init+0x674>)
 8003eca:	4293      	cmp	r3, r2
 8003ecc:	d045      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	4a50      	ldr	r2, [pc, #320]	; (8004014 <HAL_DMA_Init+0x678>)
 8003ed4:	4293      	cmp	r3, r2
 8003ed6:	d040      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	4a4e      	ldr	r2, [pc, #312]	; (8004018 <HAL_DMA_Init+0x67c>)
 8003ede:	4293      	cmp	r3, r2
 8003ee0:	d03b      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	4a4d      	ldr	r2, [pc, #308]	; (800401c <HAL_DMA_Init+0x680>)
 8003ee8:	4293      	cmp	r3, r2
 8003eea:	d036      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	4a4b      	ldr	r2, [pc, #300]	; (8004020 <HAL_DMA_Init+0x684>)
 8003ef2:	4293      	cmp	r3, r2
 8003ef4:	d031      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	4a4a      	ldr	r2, [pc, #296]	; (8004024 <HAL_DMA_Init+0x688>)
 8003efc:	4293      	cmp	r3, r2
 8003efe:	d02c      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	4a48      	ldr	r2, [pc, #288]	; (8004028 <HAL_DMA_Init+0x68c>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d027      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4a47      	ldr	r2, [pc, #284]	; (800402c <HAL_DMA_Init+0x690>)
 8003f10:	4293      	cmp	r3, r2
 8003f12:	d022      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	4a45      	ldr	r2, [pc, #276]	; (8004030 <HAL_DMA_Init+0x694>)
 8003f1a:	4293      	cmp	r3, r2
 8003f1c:	d01d      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	4a44      	ldr	r2, [pc, #272]	; (8004034 <HAL_DMA_Init+0x698>)
 8003f24:	4293      	cmp	r3, r2
 8003f26:	d018      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	4a42      	ldr	r2, [pc, #264]	; (8004038 <HAL_DMA_Init+0x69c>)
 8003f2e:	4293      	cmp	r3, r2
 8003f30:	d013      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4a41      	ldr	r2, [pc, #260]	; (800403c <HAL_DMA_Init+0x6a0>)
 8003f38:	4293      	cmp	r3, r2
 8003f3a:	d00e      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	4a3f      	ldr	r2, [pc, #252]	; (8004040 <HAL_DMA_Init+0x6a4>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d009      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	4a3e      	ldr	r2, [pc, #248]	; (8004044 <HAL_DMA_Init+0x6a8>)
 8003f4c:	4293      	cmp	r3, r2
 8003f4e:	d004      	beq.n	8003f5a <HAL_DMA_Init+0x5be>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	4a3c      	ldr	r2, [pc, #240]	; (8004048 <HAL_DMA_Init+0x6ac>)
 8003f56:	4293      	cmp	r3, r2
 8003f58:	d101      	bne.n	8003f5e <HAL_DMA_Init+0x5c2>
 8003f5a:	2301      	movs	r3, #1
 8003f5c:	e000      	b.n	8003f60 <HAL_DMA_Init+0x5c4>
 8003f5e:	2300      	movs	r3, #0
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d032      	beq.n	8003fca <HAL_DMA_Init+0x62e>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8003f64:	6878      	ldr	r0, [r7, #4]
 8003f66:	f001 ff31 	bl	8005dcc <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	689b      	ldr	r3, [r3, #8]
 8003f6e:	2b80      	cmp	r3, #128	; 0x80
 8003f70:	d102      	bne.n	8003f78 <HAL_DMA_Init+0x5dc>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2200      	movs	r2, #0
 8003f76:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	685a      	ldr	r2, [r3, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003f80:	b2d2      	uxtb	r2, r2
 8003f82:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003f88:	687a      	ldr	r2, [r7, #4]
 8003f8a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8003f8c:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	685b      	ldr	r3, [r3, #4]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d010      	beq.n	8003fb8 <HAL_DMA_Init+0x61c>
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	685b      	ldr	r3, [r3, #4]
 8003f9a:	2b08      	cmp	r3, #8
 8003f9c:	d80c      	bhi.n	8003fb8 <HAL_DMA_Init+0x61c>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8003f9e:	6878      	ldr	r0, [r7, #4]
 8003fa0:	f001 ffae 	bl	8005f00 <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003fa8:	2200      	movs	r2, #0
 8003faa:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003fb0:	687a      	ldr	r2, [r7, #4]
 8003fb2:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8003fb4:	605a      	str	r2, [r3, #4]
 8003fb6:	e008      	b.n	8003fca <HAL_DMA_Init+0x62e>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	2200      	movs	r2, #0
 8003fbc:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	2200      	movs	r2, #0
 8003fc2:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	2200      	movs	r2, #0
 8003fce:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	2201      	movs	r2, #1
 8003fd4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8003fd8:	2300      	movs	r3, #0
}
 8003fda:	4618      	mov	r0, r3
 8003fdc:	3718      	adds	r7, #24
 8003fde:	46bd      	mov	sp, r7
 8003fe0:	bd80      	pop	{r7, pc}
 8003fe2:	bf00      	nop
 8003fe4:	a7fdabf8 	.word	0xa7fdabf8
 8003fe8:	cccccccd 	.word	0xcccccccd
 8003fec:	40020010 	.word	0x40020010
 8003ff0:	40020028 	.word	0x40020028
 8003ff4:	40020040 	.word	0x40020040
 8003ff8:	40020058 	.word	0x40020058
 8003ffc:	40020070 	.word	0x40020070
 8004000:	40020088 	.word	0x40020088
 8004004:	400200a0 	.word	0x400200a0
 8004008:	400200b8 	.word	0x400200b8
 800400c:	40020410 	.word	0x40020410
 8004010:	40020428 	.word	0x40020428
 8004014:	40020440 	.word	0x40020440
 8004018:	40020458 	.word	0x40020458
 800401c:	40020470 	.word	0x40020470
 8004020:	40020488 	.word	0x40020488
 8004024:	400204a0 	.word	0x400204a0
 8004028:	400204b8 	.word	0x400204b8
 800402c:	58025408 	.word	0x58025408
 8004030:	5802541c 	.word	0x5802541c
 8004034:	58025430 	.word	0x58025430
 8004038:	58025444 	.word	0x58025444
 800403c:	58025458 	.word	0x58025458
 8004040:	5802546c 	.word	0x5802546c
 8004044:	58025480 	.word	0x58025480
 8004048:	58025494 	.word	0x58025494

0800404c <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 800404c:	b580      	push	{r7, lr}
 800404e:	b086      	sub	sp, #24
 8004050:	af00      	add	r7, sp, #0
 8004052:	60f8      	str	r0, [r7, #12]
 8004054:	60b9      	str	r1, [r7, #8]
 8004056:	607a      	str	r2, [r7, #4]
 8004058:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800405a:	2300      	movs	r3, #0
 800405c:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	2b00      	cmp	r3, #0
 8004062:	d101      	bne.n	8004068 <HAL_DMA_Start_IT+0x1c>
  {
    return HAL_ERROR;
 8004064:	2301      	movs	r3, #1
 8004066:	e226      	b.n	80044b6 <HAL_DMA_Start_IT+0x46a>
  }

  /* Process locked */
  __HAL_LOCK(hdma);
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800406e:	2b01      	cmp	r3, #1
 8004070:	d101      	bne.n	8004076 <HAL_DMA_Start_IT+0x2a>
 8004072:	2302      	movs	r3, #2
 8004074:	e21f      	b.n	80044b6 <HAL_DMA_Start_IT+0x46a>
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2201      	movs	r2, #1
 800407a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  if(HAL_DMA_STATE_READY == hdma->State)
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004084:	b2db      	uxtb	r3, r3
 8004086:	2b01      	cmp	r3, #1
 8004088:	f040 820a 	bne.w	80044a0 <HAL_DMA_Start_IT+0x454>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	2202      	movs	r2, #2
 8004090:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	2200      	movs	r2, #0
 8004098:	655a      	str	r2, [r3, #84]	; 0x54

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	4a68      	ldr	r2, [pc, #416]	; (8004240 <HAL_DMA_Start_IT+0x1f4>)
 80040a0:	4293      	cmp	r3, r2
 80040a2:	d04a      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	4a66      	ldr	r2, [pc, #408]	; (8004244 <HAL_DMA_Start_IT+0x1f8>)
 80040aa:	4293      	cmp	r3, r2
 80040ac:	d045      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	4a65      	ldr	r2, [pc, #404]	; (8004248 <HAL_DMA_Start_IT+0x1fc>)
 80040b4:	4293      	cmp	r3, r2
 80040b6:	d040      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	4a63      	ldr	r2, [pc, #396]	; (800424c <HAL_DMA_Start_IT+0x200>)
 80040be:	4293      	cmp	r3, r2
 80040c0:	d03b      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	4a62      	ldr	r2, [pc, #392]	; (8004250 <HAL_DMA_Start_IT+0x204>)
 80040c8:	4293      	cmp	r3, r2
 80040ca:	d036      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	4a60      	ldr	r2, [pc, #384]	; (8004254 <HAL_DMA_Start_IT+0x208>)
 80040d2:	4293      	cmp	r3, r2
 80040d4:	d031      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040d6:	68fb      	ldr	r3, [r7, #12]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	4a5f      	ldr	r2, [pc, #380]	; (8004258 <HAL_DMA_Start_IT+0x20c>)
 80040dc:	4293      	cmp	r3, r2
 80040de:	d02c      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	4a5d      	ldr	r2, [pc, #372]	; (800425c <HAL_DMA_Start_IT+0x210>)
 80040e6:	4293      	cmp	r3, r2
 80040e8:	d027      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040ea:	68fb      	ldr	r3, [r7, #12]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	4a5c      	ldr	r2, [pc, #368]	; (8004260 <HAL_DMA_Start_IT+0x214>)
 80040f0:	4293      	cmp	r3, r2
 80040f2:	d022      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	4a5a      	ldr	r2, [pc, #360]	; (8004264 <HAL_DMA_Start_IT+0x218>)
 80040fa:	4293      	cmp	r3, r2
 80040fc:	d01d      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 80040fe:	68fb      	ldr	r3, [r7, #12]
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	4a59      	ldr	r2, [pc, #356]	; (8004268 <HAL_DMA_Start_IT+0x21c>)
 8004104:	4293      	cmp	r3, r2
 8004106:	d018      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	4a57      	ldr	r2, [pc, #348]	; (800426c <HAL_DMA_Start_IT+0x220>)
 800410e:	4293      	cmp	r3, r2
 8004110:	d013      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	4a56      	ldr	r2, [pc, #344]	; (8004270 <HAL_DMA_Start_IT+0x224>)
 8004118:	4293      	cmp	r3, r2
 800411a:	d00e      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	4a54      	ldr	r2, [pc, #336]	; (8004274 <HAL_DMA_Start_IT+0x228>)
 8004122:	4293      	cmp	r3, r2
 8004124:	d009      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 8004126:	68fb      	ldr	r3, [r7, #12]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	4a53      	ldr	r2, [pc, #332]	; (8004278 <HAL_DMA_Start_IT+0x22c>)
 800412c:	4293      	cmp	r3, r2
 800412e:	d004      	beq.n	800413a <HAL_DMA_Start_IT+0xee>
 8004130:	68fb      	ldr	r3, [r7, #12]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	4a51      	ldr	r2, [pc, #324]	; (800427c <HAL_DMA_Start_IT+0x230>)
 8004136:	4293      	cmp	r3, r2
 8004138:	d108      	bne.n	800414c <HAL_DMA_Start_IT+0x100>
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	681a      	ldr	r2, [r3, #0]
 8004140:	68fb      	ldr	r3, [r7, #12]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	f022 0201 	bic.w	r2, r2, #1
 8004148:	601a      	str	r2, [r3, #0]
 800414a:	e007      	b.n	800415c <HAL_DMA_Start_IT+0x110>
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	681a      	ldr	r2, [r3, #0]
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	f022 0201 	bic.w	r2, r2, #1
 800415a:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 800415c:	683b      	ldr	r3, [r7, #0]
 800415e:	687a      	ldr	r2, [r7, #4]
 8004160:	68b9      	ldr	r1, [r7, #8]
 8004162:	68f8      	ldr	r0, [r7, #12]
 8004164:	f001 fb58 	bl	8005818 <DMA_SetConfig>

    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	4a34      	ldr	r2, [pc, #208]	; (8004240 <HAL_DMA_Start_IT+0x1f4>)
 800416e:	4293      	cmp	r3, r2
 8004170:	d04a      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4a33      	ldr	r2, [pc, #204]	; (8004244 <HAL_DMA_Start_IT+0x1f8>)
 8004178:	4293      	cmp	r3, r2
 800417a:	d045      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	681b      	ldr	r3, [r3, #0]
 8004180:	4a31      	ldr	r2, [pc, #196]	; (8004248 <HAL_DMA_Start_IT+0x1fc>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d040      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 8004186:	68fb      	ldr	r3, [r7, #12]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	4a30      	ldr	r2, [pc, #192]	; (800424c <HAL_DMA_Start_IT+0x200>)
 800418c:	4293      	cmp	r3, r2
 800418e:	d03b      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	4a2e      	ldr	r2, [pc, #184]	; (8004250 <HAL_DMA_Start_IT+0x204>)
 8004196:	4293      	cmp	r3, r2
 8004198:	d036      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	4a2d      	ldr	r2, [pc, #180]	; (8004254 <HAL_DMA_Start_IT+0x208>)
 80041a0:	4293      	cmp	r3, r2
 80041a2:	d031      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041a4:	68fb      	ldr	r3, [r7, #12]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	4a2b      	ldr	r2, [pc, #172]	; (8004258 <HAL_DMA_Start_IT+0x20c>)
 80041aa:	4293      	cmp	r3, r2
 80041ac:	d02c      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	4a2a      	ldr	r2, [pc, #168]	; (800425c <HAL_DMA_Start_IT+0x210>)
 80041b4:	4293      	cmp	r3, r2
 80041b6:	d027      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	4a28      	ldr	r2, [pc, #160]	; (8004260 <HAL_DMA_Start_IT+0x214>)
 80041be:	4293      	cmp	r3, r2
 80041c0:	d022      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041c2:	68fb      	ldr	r3, [r7, #12]
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	4a27      	ldr	r2, [pc, #156]	; (8004264 <HAL_DMA_Start_IT+0x218>)
 80041c8:	4293      	cmp	r3, r2
 80041ca:	d01d      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041cc:	68fb      	ldr	r3, [r7, #12]
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	4a25      	ldr	r2, [pc, #148]	; (8004268 <HAL_DMA_Start_IT+0x21c>)
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d018      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	4a24      	ldr	r2, [pc, #144]	; (800426c <HAL_DMA_Start_IT+0x220>)
 80041dc:	4293      	cmp	r3, r2
 80041de:	d013      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	4a22      	ldr	r2, [pc, #136]	; (8004270 <HAL_DMA_Start_IT+0x224>)
 80041e6:	4293      	cmp	r3, r2
 80041e8:	d00e      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	4a21      	ldr	r2, [pc, #132]	; (8004274 <HAL_DMA_Start_IT+0x228>)
 80041f0:	4293      	cmp	r3, r2
 80041f2:	d009      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041f4:	68fb      	ldr	r3, [r7, #12]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	4a1f      	ldr	r2, [pc, #124]	; (8004278 <HAL_DMA_Start_IT+0x22c>)
 80041fa:	4293      	cmp	r3, r2
 80041fc:	d004      	beq.n	8004208 <HAL_DMA_Start_IT+0x1bc>
 80041fe:	68fb      	ldr	r3, [r7, #12]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	4a1e      	ldr	r2, [pc, #120]	; (800427c <HAL_DMA_Start_IT+0x230>)
 8004204:	4293      	cmp	r3, r2
 8004206:	d101      	bne.n	800420c <HAL_DMA_Start_IT+0x1c0>
 8004208:	2301      	movs	r3, #1
 800420a:	e000      	b.n	800420e <HAL_DMA_Start_IT+0x1c2>
 800420c:	2300      	movs	r3, #0
 800420e:	2b00      	cmp	r3, #0
 8004210:	d036      	beq.n	8004280 <HAL_DMA_Start_IT+0x234>
    {
      /* Enable Common interrupts*/
      MODIFY_REG(((DMA_Stream_TypeDef   *)hdma->Instance)->CR, (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT), (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME));
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	f023 021e 	bic.w	r2, r3, #30
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	f042 0216 	orr.w	r2, r2, #22
 8004224:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800422a:	2b00      	cmp	r3, #0
 800422c:	d03e      	beq.n	80042ac <HAL_DMA_Start_IT+0x260>
      {
        /* Enable Half Transfer IT if corresponding Callback is set */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  |= DMA_IT_HT;
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	681a      	ldr	r2, [r3, #0]
 8004234:	68fb      	ldr	r3, [r7, #12]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	f042 0208 	orr.w	r2, r2, #8
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	e035      	b.n	80042ac <HAL_DMA_Start_IT+0x260>
 8004240:	40020010 	.word	0x40020010
 8004244:	40020028 	.word	0x40020028
 8004248:	40020040 	.word	0x40020040
 800424c:	40020058 	.word	0x40020058
 8004250:	40020070 	.word	0x40020070
 8004254:	40020088 	.word	0x40020088
 8004258:	400200a0 	.word	0x400200a0
 800425c:	400200b8 	.word	0x400200b8
 8004260:	40020410 	.word	0x40020410
 8004264:	40020428 	.word	0x40020428
 8004268:	40020440 	.word	0x40020440
 800426c:	40020458 	.word	0x40020458
 8004270:	40020470 	.word	0x40020470
 8004274:	40020488 	.word	0x40020488
 8004278:	400204a0 	.word	0x400204a0
 800427c:	400204b8 	.word	0x400204b8
      }
    }
    else /* BDMA channel */
    {
      /* Enable Common interrupts */
      MODIFY_REG(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR, (BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE), (BDMA_CCR_TCIE | BDMA_CCR_TEIE));
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	681b      	ldr	r3, [r3, #0]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	f023 020e 	bic.w	r2, r3, #14
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	f042 020a 	orr.w	r2, r2, #10
 8004292:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004298:	2b00      	cmp	r3, #0
 800429a:	d007      	beq.n	80042ac <HAL_DMA_Start_IT+0x260>
      {
        /*Enable Half Transfer IT if corresponding Callback is set */
        ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  |= BDMA_CCR_HTIE;
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	681a      	ldr	r2, [r3, #0]
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	f042 0204 	orr.w	r2, r2, #4
 80042aa:	601a      	str	r2, [r3, #0]
      }
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4a83      	ldr	r2, [pc, #524]	; (80044c0 <HAL_DMA_Start_IT+0x474>)
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d072      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	4a82      	ldr	r2, [pc, #520]	; (80044c4 <HAL_DMA_Start_IT+0x478>)
 80042bc:	4293      	cmp	r3, r2
 80042be:	d06d      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	4a80      	ldr	r2, [pc, #512]	; (80044c8 <HAL_DMA_Start_IT+0x47c>)
 80042c6:	4293      	cmp	r3, r2
 80042c8:	d068      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	4a7f      	ldr	r2, [pc, #508]	; (80044cc <HAL_DMA_Start_IT+0x480>)
 80042d0:	4293      	cmp	r3, r2
 80042d2:	d063      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	4a7d      	ldr	r2, [pc, #500]	; (80044d0 <HAL_DMA_Start_IT+0x484>)
 80042da:	4293      	cmp	r3, r2
 80042dc:	d05e      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	4a7c      	ldr	r2, [pc, #496]	; (80044d4 <HAL_DMA_Start_IT+0x488>)
 80042e4:	4293      	cmp	r3, r2
 80042e6:	d059      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042e8:	68fb      	ldr	r3, [r7, #12]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	4a7a      	ldr	r2, [pc, #488]	; (80044d8 <HAL_DMA_Start_IT+0x48c>)
 80042ee:	4293      	cmp	r3, r2
 80042f0:	d054      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	4a79      	ldr	r2, [pc, #484]	; (80044dc <HAL_DMA_Start_IT+0x490>)
 80042f8:	4293      	cmp	r3, r2
 80042fa:	d04f      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	4a77      	ldr	r2, [pc, #476]	; (80044e0 <HAL_DMA_Start_IT+0x494>)
 8004302:	4293      	cmp	r3, r2
 8004304:	d04a      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	4a76      	ldr	r2, [pc, #472]	; (80044e4 <HAL_DMA_Start_IT+0x498>)
 800430c:	4293      	cmp	r3, r2
 800430e:	d045      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	4a74      	ldr	r2, [pc, #464]	; (80044e8 <HAL_DMA_Start_IT+0x49c>)
 8004316:	4293      	cmp	r3, r2
 8004318:	d040      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 800431a:	68fb      	ldr	r3, [r7, #12]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	4a73      	ldr	r2, [pc, #460]	; (80044ec <HAL_DMA_Start_IT+0x4a0>)
 8004320:	4293      	cmp	r3, r2
 8004322:	d03b      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	4a71      	ldr	r2, [pc, #452]	; (80044f0 <HAL_DMA_Start_IT+0x4a4>)
 800432a:	4293      	cmp	r3, r2
 800432c:	d036      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	4a70      	ldr	r2, [pc, #448]	; (80044f4 <HAL_DMA_Start_IT+0x4a8>)
 8004334:	4293      	cmp	r3, r2
 8004336:	d031      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	4a6e      	ldr	r2, [pc, #440]	; (80044f8 <HAL_DMA_Start_IT+0x4ac>)
 800433e:	4293      	cmp	r3, r2
 8004340:	d02c      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	4a6d      	ldr	r2, [pc, #436]	; (80044fc <HAL_DMA_Start_IT+0x4b0>)
 8004348:	4293      	cmp	r3, r2
 800434a:	d027      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	4a6b      	ldr	r2, [pc, #428]	; (8004500 <HAL_DMA_Start_IT+0x4b4>)
 8004352:	4293      	cmp	r3, r2
 8004354:	d022      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	4a6a      	ldr	r2, [pc, #424]	; (8004504 <HAL_DMA_Start_IT+0x4b8>)
 800435c:	4293      	cmp	r3, r2
 800435e:	d01d      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	4a68      	ldr	r2, [pc, #416]	; (8004508 <HAL_DMA_Start_IT+0x4bc>)
 8004366:	4293      	cmp	r3, r2
 8004368:	d018      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	4a67      	ldr	r2, [pc, #412]	; (800450c <HAL_DMA_Start_IT+0x4c0>)
 8004370:	4293      	cmp	r3, r2
 8004372:	d013      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	4a65      	ldr	r2, [pc, #404]	; (8004510 <HAL_DMA_Start_IT+0x4c4>)
 800437a:	4293      	cmp	r3, r2
 800437c:	d00e      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	4a64      	ldr	r2, [pc, #400]	; (8004514 <HAL_DMA_Start_IT+0x4c8>)
 8004384:	4293      	cmp	r3, r2
 8004386:	d009      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	4a62      	ldr	r2, [pc, #392]	; (8004518 <HAL_DMA_Start_IT+0x4cc>)
 800438e:	4293      	cmp	r3, r2
 8004390:	d004      	beq.n	800439c <HAL_DMA_Start_IT+0x350>
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	4a61      	ldr	r2, [pc, #388]	; (800451c <HAL_DMA_Start_IT+0x4d0>)
 8004398:	4293      	cmp	r3, r2
 800439a:	d101      	bne.n	80043a0 <HAL_DMA_Start_IT+0x354>
 800439c:	2301      	movs	r3, #1
 800439e:	e000      	b.n	80043a2 <HAL_DMA_Start_IT+0x356>
 80043a0:	2300      	movs	r3, #0
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d01a      	beq.n	80043dc <HAL_DMA_Start_IT+0x390>
    {
      /* Check if DMAMUX Synchronization is enabled */
      if((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d007      	beq.n	80043c4 <HAL_DMA_Start_IT+0x378>
      {
        /* Enable DMAMUX sync overrun IT*/
        hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80043b8:	681a      	ldr	r2, [r3, #0]
 80043ba:	68fb      	ldr	r3, [r7, #12]
 80043bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80043be:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80043c2:	601a      	str	r2, [r3, #0]
      }

      if(hdma->DMAmuxRequestGen != 0U)
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d007      	beq.n	80043dc <HAL_DMA_Start_IT+0x390>
      {
        /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
        /* enable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80043d0:	681a      	ldr	r2, [r3, #0]
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80043d6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80043da:	601a      	str	r2, [r3, #0]
      }
    }

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	4a37      	ldr	r2, [pc, #220]	; (80044c0 <HAL_DMA_Start_IT+0x474>)
 80043e2:	4293      	cmp	r3, r2
 80043e4:	d04a      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	4a36      	ldr	r2, [pc, #216]	; (80044c4 <HAL_DMA_Start_IT+0x478>)
 80043ec:	4293      	cmp	r3, r2
 80043ee:	d045      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	4a34      	ldr	r2, [pc, #208]	; (80044c8 <HAL_DMA_Start_IT+0x47c>)
 80043f6:	4293      	cmp	r3, r2
 80043f8:	d040      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	4a33      	ldr	r2, [pc, #204]	; (80044cc <HAL_DMA_Start_IT+0x480>)
 8004400:	4293      	cmp	r3, r2
 8004402:	d03b      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004404:	68fb      	ldr	r3, [r7, #12]
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	4a31      	ldr	r2, [pc, #196]	; (80044d0 <HAL_DMA_Start_IT+0x484>)
 800440a:	4293      	cmp	r3, r2
 800440c:	d036      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	4a30      	ldr	r2, [pc, #192]	; (80044d4 <HAL_DMA_Start_IT+0x488>)
 8004414:	4293      	cmp	r3, r2
 8004416:	d031      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	4a2e      	ldr	r2, [pc, #184]	; (80044d8 <HAL_DMA_Start_IT+0x48c>)
 800441e:	4293      	cmp	r3, r2
 8004420:	d02c      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	4a2d      	ldr	r2, [pc, #180]	; (80044dc <HAL_DMA_Start_IT+0x490>)
 8004428:	4293      	cmp	r3, r2
 800442a:	d027      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	4a2b      	ldr	r2, [pc, #172]	; (80044e0 <HAL_DMA_Start_IT+0x494>)
 8004432:	4293      	cmp	r3, r2
 8004434:	d022      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	4a2a      	ldr	r2, [pc, #168]	; (80044e4 <HAL_DMA_Start_IT+0x498>)
 800443c:	4293      	cmp	r3, r2
 800443e:	d01d      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	4a28      	ldr	r2, [pc, #160]	; (80044e8 <HAL_DMA_Start_IT+0x49c>)
 8004446:	4293      	cmp	r3, r2
 8004448:	d018      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4a27      	ldr	r2, [pc, #156]	; (80044ec <HAL_DMA_Start_IT+0x4a0>)
 8004450:	4293      	cmp	r3, r2
 8004452:	d013      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	4a25      	ldr	r2, [pc, #148]	; (80044f0 <HAL_DMA_Start_IT+0x4a4>)
 800445a:	4293      	cmp	r3, r2
 800445c:	d00e      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 800445e:	68fb      	ldr	r3, [r7, #12]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	4a24      	ldr	r2, [pc, #144]	; (80044f4 <HAL_DMA_Start_IT+0x4a8>)
 8004464:	4293      	cmp	r3, r2
 8004466:	d009      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	4a22      	ldr	r2, [pc, #136]	; (80044f8 <HAL_DMA_Start_IT+0x4ac>)
 800446e:	4293      	cmp	r3, r2
 8004470:	d004      	beq.n	800447c <HAL_DMA_Start_IT+0x430>
 8004472:	68fb      	ldr	r3, [r7, #12]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	4a21      	ldr	r2, [pc, #132]	; (80044fc <HAL_DMA_Start_IT+0x4b0>)
 8004478:	4293      	cmp	r3, r2
 800447a:	d108      	bne.n	800448e <HAL_DMA_Start_IT+0x442>
 800447c:	68fb      	ldr	r3, [r7, #12]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	681a      	ldr	r2, [r3, #0]
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	f042 0201 	orr.w	r2, r2, #1
 800448a:	601a      	str	r2, [r3, #0]
 800448c:	e012      	b.n	80044b4 <HAL_DMA_Start_IT+0x468>
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	681a      	ldr	r2, [r3, #0]
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	f042 0201 	orr.w	r2, r2, #1
 800449c:	601a      	str	r2, [r3, #0]
 800449e:	e009      	b.n	80044b4 <HAL_DMA_Start_IT+0x468>
  }
  else
  {
    /* Set the error code to busy */
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80044a6:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hdma);
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	2200      	movs	r2, #0
 80044ac:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Return error status */
    status = HAL_ERROR;
 80044b0:	2301      	movs	r3, #1
 80044b2:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 80044b4:	7dfb      	ldrb	r3, [r7, #23]
}
 80044b6:	4618      	mov	r0, r3
 80044b8:	3718      	adds	r7, #24
 80044ba:	46bd      	mov	sp, r7
 80044bc:	bd80      	pop	{r7, pc}
 80044be:	bf00      	nop
 80044c0:	40020010 	.word	0x40020010
 80044c4:	40020028 	.word	0x40020028
 80044c8:	40020040 	.word	0x40020040
 80044cc:	40020058 	.word	0x40020058
 80044d0:	40020070 	.word	0x40020070
 80044d4:	40020088 	.word	0x40020088
 80044d8:	400200a0 	.word	0x400200a0
 80044dc:	400200b8 	.word	0x400200b8
 80044e0:	40020410 	.word	0x40020410
 80044e4:	40020428 	.word	0x40020428
 80044e8:	40020440 	.word	0x40020440
 80044ec:	40020458 	.word	0x40020458
 80044f0:	40020470 	.word	0x40020470
 80044f4:	40020488 	.word	0x40020488
 80044f8:	400204a0 	.word	0x400204a0
 80044fc:	400204b8 	.word	0x400204b8
 8004500:	58025408 	.word	0x58025408
 8004504:	5802541c 	.word	0x5802541c
 8004508:	58025430 	.word	0x58025430
 800450c:	58025444 	.word	0x58025444
 8004510:	58025458 	.word	0x58025458
 8004514:	5802546c 	.word	0x5802546c
 8004518:	58025480 	.word	0x58025480
 800451c:	58025494 	.word	0x58025494

08004520 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004520:	b580      	push	{r7, lr}
 8004522:	b084      	sub	sp, #16
 8004524:	af00      	add	r7, sp, #0
 8004526:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	2b00      	cmp	r3, #0
 800452c:	d101      	bne.n	8004532 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 800452e:	2301      	movs	r3, #1
 8004530:	e237      	b.n	80049a2 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004538:	b2db      	uxtb	r3, r3
 800453a:	2b02      	cmp	r3, #2
 800453c:	d004      	beq.n	8004548 <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	2280      	movs	r2, #128	; 0x80
 8004542:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8004544:	2301      	movs	r3, #1
 8004546:	e22c      	b.n	80049a2 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	4a5c      	ldr	r2, [pc, #368]	; (80046c0 <HAL_DMA_Abort_IT+0x1a0>)
 800454e:	4293      	cmp	r3, r2
 8004550:	d04a      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	4a5b      	ldr	r2, [pc, #364]	; (80046c4 <HAL_DMA_Abort_IT+0x1a4>)
 8004558:	4293      	cmp	r3, r2
 800455a:	d045      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	4a59      	ldr	r2, [pc, #356]	; (80046c8 <HAL_DMA_Abort_IT+0x1a8>)
 8004562:	4293      	cmp	r3, r2
 8004564:	d040      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	4a58      	ldr	r2, [pc, #352]	; (80046cc <HAL_DMA_Abort_IT+0x1ac>)
 800456c:	4293      	cmp	r3, r2
 800456e:	d03b      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	4a56      	ldr	r2, [pc, #344]	; (80046d0 <HAL_DMA_Abort_IT+0x1b0>)
 8004576:	4293      	cmp	r3, r2
 8004578:	d036      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4a55      	ldr	r2, [pc, #340]	; (80046d4 <HAL_DMA_Abort_IT+0x1b4>)
 8004580:	4293      	cmp	r3, r2
 8004582:	d031      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	4a53      	ldr	r2, [pc, #332]	; (80046d8 <HAL_DMA_Abort_IT+0x1b8>)
 800458a:	4293      	cmp	r3, r2
 800458c:	d02c      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	4a52      	ldr	r2, [pc, #328]	; (80046dc <HAL_DMA_Abort_IT+0x1bc>)
 8004594:	4293      	cmp	r3, r2
 8004596:	d027      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4a50      	ldr	r2, [pc, #320]	; (80046e0 <HAL_DMA_Abort_IT+0x1c0>)
 800459e:	4293      	cmp	r3, r2
 80045a0:	d022      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4a4f      	ldr	r2, [pc, #316]	; (80046e4 <HAL_DMA_Abort_IT+0x1c4>)
 80045a8:	4293      	cmp	r3, r2
 80045aa:	d01d      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	4a4d      	ldr	r2, [pc, #308]	; (80046e8 <HAL_DMA_Abort_IT+0x1c8>)
 80045b2:	4293      	cmp	r3, r2
 80045b4:	d018      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4a4c      	ldr	r2, [pc, #304]	; (80046ec <HAL_DMA_Abort_IT+0x1cc>)
 80045bc:	4293      	cmp	r3, r2
 80045be:	d013      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	4a4a      	ldr	r2, [pc, #296]	; (80046f0 <HAL_DMA_Abort_IT+0x1d0>)
 80045c6:	4293      	cmp	r3, r2
 80045c8:	d00e      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	4a49      	ldr	r2, [pc, #292]	; (80046f4 <HAL_DMA_Abort_IT+0x1d4>)
 80045d0:	4293      	cmp	r3, r2
 80045d2:	d009      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4a47      	ldr	r2, [pc, #284]	; (80046f8 <HAL_DMA_Abort_IT+0x1d8>)
 80045da:	4293      	cmp	r3, r2
 80045dc:	d004      	beq.n	80045e8 <HAL_DMA_Abort_IT+0xc8>
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	4a46      	ldr	r2, [pc, #280]	; (80046fc <HAL_DMA_Abort_IT+0x1dc>)
 80045e4:	4293      	cmp	r3, r2
 80045e6:	d101      	bne.n	80045ec <HAL_DMA_Abort_IT+0xcc>
 80045e8:	2301      	movs	r3, #1
 80045ea:	e000      	b.n	80045ee <HAL_DMA_Abort_IT+0xce>
 80045ec:	2300      	movs	r3, #0
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	f000 8086 	beq.w	8004700 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	2204      	movs	r2, #4
 80045f8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	4a2f      	ldr	r2, [pc, #188]	; (80046c0 <HAL_DMA_Abort_IT+0x1a0>)
 8004602:	4293      	cmp	r3, r2
 8004604:	d04a      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	4a2e      	ldr	r2, [pc, #184]	; (80046c4 <HAL_DMA_Abort_IT+0x1a4>)
 800460c:	4293      	cmp	r3, r2
 800460e:	d045      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	4a2c      	ldr	r2, [pc, #176]	; (80046c8 <HAL_DMA_Abort_IT+0x1a8>)
 8004616:	4293      	cmp	r3, r2
 8004618:	d040      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	4a2b      	ldr	r2, [pc, #172]	; (80046cc <HAL_DMA_Abort_IT+0x1ac>)
 8004620:	4293      	cmp	r3, r2
 8004622:	d03b      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	4a29      	ldr	r2, [pc, #164]	; (80046d0 <HAL_DMA_Abort_IT+0x1b0>)
 800462a:	4293      	cmp	r3, r2
 800462c:	d036      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	4a28      	ldr	r2, [pc, #160]	; (80046d4 <HAL_DMA_Abort_IT+0x1b4>)
 8004634:	4293      	cmp	r3, r2
 8004636:	d031      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	4a26      	ldr	r2, [pc, #152]	; (80046d8 <HAL_DMA_Abort_IT+0x1b8>)
 800463e:	4293      	cmp	r3, r2
 8004640:	d02c      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	4a25      	ldr	r2, [pc, #148]	; (80046dc <HAL_DMA_Abort_IT+0x1bc>)
 8004648:	4293      	cmp	r3, r2
 800464a:	d027      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	4a23      	ldr	r2, [pc, #140]	; (80046e0 <HAL_DMA_Abort_IT+0x1c0>)
 8004652:	4293      	cmp	r3, r2
 8004654:	d022      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4a22      	ldr	r2, [pc, #136]	; (80046e4 <HAL_DMA_Abort_IT+0x1c4>)
 800465c:	4293      	cmp	r3, r2
 800465e:	d01d      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	4a20      	ldr	r2, [pc, #128]	; (80046e8 <HAL_DMA_Abort_IT+0x1c8>)
 8004666:	4293      	cmp	r3, r2
 8004668:	d018      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	4a1f      	ldr	r2, [pc, #124]	; (80046ec <HAL_DMA_Abort_IT+0x1cc>)
 8004670:	4293      	cmp	r3, r2
 8004672:	d013      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	4a1d      	ldr	r2, [pc, #116]	; (80046f0 <HAL_DMA_Abort_IT+0x1d0>)
 800467a:	4293      	cmp	r3, r2
 800467c:	d00e      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	4a1c      	ldr	r2, [pc, #112]	; (80046f4 <HAL_DMA_Abort_IT+0x1d4>)
 8004684:	4293      	cmp	r3, r2
 8004686:	d009      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4a1a      	ldr	r2, [pc, #104]	; (80046f8 <HAL_DMA_Abort_IT+0x1d8>)
 800468e:	4293      	cmp	r3, r2
 8004690:	d004      	beq.n	800469c <HAL_DMA_Abort_IT+0x17c>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	4a19      	ldr	r2, [pc, #100]	; (80046fc <HAL_DMA_Abort_IT+0x1dc>)
 8004698:	4293      	cmp	r3, r2
 800469a:	d108      	bne.n	80046ae <HAL_DMA_Abort_IT+0x18e>
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	681a      	ldr	r2, [r3, #0]
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	f022 0201 	bic.w	r2, r2, #1
 80046aa:	601a      	str	r2, [r3, #0]
 80046ac:	e178      	b.n	80049a0 <HAL_DMA_Abort_IT+0x480>
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	681a      	ldr	r2, [r3, #0]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	f022 0201 	bic.w	r2, r2, #1
 80046bc:	601a      	str	r2, [r3, #0]
 80046be:	e16f      	b.n	80049a0 <HAL_DMA_Abort_IT+0x480>
 80046c0:	40020010 	.word	0x40020010
 80046c4:	40020028 	.word	0x40020028
 80046c8:	40020040 	.word	0x40020040
 80046cc:	40020058 	.word	0x40020058
 80046d0:	40020070 	.word	0x40020070
 80046d4:	40020088 	.word	0x40020088
 80046d8:	400200a0 	.word	0x400200a0
 80046dc:	400200b8 	.word	0x400200b8
 80046e0:	40020410 	.word	0x40020410
 80046e4:	40020428 	.word	0x40020428
 80046e8:	40020440 	.word	0x40020440
 80046ec:	40020458 	.word	0x40020458
 80046f0:	40020470 	.word	0x40020470
 80046f4:	40020488 	.word	0x40020488
 80046f8:	400204a0 	.word	0x400204a0
 80046fc:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	681a      	ldr	r2, [r3, #0]
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	f022 020e 	bic.w	r2, r2, #14
 800470e:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	4a6c      	ldr	r2, [pc, #432]	; (80048c8 <HAL_DMA_Abort_IT+0x3a8>)
 8004716:	4293      	cmp	r3, r2
 8004718:	d04a      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	4a6b      	ldr	r2, [pc, #428]	; (80048cc <HAL_DMA_Abort_IT+0x3ac>)
 8004720:	4293      	cmp	r3, r2
 8004722:	d045      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	4a69      	ldr	r2, [pc, #420]	; (80048d0 <HAL_DMA_Abort_IT+0x3b0>)
 800472a:	4293      	cmp	r3, r2
 800472c:	d040      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	4a68      	ldr	r2, [pc, #416]	; (80048d4 <HAL_DMA_Abort_IT+0x3b4>)
 8004734:	4293      	cmp	r3, r2
 8004736:	d03b      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	4a66      	ldr	r2, [pc, #408]	; (80048d8 <HAL_DMA_Abort_IT+0x3b8>)
 800473e:	4293      	cmp	r3, r2
 8004740:	d036      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	4a65      	ldr	r2, [pc, #404]	; (80048dc <HAL_DMA_Abort_IT+0x3bc>)
 8004748:	4293      	cmp	r3, r2
 800474a:	d031      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	4a63      	ldr	r2, [pc, #396]	; (80048e0 <HAL_DMA_Abort_IT+0x3c0>)
 8004752:	4293      	cmp	r3, r2
 8004754:	d02c      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	4a62      	ldr	r2, [pc, #392]	; (80048e4 <HAL_DMA_Abort_IT+0x3c4>)
 800475c:	4293      	cmp	r3, r2
 800475e:	d027      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	4a60      	ldr	r2, [pc, #384]	; (80048e8 <HAL_DMA_Abort_IT+0x3c8>)
 8004766:	4293      	cmp	r3, r2
 8004768:	d022      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	4a5f      	ldr	r2, [pc, #380]	; (80048ec <HAL_DMA_Abort_IT+0x3cc>)
 8004770:	4293      	cmp	r3, r2
 8004772:	d01d      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	4a5d      	ldr	r2, [pc, #372]	; (80048f0 <HAL_DMA_Abort_IT+0x3d0>)
 800477a:	4293      	cmp	r3, r2
 800477c:	d018      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	4a5c      	ldr	r2, [pc, #368]	; (80048f4 <HAL_DMA_Abort_IT+0x3d4>)
 8004784:	4293      	cmp	r3, r2
 8004786:	d013      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	4a5a      	ldr	r2, [pc, #360]	; (80048f8 <HAL_DMA_Abort_IT+0x3d8>)
 800478e:	4293      	cmp	r3, r2
 8004790:	d00e      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	4a59      	ldr	r2, [pc, #356]	; (80048fc <HAL_DMA_Abort_IT+0x3dc>)
 8004798:	4293      	cmp	r3, r2
 800479a:	d009      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	4a57      	ldr	r2, [pc, #348]	; (8004900 <HAL_DMA_Abort_IT+0x3e0>)
 80047a2:	4293      	cmp	r3, r2
 80047a4:	d004      	beq.n	80047b0 <HAL_DMA_Abort_IT+0x290>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	4a56      	ldr	r2, [pc, #344]	; (8004904 <HAL_DMA_Abort_IT+0x3e4>)
 80047ac:	4293      	cmp	r3, r2
 80047ae:	d108      	bne.n	80047c2 <HAL_DMA_Abort_IT+0x2a2>
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	681a      	ldr	r2, [r3, #0]
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	f022 0201 	bic.w	r2, r2, #1
 80047be:	601a      	str	r2, [r3, #0]
 80047c0:	e007      	b.n	80047d2 <HAL_DMA_Abort_IT+0x2b2>
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	681a      	ldr	r2, [r3, #0]
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	f022 0201 	bic.w	r2, r2, #1
 80047d0:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	4a3c      	ldr	r2, [pc, #240]	; (80048c8 <HAL_DMA_Abort_IT+0x3a8>)
 80047d8:	4293      	cmp	r3, r2
 80047da:	d072      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	4a3a      	ldr	r2, [pc, #232]	; (80048cc <HAL_DMA_Abort_IT+0x3ac>)
 80047e2:	4293      	cmp	r3, r2
 80047e4:	d06d      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	4a39      	ldr	r2, [pc, #228]	; (80048d0 <HAL_DMA_Abort_IT+0x3b0>)
 80047ec:	4293      	cmp	r3, r2
 80047ee:	d068      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	4a37      	ldr	r2, [pc, #220]	; (80048d4 <HAL_DMA_Abort_IT+0x3b4>)
 80047f6:	4293      	cmp	r3, r2
 80047f8:	d063      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	4a36      	ldr	r2, [pc, #216]	; (80048d8 <HAL_DMA_Abort_IT+0x3b8>)
 8004800:	4293      	cmp	r3, r2
 8004802:	d05e      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	4a34      	ldr	r2, [pc, #208]	; (80048dc <HAL_DMA_Abort_IT+0x3bc>)
 800480a:	4293      	cmp	r3, r2
 800480c:	d059      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	4a33      	ldr	r2, [pc, #204]	; (80048e0 <HAL_DMA_Abort_IT+0x3c0>)
 8004814:	4293      	cmp	r3, r2
 8004816:	d054      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	4a31      	ldr	r2, [pc, #196]	; (80048e4 <HAL_DMA_Abort_IT+0x3c4>)
 800481e:	4293      	cmp	r3, r2
 8004820:	d04f      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	4a30      	ldr	r2, [pc, #192]	; (80048e8 <HAL_DMA_Abort_IT+0x3c8>)
 8004828:	4293      	cmp	r3, r2
 800482a:	d04a      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4a2e      	ldr	r2, [pc, #184]	; (80048ec <HAL_DMA_Abort_IT+0x3cc>)
 8004832:	4293      	cmp	r3, r2
 8004834:	d045      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	4a2d      	ldr	r2, [pc, #180]	; (80048f0 <HAL_DMA_Abort_IT+0x3d0>)
 800483c:	4293      	cmp	r3, r2
 800483e:	d040      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	4a2b      	ldr	r2, [pc, #172]	; (80048f4 <HAL_DMA_Abort_IT+0x3d4>)
 8004846:	4293      	cmp	r3, r2
 8004848:	d03b      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	4a2a      	ldr	r2, [pc, #168]	; (80048f8 <HAL_DMA_Abort_IT+0x3d8>)
 8004850:	4293      	cmp	r3, r2
 8004852:	d036      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	4a28      	ldr	r2, [pc, #160]	; (80048fc <HAL_DMA_Abort_IT+0x3dc>)
 800485a:	4293      	cmp	r3, r2
 800485c:	d031      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	4a27      	ldr	r2, [pc, #156]	; (8004900 <HAL_DMA_Abort_IT+0x3e0>)
 8004864:	4293      	cmp	r3, r2
 8004866:	d02c      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	4a25      	ldr	r2, [pc, #148]	; (8004904 <HAL_DMA_Abort_IT+0x3e4>)
 800486e:	4293      	cmp	r3, r2
 8004870:	d027      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	4a24      	ldr	r2, [pc, #144]	; (8004908 <HAL_DMA_Abort_IT+0x3e8>)
 8004878:	4293      	cmp	r3, r2
 800487a:	d022      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	4a22      	ldr	r2, [pc, #136]	; (800490c <HAL_DMA_Abort_IT+0x3ec>)
 8004882:	4293      	cmp	r3, r2
 8004884:	d01d      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	4a21      	ldr	r2, [pc, #132]	; (8004910 <HAL_DMA_Abort_IT+0x3f0>)
 800488c:	4293      	cmp	r3, r2
 800488e:	d018      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	4a1f      	ldr	r2, [pc, #124]	; (8004914 <HAL_DMA_Abort_IT+0x3f4>)
 8004896:	4293      	cmp	r3, r2
 8004898:	d013      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	4a1e      	ldr	r2, [pc, #120]	; (8004918 <HAL_DMA_Abort_IT+0x3f8>)
 80048a0:	4293      	cmp	r3, r2
 80048a2:	d00e      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	4a1c      	ldr	r2, [pc, #112]	; (800491c <HAL_DMA_Abort_IT+0x3fc>)
 80048aa:	4293      	cmp	r3, r2
 80048ac:	d009      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	4a1b      	ldr	r2, [pc, #108]	; (8004920 <HAL_DMA_Abort_IT+0x400>)
 80048b4:	4293      	cmp	r3, r2
 80048b6:	d004      	beq.n	80048c2 <HAL_DMA_Abort_IT+0x3a2>
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	4a19      	ldr	r2, [pc, #100]	; (8004924 <HAL_DMA_Abort_IT+0x404>)
 80048be:	4293      	cmp	r3, r2
 80048c0:	d132      	bne.n	8004928 <HAL_DMA_Abort_IT+0x408>
 80048c2:	2301      	movs	r3, #1
 80048c4:	e031      	b.n	800492a <HAL_DMA_Abort_IT+0x40a>
 80048c6:	bf00      	nop
 80048c8:	40020010 	.word	0x40020010
 80048cc:	40020028 	.word	0x40020028
 80048d0:	40020040 	.word	0x40020040
 80048d4:	40020058 	.word	0x40020058
 80048d8:	40020070 	.word	0x40020070
 80048dc:	40020088 	.word	0x40020088
 80048e0:	400200a0 	.word	0x400200a0
 80048e4:	400200b8 	.word	0x400200b8
 80048e8:	40020410 	.word	0x40020410
 80048ec:	40020428 	.word	0x40020428
 80048f0:	40020440 	.word	0x40020440
 80048f4:	40020458 	.word	0x40020458
 80048f8:	40020470 	.word	0x40020470
 80048fc:	40020488 	.word	0x40020488
 8004900:	400204a0 	.word	0x400204a0
 8004904:	400204b8 	.word	0x400204b8
 8004908:	58025408 	.word	0x58025408
 800490c:	5802541c 	.word	0x5802541c
 8004910:	58025430 	.word	0x58025430
 8004914:	58025444 	.word	0x58025444
 8004918:	58025458 	.word	0x58025458
 800491c:	5802546c 	.word	0x5802546c
 8004920:	58025480 	.word	0x58025480
 8004924:	58025494 	.word	0x58025494
 8004928:	2300      	movs	r3, #0
 800492a:	2b00      	cmp	r3, #0
 800492c:	d028      	beq.n	8004980 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004932:	681a      	ldr	r2, [r3, #0]
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004938:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800493c:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004942:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004948:	f003 031f 	and.w	r3, r3, #31
 800494c:	2201      	movs	r2, #1
 800494e:	409a      	lsls	r2, r3
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004958:	687a      	ldr	r2, [r7, #4]
 800495a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800495c:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004962:	2b00      	cmp	r3, #0
 8004964:	d00c      	beq.n	8004980 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800496a:	681a      	ldr	r2, [r3, #0]
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004970:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004974:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800497a:	687a      	ldr	r2, [r7, #4]
 800497c:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800497e:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	2201      	movs	r2, #1
 8004984:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	2200      	movs	r2, #0
 800498c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004994:	2b00      	cmp	r3, #0
 8004996:	d003      	beq.n	80049a0 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800499c:	6878      	ldr	r0, [r7, #4]
 800499e:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 80049a0:	2300      	movs	r3, #0
}
 80049a2:	4618      	mov	r0, r3
 80049a4:	3710      	adds	r7, #16
 80049a6:	46bd      	mov	sp, r7
 80049a8:	bd80      	pop	{r7, pc}
 80049aa:	bf00      	nop

080049ac <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80049ac:	b580      	push	{r7, lr}
 80049ae:	b08a      	sub	sp, #40	; 0x28
 80049b0:	af00      	add	r7, sp, #0
 80049b2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr_dma, tmpisr_bdma;
  uint32_t ccr_reg;
  __IO uint32_t count = 0U;
 80049b4:	2300      	movs	r3, #0
 80049b6:	60fb      	str	r3, [r7, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
 80049b8:	4b67      	ldr	r3, [pc, #412]	; (8004b58 <HAL_DMA_IRQHandler+0x1ac>)
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	4a67      	ldr	r2, [pc, #412]	; (8004b5c <HAL_DMA_IRQHandler+0x1b0>)
 80049be:	fba2 2303 	umull	r2, r3, r2, r3
 80049c2:	0a9b      	lsrs	r3, r3, #10
 80049c4:	627b      	str	r3, [r7, #36]	; 0x24

  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049ca:	623b      	str	r3, [r7, #32]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049d0:	61fb      	str	r3, [r7, #28]

  tmpisr_dma  = regs_dma->ISR;
 80049d2:	6a3b      	ldr	r3, [r7, #32]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	61bb      	str	r3, [r7, #24]
  tmpisr_bdma = regs_bdma->ISR;
 80049d8:	69fb      	ldr	r3, [r7, #28]
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	617b      	str	r3, [r7, #20]

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U)  /* DMA1 or DMA2 instance */
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	4a5f      	ldr	r2, [pc, #380]	; (8004b60 <HAL_DMA_IRQHandler+0x1b4>)
 80049e4:	4293      	cmp	r3, r2
 80049e6:	d04a      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	4a5d      	ldr	r2, [pc, #372]	; (8004b64 <HAL_DMA_IRQHandler+0x1b8>)
 80049ee:	4293      	cmp	r3, r2
 80049f0:	d045      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	4a5c      	ldr	r2, [pc, #368]	; (8004b68 <HAL_DMA_IRQHandler+0x1bc>)
 80049f8:	4293      	cmp	r3, r2
 80049fa:	d040      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	4a5a      	ldr	r2, [pc, #360]	; (8004b6c <HAL_DMA_IRQHandler+0x1c0>)
 8004a02:	4293      	cmp	r3, r2
 8004a04:	d03b      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	4a59      	ldr	r2, [pc, #356]	; (8004b70 <HAL_DMA_IRQHandler+0x1c4>)
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	d036      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	4a57      	ldr	r2, [pc, #348]	; (8004b74 <HAL_DMA_IRQHandler+0x1c8>)
 8004a16:	4293      	cmp	r3, r2
 8004a18:	d031      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	4a56      	ldr	r2, [pc, #344]	; (8004b78 <HAL_DMA_IRQHandler+0x1cc>)
 8004a20:	4293      	cmp	r3, r2
 8004a22:	d02c      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	4a54      	ldr	r2, [pc, #336]	; (8004b7c <HAL_DMA_IRQHandler+0x1d0>)
 8004a2a:	4293      	cmp	r3, r2
 8004a2c:	d027      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	4a53      	ldr	r2, [pc, #332]	; (8004b80 <HAL_DMA_IRQHandler+0x1d4>)
 8004a34:	4293      	cmp	r3, r2
 8004a36:	d022      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	4a51      	ldr	r2, [pc, #324]	; (8004b84 <HAL_DMA_IRQHandler+0x1d8>)
 8004a3e:	4293      	cmp	r3, r2
 8004a40:	d01d      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	681b      	ldr	r3, [r3, #0]
 8004a46:	4a50      	ldr	r2, [pc, #320]	; (8004b88 <HAL_DMA_IRQHandler+0x1dc>)
 8004a48:	4293      	cmp	r3, r2
 8004a4a:	d018      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	4a4e      	ldr	r2, [pc, #312]	; (8004b8c <HAL_DMA_IRQHandler+0x1e0>)
 8004a52:	4293      	cmp	r3, r2
 8004a54:	d013      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	4a4d      	ldr	r2, [pc, #308]	; (8004b90 <HAL_DMA_IRQHandler+0x1e4>)
 8004a5c:	4293      	cmp	r3, r2
 8004a5e:	d00e      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	4a4b      	ldr	r2, [pc, #300]	; (8004b94 <HAL_DMA_IRQHandler+0x1e8>)
 8004a66:	4293      	cmp	r3, r2
 8004a68:	d009      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	4a4a      	ldr	r2, [pc, #296]	; (8004b98 <HAL_DMA_IRQHandler+0x1ec>)
 8004a70:	4293      	cmp	r3, r2
 8004a72:	d004      	beq.n	8004a7e <HAL_DMA_IRQHandler+0xd2>
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	4a48      	ldr	r2, [pc, #288]	; (8004b9c <HAL_DMA_IRQHandler+0x1f0>)
 8004a7a:	4293      	cmp	r3, r2
 8004a7c:	d101      	bne.n	8004a82 <HAL_DMA_IRQHandler+0xd6>
 8004a7e:	2301      	movs	r3, #1
 8004a80:	e000      	b.n	8004a84 <HAL_DMA_IRQHandler+0xd8>
 8004a82:	2300      	movs	r3, #0
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	f000 842b 	beq.w	80052e0 <HAL_DMA_IRQHandler+0x934>
  {
    /* Transfer Error Interrupt management ***************************************/
    if ((tmpisr_dma & (DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004a8e:	f003 031f 	and.w	r3, r3, #31
 8004a92:	2208      	movs	r2, #8
 8004a94:	409a      	lsls	r2, r3
 8004a96:	69bb      	ldr	r3, [r7, #24]
 8004a98:	4013      	ands	r3, r2
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	f000 80a2 	beq.w	8004be4 <HAL_DMA_IRQHandler+0x238>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != 0U)
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	4a2e      	ldr	r2, [pc, #184]	; (8004b60 <HAL_DMA_IRQHandler+0x1b4>)
 8004aa6:	4293      	cmp	r3, r2
 8004aa8:	d04a      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	4a2d      	ldr	r2, [pc, #180]	; (8004b64 <HAL_DMA_IRQHandler+0x1b8>)
 8004ab0:	4293      	cmp	r3, r2
 8004ab2:	d045      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	4a2b      	ldr	r2, [pc, #172]	; (8004b68 <HAL_DMA_IRQHandler+0x1bc>)
 8004aba:	4293      	cmp	r3, r2
 8004abc:	d040      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4a2a      	ldr	r2, [pc, #168]	; (8004b6c <HAL_DMA_IRQHandler+0x1c0>)
 8004ac4:	4293      	cmp	r3, r2
 8004ac6:	d03b      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	4a28      	ldr	r2, [pc, #160]	; (8004b70 <HAL_DMA_IRQHandler+0x1c4>)
 8004ace:	4293      	cmp	r3, r2
 8004ad0:	d036      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	4a27      	ldr	r2, [pc, #156]	; (8004b74 <HAL_DMA_IRQHandler+0x1c8>)
 8004ad8:	4293      	cmp	r3, r2
 8004ada:	d031      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4a25      	ldr	r2, [pc, #148]	; (8004b78 <HAL_DMA_IRQHandler+0x1cc>)
 8004ae2:	4293      	cmp	r3, r2
 8004ae4:	d02c      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	4a24      	ldr	r2, [pc, #144]	; (8004b7c <HAL_DMA_IRQHandler+0x1d0>)
 8004aec:	4293      	cmp	r3, r2
 8004aee:	d027      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	4a22      	ldr	r2, [pc, #136]	; (8004b80 <HAL_DMA_IRQHandler+0x1d4>)
 8004af6:	4293      	cmp	r3, r2
 8004af8:	d022      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	4a21      	ldr	r2, [pc, #132]	; (8004b84 <HAL_DMA_IRQHandler+0x1d8>)
 8004b00:	4293      	cmp	r3, r2
 8004b02:	d01d      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	4a1f      	ldr	r2, [pc, #124]	; (8004b88 <HAL_DMA_IRQHandler+0x1dc>)
 8004b0a:	4293      	cmp	r3, r2
 8004b0c:	d018      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	4a1e      	ldr	r2, [pc, #120]	; (8004b8c <HAL_DMA_IRQHandler+0x1e0>)
 8004b14:	4293      	cmp	r3, r2
 8004b16:	d013      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	4a1c      	ldr	r2, [pc, #112]	; (8004b90 <HAL_DMA_IRQHandler+0x1e4>)
 8004b1e:	4293      	cmp	r3, r2
 8004b20:	d00e      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	4a1b      	ldr	r2, [pc, #108]	; (8004b94 <HAL_DMA_IRQHandler+0x1e8>)
 8004b28:	4293      	cmp	r3, r2
 8004b2a:	d009      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	4a19      	ldr	r2, [pc, #100]	; (8004b98 <HAL_DMA_IRQHandler+0x1ec>)
 8004b32:	4293      	cmp	r3, r2
 8004b34:	d004      	beq.n	8004b40 <HAL_DMA_IRQHandler+0x194>
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	4a18      	ldr	r2, [pc, #96]	; (8004b9c <HAL_DMA_IRQHandler+0x1f0>)
 8004b3c:	4293      	cmp	r3, r2
 8004b3e:	d12f      	bne.n	8004ba0 <HAL_DMA_IRQHandler+0x1f4>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f003 0304 	and.w	r3, r3, #4
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	bf14      	ite	ne
 8004b4e:	2301      	movne	r3, #1
 8004b50:	2300      	moveq	r3, #0
 8004b52:	b2db      	uxtb	r3, r3
 8004b54:	e02e      	b.n	8004bb4 <HAL_DMA_IRQHandler+0x208>
 8004b56:	bf00      	nop
 8004b58:	24000004 	.word	0x24000004
 8004b5c:	1b4e81b5 	.word	0x1b4e81b5
 8004b60:	40020010 	.word	0x40020010
 8004b64:	40020028 	.word	0x40020028
 8004b68:	40020040 	.word	0x40020040
 8004b6c:	40020058 	.word	0x40020058
 8004b70:	40020070 	.word	0x40020070
 8004b74:	40020088 	.word	0x40020088
 8004b78:	400200a0 	.word	0x400200a0
 8004b7c:	400200b8 	.word	0x400200b8
 8004b80:	40020410 	.word	0x40020410
 8004b84:	40020428 	.word	0x40020428
 8004b88:	40020440 	.word	0x40020440
 8004b8c:	40020458 	.word	0x40020458
 8004b90:	40020470 	.word	0x40020470
 8004b94:	40020488 	.word	0x40020488
 8004b98:	400204a0 	.word	0x400204a0
 8004b9c:	400204b8 	.word	0x400204b8
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	f003 0308 	and.w	r3, r3, #8
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	bf14      	ite	ne
 8004bae:	2301      	movne	r3, #1
 8004bb0:	2300      	moveq	r3, #0
 8004bb2:	b2db      	uxtb	r3, r3
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d015      	beq.n	8004be4 <HAL_DMA_IRQHandler+0x238>
      {
        /* Disable the transfer error interrupt */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TE);
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	681a      	ldr	r2, [r3, #0]
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	f022 0204 	bic.w	r2, r2, #4
 8004bc6:	601a      	str	r2, [r3, #0]

        /* Clear the transfer error flag */
        regs_dma->IFCR = DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bcc:	f003 031f 	and.w	r3, r3, #31
 8004bd0:	2208      	movs	r2, #8
 8004bd2:	409a      	lsls	r2, r3
 8004bd4:	6a3b      	ldr	r3, [r7, #32]
 8004bd6:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004bdc:	f043 0201 	orr.w	r2, r3, #1
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* FIFO Error Interrupt management ******************************************/
    if ((tmpisr_dma & (DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004be8:	f003 031f 	and.w	r3, r3, #31
 8004bec:	69ba      	ldr	r2, [r7, #24]
 8004bee:	fa22 f303 	lsr.w	r3, r2, r3
 8004bf2:	f003 0301 	and.w	r3, r3, #1
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d06e      	beq.n	8004cd8 <HAL_DMA_IRQHandler+0x32c>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != 0U)
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	4a69      	ldr	r2, [pc, #420]	; (8004da4 <HAL_DMA_IRQHandler+0x3f8>)
 8004c00:	4293      	cmp	r3, r2
 8004c02:	d04a      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	4a67      	ldr	r2, [pc, #412]	; (8004da8 <HAL_DMA_IRQHandler+0x3fc>)
 8004c0a:	4293      	cmp	r3, r2
 8004c0c:	d045      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	4a66      	ldr	r2, [pc, #408]	; (8004dac <HAL_DMA_IRQHandler+0x400>)
 8004c14:	4293      	cmp	r3, r2
 8004c16:	d040      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	681b      	ldr	r3, [r3, #0]
 8004c1c:	4a64      	ldr	r2, [pc, #400]	; (8004db0 <HAL_DMA_IRQHandler+0x404>)
 8004c1e:	4293      	cmp	r3, r2
 8004c20:	d03b      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	4a63      	ldr	r2, [pc, #396]	; (8004db4 <HAL_DMA_IRQHandler+0x408>)
 8004c28:	4293      	cmp	r3, r2
 8004c2a:	d036      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	681b      	ldr	r3, [r3, #0]
 8004c30:	4a61      	ldr	r2, [pc, #388]	; (8004db8 <HAL_DMA_IRQHandler+0x40c>)
 8004c32:	4293      	cmp	r3, r2
 8004c34:	d031      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	4a60      	ldr	r2, [pc, #384]	; (8004dbc <HAL_DMA_IRQHandler+0x410>)
 8004c3c:	4293      	cmp	r3, r2
 8004c3e:	d02c      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	4a5e      	ldr	r2, [pc, #376]	; (8004dc0 <HAL_DMA_IRQHandler+0x414>)
 8004c46:	4293      	cmp	r3, r2
 8004c48:	d027      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	4a5d      	ldr	r2, [pc, #372]	; (8004dc4 <HAL_DMA_IRQHandler+0x418>)
 8004c50:	4293      	cmp	r3, r2
 8004c52:	d022      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	4a5b      	ldr	r2, [pc, #364]	; (8004dc8 <HAL_DMA_IRQHandler+0x41c>)
 8004c5a:	4293      	cmp	r3, r2
 8004c5c:	d01d      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	4a5a      	ldr	r2, [pc, #360]	; (8004dcc <HAL_DMA_IRQHandler+0x420>)
 8004c64:	4293      	cmp	r3, r2
 8004c66:	d018      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	4a58      	ldr	r2, [pc, #352]	; (8004dd0 <HAL_DMA_IRQHandler+0x424>)
 8004c6e:	4293      	cmp	r3, r2
 8004c70:	d013      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	4a57      	ldr	r2, [pc, #348]	; (8004dd4 <HAL_DMA_IRQHandler+0x428>)
 8004c78:	4293      	cmp	r3, r2
 8004c7a:	d00e      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	4a55      	ldr	r2, [pc, #340]	; (8004dd8 <HAL_DMA_IRQHandler+0x42c>)
 8004c82:	4293      	cmp	r3, r2
 8004c84:	d009      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	4a54      	ldr	r2, [pc, #336]	; (8004ddc <HAL_DMA_IRQHandler+0x430>)
 8004c8c:	4293      	cmp	r3, r2
 8004c8e:	d004      	beq.n	8004c9a <HAL_DMA_IRQHandler+0x2ee>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	4a52      	ldr	r2, [pc, #328]	; (8004de0 <HAL_DMA_IRQHandler+0x434>)
 8004c96:	4293      	cmp	r3, r2
 8004c98:	d10a      	bne.n	8004cb0 <HAL_DMA_IRQHandler+0x304>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	695b      	ldr	r3, [r3, #20]
 8004ca0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ca4:	2b00      	cmp	r3, #0
 8004ca6:	bf14      	ite	ne
 8004ca8:	2301      	movne	r3, #1
 8004caa:	2300      	moveq	r3, #0
 8004cac:	b2db      	uxtb	r3, r3
 8004cae:	e003      	b.n	8004cb8 <HAL_DMA_IRQHandler+0x30c>
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	2b00      	cmp	r3, #0
 8004cba:	d00d      	beq.n	8004cd8 <HAL_DMA_IRQHandler+0x32c>
      {
        /* Clear the FIFO error flag */
        regs_dma->IFCR = DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004cc0:	f003 031f 	and.w	r3, r3, #31
 8004cc4:	2201      	movs	r2, #1
 8004cc6:	409a      	lsls	r2, r3
 8004cc8:	6a3b      	ldr	r3, [r7, #32]
 8004cca:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004cd0:	f043 0202 	orr.w	r2, r3, #2
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Direct Mode Error Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004cdc:	f003 031f 	and.w	r3, r3, #31
 8004ce0:	2204      	movs	r2, #4
 8004ce2:	409a      	lsls	r2, r3
 8004ce4:	69bb      	ldr	r3, [r7, #24]
 8004ce6:	4013      	ands	r3, r2
 8004ce8:	2b00      	cmp	r3, #0
 8004cea:	f000 808f 	beq.w	8004e0c <HAL_DMA_IRQHandler+0x460>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != 0U)
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	681b      	ldr	r3, [r3, #0]
 8004cf2:	4a2c      	ldr	r2, [pc, #176]	; (8004da4 <HAL_DMA_IRQHandler+0x3f8>)
 8004cf4:	4293      	cmp	r3, r2
 8004cf6:	d04a      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	4a2a      	ldr	r2, [pc, #168]	; (8004da8 <HAL_DMA_IRQHandler+0x3fc>)
 8004cfe:	4293      	cmp	r3, r2
 8004d00:	d045      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	4a29      	ldr	r2, [pc, #164]	; (8004dac <HAL_DMA_IRQHandler+0x400>)
 8004d08:	4293      	cmp	r3, r2
 8004d0a:	d040      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	4a27      	ldr	r2, [pc, #156]	; (8004db0 <HAL_DMA_IRQHandler+0x404>)
 8004d12:	4293      	cmp	r3, r2
 8004d14:	d03b      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	4a26      	ldr	r2, [pc, #152]	; (8004db4 <HAL_DMA_IRQHandler+0x408>)
 8004d1c:	4293      	cmp	r3, r2
 8004d1e:	d036      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	4a24      	ldr	r2, [pc, #144]	; (8004db8 <HAL_DMA_IRQHandler+0x40c>)
 8004d26:	4293      	cmp	r3, r2
 8004d28:	d031      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	4a23      	ldr	r2, [pc, #140]	; (8004dbc <HAL_DMA_IRQHandler+0x410>)
 8004d30:	4293      	cmp	r3, r2
 8004d32:	d02c      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	4a21      	ldr	r2, [pc, #132]	; (8004dc0 <HAL_DMA_IRQHandler+0x414>)
 8004d3a:	4293      	cmp	r3, r2
 8004d3c:	d027      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	4a20      	ldr	r2, [pc, #128]	; (8004dc4 <HAL_DMA_IRQHandler+0x418>)
 8004d44:	4293      	cmp	r3, r2
 8004d46:	d022      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	4a1e      	ldr	r2, [pc, #120]	; (8004dc8 <HAL_DMA_IRQHandler+0x41c>)
 8004d4e:	4293      	cmp	r3, r2
 8004d50:	d01d      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	4a1d      	ldr	r2, [pc, #116]	; (8004dcc <HAL_DMA_IRQHandler+0x420>)
 8004d58:	4293      	cmp	r3, r2
 8004d5a:	d018      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	4a1b      	ldr	r2, [pc, #108]	; (8004dd0 <HAL_DMA_IRQHandler+0x424>)
 8004d62:	4293      	cmp	r3, r2
 8004d64:	d013      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	4a1a      	ldr	r2, [pc, #104]	; (8004dd4 <HAL_DMA_IRQHandler+0x428>)
 8004d6c:	4293      	cmp	r3, r2
 8004d6e:	d00e      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	4a18      	ldr	r2, [pc, #96]	; (8004dd8 <HAL_DMA_IRQHandler+0x42c>)
 8004d76:	4293      	cmp	r3, r2
 8004d78:	d009      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	4a17      	ldr	r2, [pc, #92]	; (8004ddc <HAL_DMA_IRQHandler+0x430>)
 8004d80:	4293      	cmp	r3, r2
 8004d82:	d004      	beq.n	8004d8e <HAL_DMA_IRQHandler+0x3e2>
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	4a15      	ldr	r2, [pc, #84]	; (8004de0 <HAL_DMA_IRQHandler+0x434>)
 8004d8a:	4293      	cmp	r3, r2
 8004d8c:	d12a      	bne.n	8004de4 <HAL_DMA_IRQHandler+0x438>
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	f003 0302 	and.w	r3, r3, #2
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	bf14      	ite	ne
 8004d9c:	2301      	movne	r3, #1
 8004d9e:	2300      	moveq	r3, #0
 8004da0:	b2db      	uxtb	r3, r3
 8004da2:	e023      	b.n	8004dec <HAL_DMA_IRQHandler+0x440>
 8004da4:	40020010 	.word	0x40020010
 8004da8:	40020028 	.word	0x40020028
 8004dac:	40020040 	.word	0x40020040
 8004db0:	40020058 	.word	0x40020058
 8004db4:	40020070 	.word	0x40020070
 8004db8:	40020088 	.word	0x40020088
 8004dbc:	400200a0 	.word	0x400200a0
 8004dc0:	400200b8 	.word	0x400200b8
 8004dc4:	40020410 	.word	0x40020410
 8004dc8:	40020428 	.word	0x40020428
 8004dcc:	40020440 	.word	0x40020440
 8004dd0:	40020458 	.word	0x40020458
 8004dd4:	40020470 	.word	0x40020470
 8004dd8:	40020488 	.word	0x40020488
 8004ddc:	400204a0 	.word	0x400204a0
 8004de0:	400204b8 	.word	0x400204b8
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	2300      	movs	r3, #0
 8004dec:	2b00      	cmp	r3, #0
 8004dee:	d00d      	beq.n	8004e0c <HAL_DMA_IRQHandler+0x460>
      {
        /* Clear the direct mode error flag */
        regs_dma->IFCR = DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004df4:	f003 031f 	and.w	r3, r3, #31
 8004df8:	2204      	movs	r2, #4
 8004dfa:	409a      	lsls	r2, r3
 8004dfc:	6a3b      	ldr	r3, [r7, #32]
 8004dfe:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004e04:	f043 0204 	orr.w	r2, r3, #4
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Half Transfer Complete Interrupt management ******************************/
    if ((tmpisr_dma & (DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e10:	f003 031f 	and.w	r3, r3, #31
 8004e14:	2210      	movs	r2, #16
 8004e16:	409a      	lsls	r2, r3
 8004e18:	69bb      	ldr	r3, [r7, #24]
 8004e1a:	4013      	ands	r3, r2
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	f000 80a6 	beq.w	8004f6e <HAL_DMA_IRQHandler+0x5c2>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4a85      	ldr	r2, [pc, #532]	; (800503c <HAL_DMA_IRQHandler+0x690>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	d04a      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	4a83      	ldr	r2, [pc, #524]	; (8005040 <HAL_DMA_IRQHandler+0x694>)
 8004e32:	4293      	cmp	r3, r2
 8004e34:	d045      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a82      	ldr	r2, [pc, #520]	; (8005044 <HAL_DMA_IRQHandler+0x698>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d040      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	4a80      	ldr	r2, [pc, #512]	; (8005048 <HAL_DMA_IRQHandler+0x69c>)
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d03b      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a7f      	ldr	r2, [pc, #508]	; (800504c <HAL_DMA_IRQHandler+0x6a0>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d036      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	4a7d      	ldr	r2, [pc, #500]	; (8005050 <HAL_DMA_IRQHandler+0x6a4>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d031      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	4a7c      	ldr	r2, [pc, #496]	; (8005054 <HAL_DMA_IRQHandler+0x6a8>)
 8004e64:	4293      	cmp	r3, r2
 8004e66:	d02c      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a7a      	ldr	r2, [pc, #488]	; (8005058 <HAL_DMA_IRQHandler+0x6ac>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d027      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a79      	ldr	r2, [pc, #484]	; (800505c <HAL_DMA_IRQHandler+0x6b0>)
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	d022      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4a77      	ldr	r2, [pc, #476]	; (8005060 <HAL_DMA_IRQHandler+0x6b4>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d01d      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	4a76      	ldr	r2, [pc, #472]	; (8005064 <HAL_DMA_IRQHandler+0x6b8>)
 8004e8c:	4293      	cmp	r3, r2
 8004e8e:	d018      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	4a74      	ldr	r2, [pc, #464]	; (8005068 <HAL_DMA_IRQHandler+0x6bc>)
 8004e96:	4293      	cmp	r3, r2
 8004e98:	d013      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	4a73      	ldr	r2, [pc, #460]	; (800506c <HAL_DMA_IRQHandler+0x6c0>)
 8004ea0:	4293      	cmp	r3, r2
 8004ea2:	d00e      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	4a71      	ldr	r2, [pc, #452]	; (8005070 <HAL_DMA_IRQHandler+0x6c4>)
 8004eaa:	4293      	cmp	r3, r2
 8004eac:	d009      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	4a70      	ldr	r2, [pc, #448]	; (8005074 <HAL_DMA_IRQHandler+0x6c8>)
 8004eb4:	4293      	cmp	r3, r2
 8004eb6:	d004      	beq.n	8004ec2 <HAL_DMA_IRQHandler+0x516>
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	4a6e      	ldr	r2, [pc, #440]	; (8005078 <HAL_DMA_IRQHandler+0x6cc>)
 8004ebe:	4293      	cmp	r3, r2
 8004ec0:	d10a      	bne.n	8004ed8 <HAL_DMA_IRQHandler+0x52c>
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	f003 0308 	and.w	r3, r3, #8
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	bf14      	ite	ne
 8004ed0:	2301      	movne	r3, #1
 8004ed2:	2300      	moveq	r3, #0
 8004ed4:	b2db      	uxtb	r3, r3
 8004ed6:	e009      	b.n	8004eec <HAL_DMA_IRQHandler+0x540>
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	f003 0304 	and.w	r3, r3, #4
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	bf14      	ite	ne
 8004ee6:	2301      	movne	r3, #1
 8004ee8:	2300      	moveq	r3, #0
 8004eea:	b2db      	uxtb	r3, r3
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d03e      	beq.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
      {
        /* Clear the half transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004ef4:	f003 031f 	and.w	r3, r3, #31
 8004ef8:	2210      	movs	r2, #16
 8004efa:	409a      	lsls	r2, r3
 8004efc:	6a3b      	ldr	r3, [r7, #32]
 8004efe:	609a      	str	r2, [r3, #8]

        /* Multi_Buffering mode enabled */
        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d018      	beq.n	8004f40 <HAL_DMA_IRQHandler+0x594>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004f18:	2b00      	cmp	r3, #0
 8004f1a:	d108      	bne.n	8004f2e <HAL_DMA_IRQHandler+0x582>
          {
            if(hdma->XferHalfCpltCallback != NULL)
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d024      	beq.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferHalfCpltCallback(hdma);
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f28:	6878      	ldr	r0, [r7, #4]
 8004f2a:	4798      	blx	r3
 8004f2c:	e01f      	b.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferM1HalfCpltCallback != NULL)
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d01b      	beq.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferM1HalfCpltCallback(hdma);
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004f3a:	6878      	ldr	r0, [r7, #4]
 8004f3c:	4798      	blx	r3
 8004f3e:	e016      	b.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
          }
        }
        else
        {
          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	681b      	ldr	r3, [r3, #0]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004f4a:	2b00      	cmp	r3, #0
 8004f4c:	d107      	bne.n	8004f5e <HAL_DMA_IRQHandler+0x5b2>
          {
            /* Disable the half transfer interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	681b      	ldr	r3, [r3, #0]
 8004f52:	681a      	ldr	r2, [r3, #0]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	f022 0208 	bic.w	r2, r2, #8
 8004f5c:	601a      	str	r2, [r3, #0]
          }

          if(hdma->XferHalfCpltCallback != NULL)
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	d003      	beq.n	8004f6e <HAL_DMA_IRQHandler+0x5c2>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f6a:	6878      	ldr	r0, [r7, #4]
 8004f6c:	4798      	blx	r3
          }
        }
      }
    }
    /* Transfer Complete Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f72:	f003 031f 	and.w	r3, r3, #31
 8004f76:	2220      	movs	r2, #32
 8004f78:	409a      	lsls	r2, r3
 8004f7a:	69bb      	ldr	r3, [r7, #24]
 8004f7c:	4013      	ands	r3, r2
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	f000 8110 	beq.w	80051a4 <HAL_DMA_IRQHandler+0x7f8>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	4a2c      	ldr	r2, [pc, #176]	; (800503c <HAL_DMA_IRQHandler+0x690>)
 8004f8a:	4293      	cmp	r3, r2
 8004f8c:	d04a      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	4a2b      	ldr	r2, [pc, #172]	; (8005040 <HAL_DMA_IRQHandler+0x694>)
 8004f94:	4293      	cmp	r3, r2
 8004f96:	d045      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	4a29      	ldr	r2, [pc, #164]	; (8005044 <HAL_DMA_IRQHandler+0x698>)
 8004f9e:	4293      	cmp	r3, r2
 8004fa0:	d040      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	4a28      	ldr	r2, [pc, #160]	; (8005048 <HAL_DMA_IRQHandler+0x69c>)
 8004fa8:	4293      	cmp	r3, r2
 8004faa:	d03b      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	4a26      	ldr	r2, [pc, #152]	; (800504c <HAL_DMA_IRQHandler+0x6a0>)
 8004fb2:	4293      	cmp	r3, r2
 8004fb4:	d036      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4a25      	ldr	r2, [pc, #148]	; (8005050 <HAL_DMA_IRQHandler+0x6a4>)
 8004fbc:	4293      	cmp	r3, r2
 8004fbe:	d031      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	4a23      	ldr	r2, [pc, #140]	; (8005054 <HAL_DMA_IRQHandler+0x6a8>)
 8004fc6:	4293      	cmp	r3, r2
 8004fc8:	d02c      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	4a22      	ldr	r2, [pc, #136]	; (8005058 <HAL_DMA_IRQHandler+0x6ac>)
 8004fd0:	4293      	cmp	r3, r2
 8004fd2:	d027      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	4a20      	ldr	r2, [pc, #128]	; (800505c <HAL_DMA_IRQHandler+0x6b0>)
 8004fda:	4293      	cmp	r3, r2
 8004fdc:	d022      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	4a1f      	ldr	r2, [pc, #124]	; (8005060 <HAL_DMA_IRQHandler+0x6b4>)
 8004fe4:	4293      	cmp	r3, r2
 8004fe6:	d01d      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	681b      	ldr	r3, [r3, #0]
 8004fec:	4a1d      	ldr	r2, [pc, #116]	; (8005064 <HAL_DMA_IRQHandler+0x6b8>)
 8004fee:	4293      	cmp	r3, r2
 8004ff0:	d018      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	4a1c      	ldr	r2, [pc, #112]	; (8005068 <HAL_DMA_IRQHandler+0x6bc>)
 8004ff8:	4293      	cmp	r3, r2
 8004ffa:	d013      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	4a1a      	ldr	r2, [pc, #104]	; (800506c <HAL_DMA_IRQHandler+0x6c0>)
 8005002:	4293      	cmp	r3, r2
 8005004:	d00e      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	4a19      	ldr	r2, [pc, #100]	; (8005070 <HAL_DMA_IRQHandler+0x6c4>)
 800500c:	4293      	cmp	r3, r2
 800500e:	d009      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	4a17      	ldr	r2, [pc, #92]	; (8005074 <HAL_DMA_IRQHandler+0x6c8>)
 8005016:	4293      	cmp	r3, r2
 8005018:	d004      	beq.n	8005024 <HAL_DMA_IRQHandler+0x678>
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	4a16      	ldr	r2, [pc, #88]	; (8005078 <HAL_DMA_IRQHandler+0x6cc>)
 8005020:	4293      	cmp	r3, r2
 8005022:	d12b      	bne.n	800507c <HAL_DMA_IRQHandler+0x6d0>
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	f003 0310 	and.w	r3, r3, #16
 800502e:	2b00      	cmp	r3, #0
 8005030:	bf14      	ite	ne
 8005032:	2301      	movne	r3, #1
 8005034:	2300      	moveq	r3, #0
 8005036:	b2db      	uxtb	r3, r3
 8005038:	e02a      	b.n	8005090 <HAL_DMA_IRQHandler+0x6e4>
 800503a:	bf00      	nop
 800503c:	40020010 	.word	0x40020010
 8005040:	40020028 	.word	0x40020028
 8005044:	40020040 	.word	0x40020040
 8005048:	40020058 	.word	0x40020058
 800504c:	40020070 	.word	0x40020070
 8005050:	40020088 	.word	0x40020088
 8005054:	400200a0 	.word	0x400200a0
 8005058:	400200b8 	.word	0x400200b8
 800505c:	40020410 	.word	0x40020410
 8005060:	40020428 	.word	0x40020428
 8005064:	40020440 	.word	0x40020440
 8005068:	40020458 	.word	0x40020458
 800506c:	40020470 	.word	0x40020470
 8005070:	40020488 	.word	0x40020488
 8005074:	400204a0 	.word	0x400204a0
 8005078:	400204b8 	.word	0x400204b8
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	f003 0302 	and.w	r3, r3, #2
 8005086:	2b00      	cmp	r3, #0
 8005088:	bf14      	ite	ne
 800508a:	2301      	movne	r3, #1
 800508c:	2300      	moveq	r3, #0
 800508e:	b2db      	uxtb	r3, r3
 8005090:	2b00      	cmp	r3, #0
 8005092:	f000 8087 	beq.w	80051a4 <HAL_DMA_IRQHandler+0x7f8>
      {
        /* Clear the transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU);
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800509a:	f003 031f 	and.w	r3, r3, #31
 800509e:	2220      	movs	r2, #32
 80050a0:	409a      	lsls	r2, r3
 80050a2:	6a3b      	ldr	r3, [r7, #32]
 80050a4:	609a      	str	r2, [r3, #8]

        if(HAL_DMA_STATE_ABORT == hdma->State)
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80050ac:	b2db      	uxtb	r3, r3
 80050ae:	2b04      	cmp	r3, #4
 80050b0:	d139      	bne.n	8005126 <HAL_DMA_IRQHandler+0x77a>
        {
          /* Disable all the transfer interrupts */
          ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	681a      	ldr	r2, [r3, #0]
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	f022 0216 	bic.w	r2, r2, #22
 80050c0:	601a      	str	r2, [r3, #0]
          ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	695a      	ldr	r2, [r3, #20]
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80050d0:	615a      	str	r2, [r3, #20]

          if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d103      	bne.n	80050e2 <HAL_DMA_IRQHandler+0x736>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d007      	beq.n	80050f2 <HAL_DMA_IRQHandler+0x746>
          {
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	681a      	ldr	r2, [r3, #0]
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	f022 0208 	bic.w	r2, r2, #8
 80050f0:	601a      	str	r2, [r3, #0]
          }

          /* Clear all interrupt flags at correct offset within the register */
          regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050f6:	f003 031f 	and.w	r3, r3, #31
 80050fa:	223f      	movs	r2, #63	; 0x3f
 80050fc:	409a      	lsls	r2, r3
 80050fe:	6a3b      	ldr	r3, [r7, #32]
 8005100:	609a      	str	r2, [r3, #8]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	2201      	movs	r2, #1
 8005106:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	2200      	movs	r2, #0
 800510e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          if(hdma->XferAbortCallback != NULL)
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005116:	2b00      	cmp	r3, #0
 8005118:	f000 834a 	beq.w	80057b0 <HAL_DMA_IRQHandler+0xe04>
          {
            hdma->XferAbortCallback(hdma);
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005120:	6878      	ldr	r0, [r7, #4]
 8005122:	4798      	blx	r3
          }
          return;
 8005124:	e344      	b.n	80057b0 <HAL_DMA_IRQHandler+0xe04>
        }

        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005130:	2b00      	cmp	r3, #0
 8005132:	d018      	beq.n	8005166 <HAL_DMA_IRQHandler+0x7ba>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800513e:	2b00      	cmp	r3, #0
 8005140:	d108      	bne.n	8005154 <HAL_DMA_IRQHandler+0x7a8>
          {
            if(hdma->XferM1CpltCallback != NULL)
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005146:	2b00      	cmp	r3, #0
 8005148:	d02c      	beq.n	80051a4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory1 */
              hdma->XferM1CpltCallback(hdma);
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800514e:	6878      	ldr	r0, [r7, #4]
 8005150:	4798      	blx	r3
 8005152:	e027      	b.n	80051a4 <HAL_DMA_IRQHandler+0x7f8>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferCpltCallback != NULL)
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005158:	2b00      	cmp	r3, #0
 800515a:	d023      	beq.n	80051a4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory0 */
              hdma->XferCpltCallback(hdma);
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005160:	6878      	ldr	r0, [r7, #4]
 8005162:	4798      	blx	r3
 8005164:	e01e      	b.n	80051a4 <HAL_DMA_IRQHandler+0x7f8>
          }
        }
        /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
        else
        {
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005170:	2b00      	cmp	r3, #0
 8005172:	d10f      	bne.n	8005194 <HAL_DMA_IRQHandler+0x7e8>
          {
            /* Disable the transfer complete interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC);
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	681a      	ldr	r2, [r3, #0]
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	f022 0210 	bic.w	r2, r2, #16
 8005182:	601a      	str	r2, [r3, #0]

            /* Change the DMA state */
            hdma->State = HAL_DMA_STATE_READY;
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	2201      	movs	r2, #1
 8005188:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

            /* Process Unlocked */
            __HAL_UNLOCK(hdma);
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	2200      	movs	r2, #0
 8005190:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          }

          if(hdma->XferCpltCallback != NULL)
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005198:	2b00      	cmp	r3, #0
 800519a:	d003      	beq.n	80051a4 <HAL_DMA_IRQHandler+0x7f8>
          {
            /* Transfer complete callback */
            hdma->XferCpltCallback(hdma);
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051a0:	6878      	ldr	r0, [r7, #4]
 80051a2:	4798      	blx	r3
        }
      }
    }

    /* manage error case */
    if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	f000 8306 	beq.w	80057ba <HAL_DMA_IRQHandler+0xe0e>
    {
      if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != 0U)
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80051b2:	f003 0301 	and.w	r3, r3, #1
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	f000 8088 	beq.w	80052cc <HAL_DMA_IRQHandler+0x920>
      {
        hdma->State = HAL_DMA_STATE_ABORT;
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	2204      	movs	r2, #4
 80051c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Disable the stream */
        __HAL_DMA_DISABLE(hdma);
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	4a7a      	ldr	r2, [pc, #488]	; (80053b4 <HAL_DMA_IRQHandler+0xa08>)
 80051ca:	4293      	cmp	r3, r2
 80051cc:	d04a      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	4a79      	ldr	r2, [pc, #484]	; (80053b8 <HAL_DMA_IRQHandler+0xa0c>)
 80051d4:	4293      	cmp	r3, r2
 80051d6:	d045      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	4a77      	ldr	r2, [pc, #476]	; (80053bc <HAL_DMA_IRQHandler+0xa10>)
 80051de:	4293      	cmp	r3, r2
 80051e0:	d040      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	4a76      	ldr	r2, [pc, #472]	; (80053c0 <HAL_DMA_IRQHandler+0xa14>)
 80051e8:	4293      	cmp	r3, r2
 80051ea:	d03b      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	4a74      	ldr	r2, [pc, #464]	; (80053c4 <HAL_DMA_IRQHandler+0xa18>)
 80051f2:	4293      	cmp	r3, r2
 80051f4:	d036      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	4a73      	ldr	r2, [pc, #460]	; (80053c8 <HAL_DMA_IRQHandler+0xa1c>)
 80051fc:	4293      	cmp	r3, r2
 80051fe:	d031      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	4a71      	ldr	r2, [pc, #452]	; (80053cc <HAL_DMA_IRQHandler+0xa20>)
 8005206:	4293      	cmp	r3, r2
 8005208:	d02c      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	4a70      	ldr	r2, [pc, #448]	; (80053d0 <HAL_DMA_IRQHandler+0xa24>)
 8005210:	4293      	cmp	r3, r2
 8005212:	d027      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	4a6e      	ldr	r2, [pc, #440]	; (80053d4 <HAL_DMA_IRQHandler+0xa28>)
 800521a:	4293      	cmp	r3, r2
 800521c:	d022      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	4a6d      	ldr	r2, [pc, #436]	; (80053d8 <HAL_DMA_IRQHandler+0xa2c>)
 8005224:	4293      	cmp	r3, r2
 8005226:	d01d      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	681b      	ldr	r3, [r3, #0]
 800522c:	4a6b      	ldr	r2, [pc, #428]	; (80053dc <HAL_DMA_IRQHandler+0xa30>)
 800522e:	4293      	cmp	r3, r2
 8005230:	d018      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	4a6a      	ldr	r2, [pc, #424]	; (80053e0 <HAL_DMA_IRQHandler+0xa34>)
 8005238:	4293      	cmp	r3, r2
 800523a:	d013      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	4a68      	ldr	r2, [pc, #416]	; (80053e4 <HAL_DMA_IRQHandler+0xa38>)
 8005242:	4293      	cmp	r3, r2
 8005244:	d00e      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	4a67      	ldr	r2, [pc, #412]	; (80053e8 <HAL_DMA_IRQHandler+0xa3c>)
 800524c:	4293      	cmp	r3, r2
 800524e:	d009      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	4a65      	ldr	r2, [pc, #404]	; (80053ec <HAL_DMA_IRQHandler+0xa40>)
 8005256:	4293      	cmp	r3, r2
 8005258:	d004      	beq.n	8005264 <HAL_DMA_IRQHandler+0x8b8>
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	4a64      	ldr	r2, [pc, #400]	; (80053f0 <HAL_DMA_IRQHandler+0xa44>)
 8005260:	4293      	cmp	r3, r2
 8005262:	d108      	bne.n	8005276 <HAL_DMA_IRQHandler+0x8ca>
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	681a      	ldr	r2, [r3, #0]
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	f022 0201 	bic.w	r2, r2, #1
 8005272:	601a      	str	r2, [r3, #0]
 8005274:	e007      	b.n	8005286 <HAL_DMA_IRQHandler+0x8da>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	681a      	ldr	r2, [r3, #0]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f022 0201 	bic.w	r2, r2, #1
 8005284:	601a      	str	r2, [r3, #0]

        do
        {
          if (++count > timeout)
 8005286:	68fb      	ldr	r3, [r7, #12]
 8005288:	3301      	adds	r3, #1
 800528a:	60fb      	str	r3, [r7, #12]
 800528c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800528e:	429a      	cmp	r2, r3
 8005290:	d307      	bcc.n	80052a2 <HAL_DMA_IRQHandler+0x8f6>
          {
            break;
          }
        }
        while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U);
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f003 0301 	and.w	r3, r3, #1
 800529c:	2b00      	cmp	r3, #0
 800529e:	d1f2      	bne.n	8005286 <HAL_DMA_IRQHandler+0x8da>
 80052a0:	e000      	b.n	80052a4 <HAL_DMA_IRQHandler+0x8f8>
            break;
 80052a2:	bf00      	nop

        if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	f003 0301 	and.w	r3, r3, #1
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d004      	beq.n	80052bc <HAL_DMA_IRQHandler+0x910>
        {
          /* Change the DMA state to error if DMA disable fails */
          hdma->State = HAL_DMA_STATE_ERROR;
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	2203      	movs	r2, #3
 80052b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052ba:	e003      	b.n	80052c4 <HAL_DMA_IRQHandler+0x918>
        }
        else
        {
          /* Change the DMA state to Ready if DMA disable success */
          hdma->State = HAL_DMA_STATE_READY;
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	2201      	movs	r2, #1
 80052c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	2200      	movs	r2, #0
 80052c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      }

      if(hdma->XferErrorCallback != NULL)
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	f000 8272 	beq.w	80057ba <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052da:	6878      	ldr	r0, [r7, #4]
 80052dc:	4798      	blx	r3
 80052de:	e26c      	b.n	80057ba <HAL_DMA_IRQHandler+0xe0e>
      }
    }
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U)  /* BDMA instance(s) */
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	4a43      	ldr	r2, [pc, #268]	; (80053f4 <HAL_DMA_IRQHandler+0xa48>)
 80052e6:	4293      	cmp	r3, r2
 80052e8:	d022      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	4a42      	ldr	r2, [pc, #264]	; (80053f8 <HAL_DMA_IRQHandler+0xa4c>)
 80052f0:	4293      	cmp	r3, r2
 80052f2:	d01d      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	4a40      	ldr	r2, [pc, #256]	; (80053fc <HAL_DMA_IRQHandler+0xa50>)
 80052fa:	4293      	cmp	r3, r2
 80052fc:	d018      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	4a3f      	ldr	r2, [pc, #252]	; (8005400 <HAL_DMA_IRQHandler+0xa54>)
 8005304:	4293      	cmp	r3, r2
 8005306:	d013      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	4a3d      	ldr	r2, [pc, #244]	; (8005404 <HAL_DMA_IRQHandler+0xa58>)
 800530e:	4293      	cmp	r3, r2
 8005310:	d00e      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	4a3c      	ldr	r2, [pc, #240]	; (8005408 <HAL_DMA_IRQHandler+0xa5c>)
 8005318:	4293      	cmp	r3, r2
 800531a:	d009      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	4a3a      	ldr	r2, [pc, #232]	; (800540c <HAL_DMA_IRQHandler+0xa60>)
 8005322:	4293      	cmp	r3, r2
 8005324:	d004      	beq.n	8005330 <HAL_DMA_IRQHandler+0x984>
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	4a39      	ldr	r2, [pc, #228]	; (8005410 <HAL_DMA_IRQHandler+0xa64>)
 800532c:	4293      	cmp	r3, r2
 800532e:	d101      	bne.n	8005334 <HAL_DMA_IRQHandler+0x988>
 8005330:	2301      	movs	r3, #1
 8005332:	e000      	b.n	8005336 <HAL_DMA_IRQHandler+0x98a>
 8005334:	2300      	movs	r3, #0
 8005336:	2b00      	cmp	r3, #0
 8005338:	f000 823f 	beq.w	80057ba <HAL_DMA_IRQHandler+0xe0e>
  {
    ccr_reg = (((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR);
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	613b      	str	r3, [r7, #16]

    /* Half Transfer Complete Interrupt management ******************************/
    if (((tmpisr_bdma & (BDMA_FLAG_HT0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_HTIE) != 0U))
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005348:	f003 031f 	and.w	r3, r3, #31
 800534c:	2204      	movs	r2, #4
 800534e:	409a      	lsls	r2, r3
 8005350:	697b      	ldr	r3, [r7, #20]
 8005352:	4013      	ands	r3, r2
 8005354:	2b00      	cmp	r3, #0
 8005356:	f000 80cd 	beq.w	80054f4 <HAL_DMA_IRQHandler+0xb48>
 800535a:	693b      	ldr	r3, [r7, #16]
 800535c:	f003 0304 	and.w	r3, r3, #4
 8005360:	2b00      	cmp	r3, #0
 8005362:	f000 80c7 	beq.w	80054f4 <HAL_DMA_IRQHandler+0xb48>
    {
      /* Clear the half transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_HTIF0 << (hdma->StreamIndex & 0x1FU));
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800536a:	f003 031f 	and.w	r3, r3, #31
 800536e:	2204      	movs	r2, #4
 8005370:	409a      	lsls	r2, r3
 8005372:	69fb      	ldr	r3, [r7, #28]
 8005374:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005376:	693b      	ldr	r3, [r7, #16]
 8005378:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800537c:	2b00      	cmp	r3, #0
 800537e:	d049      	beq.n	8005414 <HAL_DMA_IRQHandler+0xa68>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8005380:	693b      	ldr	r3, [r7, #16]
 8005382:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005386:	2b00      	cmp	r3, #0
 8005388:	d109      	bne.n	800539e <HAL_DMA_IRQHandler+0x9f2>
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800538e:	2b00      	cmp	r3, #0
 8005390:	f000 8210 	beq.w	80057b4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 1 */
            hdma->XferM1HalfCpltCallback(hdma);
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005398:	6878      	ldr	r0, [r7, #4]
 800539a:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 800539c:	e20a      	b.n	80057b4 <HAL_DMA_IRQHandler+0xe08>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferHalfCpltCallback != NULL)
 800539e:	687b      	ldr	r3, [r7, #4]
 80053a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	f000 8206 	beq.w	80057b4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 0 */
            hdma->XferHalfCpltCallback(hdma);
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053ac:	6878      	ldr	r0, [r7, #4]
 80053ae:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80053b0:	e200      	b.n	80057b4 <HAL_DMA_IRQHandler+0xe08>
 80053b2:	bf00      	nop
 80053b4:	40020010 	.word	0x40020010
 80053b8:	40020028 	.word	0x40020028
 80053bc:	40020040 	.word	0x40020040
 80053c0:	40020058 	.word	0x40020058
 80053c4:	40020070 	.word	0x40020070
 80053c8:	40020088 	.word	0x40020088
 80053cc:	400200a0 	.word	0x400200a0
 80053d0:	400200b8 	.word	0x400200b8
 80053d4:	40020410 	.word	0x40020410
 80053d8:	40020428 	.word	0x40020428
 80053dc:	40020440 	.word	0x40020440
 80053e0:	40020458 	.word	0x40020458
 80053e4:	40020470 	.word	0x40020470
 80053e8:	40020488 	.word	0x40020488
 80053ec:	400204a0 	.word	0x400204a0
 80053f0:	400204b8 	.word	0x400204b8
 80053f4:	58025408 	.word	0x58025408
 80053f8:	5802541c 	.word	0x5802541c
 80053fc:	58025430 	.word	0x58025430
 8005400:	58025444 	.word	0x58025444
 8005404:	58025458 	.word	0x58025458
 8005408:	5802546c 	.word	0x5802546c
 800540c:	58025480 	.word	0x58025480
 8005410:	58025494 	.word	0x58025494
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8005414:	693b      	ldr	r3, [r7, #16]
 8005416:	f003 0320 	and.w	r3, r3, #32
 800541a:	2b00      	cmp	r3, #0
 800541c:	d160      	bne.n	80054e0 <HAL_DMA_IRQHandler+0xb34>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	4a7f      	ldr	r2, [pc, #508]	; (8005620 <HAL_DMA_IRQHandler+0xc74>)
 8005424:	4293      	cmp	r3, r2
 8005426:	d04a      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	4a7d      	ldr	r2, [pc, #500]	; (8005624 <HAL_DMA_IRQHandler+0xc78>)
 800542e:	4293      	cmp	r3, r2
 8005430:	d045      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	4a7c      	ldr	r2, [pc, #496]	; (8005628 <HAL_DMA_IRQHandler+0xc7c>)
 8005438:	4293      	cmp	r3, r2
 800543a:	d040      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	4a7a      	ldr	r2, [pc, #488]	; (800562c <HAL_DMA_IRQHandler+0xc80>)
 8005442:	4293      	cmp	r3, r2
 8005444:	d03b      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	4a79      	ldr	r2, [pc, #484]	; (8005630 <HAL_DMA_IRQHandler+0xc84>)
 800544c:	4293      	cmp	r3, r2
 800544e:	d036      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	4a77      	ldr	r2, [pc, #476]	; (8005634 <HAL_DMA_IRQHandler+0xc88>)
 8005456:	4293      	cmp	r3, r2
 8005458:	d031      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	4a76      	ldr	r2, [pc, #472]	; (8005638 <HAL_DMA_IRQHandler+0xc8c>)
 8005460:	4293      	cmp	r3, r2
 8005462:	d02c      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	4a74      	ldr	r2, [pc, #464]	; (800563c <HAL_DMA_IRQHandler+0xc90>)
 800546a:	4293      	cmp	r3, r2
 800546c:	d027      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	4a73      	ldr	r2, [pc, #460]	; (8005640 <HAL_DMA_IRQHandler+0xc94>)
 8005474:	4293      	cmp	r3, r2
 8005476:	d022      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	4a71      	ldr	r2, [pc, #452]	; (8005644 <HAL_DMA_IRQHandler+0xc98>)
 800547e:	4293      	cmp	r3, r2
 8005480:	d01d      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	4a70      	ldr	r2, [pc, #448]	; (8005648 <HAL_DMA_IRQHandler+0xc9c>)
 8005488:	4293      	cmp	r3, r2
 800548a:	d018      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	4a6e      	ldr	r2, [pc, #440]	; (800564c <HAL_DMA_IRQHandler+0xca0>)
 8005492:	4293      	cmp	r3, r2
 8005494:	d013      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	4a6d      	ldr	r2, [pc, #436]	; (8005650 <HAL_DMA_IRQHandler+0xca4>)
 800549c:	4293      	cmp	r3, r2
 800549e:	d00e      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 80054a0:	687b      	ldr	r3, [r7, #4]
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	4a6b      	ldr	r2, [pc, #428]	; (8005654 <HAL_DMA_IRQHandler+0xca8>)
 80054a6:	4293      	cmp	r3, r2
 80054a8:	d009      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	4a6a      	ldr	r2, [pc, #424]	; (8005658 <HAL_DMA_IRQHandler+0xcac>)
 80054b0:	4293      	cmp	r3, r2
 80054b2:	d004      	beq.n	80054be <HAL_DMA_IRQHandler+0xb12>
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	681b      	ldr	r3, [r3, #0]
 80054b8:	4a68      	ldr	r2, [pc, #416]	; (800565c <HAL_DMA_IRQHandler+0xcb0>)
 80054ba:	4293      	cmp	r3, r2
 80054bc:	d108      	bne.n	80054d0 <HAL_DMA_IRQHandler+0xb24>
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	681a      	ldr	r2, [r3, #0]
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	f022 0208 	bic.w	r2, r2, #8
 80054cc:	601a      	str	r2, [r3, #0]
 80054ce:	e007      	b.n	80054e0 <HAL_DMA_IRQHandler+0xb34>
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	681b      	ldr	r3, [r3, #0]
 80054d4:	681a      	ldr	r2, [r3, #0]
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f022 0204 	bic.w	r2, r2, #4
 80054de:	601a      	str	r2, [r3, #0]
        }

        /* DMA peripheral state is not updated in Half Transfer */
        /* but in Transfer Complete case */

       if(hdma->XferHalfCpltCallback != NULL)
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	f000 8165 	beq.w	80057b4 <HAL_DMA_IRQHandler+0xe08>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054ee:	6878      	ldr	r0, [r7, #4]
 80054f0:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80054f2:	e15f      	b.n	80057b4 <HAL_DMA_IRQHandler+0xe08>
        }
      }
    }

    /* Transfer Complete Interrupt management ***********************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TC0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TCIE) != 0U))
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80054f8:	f003 031f 	and.w	r3, r3, #31
 80054fc:	2202      	movs	r2, #2
 80054fe:	409a      	lsls	r2, r3
 8005500:	697b      	ldr	r3, [r7, #20]
 8005502:	4013      	ands	r3, r2
 8005504:	2b00      	cmp	r3, #0
 8005506:	f000 80c5 	beq.w	8005694 <HAL_DMA_IRQHandler+0xce8>
 800550a:	693b      	ldr	r3, [r7, #16]
 800550c:	f003 0302 	and.w	r3, r3, #2
 8005510:	2b00      	cmp	r3, #0
 8005512:	f000 80bf 	beq.w	8005694 <HAL_DMA_IRQHandler+0xce8>
    {
      /* Clear the transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_TCIF0) << (hdma->StreamIndex & 0x1FU);
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800551a:	f003 031f 	and.w	r3, r3, #31
 800551e:	2202      	movs	r2, #2
 8005520:	409a      	lsls	r2, r3
 8005522:	69fb      	ldr	r3, [r7, #28]
 8005524:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005526:	693b      	ldr	r3, [r7, #16]
 8005528:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800552c:	2b00      	cmp	r3, #0
 800552e:	d018      	beq.n	8005562 <HAL_DMA_IRQHandler+0xbb6>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8005530:	693b      	ldr	r3, [r7, #16]
 8005532:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005536:	2b00      	cmp	r3, #0
 8005538:	d109      	bne.n	800554e <HAL_DMA_IRQHandler+0xba2>
        {
          if(hdma->XferM1CpltCallback != NULL)
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800553e:	2b00      	cmp	r3, #0
 8005540:	f000 813a 	beq.w	80057b8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 1 */
            hdma->XferM1CpltCallback(hdma);
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005548:	6878      	ldr	r0, [r7, #4]
 800554a:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 800554c:	e134      	b.n	80057b8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005552:	2b00      	cmp	r3, #0
 8005554:	f000 8130 	beq.w	80057b8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 0 */
            hdma->XferCpltCallback(hdma);
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800555c:	6878      	ldr	r0, [r7, #4]
 800555e:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005560:	e12a      	b.n	80057b8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8005562:	693b      	ldr	r3, [r7, #16]
 8005564:	f003 0320 	and.w	r3, r3, #32
 8005568:	2b00      	cmp	r3, #0
 800556a:	f040 8089 	bne.w	8005680 <HAL_DMA_IRQHandler+0xcd4>
        {
          /* Disable the transfer complete and error interrupt, if the DMA mode is not CIRCULAR */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	4a2b      	ldr	r2, [pc, #172]	; (8005620 <HAL_DMA_IRQHandler+0xc74>)
 8005574:	4293      	cmp	r3, r2
 8005576:	d04a      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	4a29      	ldr	r2, [pc, #164]	; (8005624 <HAL_DMA_IRQHandler+0xc78>)
 800557e:	4293      	cmp	r3, r2
 8005580:	d045      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	4a28      	ldr	r2, [pc, #160]	; (8005628 <HAL_DMA_IRQHandler+0xc7c>)
 8005588:	4293      	cmp	r3, r2
 800558a:	d040      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	4a26      	ldr	r2, [pc, #152]	; (800562c <HAL_DMA_IRQHandler+0xc80>)
 8005592:	4293      	cmp	r3, r2
 8005594:	d03b      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 8005596:	687b      	ldr	r3, [r7, #4]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	4a25      	ldr	r2, [pc, #148]	; (8005630 <HAL_DMA_IRQHandler+0xc84>)
 800559c:	4293      	cmp	r3, r2
 800559e:	d036      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	4a23      	ldr	r2, [pc, #140]	; (8005634 <HAL_DMA_IRQHandler+0xc88>)
 80055a6:	4293      	cmp	r3, r2
 80055a8:	d031      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	4a22      	ldr	r2, [pc, #136]	; (8005638 <HAL_DMA_IRQHandler+0xc8c>)
 80055b0:	4293      	cmp	r3, r2
 80055b2:	d02c      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	4a20      	ldr	r2, [pc, #128]	; (800563c <HAL_DMA_IRQHandler+0xc90>)
 80055ba:	4293      	cmp	r3, r2
 80055bc:	d027      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	681b      	ldr	r3, [r3, #0]
 80055c2:	4a1f      	ldr	r2, [pc, #124]	; (8005640 <HAL_DMA_IRQHandler+0xc94>)
 80055c4:	4293      	cmp	r3, r2
 80055c6:	d022      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055c8:	687b      	ldr	r3, [r7, #4]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	4a1d      	ldr	r2, [pc, #116]	; (8005644 <HAL_DMA_IRQHandler+0xc98>)
 80055ce:	4293      	cmp	r3, r2
 80055d0:	d01d      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	4a1c      	ldr	r2, [pc, #112]	; (8005648 <HAL_DMA_IRQHandler+0xc9c>)
 80055d8:	4293      	cmp	r3, r2
 80055da:	d018      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	4a1a      	ldr	r2, [pc, #104]	; (800564c <HAL_DMA_IRQHandler+0xca0>)
 80055e2:	4293      	cmp	r3, r2
 80055e4:	d013      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	4a19      	ldr	r2, [pc, #100]	; (8005650 <HAL_DMA_IRQHandler+0xca4>)
 80055ec:	4293      	cmp	r3, r2
 80055ee:	d00e      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	4a17      	ldr	r2, [pc, #92]	; (8005654 <HAL_DMA_IRQHandler+0xca8>)
 80055f6:	4293      	cmp	r3, r2
 80055f8:	d009      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	4a16      	ldr	r2, [pc, #88]	; (8005658 <HAL_DMA_IRQHandler+0xcac>)
 8005600:	4293      	cmp	r3, r2
 8005602:	d004      	beq.n	800560e <HAL_DMA_IRQHandler+0xc62>
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	4a14      	ldr	r2, [pc, #80]	; (800565c <HAL_DMA_IRQHandler+0xcb0>)
 800560a:	4293      	cmp	r3, r2
 800560c:	d128      	bne.n	8005660 <HAL_DMA_IRQHandler+0xcb4>
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	681a      	ldr	r2, [r3, #0]
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	f022 0214 	bic.w	r2, r2, #20
 800561c:	601a      	str	r2, [r3, #0]
 800561e:	e027      	b.n	8005670 <HAL_DMA_IRQHandler+0xcc4>
 8005620:	40020010 	.word	0x40020010
 8005624:	40020028 	.word	0x40020028
 8005628:	40020040 	.word	0x40020040
 800562c:	40020058 	.word	0x40020058
 8005630:	40020070 	.word	0x40020070
 8005634:	40020088 	.word	0x40020088
 8005638:	400200a0 	.word	0x400200a0
 800563c:	400200b8 	.word	0x400200b8
 8005640:	40020410 	.word	0x40020410
 8005644:	40020428 	.word	0x40020428
 8005648:	40020440 	.word	0x40020440
 800564c:	40020458 	.word	0x40020458
 8005650:	40020470 	.word	0x40020470
 8005654:	40020488 	.word	0x40020488
 8005658:	400204a0 	.word	0x400204a0
 800565c:	400204b8 	.word	0x400204b8
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	681a      	ldr	r2, [r3, #0]
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	f022 020a 	bic.w	r2, r2, #10
 800566e:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	2201      	movs	r2, #1
 8005674:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	2200      	movs	r2, #0
 800567c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005684:	2b00      	cmp	r3, #0
 8005686:	f000 8097 	beq.w	80057b8 <HAL_DMA_IRQHandler+0xe0c>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800568e:	6878      	ldr	r0, [r7, #4]
 8005690:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005692:	e091      	b.n	80057b8 <HAL_DMA_IRQHandler+0xe0c>
        }
      }
    }
    /* Transfer Error Interrupt management **************************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TE0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TEIE) != 0U))
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005698:	f003 031f 	and.w	r3, r3, #31
 800569c:	2208      	movs	r2, #8
 800569e:	409a      	lsls	r2, r3
 80056a0:	697b      	ldr	r3, [r7, #20]
 80056a2:	4013      	ands	r3, r2
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	f000 8088 	beq.w	80057ba <HAL_DMA_IRQHandler+0xe0e>
 80056aa:	693b      	ldr	r3, [r7, #16]
 80056ac:	f003 0308 	and.w	r3, r3, #8
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	f000 8082 	beq.w	80057ba <HAL_DMA_IRQHandler+0xe0e>
    {
      /* When a DMA transfer error occurs */
      /* A hardware clear of its EN bits is performed */
      /* Disable ALL DMA IT */
      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	4a41      	ldr	r2, [pc, #260]	; (80057c0 <HAL_DMA_IRQHandler+0xe14>)
 80056bc:	4293      	cmp	r3, r2
 80056be:	d04a      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	4a3f      	ldr	r2, [pc, #252]	; (80057c4 <HAL_DMA_IRQHandler+0xe18>)
 80056c6:	4293      	cmp	r3, r2
 80056c8:	d045      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	4a3e      	ldr	r2, [pc, #248]	; (80057c8 <HAL_DMA_IRQHandler+0xe1c>)
 80056d0:	4293      	cmp	r3, r2
 80056d2:	d040      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	4a3c      	ldr	r2, [pc, #240]	; (80057cc <HAL_DMA_IRQHandler+0xe20>)
 80056da:	4293      	cmp	r3, r2
 80056dc:	d03b      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	4a3b      	ldr	r2, [pc, #236]	; (80057d0 <HAL_DMA_IRQHandler+0xe24>)
 80056e4:	4293      	cmp	r3, r2
 80056e6:	d036      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056e8:	687b      	ldr	r3, [r7, #4]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	4a39      	ldr	r2, [pc, #228]	; (80057d4 <HAL_DMA_IRQHandler+0xe28>)
 80056ee:	4293      	cmp	r3, r2
 80056f0:	d031      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	4a38      	ldr	r2, [pc, #224]	; (80057d8 <HAL_DMA_IRQHandler+0xe2c>)
 80056f8:	4293      	cmp	r3, r2
 80056fa:	d02c      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	4a36      	ldr	r2, [pc, #216]	; (80057dc <HAL_DMA_IRQHandler+0xe30>)
 8005702:	4293      	cmp	r3, r2
 8005704:	d027      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	4a35      	ldr	r2, [pc, #212]	; (80057e0 <HAL_DMA_IRQHandler+0xe34>)
 800570c:	4293      	cmp	r3, r2
 800570e:	d022      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	4a33      	ldr	r2, [pc, #204]	; (80057e4 <HAL_DMA_IRQHandler+0xe38>)
 8005716:	4293      	cmp	r3, r2
 8005718:	d01d      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	681b      	ldr	r3, [r3, #0]
 800571e:	4a32      	ldr	r2, [pc, #200]	; (80057e8 <HAL_DMA_IRQHandler+0xe3c>)
 8005720:	4293      	cmp	r3, r2
 8005722:	d018      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	4a30      	ldr	r2, [pc, #192]	; (80057ec <HAL_DMA_IRQHandler+0xe40>)
 800572a:	4293      	cmp	r3, r2
 800572c:	d013      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 800572e:	687b      	ldr	r3, [r7, #4]
 8005730:	681b      	ldr	r3, [r3, #0]
 8005732:	4a2f      	ldr	r2, [pc, #188]	; (80057f0 <HAL_DMA_IRQHandler+0xe44>)
 8005734:	4293      	cmp	r3, r2
 8005736:	d00e      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	4a2d      	ldr	r2, [pc, #180]	; (80057f4 <HAL_DMA_IRQHandler+0xe48>)
 800573e:	4293      	cmp	r3, r2
 8005740:	d009      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	4a2c      	ldr	r2, [pc, #176]	; (80057f8 <HAL_DMA_IRQHandler+0xe4c>)
 8005748:	4293      	cmp	r3, r2
 800574a:	d004      	beq.n	8005756 <HAL_DMA_IRQHandler+0xdaa>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	4a2a      	ldr	r2, [pc, #168]	; (80057fc <HAL_DMA_IRQHandler+0xe50>)
 8005752:	4293      	cmp	r3, r2
 8005754:	d108      	bne.n	8005768 <HAL_DMA_IRQHandler+0xdbc>
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	681a      	ldr	r2, [r3, #0]
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	f022 021c 	bic.w	r2, r2, #28
 8005764:	601a      	str	r2, [r3, #0]
 8005766:	e007      	b.n	8005778 <HAL_DMA_IRQHandler+0xdcc>
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	681a      	ldr	r2, [r3, #0]
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	f022 020e 	bic.w	r2, r2, #14
 8005776:	601a      	str	r2, [r3, #0]

      /* Clear all flags */
      regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800577c:	f003 031f 	and.w	r3, r3, #31
 8005780:	2201      	movs	r2, #1
 8005782:	409a      	lsls	r2, r3
 8005784:	69fb      	ldr	r3, [r7, #28]
 8005786:	605a      	str	r2, [r3, #4]

      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	2201      	movs	r2, #1
 800578c:	655a      	str	r2, [r3, #84]	; 0x54

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	2201      	movs	r2, #1
 8005792:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	2200      	movs	r2, #0
 800579a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      if (hdma->XferErrorCallback != NULL)
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d009      	beq.n	80057ba <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80057aa:	6878      	ldr	r0, [r7, #4]
 80057ac:	4798      	blx	r3
 80057ae:	e004      	b.n	80057ba <HAL_DMA_IRQHandler+0xe0e>
          return;
 80057b0:	bf00      	nop
 80057b2:	e002      	b.n	80057ba <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80057b4:	bf00      	nop
 80057b6:	e000      	b.n	80057ba <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80057b8:	bf00      	nop
  }
  else
  {
    /* Nothing To Do */
  }
}
 80057ba:	3728      	adds	r7, #40	; 0x28
 80057bc:	46bd      	mov	sp, r7
 80057be:	bd80      	pop	{r7, pc}
 80057c0:	40020010 	.word	0x40020010
 80057c4:	40020028 	.word	0x40020028
 80057c8:	40020040 	.word	0x40020040
 80057cc:	40020058 	.word	0x40020058
 80057d0:	40020070 	.word	0x40020070
 80057d4:	40020088 	.word	0x40020088
 80057d8:	400200a0 	.word	0x400200a0
 80057dc:	400200b8 	.word	0x400200b8
 80057e0:	40020410 	.word	0x40020410
 80057e4:	40020428 	.word	0x40020428
 80057e8:	40020440 	.word	0x40020440
 80057ec:	40020458 	.word	0x40020458
 80057f0:	40020470 	.word	0x40020470
 80057f4:	40020488 	.word	0x40020488
 80057f8:	400204a0 	.word	0x400204a0
 80057fc:	400204b8 	.word	0x400204b8

08005800 <HAL_DMA_GetError>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8005800:	b480      	push	{r7}
 8005802:	b083      	sub	sp, #12
 8005804:	af00      	add	r7, sp, #0
 8005806:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
}
 800580c:	4618      	mov	r0, r3
 800580e:	370c      	adds	r7, #12
 8005810:	46bd      	mov	sp, r7
 8005812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005816:	4770      	bx	lr

08005818 <DMA_SetConfig>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval None
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8005818:	b480      	push	{r7}
 800581a:	b087      	sub	sp, #28
 800581c:	af00      	add	r7, sp, #0
 800581e:	60f8      	str	r0, [r7, #12]
 8005820:	60b9      	str	r1, [r7, #8]
 8005822:	607a      	str	r2, [r7, #4]
 8005824:	603b      	str	r3, [r7, #0]
  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005826:	68fb      	ldr	r3, [r7, #12]
 8005828:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800582a:	617b      	str	r3, [r7, #20]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800582c:	68fb      	ldr	r3, [r7, #12]
 800582e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005830:	613b      	str	r3, [r7, #16]

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	4a7f      	ldr	r2, [pc, #508]	; (8005a34 <DMA_SetConfig+0x21c>)
 8005838:	4293      	cmp	r3, r2
 800583a:	d072      	beq.n	8005922 <DMA_SetConfig+0x10a>
 800583c:	68fb      	ldr	r3, [r7, #12]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	4a7d      	ldr	r2, [pc, #500]	; (8005a38 <DMA_SetConfig+0x220>)
 8005842:	4293      	cmp	r3, r2
 8005844:	d06d      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	4a7c      	ldr	r2, [pc, #496]	; (8005a3c <DMA_SetConfig+0x224>)
 800584c:	4293      	cmp	r3, r2
 800584e:	d068      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	4a7a      	ldr	r2, [pc, #488]	; (8005a40 <DMA_SetConfig+0x228>)
 8005856:	4293      	cmp	r3, r2
 8005858:	d063      	beq.n	8005922 <DMA_SetConfig+0x10a>
 800585a:	68fb      	ldr	r3, [r7, #12]
 800585c:	681b      	ldr	r3, [r3, #0]
 800585e:	4a79      	ldr	r2, [pc, #484]	; (8005a44 <DMA_SetConfig+0x22c>)
 8005860:	4293      	cmp	r3, r2
 8005862:	d05e      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	4a77      	ldr	r2, [pc, #476]	; (8005a48 <DMA_SetConfig+0x230>)
 800586a:	4293      	cmp	r3, r2
 800586c:	d059      	beq.n	8005922 <DMA_SetConfig+0x10a>
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	4a76      	ldr	r2, [pc, #472]	; (8005a4c <DMA_SetConfig+0x234>)
 8005874:	4293      	cmp	r3, r2
 8005876:	d054      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	4a74      	ldr	r2, [pc, #464]	; (8005a50 <DMA_SetConfig+0x238>)
 800587e:	4293      	cmp	r3, r2
 8005880:	d04f      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	4a73      	ldr	r2, [pc, #460]	; (8005a54 <DMA_SetConfig+0x23c>)
 8005888:	4293      	cmp	r3, r2
 800588a:	d04a      	beq.n	8005922 <DMA_SetConfig+0x10a>
 800588c:	68fb      	ldr	r3, [r7, #12]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	4a71      	ldr	r2, [pc, #452]	; (8005a58 <DMA_SetConfig+0x240>)
 8005892:	4293      	cmp	r3, r2
 8005894:	d045      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005896:	68fb      	ldr	r3, [r7, #12]
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	4a70      	ldr	r2, [pc, #448]	; (8005a5c <DMA_SetConfig+0x244>)
 800589c:	4293      	cmp	r3, r2
 800589e:	d040      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	4a6e      	ldr	r2, [pc, #440]	; (8005a60 <DMA_SetConfig+0x248>)
 80058a6:	4293      	cmp	r3, r2
 80058a8:	d03b      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	4a6d      	ldr	r2, [pc, #436]	; (8005a64 <DMA_SetConfig+0x24c>)
 80058b0:	4293      	cmp	r3, r2
 80058b2:	d036      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	4a6b      	ldr	r2, [pc, #428]	; (8005a68 <DMA_SetConfig+0x250>)
 80058ba:	4293      	cmp	r3, r2
 80058bc:	d031      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	4a6a      	ldr	r2, [pc, #424]	; (8005a6c <DMA_SetConfig+0x254>)
 80058c4:	4293      	cmp	r3, r2
 80058c6:	d02c      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	4a68      	ldr	r2, [pc, #416]	; (8005a70 <DMA_SetConfig+0x258>)
 80058ce:	4293      	cmp	r3, r2
 80058d0:	d027      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	4a67      	ldr	r2, [pc, #412]	; (8005a74 <DMA_SetConfig+0x25c>)
 80058d8:	4293      	cmp	r3, r2
 80058da:	d022      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058dc:	68fb      	ldr	r3, [r7, #12]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	4a65      	ldr	r2, [pc, #404]	; (8005a78 <DMA_SetConfig+0x260>)
 80058e2:	4293      	cmp	r3, r2
 80058e4:	d01d      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	4a64      	ldr	r2, [pc, #400]	; (8005a7c <DMA_SetConfig+0x264>)
 80058ec:	4293      	cmp	r3, r2
 80058ee:	d018      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	4a62      	ldr	r2, [pc, #392]	; (8005a80 <DMA_SetConfig+0x268>)
 80058f6:	4293      	cmp	r3, r2
 80058f8:	d013      	beq.n	8005922 <DMA_SetConfig+0x10a>
 80058fa:	68fb      	ldr	r3, [r7, #12]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	4a61      	ldr	r2, [pc, #388]	; (8005a84 <DMA_SetConfig+0x26c>)
 8005900:	4293      	cmp	r3, r2
 8005902:	d00e      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	4a5f      	ldr	r2, [pc, #380]	; (8005a88 <DMA_SetConfig+0x270>)
 800590a:	4293      	cmp	r3, r2
 800590c:	d009      	beq.n	8005922 <DMA_SetConfig+0x10a>
 800590e:	68fb      	ldr	r3, [r7, #12]
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	4a5e      	ldr	r2, [pc, #376]	; (8005a8c <DMA_SetConfig+0x274>)
 8005914:	4293      	cmp	r3, r2
 8005916:	d004      	beq.n	8005922 <DMA_SetConfig+0x10a>
 8005918:	68fb      	ldr	r3, [r7, #12]
 800591a:	681b      	ldr	r3, [r3, #0]
 800591c:	4a5c      	ldr	r2, [pc, #368]	; (8005a90 <DMA_SetConfig+0x278>)
 800591e:	4293      	cmp	r3, r2
 8005920:	d101      	bne.n	8005926 <DMA_SetConfig+0x10e>
 8005922:	2301      	movs	r3, #1
 8005924:	e000      	b.n	8005928 <DMA_SetConfig+0x110>
 8005926:	2300      	movs	r3, #0
 8005928:	2b00      	cmp	r3, #0
 800592a:	d00d      	beq.n	8005948 <DMA_SetConfig+0x130>
  {
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 800592c:	68fb      	ldr	r3, [r7, #12]
 800592e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005930:	68fa      	ldr	r2, [r7, #12]
 8005932:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005934:	605a      	str	r2, [r3, #4]

    if(hdma->DMAmuxRequestGen != 0U)
 8005936:	68fb      	ldr	r3, [r7, #12]
 8005938:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800593a:	2b00      	cmp	r3, #0
 800593c:	d004      	beq.n	8005948 <DMA_SetConfig+0x130>
    {
      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800593e:	68fb      	ldr	r3, [r7, #12]
 8005940:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005942:	68fa      	ldr	r2, [r7, #12]
 8005944:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005946:	605a      	str	r2, [r3, #4]
    }
  }

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	4a39      	ldr	r2, [pc, #228]	; (8005a34 <DMA_SetConfig+0x21c>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d04a      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 8005952:	68fb      	ldr	r3, [r7, #12]
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	4a38      	ldr	r2, [pc, #224]	; (8005a38 <DMA_SetConfig+0x220>)
 8005958:	4293      	cmp	r3, r2
 800595a:	d045      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 800595c:	68fb      	ldr	r3, [r7, #12]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	4a36      	ldr	r2, [pc, #216]	; (8005a3c <DMA_SetConfig+0x224>)
 8005962:	4293      	cmp	r3, r2
 8005964:	d040      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	4a35      	ldr	r2, [pc, #212]	; (8005a40 <DMA_SetConfig+0x228>)
 800596c:	4293      	cmp	r3, r2
 800596e:	d03b      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	4a33      	ldr	r2, [pc, #204]	; (8005a44 <DMA_SetConfig+0x22c>)
 8005976:	4293      	cmp	r3, r2
 8005978:	d036      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 800597a:	68fb      	ldr	r3, [r7, #12]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	4a32      	ldr	r2, [pc, #200]	; (8005a48 <DMA_SetConfig+0x230>)
 8005980:	4293      	cmp	r3, r2
 8005982:	d031      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 8005984:	68fb      	ldr	r3, [r7, #12]
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	4a30      	ldr	r2, [pc, #192]	; (8005a4c <DMA_SetConfig+0x234>)
 800598a:	4293      	cmp	r3, r2
 800598c:	d02c      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 800598e:	68fb      	ldr	r3, [r7, #12]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	4a2f      	ldr	r2, [pc, #188]	; (8005a50 <DMA_SetConfig+0x238>)
 8005994:	4293      	cmp	r3, r2
 8005996:	d027      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	4a2d      	ldr	r2, [pc, #180]	; (8005a54 <DMA_SetConfig+0x23c>)
 800599e:	4293      	cmp	r3, r2
 80059a0:	d022      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	681b      	ldr	r3, [r3, #0]
 80059a6:	4a2c      	ldr	r2, [pc, #176]	; (8005a58 <DMA_SetConfig+0x240>)
 80059a8:	4293      	cmp	r3, r2
 80059aa:	d01d      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059ac:	68fb      	ldr	r3, [r7, #12]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	4a2a      	ldr	r2, [pc, #168]	; (8005a5c <DMA_SetConfig+0x244>)
 80059b2:	4293      	cmp	r3, r2
 80059b4:	d018      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059b6:	68fb      	ldr	r3, [r7, #12]
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	4a29      	ldr	r2, [pc, #164]	; (8005a60 <DMA_SetConfig+0x248>)
 80059bc:	4293      	cmp	r3, r2
 80059be:	d013      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	4a27      	ldr	r2, [pc, #156]	; (8005a64 <DMA_SetConfig+0x24c>)
 80059c6:	4293      	cmp	r3, r2
 80059c8:	d00e      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	4a26      	ldr	r2, [pc, #152]	; (8005a68 <DMA_SetConfig+0x250>)
 80059d0:	4293      	cmp	r3, r2
 80059d2:	d009      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	681b      	ldr	r3, [r3, #0]
 80059d8:	4a24      	ldr	r2, [pc, #144]	; (8005a6c <DMA_SetConfig+0x254>)
 80059da:	4293      	cmp	r3, r2
 80059dc:	d004      	beq.n	80059e8 <DMA_SetConfig+0x1d0>
 80059de:	68fb      	ldr	r3, [r7, #12]
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	4a23      	ldr	r2, [pc, #140]	; (8005a70 <DMA_SetConfig+0x258>)
 80059e4:	4293      	cmp	r3, r2
 80059e6:	d101      	bne.n	80059ec <DMA_SetConfig+0x1d4>
 80059e8:	2301      	movs	r3, #1
 80059ea:	e000      	b.n	80059ee <DMA_SetConfig+0x1d6>
 80059ec:	2300      	movs	r3, #0
 80059ee:	2b00      	cmp	r3, #0
 80059f0:	d059      	beq.n	8005aa6 <DMA_SetConfig+0x28e>
  {
    /* Clear all interrupt flags at correct offset within the register */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80059f6:	f003 031f 	and.w	r3, r3, #31
 80059fa:	223f      	movs	r2, #63	; 0x3f
 80059fc:	409a      	lsls	r2, r3
 80059fe:	697b      	ldr	r3, [r7, #20]
 8005a00:	609a      	str	r2, [r3, #8]

    /* Clear DBM bit */
    ((DMA_Stream_TypeDef *)hdma->Instance)->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005a02:	68fb      	ldr	r3, [r7, #12]
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	681a      	ldr	r2, [r3, #0]
 8005a08:	68fb      	ldr	r3, [r7, #12]
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005a10:	601a      	str	r2, [r3, #0]

    /* Configure DMA Stream data length */
    ((DMA_Stream_TypeDef *)hdma->Instance)->NDTR = DataLength;
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	683a      	ldr	r2, [r7, #0]
 8005a18:	605a      	str	r2, [r3, #4]

    /* Peripheral to Memory */
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005a1a:	68fb      	ldr	r3, [r7, #12]
 8005a1c:	689b      	ldr	r3, [r3, #8]
 8005a1e:	2b40      	cmp	r3, #64	; 0x40
 8005a20:	d138      	bne.n	8005a94 <DMA_SetConfig+0x27c>
    {
      /* Configure DMA Stream destination address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = DstAddress;
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	687a      	ldr	r2, [r7, #4]
 8005a28:	609a      	str	r2, [r3, #8]

      /* Configure DMA Stream source address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = SrcAddress;
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	68ba      	ldr	r2, [r7, #8]
 8005a30:	60da      	str	r2, [r3, #12]
  }
  else
  {
    /* Nothing To Do */
  }
}
 8005a32:	e086      	b.n	8005b42 <DMA_SetConfig+0x32a>
 8005a34:	40020010 	.word	0x40020010
 8005a38:	40020028 	.word	0x40020028
 8005a3c:	40020040 	.word	0x40020040
 8005a40:	40020058 	.word	0x40020058
 8005a44:	40020070 	.word	0x40020070
 8005a48:	40020088 	.word	0x40020088
 8005a4c:	400200a0 	.word	0x400200a0
 8005a50:	400200b8 	.word	0x400200b8
 8005a54:	40020410 	.word	0x40020410
 8005a58:	40020428 	.word	0x40020428
 8005a5c:	40020440 	.word	0x40020440
 8005a60:	40020458 	.word	0x40020458
 8005a64:	40020470 	.word	0x40020470
 8005a68:	40020488 	.word	0x40020488
 8005a6c:	400204a0 	.word	0x400204a0
 8005a70:	400204b8 	.word	0x400204b8
 8005a74:	58025408 	.word	0x58025408
 8005a78:	5802541c 	.word	0x5802541c
 8005a7c:	58025430 	.word	0x58025430
 8005a80:	58025444 	.word	0x58025444
 8005a84:	58025458 	.word	0x58025458
 8005a88:	5802546c 	.word	0x5802546c
 8005a8c:	58025480 	.word	0x58025480
 8005a90:	58025494 	.word	0x58025494
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = SrcAddress;
 8005a94:	68fb      	ldr	r3, [r7, #12]
 8005a96:	681b      	ldr	r3, [r3, #0]
 8005a98:	68ba      	ldr	r2, [r7, #8]
 8005a9a:	609a      	str	r2, [r3, #8]
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = DstAddress;
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	681b      	ldr	r3, [r3, #0]
 8005aa0:	687a      	ldr	r2, [r7, #4]
 8005aa2:	60da      	str	r2, [r3, #12]
}
 8005aa4:	e04d      	b.n	8005b42 <DMA_SetConfig+0x32a>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	4a29      	ldr	r2, [pc, #164]	; (8005b50 <DMA_SetConfig+0x338>)
 8005aac:	4293      	cmp	r3, r2
 8005aae:	d022      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	4a27      	ldr	r2, [pc, #156]	; (8005b54 <DMA_SetConfig+0x33c>)
 8005ab6:	4293      	cmp	r3, r2
 8005ab8:	d01d      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	4a26      	ldr	r2, [pc, #152]	; (8005b58 <DMA_SetConfig+0x340>)
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	d018      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	4a24      	ldr	r2, [pc, #144]	; (8005b5c <DMA_SetConfig+0x344>)
 8005aca:	4293      	cmp	r3, r2
 8005acc:	d013      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005ace:	68fb      	ldr	r3, [r7, #12]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	4a23      	ldr	r2, [pc, #140]	; (8005b60 <DMA_SetConfig+0x348>)
 8005ad4:	4293      	cmp	r3, r2
 8005ad6:	d00e      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	4a21      	ldr	r2, [pc, #132]	; (8005b64 <DMA_SetConfig+0x34c>)
 8005ade:	4293      	cmp	r3, r2
 8005ae0:	d009      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4a20      	ldr	r2, [pc, #128]	; (8005b68 <DMA_SetConfig+0x350>)
 8005ae8:	4293      	cmp	r3, r2
 8005aea:	d004      	beq.n	8005af6 <DMA_SetConfig+0x2de>
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	4a1e      	ldr	r2, [pc, #120]	; (8005b6c <DMA_SetConfig+0x354>)
 8005af2:	4293      	cmp	r3, r2
 8005af4:	d101      	bne.n	8005afa <DMA_SetConfig+0x2e2>
 8005af6:	2301      	movs	r3, #1
 8005af8:	e000      	b.n	8005afc <DMA_SetConfig+0x2e4>
 8005afa:	2300      	movs	r3, #0
 8005afc:	2b00      	cmp	r3, #0
 8005afe:	d020      	beq.n	8005b42 <DMA_SetConfig+0x32a>
    regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005b00:	68fb      	ldr	r3, [r7, #12]
 8005b02:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005b04:	f003 031f 	and.w	r3, r3, #31
 8005b08:	2201      	movs	r2, #1
 8005b0a:	409a      	lsls	r2, r3
 8005b0c:	693b      	ldr	r3, [r7, #16]
 8005b0e:	605a      	str	r2, [r3, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = DataLength;
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	683a      	ldr	r2, [r7, #0]
 8005b16:	605a      	str	r2, [r3, #4]
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005b18:	68fb      	ldr	r3, [r7, #12]
 8005b1a:	689b      	ldr	r3, [r3, #8]
 8005b1c:	2b40      	cmp	r3, #64	; 0x40
 8005b1e:	d108      	bne.n	8005b32 <DMA_SetConfig+0x31a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = DstAddress;
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	687a      	ldr	r2, [r7, #4]
 8005b26:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = SrcAddress;
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	68ba      	ldr	r2, [r7, #8]
 8005b2e:	60da      	str	r2, [r3, #12]
}
 8005b30:	e007      	b.n	8005b42 <DMA_SetConfig+0x32a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = SrcAddress;
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	68ba      	ldr	r2, [r7, #8]
 8005b38:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = DstAddress;
 8005b3a:	68fb      	ldr	r3, [r7, #12]
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	687a      	ldr	r2, [r7, #4]
 8005b40:	60da      	str	r2, [r3, #12]
}
 8005b42:	bf00      	nop
 8005b44:	371c      	adds	r7, #28
 8005b46:	46bd      	mov	sp, r7
 8005b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b4c:	4770      	bx	lr
 8005b4e:	bf00      	nop
 8005b50:	58025408 	.word	0x58025408
 8005b54:	5802541c 	.word	0x5802541c
 8005b58:	58025430 	.word	0x58025430
 8005b5c:	58025444 	.word	0x58025444
 8005b60:	58025458 	.word	0x58025458
 8005b64:	5802546c 	.word	0x5802546c
 8005b68:	58025480 	.word	0x58025480
 8005b6c:	58025494 	.word	0x58025494

08005b70 <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8005b70:	b480      	push	{r7}
 8005b72:	b085      	sub	sp, #20
 8005b74:	af00      	add	r7, sp, #0
 8005b76:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	4a42      	ldr	r2, [pc, #264]	; (8005c88 <DMA_CalcBaseAndBitshift+0x118>)
 8005b7e:	4293      	cmp	r3, r2
 8005b80:	d04a      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	4a41      	ldr	r2, [pc, #260]	; (8005c8c <DMA_CalcBaseAndBitshift+0x11c>)
 8005b88:	4293      	cmp	r3, r2
 8005b8a:	d045      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	4a3f      	ldr	r2, [pc, #252]	; (8005c90 <DMA_CalcBaseAndBitshift+0x120>)
 8005b92:	4293      	cmp	r3, r2
 8005b94:	d040      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	4a3e      	ldr	r2, [pc, #248]	; (8005c94 <DMA_CalcBaseAndBitshift+0x124>)
 8005b9c:	4293      	cmp	r3, r2
 8005b9e:	d03b      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	4a3c      	ldr	r2, [pc, #240]	; (8005c98 <DMA_CalcBaseAndBitshift+0x128>)
 8005ba6:	4293      	cmp	r3, r2
 8005ba8:	d036      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	4a3b      	ldr	r2, [pc, #236]	; (8005c9c <DMA_CalcBaseAndBitshift+0x12c>)
 8005bb0:	4293      	cmp	r3, r2
 8005bb2:	d031      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	4a39      	ldr	r2, [pc, #228]	; (8005ca0 <DMA_CalcBaseAndBitshift+0x130>)
 8005bba:	4293      	cmp	r3, r2
 8005bbc:	d02c      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	4a38      	ldr	r2, [pc, #224]	; (8005ca4 <DMA_CalcBaseAndBitshift+0x134>)
 8005bc4:	4293      	cmp	r3, r2
 8005bc6:	d027      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	4a36      	ldr	r2, [pc, #216]	; (8005ca8 <DMA_CalcBaseAndBitshift+0x138>)
 8005bce:	4293      	cmp	r3, r2
 8005bd0:	d022      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	4a35      	ldr	r2, [pc, #212]	; (8005cac <DMA_CalcBaseAndBitshift+0x13c>)
 8005bd8:	4293      	cmp	r3, r2
 8005bda:	d01d      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	4a33      	ldr	r2, [pc, #204]	; (8005cb0 <DMA_CalcBaseAndBitshift+0x140>)
 8005be2:	4293      	cmp	r3, r2
 8005be4:	d018      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005be6:	687b      	ldr	r3, [r7, #4]
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	4a32      	ldr	r2, [pc, #200]	; (8005cb4 <DMA_CalcBaseAndBitshift+0x144>)
 8005bec:	4293      	cmp	r3, r2
 8005bee:	d013      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	4a30      	ldr	r2, [pc, #192]	; (8005cb8 <DMA_CalcBaseAndBitshift+0x148>)
 8005bf6:	4293      	cmp	r3, r2
 8005bf8:	d00e      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	4a2f      	ldr	r2, [pc, #188]	; (8005cbc <DMA_CalcBaseAndBitshift+0x14c>)
 8005c00:	4293      	cmp	r3, r2
 8005c02:	d009      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	4a2d      	ldr	r2, [pc, #180]	; (8005cc0 <DMA_CalcBaseAndBitshift+0x150>)
 8005c0a:	4293      	cmp	r3, r2
 8005c0c:	d004      	beq.n	8005c18 <DMA_CalcBaseAndBitshift+0xa8>
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	4a2c      	ldr	r2, [pc, #176]	; (8005cc4 <DMA_CalcBaseAndBitshift+0x154>)
 8005c14:	4293      	cmp	r3, r2
 8005c16:	d101      	bne.n	8005c1c <DMA_CalcBaseAndBitshift+0xac>
 8005c18:	2301      	movs	r3, #1
 8005c1a:	e000      	b.n	8005c1e <DMA_CalcBaseAndBitshift+0xae>
 8005c1c:	2300      	movs	r3, #0
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d024      	beq.n	8005c6c <DMA_CalcBaseAndBitshift+0xfc>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005c22:	687b      	ldr	r3, [r7, #4]
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	b2db      	uxtb	r3, r3
 8005c28:	3b10      	subs	r3, #16
 8005c2a:	4a27      	ldr	r2, [pc, #156]	; (8005cc8 <DMA_CalcBaseAndBitshift+0x158>)
 8005c2c:	fba2 2303 	umull	r2, r3, r2, r3
 8005c30:	091b      	lsrs	r3, r3, #4
 8005c32:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8005c34:	68fb      	ldr	r3, [r7, #12]
 8005c36:	f003 0307 	and.w	r3, r3, #7
 8005c3a:	4a24      	ldr	r2, [pc, #144]	; (8005ccc <DMA_CalcBaseAndBitshift+0x15c>)
 8005c3c:	5cd3      	ldrb	r3, [r2, r3]
 8005c3e:	461a      	mov	r2, r3
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	2b03      	cmp	r3, #3
 8005c48:	d908      	bls.n	8005c5c <DMA_CalcBaseAndBitshift+0xec>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	681b      	ldr	r3, [r3, #0]
 8005c4e:	461a      	mov	r2, r3
 8005c50:	4b1f      	ldr	r3, [pc, #124]	; (8005cd0 <DMA_CalcBaseAndBitshift+0x160>)
 8005c52:	4013      	ands	r3, r2
 8005c54:	1d1a      	adds	r2, r3, #4
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	659a      	str	r2, [r3, #88]	; 0x58
 8005c5a:	e00d      	b.n	8005c78 <DMA_CalcBaseAndBitshift+0x108>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	681b      	ldr	r3, [r3, #0]
 8005c60:	461a      	mov	r2, r3
 8005c62:	4b1b      	ldr	r3, [pc, #108]	; (8005cd0 <DMA_CalcBaseAndBitshift+0x160>)
 8005c64:	4013      	ands	r3, r2
 8005c66:	687a      	ldr	r2, [r7, #4]
 8005c68:	6593      	str	r3, [r2, #88]	; 0x58
 8005c6a:	e005      	b.n	8005c78 <DMA_CalcBaseAndBitshift+0x108>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8005c7c:	4618      	mov	r0, r3
 8005c7e:	3714      	adds	r7, #20
 8005c80:	46bd      	mov	sp, r7
 8005c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c86:	4770      	bx	lr
 8005c88:	40020010 	.word	0x40020010
 8005c8c:	40020028 	.word	0x40020028
 8005c90:	40020040 	.word	0x40020040
 8005c94:	40020058 	.word	0x40020058
 8005c98:	40020070 	.word	0x40020070
 8005c9c:	40020088 	.word	0x40020088
 8005ca0:	400200a0 	.word	0x400200a0
 8005ca4:	400200b8 	.word	0x400200b8
 8005ca8:	40020410 	.word	0x40020410
 8005cac:	40020428 	.word	0x40020428
 8005cb0:	40020440 	.word	0x40020440
 8005cb4:	40020458 	.word	0x40020458
 8005cb8:	40020470 	.word	0x40020470
 8005cbc:	40020488 	.word	0x40020488
 8005cc0:	400204a0 	.word	0x400204a0
 8005cc4:	400204b8 	.word	0x400204b8
 8005cc8:	aaaaaaab 	.word	0xaaaaaaab
 8005ccc:	08027c90 	.word	0x08027c90
 8005cd0:	fffffc00 	.word	0xfffffc00

08005cd4 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8005cd4:	b480      	push	{r7}
 8005cd6:	b085      	sub	sp, #20
 8005cd8:	af00      	add	r7, sp, #0
 8005cda:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005cdc:	2300      	movs	r3, #0
 8005cde:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	699b      	ldr	r3, [r3, #24]
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d120      	bne.n	8005d2a <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005cec:	2b03      	cmp	r3, #3
 8005cee:	d858      	bhi.n	8005da2 <DMA_CheckFifoParam+0xce>
 8005cf0:	a201      	add	r2, pc, #4	; (adr r2, 8005cf8 <DMA_CheckFifoParam+0x24>)
 8005cf2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005cf6:	bf00      	nop
 8005cf8:	08005d09 	.word	0x08005d09
 8005cfc:	08005d1b 	.word	0x08005d1b
 8005d00:	08005d09 	.word	0x08005d09
 8005d04:	08005da3 	.word	0x08005da3
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d0c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	d048      	beq.n	8005da6 <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 8005d14:	2301      	movs	r3, #1
 8005d16:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005d18:	e045      	b.n	8005da6 <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d1e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005d22:	d142      	bne.n	8005daa <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 8005d24:	2301      	movs	r3, #1
 8005d26:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005d28:	e03f      	b.n	8005daa <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	699b      	ldr	r3, [r3, #24]
 8005d2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005d32:	d123      	bne.n	8005d7c <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005d38:	2b03      	cmp	r3, #3
 8005d3a:	d838      	bhi.n	8005dae <DMA_CheckFifoParam+0xda>
 8005d3c:	a201      	add	r2, pc, #4	; (adr r2, 8005d44 <DMA_CheckFifoParam+0x70>)
 8005d3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005d42:	bf00      	nop
 8005d44:	08005d55 	.word	0x08005d55
 8005d48:	08005d5b 	.word	0x08005d5b
 8005d4c:	08005d55 	.word	0x08005d55
 8005d50:	08005d6d 	.word	0x08005d6d
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 8005d54:	2301      	movs	r3, #1
 8005d56:	73fb      	strb	r3, [r7, #15]
        break;
 8005d58:	e030      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d5e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d025      	beq.n	8005db2 <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 8005d66:	2301      	movs	r3, #1
 8005d68:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005d6a:	e022      	b.n	8005db2 <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d70:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005d74:	d11f      	bne.n	8005db6 <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 8005d76:	2301      	movs	r3, #1
 8005d78:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005d7a:	e01c      	b.n	8005db6 <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005d80:	2b02      	cmp	r3, #2
 8005d82:	d902      	bls.n	8005d8a <DMA_CheckFifoParam+0xb6>
 8005d84:	2b03      	cmp	r3, #3
 8005d86:	d003      	beq.n	8005d90 <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 8005d88:	e018      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 8005d8a:	2301      	movs	r3, #1
 8005d8c:	73fb      	strb	r3, [r7, #15]
        break;
 8005d8e:	e015      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d94:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005d98:	2b00      	cmp	r3, #0
 8005d9a:	d00e      	beq.n	8005dba <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 8005d9c:	2301      	movs	r3, #1
 8005d9e:	73fb      	strb	r3, [r7, #15]
    break;
 8005da0:	e00b      	b.n	8005dba <DMA_CheckFifoParam+0xe6>
        break;
 8005da2:	bf00      	nop
 8005da4:	e00a      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        break;
 8005da6:	bf00      	nop
 8005da8:	e008      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        break;
 8005daa:	bf00      	nop
 8005dac:	e006      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        break;
 8005dae:	bf00      	nop
 8005db0:	e004      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        break;
 8005db2:	bf00      	nop
 8005db4:	e002      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
        break;
 8005db6:	bf00      	nop
 8005db8:	e000      	b.n	8005dbc <DMA_CheckFifoParam+0xe8>
    break;
 8005dba:	bf00      	nop
    }
  }

  return status;
 8005dbc:	7bfb      	ldrb	r3, [r7, #15]
}
 8005dbe:	4618      	mov	r0, r3
 8005dc0:	3714      	adds	r7, #20
 8005dc2:	46bd      	mov	sp, r7
 8005dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc8:	4770      	bx	lr
 8005dca:	bf00      	nop

08005dcc <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005dcc:	b480      	push	{r7}
 8005dce:	b085      	sub	sp, #20
 8005dd0:	af00      	add	r7, sp, #0
 8005dd2:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	4a38      	ldr	r2, [pc, #224]	; (8005ec0 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8005de0:	4293      	cmp	r3, r2
 8005de2:	d022      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	4a36      	ldr	r2, [pc, #216]	; (8005ec4 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 8005dea:	4293      	cmp	r3, r2
 8005dec:	d01d      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	4a35      	ldr	r2, [pc, #212]	; (8005ec8 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8005df4:	4293      	cmp	r3, r2
 8005df6:	d018      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	4a33      	ldr	r2, [pc, #204]	; (8005ecc <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d013      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	4a32      	ldr	r2, [pc, #200]	; (8005ed0 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8005e08:	4293      	cmp	r3, r2
 8005e0a:	d00e      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	4a30      	ldr	r2, [pc, #192]	; (8005ed4 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 8005e12:	4293      	cmp	r3, r2
 8005e14:	d009      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	4a2f      	ldr	r2, [pc, #188]	; (8005ed8 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8005e1c:	4293      	cmp	r3, r2
 8005e1e:	d004      	beq.n	8005e2a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	4a2d      	ldr	r2, [pc, #180]	; (8005edc <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 8005e26:	4293      	cmp	r3, r2
 8005e28:	d101      	bne.n	8005e2e <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 8005e2a:	2301      	movs	r3, #1
 8005e2c:	e000      	b.n	8005e30 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 8005e2e:	2300      	movs	r3, #0
 8005e30:	2b00      	cmp	r3, #0
 8005e32:	d01a      	beq.n	8005e6a <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	b2db      	uxtb	r3, r3
 8005e3a:	3b08      	subs	r3, #8
 8005e3c:	4a28      	ldr	r2, [pc, #160]	; (8005ee0 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 8005e3e:	fba2 2303 	umull	r2, r3, r2, r3
 8005e42:	091b      	lsrs	r3, r3, #4
 8005e44:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8005e46:	68fa      	ldr	r2, [r7, #12]
 8005e48:	4b26      	ldr	r3, [pc, #152]	; (8005ee4 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 8005e4a:	4413      	add	r3, r2
 8005e4c:	009b      	lsls	r3, r3, #2
 8005e4e:	461a      	mov	r2, r3
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	4a24      	ldr	r2, [pc, #144]	; (8005ee8 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 8005e58:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	f003 031f 	and.w	r3, r3, #31
 8005e60:	2201      	movs	r2, #1
 8005e62:	409a      	lsls	r2, r3
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 8005e68:	e024      	b.n	8005eb4 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	b2db      	uxtb	r3, r3
 8005e70:	3b10      	subs	r3, #16
 8005e72:	4a1e      	ldr	r2, [pc, #120]	; (8005eec <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 8005e74:	fba2 2303 	umull	r2, r3, r2, r3
 8005e78:	091b      	lsrs	r3, r3, #4
 8005e7a:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 8005e7c:	68bb      	ldr	r3, [r7, #8]
 8005e7e:	4a1c      	ldr	r2, [pc, #112]	; (8005ef0 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8005e80:	4293      	cmp	r3, r2
 8005e82:	d806      	bhi.n	8005e92 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8005e84:	68bb      	ldr	r3, [r7, #8]
 8005e86:	4a1b      	ldr	r2, [pc, #108]	; (8005ef4 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8005e88:	4293      	cmp	r3, r2
 8005e8a:	d902      	bls.n	8005e92 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
      stream_number += 8U;
 8005e8c:	68fb      	ldr	r3, [r7, #12]
 8005e8e:	3308      	adds	r3, #8
 8005e90:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8005e92:	68fa      	ldr	r2, [r7, #12]
 8005e94:	4b18      	ldr	r3, [pc, #96]	; (8005ef8 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8005e96:	4413      	add	r3, r2
 8005e98:	009b      	lsls	r3, r3, #2
 8005e9a:	461a      	mov	r2, r3
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	4a16      	ldr	r2, [pc, #88]	; (8005efc <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8005ea4:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	f003 031f 	and.w	r3, r3, #31
 8005eac:	2201      	movs	r2, #1
 8005eae:	409a      	lsls	r2, r3
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	669a      	str	r2, [r3, #104]	; 0x68
}
 8005eb4:	bf00      	nop
 8005eb6:	3714      	adds	r7, #20
 8005eb8:	46bd      	mov	sp, r7
 8005eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ebe:	4770      	bx	lr
 8005ec0:	58025408 	.word	0x58025408
 8005ec4:	5802541c 	.word	0x5802541c
 8005ec8:	58025430 	.word	0x58025430
 8005ecc:	58025444 	.word	0x58025444
 8005ed0:	58025458 	.word	0x58025458
 8005ed4:	5802546c 	.word	0x5802546c
 8005ed8:	58025480 	.word	0x58025480
 8005edc:	58025494 	.word	0x58025494
 8005ee0:	cccccccd 	.word	0xcccccccd
 8005ee4:	16009600 	.word	0x16009600
 8005ee8:	58025880 	.word	0x58025880
 8005eec:	aaaaaaab 	.word	0xaaaaaaab
 8005ef0:	400204b8 	.word	0x400204b8
 8005ef4:	4002040f 	.word	0x4002040f
 8005ef8:	10008200 	.word	0x10008200
 8005efc:	40020880 	.word	0x40020880

08005f00 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005f00:	b480      	push	{r7}
 8005f02:	b085      	sub	sp, #20
 8005f04:	af00      	add	r7, sp, #0
 8005f06:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	685b      	ldr	r3, [r3, #4]
 8005f0c:	b2db      	uxtb	r3, r3
 8005f0e:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8005f10:	68fb      	ldr	r3, [r7, #12]
 8005f12:	2b00      	cmp	r3, #0
 8005f14:	d04a      	beq.n	8005fac <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8005f16:	68fb      	ldr	r3, [r7, #12]
 8005f18:	2b08      	cmp	r3, #8
 8005f1a:	d847      	bhi.n	8005fac <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	4a25      	ldr	r2, [pc, #148]	; (8005fb8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 8005f22:	4293      	cmp	r3, r2
 8005f24:	d022      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	4a24      	ldr	r2, [pc, #144]	; (8005fbc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 8005f2c:	4293      	cmp	r3, r2
 8005f2e:	d01d      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	4a22      	ldr	r2, [pc, #136]	; (8005fc0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 8005f36:	4293      	cmp	r3, r2
 8005f38:	d018      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	4a21      	ldr	r2, [pc, #132]	; (8005fc4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 8005f40:	4293      	cmp	r3, r2
 8005f42:	d013      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	4a1f      	ldr	r2, [pc, #124]	; (8005fc8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 8005f4a:	4293      	cmp	r3, r2
 8005f4c:	d00e      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	4a1e      	ldr	r2, [pc, #120]	; (8005fcc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 8005f54:	4293      	cmp	r3, r2
 8005f56:	d009      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	4a1c      	ldr	r2, [pc, #112]	; (8005fd0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 8005f5e:	4293      	cmp	r3, r2
 8005f60:	d004      	beq.n	8005f6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	4a1b      	ldr	r2, [pc, #108]	; (8005fd4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 8005f68:	4293      	cmp	r3, r2
 8005f6a:	d101      	bne.n	8005f70 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 8005f6c:	2301      	movs	r3, #1
 8005f6e:	e000      	b.n	8005f72 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 8005f70:	2300      	movs	r3, #0
 8005f72:	2b00      	cmp	r3, #0
 8005f74:	d00a      	beq.n	8005f8c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8005f76:	68fa      	ldr	r2, [r7, #12]
 8005f78:	4b17      	ldr	r3, [pc, #92]	; (8005fd8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 8005f7a:	4413      	add	r3, r2
 8005f7c:	009b      	lsls	r3, r3, #2
 8005f7e:	461a      	mov	r2, r3
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	4a15      	ldr	r2, [pc, #84]	; (8005fdc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8005f88:	671a      	str	r2, [r3, #112]	; 0x70
 8005f8a:	e009      	b.n	8005fa0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8005f8c:	68fa      	ldr	r2, [r7, #12]
 8005f8e:	4b14      	ldr	r3, [pc, #80]	; (8005fe0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8005f90:	4413      	add	r3, r2
 8005f92:	009b      	lsls	r3, r3, #2
 8005f94:	461a      	mov	r2, r3
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	4a11      	ldr	r2, [pc, #68]	; (8005fe4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8005f9e:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	3b01      	subs	r3, #1
 8005fa4:	2201      	movs	r2, #1
 8005fa6:	409a      	lsls	r2, r3
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 8005fac:	bf00      	nop
 8005fae:	3714      	adds	r7, #20
 8005fb0:	46bd      	mov	sp, r7
 8005fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fb6:	4770      	bx	lr
 8005fb8:	58025408 	.word	0x58025408
 8005fbc:	5802541c 	.word	0x5802541c
 8005fc0:	58025430 	.word	0x58025430
 8005fc4:	58025444 	.word	0x58025444
 8005fc8:	58025458 	.word	0x58025458
 8005fcc:	5802546c 	.word	0x5802546c
 8005fd0:	58025480 	.word	0x58025480
 8005fd4:	58025494 	.word	0x58025494
 8005fd8:	1600963f 	.word	0x1600963f
 8005fdc:	58025940 	.word	0x58025940
 8005fe0:	1000823f 	.word	0x1000823f
 8005fe4:	40020940 	.word	0x40020940

08005fe8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005fe8:	b480      	push	{r7}
 8005fea:	b089      	sub	sp, #36	; 0x24
 8005fec:	af00      	add	r7, sp, #0
 8005fee:	6078      	str	r0, [r7, #4]
 8005ff0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8005ff2:	2300      	movs	r3, #0
 8005ff4:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8005ff6:	4b86      	ldr	r3, [pc, #536]	; (8006210 <HAL_GPIO_Init+0x228>)
 8005ff8:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005ffa:	e18c      	b.n	8006316 <HAL_GPIO_Init+0x32e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8005ffc:	683b      	ldr	r3, [r7, #0]
 8005ffe:	681a      	ldr	r2, [r3, #0]
 8006000:	2101      	movs	r1, #1
 8006002:	69fb      	ldr	r3, [r7, #28]
 8006004:	fa01 f303 	lsl.w	r3, r1, r3
 8006008:	4013      	ands	r3, r2
 800600a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 800600c:	693b      	ldr	r3, [r7, #16]
 800600e:	2b00      	cmp	r3, #0
 8006010:	f000 817e 	beq.w	8006310 <HAL_GPIO_Init+0x328>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006014:	683b      	ldr	r3, [r7, #0]
 8006016:	685b      	ldr	r3, [r3, #4]
 8006018:	f003 0303 	and.w	r3, r3, #3
 800601c:	2b01      	cmp	r3, #1
 800601e:	d005      	beq.n	800602c <HAL_GPIO_Init+0x44>
 8006020:	683b      	ldr	r3, [r7, #0]
 8006022:	685b      	ldr	r3, [r3, #4]
 8006024:	f003 0303 	and.w	r3, r3, #3
 8006028:	2b02      	cmp	r3, #2
 800602a:	d130      	bne.n	800608e <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	689b      	ldr	r3, [r3, #8]
 8006030:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006032:	69fb      	ldr	r3, [r7, #28]
 8006034:	005b      	lsls	r3, r3, #1
 8006036:	2203      	movs	r2, #3
 8006038:	fa02 f303 	lsl.w	r3, r2, r3
 800603c:	43db      	mvns	r3, r3
 800603e:	69ba      	ldr	r2, [r7, #24]
 8006040:	4013      	ands	r3, r2
 8006042:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006044:	683b      	ldr	r3, [r7, #0]
 8006046:	68da      	ldr	r2, [r3, #12]
 8006048:	69fb      	ldr	r3, [r7, #28]
 800604a:	005b      	lsls	r3, r3, #1
 800604c:	fa02 f303 	lsl.w	r3, r2, r3
 8006050:	69ba      	ldr	r2, [r7, #24]
 8006052:	4313      	orrs	r3, r2
 8006054:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	69ba      	ldr	r2, [r7, #24]
 800605a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	685b      	ldr	r3, [r3, #4]
 8006060:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8006062:	2201      	movs	r2, #1
 8006064:	69fb      	ldr	r3, [r7, #28]
 8006066:	fa02 f303 	lsl.w	r3, r2, r3
 800606a:	43db      	mvns	r3, r3
 800606c:	69ba      	ldr	r2, [r7, #24]
 800606e:	4013      	ands	r3, r2
 8006070:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8006072:	683b      	ldr	r3, [r7, #0]
 8006074:	685b      	ldr	r3, [r3, #4]
 8006076:	091b      	lsrs	r3, r3, #4
 8006078:	f003 0201 	and.w	r2, r3, #1
 800607c:	69fb      	ldr	r3, [r7, #28]
 800607e:	fa02 f303 	lsl.w	r3, r2, r3
 8006082:	69ba      	ldr	r2, [r7, #24]
 8006084:	4313      	orrs	r3, r2
 8006086:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	69ba      	ldr	r2, [r7, #24]
 800608c:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800608e:	683b      	ldr	r3, [r7, #0]
 8006090:	685b      	ldr	r3, [r3, #4]
 8006092:	f003 0303 	and.w	r3, r3, #3
 8006096:	2b03      	cmp	r3, #3
 8006098:	d017      	beq.n	80060ca <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	68db      	ldr	r3, [r3, #12]
 800609e:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80060a0:	69fb      	ldr	r3, [r7, #28]
 80060a2:	005b      	lsls	r3, r3, #1
 80060a4:	2203      	movs	r2, #3
 80060a6:	fa02 f303 	lsl.w	r3, r2, r3
 80060aa:	43db      	mvns	r3, r3
 80060ac:	69ba      	ldr	r2, [r7, #24]
 80060ae:	4013      	ands	r3, r2
 80060b0:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80060b2:	683b      	ldr	r3, [r7, #0]
 80060b4:	689a      	ldr	r2, [r3, #8]
 80060b6:	69fb      	ldr	r3, [r7, #28]
 80060b8:	005b      	lsls	r3, r3, #1
 80060ba:	fa02 f303 	lsl.w	r3, r2, r3
 80060be:	69ba      	ldr	r2, [r7, #24]
 80060c0:	4313      	orrs	r3, r2
 80060c2:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	69ba      	ldr	r2, [r7, #24]
 80060c8:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80060ca:	683b      	ldr	r3, [r7, #0]
 80060cc:	685b      	ldr	r3, [r3, #4]
 80060ce:	f003 0303 	and.w	r3, r3, #3
 80060d2:	2b02      	cmp	r3, #2
 80060d4:	d123      	bne.n	800611e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80060d6:	69fb      	ldr	r3, [r7, #28]
 80060d8:	08da      	lsrs	r2, r3, #3
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	3208      	adds	r2, #8
 80060de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80060e2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 80060e4:	69fb      	ldr	r3, [r7, #28]
 80060e6:	f003 0307 	and.w	r3, r3, #7
 80060ea:	009b      	lsls	r3, r3, #2
 80060ec:	220f      	movs	r2, #15
 80060ee:	fa02 f303 	lsl.w	r3, r2, r3
 80060f2:	43db      	mvns	r3, r3
 80060f4:	69ba      	ldr	r2, [r7, #24]
 80060f6:	4013      	ands	r3, r2
 80060f8:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 80060fa:	683b      	ldr	r3, [r7, #0]
 80060fc:	691a      	ldr	r2, [r3, #16]
 80060fe:	69fb      	ldr	r3, [r7, #28]
 8006100:	f003 0307 	and.w	r3, r3, #7
 8006104:	009b      	lsls	r3, r3, #2
 8006106:	fa02 f303 	lsl.w	r3, r2, r3
 800610a:	69ba      	ldr	r2, [r7, #24]
 800610c:	4313      	orrs	r3, r2
 800610e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8006110:	69fb      	ldr	r3, [r7, #28]
 8006112:	08da      	lsrs	r2, r3, #3
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	3208      	adds	r2, #8
 8006118:	69b9      	ldr	r1, [r7, #24]
 800611a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8006124:	69fb      	ldr	r3, [r7, #28]
 8006126:	005b      	lsls	r3, r3, #1
 8006128:	2203      	movs	r2, #3
 800612a:	fa02 f303 	lsl.w	r3, r2, r3
 800612e:	43db      	mvns	r3, r3
 8006130:	69ba      	ldr	r2, [r7, #24]
 8006132:	4013      	ands	r3, r2
 8006134:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006136:	683b      	ldr	r3, [r7, #0]
 8006138:	685b      	ldr	r3, [r3, #4]
 800613a:	f003 0203 	and.w	r2, r3, #3
 800613e:	69fb      	ldr	r3, [r7, #28]
 8006140:	005b      	lsls	r3, r3, #1
 8006142:	fa02 f303 	lsl.w	r3, r2, r3
 8006146:	69ba      	ldr	r2, [r7, #24]
 8006148:	4313      	orrs	r3, r2
 800614a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	69ba      	ldr	r2, [r7, #24]
 8006150:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006152:	683b      	ldr	r3, [r7, #0]
 8006154:	685b      	ldr	r3, [r3, #4]
 8006156:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800615a:	2b00      	cmp	r3, #0
 800615c:	f000 80d8 	beq.w	8006310 <HAL_GPIO_Init+0x328>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006160:	4b2c      	ldr	r3, [pc, #176]	; (8006214 <HAL_GPIO_Init+0x22c>)
 8006162:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8006166:	4a2b      	ldr	r2, [pc, #172]	; (8006214 <HAL_GPIO_Init+0x22c>)
 8006168:	f043 0302 	orr.w	r3, r3, #2
 800616c:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8006170:	4b28      	ldr	r3, [pc, #160]	; (8006214 <HAL_GPIO_Init+0x22c>)
 8006172:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8006176:	f003 0302 	and.w	r3, r3, #2
 800617a:	60fb      	str	r3, [r7, #12]
 800617c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800617e:	4a26      	ldr	r2, [pc, #152]	; (8006218 <HAL_GPIO_Init+0x230>)
 8006180:	69fb      	ldr	r3, [r7, #28]
 8006182:	089b      	lsrs	r3, r3, #2
 8006184:	3302      	adds	r3, #2
 8006186:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800618a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 800618c:	69fb      	ldr	r3, [r7, #28]
 800618e:	f003 0303 	and.w	r3, r3, #3
 8006192:	009b      	lsls	r3, r3, #2
 8006194:	220f      	movs	r2, #15
 8006196:	fa02 f303 	lsl.w	r3, r2, r3
 800619a:	43db      	mvns	r3, r3
 800619c:	69ba      	ldr	r2, [r7, #24]
 800619e:	4013      	ands	r3, r2
 80061a0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	4a1d      	ldr	r2, [pc, #116]	; (800621c <HAL_GPIO_Init+0x234>)
 80061a6:	4293      	cmp	r3, r2
 80061a8:	d04a      	beq.n	8006240 <HAL_GPIO_Init+0x258>
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	4a1c      	ldr	r2, [pc, #112]	; (8006220 <HAL_GPIO_Init+0x238>)
 80061ae:	4293      	cmp	r3, r2
 80061b0:	d02b      	beq.n	800620a <HAL_GPIO_Init+0x222>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	4a1b      	ldr	r2, [pc, #108]	; (8006224 <HAL_GPIO_Init+0x23c>)
 80061b6:	4293      	cmp	r3, r2
 80061b8:	d025      	beq.n	8006206 <HAL_GPIO_Init+0x21e>
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	4a1a      	ldr	r2, [pc, #104]	; (8006228 <HAL_GPIO_Init+0x240>)
 80061be:	4293      	cmp	r3, r2
 80061c0:	d01f      	beq.n	8006202 <HAL_GPIO_Init+0x21a>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	4a19      	ldr	r2, [pc, #100]	; (800622c <HAL_GPIO_Init+0x244>)
 80061c6:	4293      	cmp	r3, r2
 80061c8:	d019      	beq.n	80061fe <HAL_GPIO_Init+0x216>
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	4a18      	ldr	r2, [pc, #96]	; (8006230 <HAL_GPIO_Init+0x248>)
 80061ce:	4293      	cmp	r3, r2
 80061d0:	d013      	beq.n	80061fa <HAL_GPIO_Init+0x212>
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	4a17      	ldr	r2, [pc, #92]	; (8006234 <HAL_GPIO_Init+0x24c>)
 80061d6:	4293      	cmp	r3, r2
 80061d8:	d00d      	beq.n	80061f6 <HAL_GPIO_Init+0x20e>
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	4a16      	ldr	r2, [pc, #88]	; (8006238 <HAL_GPIO_Init+0x250>)
 80061de:	4293      	cmp	r3, r2
 80061e0:	d007      	beq.n	80061f2 <HAL_GPIO_Init+0x20a>
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	4a15      	ldr	r2, [pc, #84]	; (800623c <HAL_GPIO_Init+0x254>)
 80061e6:	4293      	cmp	r3, r2
 80061e8:	d101      	bne.n	80061ee <HAL_GPIO_Init+0x206>
 80061ea:	2309      	movs	r3, #9
 80061ec:	e029      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 80061ee:	230a      	movs	r3, #10
 80061f0:	e027      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 80061f2:	2307      	movs	r3, #7
 80061f4:	e025      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 80061f6:	2306      	movs	r3, #6
 80061f8:	e023      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 80061fa:	2305      	movs	r3, #5
 80061fc:	e021      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 80061fe:	2304      	movs	r3, #4
 8006200:	e01f      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 8006202:	2303      	movs	r3, #3
 8006204:	e01d      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 8006206:	2302      	movs	r3, #2
 8006208:	e01b      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 800620a:	2301      	movs	r3, #1
 800620c:	e019      	b.n	8006242 <HAL_GPIO_Init+0x25a>
 800620e:	bf00      	nop
 8006210:	58000080 	.word	0x58000080
 8006214:	58024400 	.word	0x58024400
 8006218:	58000400 	.word	0x58000400
 800621c:	58020000 	.word	0x58020000
 8006220:	58020400 	.word	0x58020400
 8006224:	58020800 	.word	0x58020800
 8006228:	58020c00 	.word	0x58020c00
 800622c:	58021000 	.word	0x58021000
 8006230:	58021400 	.word	0x58021400
 8006234:	58021800 	.word	0x58021800
 8006238:	58021c00 	.word	0x58021c00
 800623c:	58022400 	.word	0x58022400
 8006240:	2300      	movs	r3, #0
 8006242:	69fa      	ldr	r2, [r7, #28]
 8006244:	f002 0203 	and.w	r2, r2, #3
 8006248:	0092      	lsls	r2, r2, #2
 800624a:	4093      	lsls	r3, r2
 800624c:	69ba      	ldr	r2, [r7, #24]
 800624e:	4313      	orrs	r3, r2
 8006250:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006252:	4938      	ldr	r1, [pc, #224]	; (8006334 <HAL_GPIO_Init+0x34c>)
 8006254:	69fb      	ldr	r3, [r7, #28]
 8006256:	089b      	lsrs	r3, r3, #2
 8006258:	3302      	adds	r3, #2
 800625a:	69ba      	ldr	r2, [r7, #24]
 800625c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8006260:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8006268:	693b      	ldr	r3, [r7, #16]
 800626a:	43db      	mvns	r3, r3
 800626c:	69ba      	ldr	r2, [r7, #24]
 800626e:	4013      	ands	r3, r2
 8006270:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8006272:	683b      	ldr	r3, [r7, #0]
 8006274:	685b      	ldr	r3, [r3, #4]
 8006276:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800627a:	2b00      	cmp	r3, #0
 800627c:	d003      	beq.n	8006286 <HAL_GPIO_Init+0x29e>
        {
          temp |= iocurrent;
 800627e:	69ba      	ldr	r2, [r7, #24]
 8006280:	693b      	ldr	r3, [r7, #16]
 8006282:	4313      	orrs	r3, r2
 8006284:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 8006286:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800628a:	69bb      	ldr	r3, [r7, #24]
 800628c:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 800628e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006292:	685b      	ldr	r3, [r3, #4]
 8006294:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8006296:	693b      	ldr	r3, [r7, #16]
 8006298:	43db      	mvns	r3, r3
 800629a:	69ba      	ldr	r2, [r7, #24]
 800629c:	4013      	ands	r3, r2
 800629e:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80062a0:	683b      	ldr	r3, [r7, #0]
 80062a2:	685b      	ldr	r3, [r3, #4]
 80062a4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d003      	beq.n	80062b4 <HAL_GPIO_Init+0x2cc>
        {
          temp |= iocurrent;
 80062ac:	69ba      	ldr	r2, [r7, #24]
 80062ae:	693b      	ldr	r3, [r7, #16]
 80062b0:	4313      	orrs	r3, r2
 80062b2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 80062b4:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80062b8:	69bb      	ldr	r3, [r7, #24]
 80062ba:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 80062bc:	697b      	ldr	r3, [r7, #20]
 80062be:	685b      	ldr	r3, [r3, #4]
 80062c0:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80062c2:	693b      	ldr	r3, [r7, #16]
 80062c4:	43db      	mvns	r3, r3
 80062c6:	69ba      	ldr	r2, [r7, #24]
 80062c8:	4013      	ands	r3, r2
 80062ca:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80062cc:	683b      	ldr	r3, [r7, #0]
 80062ce:	685b      	ldr	r3, [r3, #4]
 80062d0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80062d4:	2b00      	cmp	r3, #0
 80062d6:	d003      	beq.n	80062e0 <HAL_GPIO_Init+0x2f8>
        {
          temp |= iocurrent;
 80062d8:	69ba      	ldr	r2, [r7, #24]
 80062da:	693b      	ldr	r3, [r7, #16]
 80062dc:	4313      	orrs	r3, r2
 80062de:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 80062e0:	697b      	ldr	r3, [r7, #20]
 80062e2:	69ba      	ldr	r2, [r7, #24]
 80062e4:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 80062e6:	697b      	ldr	r3, [r7, #20]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80062ec:	693b      	ldr	r3, [r7, #16]
 80062ee:	43db      	mvns	r3, r3
 80062f0:	69ba      	ldr	r2, [r7, #24]
 80062f2:	4013      	ands	r3, r2
 80062f4:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80062f6:	683b      	ldr	r3, [r7, #0]
 80062f8:	685b      	ldr	r3, [r3, #4]
 80062fa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d003      	beq.n	800630a <HAL_GPIO_Init+0x322>
        {
          temp |= iocurrent;
 8006302:	69ba      	ldr	r2, [r7, #24]
 8006304:	693b      	ldr	r3, [r7, #16]
 8006306:	4313      	orrs	r3, r2
 8006308:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 800630a:	697b      	ldr	r3, [r7, #20]
 800630c:	69ba      	ldr	r2, [r7, #24]
 800630e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8006310:	69fb      	ldr	r3, [r7, #28]
 8006312:	3301      	adds	r3, #1
 8006314:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8006316:	683b      	ldr	r3, [r7, #0]
 8006318:	681a      	ldr	r2, [r3, #0]
 800631a:	69fb      	ldr	r3, [r7, #28]
 800631c:	fa22 f303 	lsr.w	r3, r2, r3
 8006320:	2b00      	cmp	r3, #0
 8006322:	f47f ae6b 	bne.w	8005ffc <HAL_GPIO_Init+0x14>
  }
}
 8006326:	bf00      	nop
 8006328:	bf00      	nop
 800632a:	3724      	adds	r7, #36	; 0x24
 800632c:	46bd      	mov	sp, r7
 800632e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006332:	4770      	bx	lr
 8006334:	58000400 	.word	0x58000400

08006338 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8006338:	b480      	push	{r7}
 800633a:	b083      	sub	sp, #12
 800633c:	af00      	add	r7, sp, #0
 800633e:	6078      	str	r0, [r7, #4]
 8006340:	460b      	mov	r3, r1
 8006342:	807b      	strh	r3, [r7, #2]
 8006344:	4613      	mov	r3, r2
 8006346:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8006348:	787b      	ldrb	r3, [r7, #1]
 800634a:	2b00      	cmp	r3, #0
 800634c:	d003      	beq.n	8006356 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800634e:	887a      	ldrh	r2, [r7, #2]
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8006354:	e003      	b.n	800635e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006356:	887b      	ldrh	r3, [r7, #2]
 8006358:	041a      	lsls	r2, r3, #16
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	619a      	str	r2, [r3, #24]
}
 800635e:	bf00      	nop
 8006360:	370c      	adds	r7, #12
 8006362:	46bd      	mov	sp, r7
 8006364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006368:	4770      	bx	lr

0800636a <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800636a:	b580      	push	{r7, lr}
 800636c:	b082      	sub	sp, #8
 800636e:	af00      	add	r7, sp, #0
 8006370:	4603      	mov	r3, r0
 8006372:	80fb      	strh	r3, [r7, #6]
    __HAL_GPIO_EXTID2_CLEAR_IT(GPIO_Pin);
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
  }
#else
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00U)
 8006374:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006378:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800637c:	88fb      	ldrh	r3, [r7, #6]
 800637e:	4013      	ands	r3, r2
 8006380:	2b00      	cmp	r3, #0
 8006382:	d008      	beq.n	8006396 <HAL_GPIO_EXTI_IRQHandler+0x2c>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8006384:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8006388:	88fb      	ldrh	r3, [r7, #6]
 800638a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800638e:	88fb      	ldrh	r3, [r7, #6]
 8006390:	4618      	mov	r0, r3
 8006392:	f000 f804 	bl	800639e <HAL_GPIO_EXTI_Callback>
  }
#endif
}
 8006396:	bf00      	nop
 8006398:	3708      	adds	r7, #8
 800639a:	46bd      	mov	sp, r7
 800639c:	bd80      	pop	{r7, pc}

0800639e <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callback.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800639e:	b480      	push	{r7}
 80063a0:	b083      	sub	sp, #12
 80063a2:	af00      	add	r7, sp, #0
 80063a4:	4603      	mov	r3, r0
 80063a6:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80063a8:	bf00      	nop
 80063aa:	370c      	adds	r7, #12
 80063ac:	46bd      	mov	sp, r7
 80063ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063b2:	4770      	bx	lr

080063b4 <HAL_OSPI_Init>:
  *         in the OSPI_InitTypeDef and initialize the associated handle.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Init(OSPI_HandleTypeDef *hospi)
{
 80063b4:	b580      	push	{r7, lr}
 80063b6:	b086      	sub	sp, #24
 80063b8:	af02      	add	r7, sp, #8
 80063ba:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80063bc:	2300      	movs	r3, #0
 80063be:	73fb      	strb	r3, [r7, #15]
  uint32_t tickstart = HAL_GetTick();
 80063c0:	f7fb fd46 	bl	8001e50 <HAL_GetTick>
 80063c4:	60b8      	str	r0, [r7, #8]

  /* Check the OSPI handle allocation */
  if (hospi == NULL)
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	2b00      	cmp	r3, #0
 80063ca:	d102      	bne.n	80063d2 <HAL_OSPI_Init+0x1e>
  {
    status = HAL_ERROR;
 80063cc:	2301      	movs	r3, #1
 80063ce:	73fb      	strb	r3, [r7, #15]
 80063d0:	e0a5      	b.n	800651e <HAL_OSPI_Init+0x16a>
    assert_param(IS_OSPI_CS_BOUNDARY(hospi->Init.ChipSelectBoundary));
    assert_param(IS_OSPI_DLYBYP(hospi->Init.DelayBlockBypass));
    assert_param(IS_OSPI_MAXTRAN(hospi->Init.MaxTran));

    /* Initialize error code */
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	2200      	movs	r2, #0
 80063d6:	655a      	str	r2, [r3, #84]	; 0x54

    /* Check if the state is the reset state */
    if (hospi->State == HAL_OSPI_STATE_RESET)
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80063dc:	2b00      	cmp	r3, #0
 80063de:	f040 809e 	bne.w	800651e <HAL_OSPI_Init+0x16a>

      /* Init the low level hardware */
      hospi->MspInitCallback(hospi);
#else
      /* Initialization of the low level hardware */
      HAL_OSPI_MspInit(hospi);
 80063e2:	6878      	ldr	r0, [r7, #4]
 80063e4:	f7fa fec4 	bl	8001170 <HAL_OSPI_MspInit>
#endif /* defined (USE_HAL_OSPI_REGISTER_CALLBACKS) && (USE_HAL_OSPI_REGISTER_CALLBACKS == 1U) */

      /* Configure the default timeout for the OSPI memory access */
      (void)HAL_OSPI_SetTimeout(hospi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE);
 80063e8:	f241 3188 	movw	r1, #5000	; 0x1388
 80063ec:	6878      	ldr	r0, [r7, #4]
 80063ee:	f000 f89d 	bl	800652c <HAL_OSPI_SetTimeout>

      /* Configure memory type, device size, chip select high time, delay block bypass,
         free running clock, clock mode */
      MODIFY_REG(hospi->Instance->DCR1,
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	689a      	ldr	r2, [r3, #8]
 80063f8:	4b4b      	ldr	r3, [pc, #300]	; (8006528 <HAL_OSPI_Init+0x174>)
 80063fa:	4013      	ands	r3, r2
 80063fc:	687a      	ldr	r2, [r7, #4]
 80063fe:	68d1      	ldr	r1, [r2, #12]
 8006400:	687a      	ldr	r2, [r7, #4]
 8006402:	6912      	ldr	r2, [r2, #16]
 8006404:	3a01      	subs	r2, #1
 8006406:	0412      	lsls	r2, r2, #16
 8006408:	4311      	orrs	r1, r2
 800640a:	687a      	ldr	r2, [r7, #4]
 800640c:	6952      	ldr	r2, [r2, #20]
 800640e:	3a01      	subs	r2, #1
 8006410:	0212      	lsls	r2, r2, #8
 8006412:	4311      	orrs	r1, r2
 8006414:	687a      	ldr	r2, [r7, #4]
 8006416:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8006418:	4311      	orrs	r1, r2
 800641a:	687a      	ldr	r2, [r7, #4]
 800641c:	69d2      	ldr	r2, [r2, #28]
 800641e:	4311      	orrs	r1, r2
 8006420:	687a      	ldr	r2, [r7, #4]
 8006422:	6812      	ldr	r2, [r2, #0]
 8006424:	430b      	orrs	r3, r1
 8006426:	6093      	str	r3, [r2, #8]
                 (hospi->Init.MemoryType | ((hospi->Init.DeviceSize - 1U) << OCTOSPI_DCR1_DEVSIZE_Pos) |
                  ((hospi->Init.ChipSelectHighTime - 1U) << OCTOSPI_DCR1_CSHT_Pos) |
                  hospi->Init.DelayBlockBypass | hospi->Init.ClockMode));

      /* Configure wrap size */
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	68db      	ldr	r3, [r3, #12]
 800642e:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	6a1a      	ldr	r2, [r3, #32]
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	430a      	orrs	r2, r1
 800643c:	60da      	str	r2, [r3, #12]

      /* Configure chip select boundary and maximum transfer */
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006442:	0419      	lsls	r1, r3, #16
                               (hospi->Init.MaxTran << OCTOSPI_DCR3_MAXTRAN_Pos));
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	6b9a      	ldr	r2, [r3, #56]	; 0x38
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	430a      	orrs	r2, r1
 800644e:	611a      	str	r2, [r3, #16]

      /* Configure refresh */
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	687a      	ldr	r2, [r7, #4]
 8006456:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8006458:	615a      	str	r2, [r3, #20]

      /* Configure FIFO threshold */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	681b      	ldr	r3, [r3, #0]
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	f423 51f8 	bic.w	r1, r3, #7936	; 0x1f00
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	685b      	ldr	r3, [r3, #4]
 8006468:	3b01      	subs	r3, #1
 800646a:	021a      	lsls	r2, r3, #8
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	430a      	orrs	r2, r1
 8006472:	601a      	str	r2, [r3, #0]

      /* Wait till busy flag is reset */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006478:	9300      	str	r3, [sp, #0]
 800647a:	68bb      	ldr	r3, [r7, #8]
 800647c:	2200      	movs	r2, #0
 800647e:	2120      	movs	r1, #32
 8006480:	6878      	ldr	r0, [r7, #4]
 8006482:	f000 fd4b 	bl	8006f1c <OSPI_WaitFlagStateUntilTimeout>
 8006486:	4603      	mov	r3, r0
 8006488:	73fb      	strb	r3, [r7, #15]

      if (status == HAL_OK)
 800648a:	7bfb      	ldrb	r3, [r7, #15]
 800648c:	2b00      	cmp	r3, #0
 800648e:	d146      	bne.n	800651e <HAL_OSPI_Init+0x16a>
      {
        /* Configure clock prescaler */
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	68db      	ldr	r3, [r3, #12]
 8006496:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800649e:	1e5a      	subs	r2, r3, #1
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	430a      	orrs	r2, r1
 80064a6:	60da      	str	r2, [r3, #12]
                   ((hospi->Init.ClockPrescaler - 1U) << OCTOSPI_DCR2_PRESCALER_Pos));

        /* Configure Dual Quad mode */
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	f023 0140 	bic.w	r1, r3, #64	; 0x40
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	689a      	ldr	r2, [r3, #8]
 80064b6:	687b      	ldr	r3, [r7, #4]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	430a      	orrs	r2, r1
 80064bc:	601a      	str	r2, [r3, #0]

        /* Configure sample shifting and delay hold quarter cycle */
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 80064c6:	f023 41a0 	bic.w	r1, r3, #1342177280	; 0x50000000
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80064d2:	431a      	orrs	r2, r3
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	430a      	orrs	r2, r1
 80064da:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
                   (hospi->Init.SampleShifting | hospi->Init.DelayHoldQuarterCycle));

        /* Enable OctoSPI */
        __HAL_OSPI_ENABLE(hospi);
 80064de:	687b      	ldr	r3, [r7, #4]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	681a      	ldr	r2, [r3, #0]
 80064e4:	687b      	ldr	r3, [r7, #4]
 80064e6:	681b      	ldr	r3, [r3, #0]
 80064e8:	f042 0201 	orr.w	r2, r2, #1
 80064ec:	601a      	str	r2, [r3, #0]

        /* Enable free running clock if needed : must be done after OSPI enable */
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	699b      	ldr	r3, [r3, #24]
 80064f2:	2b02      	cmp	r3, #2
 80064f4:	d107      	bne.n	8006506 <HAL_OSPI_Init+0x152>
        {
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	689a      	ldr	r2, [r3, #8]
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	681b      	ldr	r3, [r3, #0]
 8006500:	f042 0202 	orr.w	r2, r2, #2
 8006504:	609a      	str	r2, [r3, #8]
        }

        /* Initialize the OSPI state */
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	68db      	ldr	r3, [r3, #12]
 800650a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800650e:	d103      	bne.n	8006518 <HAL_OSPI_Init+0x164>
        {
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	2201      	movs	r2, #1
 8006514:	651a      	str	r2, [r3, #80]	; 0x50
 8006516:	e002      	b.n	800651e <HAL_OSPI_Init+0x16a>
        }
        else
        {
          hospi->State = HAL_OSPI_STATE_READY;
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	2202      	movs	r2, #2
 800651c:	651a      	str	r2, [r3, #80]	; 0x50
      }
    }
  }

  /* Return function status */
  return status;
 800651e:	7bfb      	ldrb	r3, [r7, #15]
}
 8006520:	4618      	mov	r0, r3
 8006522:	3710      	adds	r7, #16
 8006524:	46bd      	mov	sp, r7
 8006526:	bd80      	pop	{r7, pc}
 8006528:	f8e0f8f4 	.word	0xf8e0f8f4

0800652c <HAL_OSPI_SetTimeout>:
  * @param  hospi   : OSPI handle.
  * @param  Timeout : Timeout for the memory access.
  * @retval None
  */
HAL_StatusTypeDef HAL_OSPI_SetTimeout(OSPI_HandleTypeDef *hospi, uint32_t Timeout)
{
 800652c:	b480      	push	{r7}
 800652e:	b083      	sub	sp, #12
 8006530:	af00      	add	r7, sp, #0
 8006532:	6078      	str	r0, [r7, #4]
 8006534:	6039      	str	r1, [r7, #0]
  hospi->Timeout = Timeout;
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	683a      	ldr	r2, [r7, #0]
 800653a:	659a      	str	r2, [r3, #88]	; 0x58
  return HAL_OK;
 800653c:	2300      	movs	r3, #0
}
 800653e:	4618      	mov	r0, r3
 8006540:	370c      	adds	r7, #12
 8006542:	46bd      	mov	sp, r7
 8006544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006548:	4770      	bx	lr
	...

0800654c <HAL_OSPIM_Config>:
  * @param  cfg     : Configuration of the IO Manager for the instance
  * @param  Timeout : Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPIM_Config(OSPI_HandleTypeDef *hospi, OSPIM_CfgTypeDef *cfg, uint32_t Timeout)
{
 800654c:	b580      	push	{r7, lr}
 800654e:	b094      	sub	sp, #80	; 0x50
 8006550:	af00      	add	r7, sp, #0
 8006552:	60f8      	str	r0, [r7, #12]
 8006554:	60b9      	str	r1, [r7, #8]
 8006556:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006558:	2300      	movs	r3, #0
 800655a:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
  uint32_t instance;
  uint8_t index;
  uint8_t ospi_enabled = 0U;
 800655e:	2300      	movs	r3, #0
 8006560:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
  assert_param(IS_OSPIM_PORT(cfg->NCSPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOLowPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOHighPort));
  assert_param(IS_OSPIM_REQ2ACKTIME(cfg->Req2AckTime));

  if (hospi->Instance == OCTOSPI1)
 8006564:	68fb      	ldr	r3, [r7, #12]
 8006566:	681b      	ldr	r3, [r3, #0]
 8006568:	4a9d      	ldr	r2, [pc, #628]	; (80067e0 <HAL_OSPIM_Config+0x294>)
 800656a:	4293      	cmp	r3, r2
 800656c:	d105      	bne.n	800657a <HAL_OSPIM_Config+0x2e>
  {
    instance = 0U;
 800656e:	2300      	movs	r3, #0
 8006570:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 1U;
 8006572:	2301      	movs	r3, #1
 8006574:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8006578:	e004      	b.n	8006584 <HAL_OSPIM_Config+0x38>
  }
  else
  {
    instance = 1U;
 800657a:	2301      	movs	r3, #1
 800657c:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 0U;
 800657e:	2300      	movs	r3, #0
 8006580:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
  }

  /**************** Get current configuration of the instances ****************/
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8006584:	2300      	movs	r3, #0
 8006586:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 800658a:	e01d      	b.n	80065c8 <HAL_OSPIM_Config+0x7c>
  {
    if (OSPIM_GetConfig(index + 1U, &(IOM_cfg[index])) != HAL_OK)
 800658c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8006590:	3301      	adds	r3, #1
 8006592:	b2d8      	uxtb	r0, r3
 8006594:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 8006598:	f107 0114 	add.w	r1, r7, #20
 800659c:	4613      	mov	r3, r2
 800659e:	005b      	lsls	r3, r3, #1
 80065a0:	4413      	add	r3, r2
 80065a2:	00db      	lsls	r3, r3, #3
 80065a4:	440b      	add	r3, r1
 80065a6:	4619      	mov	r1, r3
 80065a8:	f000 fcf0 	bl	8006f8c <OSPIM_GetConfig>
 80065ac:	4603      	mov	r3, r0
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	d005      	beq.n	80065be <HAL_OSPIM_Config+0x72>
    {
      status = HAL_ERROR;
 80065b2:	2301      	movs	r3, #1
 80065b4:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	2208      	movs	r2, #8
 80065bc:	655a      	str	r2, [r3, #84]	; 0x54
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80065be:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80065c2:	3301      	adds	r3, #1
 80065c4:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80065c8:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80065cc:	2b01      	cmp	r3, #1
 80065ce:	d9dd      	bls.n	800658c <HAL_OSPIM_Config+0x40>
    }
  }

  if (status == HAL_OK)
 80065d0:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	f040 8495 	bne.w	8006f04 <HAL_OSPIM_Config+0x9b8>
  {
    /********** Disable both OctoSPI to configure OctoSPI IO Manager **********/
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 80065da:	4b81      	ldr	r3, [pc, #516]	; (80067e0 <HAL_OSPIM_Config+0x294>)
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	f003 0301 	and.w	r3, r3, #1
 80065e2:	2b00      	cmp	r3, #0
 80065e4:	d00b      	beq.n	80065fe <HAL_OSPIM_Config+0xb2>
    {
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 80065e6:	4b7e      	ldr	r3, [pc, #504]	; (80067e0 <HAL_OSPIM_Config+0x294>)
 80065e8:	681b      	ldr	r3, [r3, #0]
 80065ea:	4a7d      	ldr	r2, [pc, #500]	; (80067e0 <HAL_OSPIM_Config+0x294>)
 80065ec:	f023 0301 	bic.w	r3, r3, #1
 80065f0:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x1U;
 80065f2:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 80065f6:	f043 0301 	orr.w	r3, r3, #1
 80065fa:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 80065fe:	4b79      	ldr	r3, [pc, #484]	; (80067e4 <HAL_OSPIM_Config+0x298>)
 8006600:	681b      	ldr	r3, [r3, #0]
 8006602:	f003 0301 	and.w	r3, r3, #1
 8006606:	2b00      	cmp	r3, #0
 8006608:	d00b      	beq.n	8006622 <HAL_OSPIM_Config+0xd6>
    {
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 800660a:	4b76      	ldr	r3, [pc, #472]	; (80067e4 <HAL_OSPIM_Config+0x298>)
 800660c:	681b      	ldr	r3, [r3, #0]
 800660e:	4a75      	ldr	r2, [pc, #468]	; (80067e4 <HAL_OSPIM_Config+0x298>)
 8006610:	f023 0301 	bic.w	r3, r3, #1
 8006614:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x2U;
 8006616:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 800661a:	f043 0302 	orr.w	r3, r3, #2
 800661e:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }

    /***************** Deactivation of previous configuration *****************/
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006622:	4971      	ldr	r1, [pc, #452]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006624:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006626:	4613      	mov	r3, r2
 8006628:	005b      	lsls	r3, r3, #1
 800662a:	4413      	add	r3, r2
 800662c:	00db      	lsls	r3, r3, #3
 800662e:	3350      	adds	r3, #80	; 0x50
 8006630:	443b      	add	r3, r7
 8006632:	3b34      	subs	r3, #52	; 0x34
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	3b01      	subs	r3, #1
 8006638:	009b      	lsls	r3, r3, #2
 800663a:	440b      	add	r3, r1
 800663c:	6859      	ldr	r1, [r3, #4]
 800663e:	486a      	ldr	r0, [pc, #424]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006640:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006642:	4613      	mov	r3, r2
 8006644:	005b      	lsls	r3, r3, #1
 8006646:	4413      	add	r3, r2
 8006648:	00db      	lsls	r3, r3, #3
 800664a:	3350      	adds	r3, #80	; 0x50
 800664c:	443b      	add	r3, r7
 800664e:	3b34      	subs	r3, #52	; 0x34
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	3b01      	subs	r3, #1
 8006654:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006658:	009b      	lsls	r3, r3, #2
 800665a:	4403      	add	r3, r0
 800665c:	605a      	str	r2, [r3, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 800665e:	4b62      	ldr	r3, [pc, #392]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	f003 0301 	and.w	r3, r3, #1
 8006666:	2b00      	cmp	r3, #0
 8006668:	f000 80c0 	beq.w	80067ec <HAL_OSPIM_Config+0x2a0>
    {
      /* De-multiplexing should be performed */
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 800666c:	4b5e      	ldr	r3, [pc, #376]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	4a5d      	ldr	r2, [pc, #372]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006672:	f023 0301 	bic.w	r3, r3, #1
 8006676:	6013      	str	r3, [r2, #0]

      if (other_instance == 1U)
 8006678:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 800667c:	2b01      	cmp	r3, #1
 800667e:	f040 8162 	bne.w	8006946 <HAL_OSPIM_Config+0x3fa>
      {
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKSRC);
 8006682:	4959      	ldr	r1, [pc, #356]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006684:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006688:	4613      	mov	r3, r2
 800668a:	005b      	lsls	r3, r3, #1
 800668c:	4413      	add	r3, r2
 800668e:	00db      	lsls	r3, r3, #3
 8006690:	3350      	adds	r3, #80	; 0x50
 8006692:	443b      	add	r3, r7
 8006694:	3b3c      	subs	r3, #60	; 0x3c
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	3b01      	subs	r3, #1
 800669a:	009b      	lsls	r3, r3, #2
 800669c:	440b      	add	r3, r1
 800669e:	6859      	ldr	r1, [r3, #4]
 80066a0:	4851      	ldr	r0, [pc, #324]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 80066a2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066a6:	4613      	mov	r3, r2
 80066a8:	005b      	lsls	r3, r3, #1
 80066aa:	4413      	add	r3, r2
 80066ac:	00db      	lsls	r3, r3, #3
 80066ae:	3350      	adds	r3, #80	; 0x50
 80066b0:	443b      	add	r3, r7
 80066b2:	3b3c      	subs	r3, #60	; 0x3c
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	3b01      	subs	r3, #1
 80066b8:	f041 0202 	orr.w	r2, r1, #2
 80066bc:	009b      	lsls	r3, r3, #2
 80066be:	4403      	add	r3, r0
 80066c0:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80066c2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066c6:	4613      	mov	r3, r2
 80066c8:	005b      	lsls	r3, r3, #1
 80066ca:	4413      	add	r3, r2
 80066cc:	00db      	lsls	r3, r3, #3
 80066ce:	3350      	adds	r3, #80	; 0x50
 80066d0:	443b      	add	r3, r7
 80066d2:	3b38      	subs	r3, #56	; 0x38
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d01f      	beq.n	800671a <HAL_OSPIM_Config+0x1ce>
        {
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSSRC);
 80066da:	4943      	ldr	r1, [pc, #268]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 80066dc:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066e0:	4613      	mov	r3, r2
 80066e2:	005b      	lsls	r3, r3, #1
 80066e4:	4413      	add	r3, r2
 80066e6:	00db      	lsls	r3, r3, #3
 80066e8:	3350      	adds	r3, #80	; 0x50
 80066ea:	443b      	add	r3, r7
 80066ec:	3b38      	subs	r3, #56	; 0x38
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	3b01      	subs	r3, #1
 80066f2:	009b      	lsls	r3, r3, #2
 80066f4:	440b      	add	r3, r1
 80066f6:	6859      	ldr	r1, [r3, #4]
 80066f8:	483b      	ldr	r0, [pc, #236]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 80066fa:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066fe:	4613      	mov	r3, r2
 8006700:	005b      	lsls	r3, r3, #1
 8006702:	4413      	add	r3, r2
 8006704:	00db      	lsls	r3, r3, #3
 8006706:	3350      	adds	r3, #80	; 0x50
 8006708:	443b      	add	r3, r7
 800670a:	3b38      	subs	r3, #56	; 0x38
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	3b01      	subs	r3, #1
 8006710:	f041 0220 	orr.w	r2, r1, #32
 8006714:	009b      	lsls	r3, r3, #2
 8006716:	4403      	add	r3, r0
 8006718:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 800671a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800671e:	4613      	mov	r3, r2
 8006720:	005b      	lsls	r3, r3, #1
 8006722:	4413      	add	r3, r2
 8006724:	00db      	lsls	r3, r3, #3
 8006726:	3350      	adds	r3, #80	; 0x50
 8006728:	443b      	add	r3, r7
 800672a:	3b30      	subs	r3, #48	; 0x30
 800672c:	681b      	ldr	r3, [r3, #0]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d023      	beq.n	800677a <HAL_OSPIM_Config+0x22e>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8006732:	492d      	ldr	r1, [pc, #180]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006734:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006738:	4613      	mov	r3, r2
 800673a:	005b      	lsls	r3, r3, #1
 800673c:	4413      	add	r3, r2
 800673e:	00db      	lsls	r3, r3, #3
 8006740:	3350      	adds	r3, #80	; 0x50
 8006742:	443b      	add	r3, r7
 8006744:	3b30      	subs	r3, #48	; 0x30
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	3b01      	subs	r3, #1
 800674a:	f003 0301 	and.w	r3, r3, #1
 800674e:	009b      	lsls	r3, r3, #2
 8006750:	440b      	add	r3, r1
 8006752:	6859      	ldr	r1, [r3, #4]
 8006754:	4824      	ldr	r0, [pc, #144]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006756:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800675a:	4613      	mov	r3, r2
 800675c:	005b      	lsls	r3, r3, #1
 800675e:	4413      	add	r3, r2
 8006760:	00db      	lsls	r3, r3, #3
 8006762:	3350      	adds	r3, #80	; 0x50
 8006764:	443b      	add	r3, r7
 8006766:	3b30      	subs	r3, #48	; 0x30
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	3b01      	subs	r3, #1
 800676c:	f003 0301 	and.w	r3, r3, #1
 8006770:	f441 2280 	orr.w	r2, r1, #262144	; 0x40000
 8006774:	009b      	lsls	r3, r3, #2
 8006776:	4403      	add	r3, r0
 8006778:	605a      	str	r2, [r3, #4]
                  OCTOSPIM_PCR_IOLSRC_1);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 800677a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800677e:	4613      	mov	r3, r2
 8006780:	005b      	lsls	r3, r3, #1
 8006782:	4413      	add	r3, r2
 8006784:	00db      	lsls	r3, r3, #3
 8006786:	3350      	adds	r3, #80	; 0x50
 8006788:	443b      	add	r3, r7
 800678a:	3b2c      	subs	r3, #44	; 0x2c
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	2b00      	cmp	r3, #0
 8006790:	f000 80d9 	beq.w	8006946 <HAL_OSPIM_Config+0x3fa>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8006794:	4914      	ldr	r1, [pc, #80]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 8006796:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800679a:	4613      	mov	r3, r2
 800679c:	005b      	lsls	r3, r3, #1
 800679e:	4413      	add	r3, r2
 80067a0:	00db      	lsls	r3, r3, #3
 80067a2:	3350      	adds	r3, #80	; 0x50
 80067a4:	443b      	add	r3, r7
 80067a6:	3b2c      	subs	r3, #44	; 0x2c
 80067a8:	681b      	ldr	r3, [r3, #0]
 80067aa:	3b01      	subs	r3, #1
 80067ac:	f003 0301 	and.w	r3, r3, #1
 80067b0:	009b      	lsls	r3, r3, #2
 80067b2:	440b      	add	r3, r1
 80067b4:	6859      	ldr	r1, [r3, #4]
 80067b6:	480c      	ldr	r0, [pc, #48]	; (80067e8 <HAL_OSPIM_Config+0x29c>)
 80067b8:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80067bc:	4613      	mov	r3, r2
 80067be:	005b      	lsls	r3, r3, #1
 80067c0:	4413      	add	r3, r2
 80067c2:	00db      	lsls	r3, r3, #3
 80067c4:	3350      	adds	r3, #80	; 0x50
 80067c6:	443b      	add	r3, r7
 80067c8:	3b2c      	subs	r3, #44	; 0x2c
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	3b01      	subs	r3, #1
 80067ce:	f003 0301 	and.w	r3, r3, #1
 80067d2:	f041 6280 	orr.w	r2, r1, #67108864	; 0x4000000
 80067d6:	009b      	lsls	r3, r3, #2
 80067d8:	4403      	add	r3, r0
 80067da:	605a      	str	r2, [r3, #4]
 80067dc:	e0b3      	b.n	8006946 <HAL_OSPIM_Config+0x3fa>
 80067de:	bf00      	nop
 80067e0:	52005000 	.word	0x52005000
 80067e4:	5200a000 	.word	0x5200a000
 80067e8:	5200b400 	.word	0x5200b400
        }
      }
    }
    else
    {
      if (IOM_cfg[instance].ClkPort != 0U)
 80067ec:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80067ee:	4613      	mov	r3, r2
 80067f0:	005b      	lsls	r3, r3, #1
 80067f2:	4413      	add	r3, r2
 80067f4:	00db      	lsls	r3, r3, #3
 80067f6:	3350      	adds	r3, #80	; 0x50
 80067f8:	443b      	add	r3, r7
 80067fa:	3b3c      	subs	r3, #60	; 0x3c
 80067fc:	681b      	ldr	r3, [r3, #0]
 80067fe:	2b00      	cmp	r3, #0
 8006800:	f000 80a1 	beq.w	8006946 <HAL_OSPIM_Config+0x3fa>
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006804:	4993      	ldr	r1, [pc, #588]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006806:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006808:	4613      	mov	r3, r2
 800680a:	005b      	lsls	r3, r3, #1
 800680c:	4413      	add	r3, r2
 800680e:	00db      	lsls	r3, r3, #3
 8006810:	3350      	adds	r3, #80	; 0x50
 8006812:	443b      	add	r3, r7
 8006814:	3b3c      	subs	r3, #60	; 0x3c
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	3b01      	subs	r3, #1
 800681a:	009b      	lsls	r3, r3, #2
 800681c:	440b      	add	r3, r1
 800681e:	6859      	ldr	r1, [r3, #4]
 8006820:	488c      	ldr	r0, [pc, #560]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006822:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006824:	4613      	mov	r3, r2
 8006826:	005b      	lsls	r3, r3, #1
 8006828:	4413      	add	r3, r2
 800682a:	00db      	lsls	r3, r3, #3
 800682c:	3350      	adds	r3, #80	; 0x50
 800682e:	443b      	add	r3, r7
 8006830:	3b3c      	subs	r3, #60	; 0x3c
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	3b01      	subs	r3, #1
 8006836:	f021 0201 	bic.w	r2, r1, #1
 800683a:	009b      	lsls	r3, r3, #2
 800683c:	4403      	add	r3, r0
 800683e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006840:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006842:	4613      	mov	r3, r2
 8006844:	005b      	lsls	r3, r3, #1
 8006846:	4413      	add	r3, r2
 8006848:	00db      	lsls	r3, r3, #3
 800684a:	3350      	adds	r3, #80	; 0x50
 800684c:	443b      	add	r3, r7
 800684e:	3b38      	subs	r3, #56	; 0x38
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	2b00      	cmp	r3, #0
 8006854:	d01d      	beq.n	8006892 <HAL_OSPIM_Config+0x346>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8006856:	497f      	ldr	r1, [pc, #508]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006858:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800685a:	4613      	mov	r3, r2
 800685c:	005b      	lsls	r3, r3, #1
 800685e:	4413      	add	r3, r2
 8006860:	00db      	lsls	r3, r3, #3
 8006862:	3350      	adds	r3, #80	; 0x50
 8006864:	443b      	add	r3, r7
 8006866:	3b38      	subs	r3, #56	; 0x38
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	3b01      	subs	r3, #1
 800686c:	009b      	lsls	r3, r3, #2
 800686e:	440b      	add	r3, r1
 8006870:	6859      	ldr	r1, [r3, #4]
 8006872:	4878      	ldr	r0, [pc, #480]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006874:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006876:	4613      	mov	r3, r2
 8006878:	005b      	lsls	r3, r3, #1
 800687a:	4413      	add	r3, r2
 800687c:	00db      	lsls	r3, r3, #3
 800687e:	3350      	adds	r3, #80	; 0x50
 8006880:	443b      	add	r3, r7
 8006882:	3b38      	subs	r3, #56	; 0x38
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	3b01      	subs	r3, #1
 8006888:	f021 0210 	bic.w	r2, r1, #16
 800688c:	009b      	lsls	r3, r3, #2
 800688e:	4403      	add	r3, r0
 8006890:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006892:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006894:	4613      	mov	r3, r2
 8006896:	005b      	lsls	r3, r3, #1
 8006898:	4413      	add	r3, r2
 800689a:	00db      	lsls	r3, r3, #3
 800689c:	3350      	adds	r3, #80	; 0x50
 800689e:	443b      	add	r3, r7
 80068a0:	3b30      	subs	r3, #48	; 0x30
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d021      	beq.n	80068ec <HAL_OSPIM_Config+0x3a0>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 80068a8:	496a      	ldr	r1, [pc, #424]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 80068aa:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80068ac:	4613      	mov	r3, r2
 80068ae:	005b      	lsls	r3, r3, #1
 80068b0:	4413      	add	r3, r2
 80068b2:	00db      	lsls	r3, r3, #3
 80068b4:	3350      	adds	r3, #80	; 0x50
 80068b6:	443b      	add	r3, r7
 80068b8:	3b30      	subs	r3, #48	; 0x30
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	3b01      	subs	r3, #1
 80068be:	f003 0301 	and.w	r3, r3, #1
 80068c2:	009b      	lsls	r3, r3, #2
 80068c4:	440b      	add	r3, r1
 80068c6:	6859      	ldr	r1, [r3, #4]
 80068c8:	4862      	ldr	r0, [pc, #392]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 80068ca:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80068cc:	4613      	mov	r3, r2
 80068ce:	005b      	lsls	r3, r3, #1
 80068d0:	4413      	add	r3, r2
 80068d2:	00db      	lsls	r3, r3, #3
 80068d4:	3350      	adds	r3, #80	; 0x50
 80068d6:	443b      	add	r3, r7
 80068d8:	3b30      	subs	r3, #48	; 0x30
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	3b01      	subs	r3, #1
 80068de:	f003 0301 	and.w	r3, r3, #1
 80068e2:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 80068e6:	009b      	lsls	r3, r3, #2
 80068e8:	4403      	add	r3, r0
 80068ea:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80068ec:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80068ee:	4613      	mov	r3, r2
 80068f0:	005b      	lsls	r3, r3, #1
 80068f2:	4413      	add	r3, r2
 80068f4:	00db      	lsls	r3, r3, #3
 80068f6:	3350      	adds	r3, #80	; 0x50
 80068f8:	443b      	add	r3, r7
 80068fa:	3b2c      	subs	r3, #44	; 0x2c
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d021      	beq.n	8006946 <HAL_OSPIM_Config+0x3fa>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006902:	4954      	ldr	r1, [pc, #336]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006904:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006906:	4613      	mov	r3, r2
 8006908:	005b      	lsls	r3, r3, #1
 800690a:	4413      	add	r3, r2
 800690c:	00db      	lsls	r3, r3, #3
 800690e:	3350      	adds	r3, #80	; 0x50
 8006910:	443b      	add	r3, r7
 8006912:	3b2c      	subs	r3, #44	; 0x2c
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	3b01      	subs	r3, #1
 8006918:	f003 0301 	and.w	r3, r3, #1
 800691c:	009b      	lsls	r3, r3, #2
 800691e:	440b      	add	r3, r1
 8006920:	6859      	ldr	r1, [r3, #4]
 8006922:	484c      	ldr	r0, [pc, #304]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006924:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006926:	4613      	mov	r3, r2
 8006928:	005b      	lsls	r3, r3, #1
 800692a:	4413      	add	r3, r2
 800692c:	00db      	lsls	r3, r3, #3
 800692e:	3350      	adds	r3, #80	; 0x50
 8006930:	443b      	add	r3, r7
 8006932:	3b2c      	subs	r3, #44	; 0x2c
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	3b01      	subs	r3, #1
 8006938:	f003 0301 	and.w	r3, r3, #1
 800693c:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 8006940:	009b      	lsls	r3, r3, #2
 8006942:	4403      	add	r3, r0
 8006944:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /********************* Deactivation of other instance *********************/
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006946:	68bb      	ldr	r3, [r7, #8]
 8006948:	6819      	ldr	r1, [r3, #0]
 800694a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800694e:	4613      	mov	r3, r2
 8006950:	005b      	lsls	r3, r3, #1
 8006952:	4413      	add	r3, r2
 8006954:	00db      	lsls	r3, r3, #3
 8006956:	3350      	adds	r3, #80	; 0x50
 8006958:	443b      	add	r3, r7
 800695a:	3b3c      	subs	r3, #60	; 0x3c
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	4299      	cmp	r1, r3
 8006960:	d038      	beq.n	80069d4 <HAL_OSPIM_Config+0x488>
 8006962:	68bb      	ldr	r3, [r7, #8]
 8006964:	6859      	ldr	r1, [r3, #4]
 8006966:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800696a:	4613      	mov	r3, r2
 800696c:	005b      	lsls	r3, r3, #1
 800696e:	4413      	add	r3, r2
 8006970:	00db      	lsls	r3, r3, #3
 8006972:	3350      	adds	r3, #80	; 0x50
 8006974:	443b      	add	r3, r7
 8006976:	3b38      	subs	r3, #56	; 0x38
 8006978:	681b      	ldr	r3, [r3, #0]
 800697a:	4299      	cmp	r1, r3
 800697c:	d02a      	beq.n	80069d4 <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 800697e:	68bb      	ldr	r3, [r7, #8]
 8006980:	6899      	ldr	r1, [r3, #8]
 8006982:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006986:	4613      	mov	r3, r2
 8006988:	005b      	lsls	r3, r3, #1
 800698a:	4413      	add	r3, r2
 800698c:	00db      	lsls	r3, r3, #3
 800698e:	3350      	adds	r3, #80	; 0x50
 8006990:	443b      	add	r3, r7
 8006992:	3b34      	subs	r3, #52	; 0x34
 8006994:	681b      	ldr	r3, [r3, #0]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006996:	4299      	cmp	r1, r3
 8006998:	d01c      	beq.n	80069d4 <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 800699a:	68bb      	ldr	r3, [r7, #8]
 800699c:	68d9      	ldr	r1, [r3, #12]
 800699e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80069a2:	4613      	mov	r3, r2
 80069a4:	005b      	lsls	r3, r3, #1
 80069a6:	4413      	add	r3, r2
 80069a8:	00db      	lsls	r3, r3, #3
 80069aa:	3350      	adds	r3, #80	; 0x50
 80069ac:	443b      	add	r3, r7
 80069ae:	3b30      	subs	r3, #48	; 0x30
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	4299      	cmp	r1, r3
 80069b4:	d00e      	beq.n	80069d4 <HAL_OSPIM_Config+0x488>
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 80069b6:	68bb      	ldr	r3, [r7, #8]
 80069b8:	6919      	ldr	r1, [r3, #16]
 80069ba:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80069be:	4613      	mov	r3, r2
 80069c0:	005b      	lsls	r3, r3, #1
 80069c2:	4413      	add	r3, r2
 80069c4:	00db      	lsls	r3, r3, #3
 80069c6:	3350      	adds	r3, #80	; 0x50
 80069c8:	443b      	add	r3, r7
 80069ca:	3b2c      	subs	r3, #44	; 0x2c
 80069cc:	681b      	ldr	r3, [r3, #0]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 80069ce:	4299      	cmp	r1, r3
 80069d0:	f040 810e 	bne.w	8006bf0 <HAL_OSPIM_Config+0x6a4>
    {
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 80069d4:	68bb      	ldr	r3, [r7, #8]
 80069d6:	6819      	ldr	r1, [r3, #0]
 80069d8:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80069dc:	4613      	mov	r3, r2
 80069de:	005b      	lsls	r3, r3, #1
 80069e0:	4413      	add	r3, r2
 80069e2:	00db      	lsls	r3, r3, #3
 80069e4:	3350      	adds	r3, #80	; 0x50
 80069e6:	443b      	add	r3, r7
 80069e8:	3b3c      	subs	r3, #60	; 0x3c
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	4299      	cmp	r1, r3
 80069ee:	d133      	bne.n	8006a58 <HAL_OSPIM_Config+0x50c>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 80069f0:	68bb      	ldr	r3, [r7, #8]
 80069f2:	6859      	ldr	r1, [r3, #4]
 80069f4:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80069f8:	4613      	mov	r3, r2
 80069fa:	005b      	lsls	r3, r3, #1
 80069fc:	4413      	add	r3, r2
 80069fe:	00db      	lsls	r3, r3, #3
 8006a00:	3350      	adds	r3, #80	; 0x50
 8006a02:	443b      	add	r3, r7
 8006a04:	3b38      	subs	r3, #56	; 0x38
 8006a06:	681b      	ldr	r3, [r3, #0]
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006a08:	4299      	cmp	r1, r3
 8006a0a:	d125      	bne.n	8006a58 <HAL_OSPIM_Config+0x50c>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006a0c:	68bb      	ldr	r3, [r7, #8]
 8006a0e:	68d9      	ldr	r1, [r3, #12]
 8006a10:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006a14:	4613      	mov	r3, r2
 8006a16:	005b      	lsls	r3, r3, #1
 8006a18:	4413      	add	r3, r2
 8006a1a:	00db      	lsls	r3, r3, #3
 8006a1c:	3350      	adds	r3, #80	; 0x50
 8006a1e:	443b      	add	r3, r7
 8006a20:	3b30      	subs	r3, #48	; 0x30
 8006a22:	681b      	ldr	r3, [r3, #0]
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006a24:	4299      	cmp	r1, r3
 8006a26:	d117      	bne.n	8006a58 <HAL_OSPIM_Config+0x50c>
          (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006a28:	68bb      	ldr	r3, [r7, #8]
 8006a2a:	6919      	ldr	r1, [r3, #16]
 8006a2c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006a30:	4613      	mov	r3, r2
 8006a32:	005b      	lsls	r3, r3, #1
 8006a34:	4413      	add	r3, r2
 8006a36:	00db      	lsls	r3, r3, #3
 8006a38:	3350      	adds	r3, #80	; 0x50
 8006a3a:	443b      	add	r3, r7
 8006a3c:	3b2c      	subs	r3, #44	; 0x2c
 8006a3e:	681b      	ldr	r3, [r3, #0]
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006a40:	4299      	cmp	r1, r3
 8006a42:	d109      	bne.n	8006a58 <HAL_OSPIM_Config+0x50c>
      {
        /* Multiplexing should be performed */
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006a44:	4b03      	ldr	r3, [pc, #12]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	4a02      	ldr	r2, [pc, #8]	; (8006a54 <HAL_OSPIM_Config+0x508>)
 8006a4a:	f043 0301 	orr.w	r3, r3, #1
 8006a4e:	6013      	str	r3, [r2, #0]
 8006a50:	e0ce      	b.n	8006bf0 <HAL_OSPIM_Config+0x6a4>
 8006a52:	bf00      	nop
 8006a54:	5200b400 	.word	0x5200b400
      }
      else
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006a58:	49bb      	ldr	r1, [pc, #748]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006a5a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006a5e:	4613      	mov	r3, r2
 8006a60:	005b      	lsls	r3, r3, #1
 8006a62:	4413      	add	r3, r2
 8006a64:	00db      	lsls	r3, r3, #3
 8006a66:	3350      	adds	r3, #80	; 0x50
 8006a68:	443b      	add	r3, r7
 8006a6a:	3b3c      	subs	r3, #60	; 0x3c
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	3b01      	subs	r3, #1
 8006a70:	009b      	lsls	r3, r3, #2
 8006a72:	440b      	add	r3, r1
 8006a74:	6859      	ldr	r1, [r3, #4]
 8006a76:	48b4      	ldr	r0, [pc, #720]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006a78:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006a7c:	4613      	mov	r3, r2
 8006a7e:	005b      	lsls	r3, r3, #1
 8006a80:	4413      	add	r3, r2
 8006a82:	00db      	lsls	r3, r3, #3
 8006a84:	3350      	adds	r3, #80	; 0x50
 8006a86:	443b      	add	r3, r7
 8006a88:	3b3c      	subs	r3, #60	; 0x3c
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	3b01      	subs	r3, #1
 8006a8e:	f021 0201 	bic.w	r2, r1, #1
 8006a92:	009b      	lsls	r3, r3, #2
 8006a94:	4403      	add	r3, r0
 8006a96:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006a98:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006a9c:	4613      	mov	r3, r2
 8006a9e:	005b      	lsls	r3, r3, #1
 8006aa0:	4413      	add	r3, r2
 8006aa2:	00db      	lsls	r3, r3, #3
 8006aa4:	3350      	adds	r3, #80	; 0x50
 8006aa6:	443b      	add	r3, r7
 8006aa8:	3b38      	subs	r3, #56	; 0x38
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	2b00      	cmp	r3, #0
 8006aae:	d01f      	beq.n	8006af0 <HAL_OSPIM_Config+0x5a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8006ab0:	49a5      	ldr	r1, [pc, #660]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006ab2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006ab6:	4613      	mov	r3, r2
 8006ab8:	005b      	lsls	r3, r3, #1
 8006aba:	4413      	add	r3, r2
 8006abc:	00db      	lsls	r3, r3, #3
 8006abe:	3350      	adds	r3, #80	; 0x50
 8006ac0:	443b      	add	r3, r7
 8006ac2:	3b38      	subs	r3, #56	; 0x38
 8006ac4:	681b      	ldr	r3, [r3, #0]
 8006ac6:	3b01      	subs	r3, #1
 8006ac8:	009b      	lsls	r3, r3, #2
 8006aca:	440b      	add	r3, r1
 8006acc:	6859      	ldr	r1, [r3, #4]
 8006ace:	489e      	ldr	r0, [pc, #632]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006ad0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006ad4:	4613      	mov	r3, r2
 8006ad6:	005b      	lsls	r3, r3, #1
 8006ad8:	4413      	add	r3, r2
 8006ada:	00db      	lsls	r3, r3, #3
 8006adc:	3350      	adds	r3, #80	; 0x50
 8006ade:	443b      	add	r3, r7
 8006ae0:	3b38      	subs	r3, #56	; 0x38
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	3b01      	subs	r3, #1
 8006ae6:	f021 0210 	bic.w	r2, r1, #16
 8006aea:	009b      	lsls	r3, r3, #2
 8006aec:	4403      	add	r3, r0
 8006aee:	605a      	str	r2, [r3, #4]
        }
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006af0:	4995      	ldr	r1, [pc, #596]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006af2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006af6:	4613      	mov	r3, r2
 8006af8:	005b      	lsls	r3, r3, #1
 8006afa:	4413      	add	r3, r2
 8006afc:	00db      	lsls	r3, r3, #3
 8006afe:	3350      	adds	r3, #80	; 0x50
 8006b00:	443b      	add	r3, r7
 8006b02:	3b34      	subs	r3, #52	; 0x34
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	3b01      	subs	r3, #1
 8006b08:	009b      	lsls	r3, r3, #2
 8006b0a:	440b      	add	r3, r1
 8006b0c:	6859      	ldr	r1, [r3, #4]
 8006b0e:	488e      	ldr	r0, [pc, #568]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006b10:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006b14:	4613      	mov	r3, r2
 8006b16:	005b      	lsls	r3, r3, #1
 8006b18:	4413      	add	r3, r2
 8006b1a:	00db      	lsls	r3, r3, #3
 8006b1c:	3350      	adds	r3, #80	; 0x50
 8006b1e:	443b      	add	r3, r7
 8006b20:	3b34      	subs	r3, #52	; 0x34
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	3b01      	subs	r3, #1
 8006b26:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006b2a:	009b      	lsls	r3, r3, #2
 8006b2c:	4403      	add	r3, r0
 8006b2e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006b30:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006b34:	4613      	mov	r3, r2
 8006b36:	005b      	lsls	r3, r3, #1
 8006b38:	4413      	add	r3, r2
 8006b3a:	00db      	lsls	r3, r3, #3
 8006b3c:	3350      	adds	r3, #80	; 0x50
 8006b3e:	443b      	add	r3, r7
 8006b40:	3b30      	subs	r3, #48	; 0x30
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	2b00      	cmp	r3, #0
 8006b46:	d023      	beq.n	8006b90 <HAL_OSPIM_Config+0x644>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006b48:	497f      	ldr	r1, [pc, #508]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006b4a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006b4e:	4613      	mov	r3, r2
 8006b50:	005b      	lsls	r3, r3, #1
 8006b52:	4413      	add	r3, r2
 8006b54:	00db      	lsls	r3, r3, #3
 8006b56:	3350      	adds	r3, #80	; 0x50
 8006b58:	443b      	add	r3, r7
 8006b5a:	3b30      	subs	r3, #48	; 0x30
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	3b01      	subs	r3, #1
 8006b60:	f003 0301 	and.w	r3, r3, #1
 8006b64:	009b      	lsls	r3, r3, #2
 8006b66:	440b      	add	r3, r1
 8006b68:	6859      	ldr	r1, [r3, #4]
 8006b6a:	4877      	ldr	r0, [pc, #476]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006b6c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006b70:	4613      	mov	r3, r2
 8006b72:	005b      	lsls	r3, r3, #1
 8006b74:	4413      	add	r3, r2
 8006b76:	00db      	lsls	r3, r3, #3
 8006b78:	3350      	adds	r3, #80	; 0x50
 8006b7a:	443b      	add	r3, r7
 8006b7c:	3b30      	subs	r3, #48	; 0x30
 8006b7e:	681b      	ldr	r3, [r3, #0]
 8006b80:	3b01      	subs	r3, #1
 8006b82:	f003 0301 	and.w	r3, r3, #1
 8006b86:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 8006b8a:	009b      	lsls	r3, r3, #2
 8006b8c:	4403      	add	r3, r0
 8006b8e:	605a      	str	r2, [r3, #4]
                    OCTOSPIM_PCR_IOLEN);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006b90:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006b94:	4613      	mov	r3, r2
 8006b96:	005b      	lsls	r3, r3, #1
 8006b98:	4413      	add	r3, r2
 8006b9a:	00db      	lsls	r3, r3, #3
 8006b9c:	3350      	adds	r3, #80	; 0x50
 8006b9e:	443b      	add	r3, r7
 8006ba0:	3b2c      	subs	r3, #44	; 0x2c
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	2b00      	cmp	r3, #0
 8006ba6:	d023      	beq.n	8006bf0 <HAL_OSPIM_Config+0x6a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006ba8:	4967      	ldr	r1, [pc, #412]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006baa:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006bae:	4613      	mov	r3, r2
 8006bb0:	005b      	lsls	r3, r3, #1
 8006bb2:	4413      	add	r3, r2
 8006bb4:	00db      	lsls	r3, r3, #3
 8006bb6:	3350      	adds	r3, #80	; 0x50
 8006bb8:	443b      	add	r3, r7
 8006bba:	3b2c      	subs	r3, #44	; 0x2c
 8006bbc:	681b      	ldr	r3, [r3, #0]
 8006bbe:	3b01      	subs	r3, #1
 8006bc0:	f003 0301 	and.w	r3, r3, #1
 8006bc4:	009b      	lsls	r3, r3, #2
 8006bc6:	440b      	add	r3, r1
 8006bc8:	6859      	ldr	r1, [r3, #4]
 8006bca:	485f      	ldr	r0, [pc, #380]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006bcc:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006bd0:	4613      	mov	r3, r2
 8006bd2:	005b      	lsls	r3, r3, #1
 8006bd4:	4413      	add	r3, r2
 8006bd6:	00db      	lsls	r3, r3, #3
 8006bd8:	3350      	adds	r3, #80	; 0x50
 8006bda:	443b      	add	r3, r7
 8006bdc:	3b2c      	subs	r3, #44	; 0x2c
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	3b01      	subs	r3, #1
 8006be2:	f003 0301 	and.w	r3, r3, #1
 8006be6:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 8006bea:	009b      	lsls	r3, r3, #2
 8006bec:	4403      	add	r3, r0
 8006bee:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /******************** Activation of new configuration *********************/
    MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 8006bf0:	4a55      	ldr	r2, [pc, #340]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006bf2:	68bb      	ldr	r3, [r7, #8]
 8006bf4:	689b      	ldr	r3, [r3, #8]
 8006bf6:	3b01      	subs	r3, #1
 8006bf8:	009b      	lsls	r3, r3, #2
 8006bfa:	4413      	add	r3, r2
 8006bfc:	685b      	ldr	r3, [r3, #4]
 8006bfe:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8006c02:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006c04:	025b      	lsls	r3, r3, #9
 8006c06:	431a      	orrs	r2, r3
 8006c08:	494f      	ldr	r1, [pc, #316]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c0a:	68bb      	ldr	r3, [r7, #8]
 8006c0c:	689b      	ldr	r3, [r3, #8]
 8006c0e:	3b01      	subs	r3, #1
 8006c10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006c14:	009b      	lsls	r3, r3, #2
 8006c16:	440b      	add	r3, r1
 8006c18:	605a      	str	r2, [r3, #4]
               (OCTOSPIM_PCR_NCSEN | (instance << OCTOSPIM_PCR_NCSSRC_Pos)));

    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006c1a:	68bb      	ldr	r3, [r7, #8]
 8006c1c:	695b      	ldr	r3, [r3, #20]
 8006c1e:	1e5a      	subs	r2, r3, #1
 8006c20:	4b49      	ldr	r3, [pc, #292]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	0c1b      	lsrs	r3, r3, #16
 8006c26:	b2db      	uxtb	r3, r3
 8006c28:	429a      	cmp	r2, r3
 8006c2a:	d90a      	bls.n	8006c42 <HAL_OSPIM_Config+0x6f6>
    {
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006c2c:	4b46      	ldr	r3, [pc, #280]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	f423 027f 	bic.w	r2, r3, #16711680	; 0xff0000
 8006c34:	68bb      	ldr	r3, [r7, #8]
 8006c36:	695b      	ldr	r3, [r3, #20]
 8006c38:	3b01      	subs	r3, #1
 8006c3a:	041b      	lsls	r3, r3, #16
 8006c3c:	4942      	ldr	r1, [pc, #264]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c3e:	4313      	orrs	r3, r2
 8006c40:	600b      	str	r3, [r1, #0]
    }

    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006c42:	4b41      	ldr	r3, [pc, #260]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	f003 0301 	and.w	r3, r3, #1
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	f000 809a 	beq.w	8006d84 <HAL_OSPIM_Config+0x838>
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006c50:	4a3d      	ldr	r2, [pc, #244]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c52:	68bb      	ldr	r3, [r7, #8]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	3b01      	subs	r3, #1
 8006c58:	009b      	lsls	r3, r3, #2
 8006c5a:	4413      	add	r3, r2
 8006c5c:	685b      	ldr	r3, [r3, #4]
 8006c5e:	f023 0203 	bic.w	r2, r3, #3
 8006c62:	4939      	ldr	r1, [pc, #228]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c64:	68bb      	ldr	r3, [r7, #8]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	3b01      	subs	r3, #1
 8006c6a:	f042 0201 	orr.w	r2, r2, #1
 8006c6e:	009b      	lsls	r3, r3, #2
 8006c70:	440b      	add	r3, r1
 8006c72:	605a      	str	r2, [r3, #4]
      if (cfg->DQSPort != 0U)
 8006c74:	68bb      	ldr	r3, [r7, #8]
 8006c76:	685b      	ldr	r3, [r3, #4]
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d011      	beq.n	8006ca0 <HAL_OSPIM_Config+0x754>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006c7c:	4a32      	ldr	r2, [pc, #200]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c7e:	68bb      	ldr	r3, [r7, #8]
 8006c80:	685b      	ldr	r3, [r3, #4]
 8006c82:	3b01      	subs	r3, #1
 8006c84:	009b      	lsls	r3, r3, #2
 8006c86:	4413      	add	r3, r2
 8006c88:	685b      	ldr	r3, [r3, #4]
 8006c8a:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8006c8e:	492e      	ldr	r1, [pc, #184]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006c90:	68bb      	ldr	r3, [r7, #8]
 8006c92:	685b      	ldr	r3, [r3, #4]
 8006c94:	3b01      	subs	r3, #1
 8006c96:	f042 0210 	orr.w	r2, r2, #16
 8006c9a:	009b      	lsls	r3, r3, #2
 8006c9c:	440b      	add	r3, r1
 8006c9e:	605a      	str	r2, [r3, #4]
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006ca0:	68bb      	ldr	r3, [r7, #8]
 8006ca2:	68db      	ldr	r3, [r3, #12]
 8006ca4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006ca8:	2b00      	cmp	r3, #0
 8006caa:	d016      	beq.n	8006cda <HAL_OSPIM_Config+0x78e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006cac:	4a26      	ldr	r2, [pc, #152]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006cae:	68bb      	ldr	r3, [r7, #8]
 8006cb0:	68db      	ldr	r3, [r3, #12]
 8006cb2:	3b01      	subs	r3, #1
 8006cb4:	f003 0301 	and.w	r3, r3, #1
 8006cb8:	009b      	lsls	r3, r3, #2
 8006cba:	4413      	add	r3, r2
 8006cbc:	685b      	ldr	r3, [r3, #4]
 8006cbe:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006cc2:	4921      	ldr	r1, [pc, #132]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006cc4:	68bb      	ldr	r3, [r7, #8]
 8006cc6:	68db      	ldr	r3, [r3, #12]
 8006cc8:	3b01      	subs	r3, #1
 8006cca:	f003 0301 	and.w	r3, r3, #1
 8006cce:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006cd2:	009b      	lsls	r3, r3, #2
 8006cd4:	440b      	add	r3, r1
 8006cd6:	605a      	str	r2, [r3, #4]
 8006cd8:	e019      	b.n	8006d0e <HAL_OSPIM_Config+0x7c2>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), OCTOSPIM_PCR_IOLEN);
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006cda:	68bb      	ldr	r3, [r7, #8]
 8006cdc:	68db      	ldr	r3, [r3, #12]
 8006cde:	2b00      	cmp	r3, #0
 8006ce0:	d015      	beq.n	8006d0e <HAL_OSPIM_Config+0x7c2>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006ce2:	4a19      	ldr	r2, [pc, #100]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006ce4:	68bb      	ldr	r3, [r7, #8]
 8006ce6:	68db      	ldr	r3, [r3, #12]
 8006ce8:	3b01      	subs	r3, #1
 8006cea:	f003 0301 	and.w	r3, r3, #1
 8006cee:	009b      	lsls	r3, r3, #2
 8006cf0:	4413      	add	r3, r2
 8006cf2:	685b      	ldr	r3, [r3, #4]
 8006cf4:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006cf8:	4913      	ldr	r1, [pc, #76]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006cfa:	68bb      	ldr	r3, [r7, #8]
 8006cfc:	68db      	ldr	r3, [r3, #12]
 8006cfe:	3b01      	subs	r3, #1
 8006d00:	f003 0301 	and.w	r3, r3, #1
 8006d04:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006d08:	009b      	lsls	r3, r3, #2
 8006d0a:	440b      	add	r3, r1
 8006d0c:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006d0e:	68bb      	ldr	r3, [r7, #8]
 8006d10:	691b      	ldr	r3, [r3, #16]
 8006d12:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	d018      	beq.n	8006d4c <HAL_OSPIM_Config+0x800>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d1a:	4a0b      	ldr	r2, [pc, #44]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006d1c:	68bb      	ldr	r3, [r7, #8]
 8006d1e:	691b      	ldr	r3, [r3, #16]
 8006d20:	3b01      	subs	r3, #1
 8006d22:	f003 0301 	and.w	r3, r3, #1
 8006d26:	009b      	lsls	r3, r3, #2
 8006d28:	4413      	add	r3, r2
 8006d2a:	685b      	ldr	r3, [r3, #4]
 8006d2c:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006d30:	4905      	ldr	r1, [pc, #20]	; (8006d48 <HAL_OSPIM_Config+0x7fc>)
 8006d32:	68bb      	ldr	r3, [r7, #8]
 8006d34:	691b      	ldr	r3, [r3, #16]
 8006d36:	3b01      	subs	r3, #1
 8006d38:	f003 0301 	and.w	r3, r3, #1
 8006d3c:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006d40:	009b      	lsls	r3, r3, #2
 8006d42:	440b      	add	r3, r1
 8006d44:	605a      	str	r2, [r3, #4]
 8006d46:	e0c5      	b.n	8006ed4 <HAL_OSPIM_Config+0x988>
 8006d48:	5200b400 	.word	0x5200b400
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006d4c:	68bb      	ldr	r3, [r7, #8]
 8006d4e:	691b      	ldr	r3, [r3, #16]
 8006d50:	2b00      	cmp	r3, #0
 8006d52:	f000 80bf 	beq.w	8006ed4 <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006d56:	4a6e      	ldr	r2, [pc, #440]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006d58:	68bb      	ldr	r3, [r7, #8]
 8006d5a:	691b      	ldr	r3, [r3, #16]
 8006d5c:	3b01      	subs	r3, #1
 8006d5e:	f003 0301 	and.w	r3, r3, #1
 8006d62:	009b      	lsls	r3, r3, #2
 8006d64:	4413      	add	r3, r2
 8006d66:	685b      	ldr	r3, [r3, #4]
 8006d68:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006d6c:	4968      	ldr	r1, [pc, #416]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006d6e:	68bb      	ldr	r3, [r7, #8]
 8006d70:	691b      	ldr	r3, [r3, #16]
 8006d72:	3b01      	subs	r3, #1
 8006d74:	f003 0301 	and.w	r3, r3, #1
 8006d78:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006d7c:	009b      	lsls	r3, r3, #2
 8006d7e:	440b      	add	r3, r1
 8006d80:	605a      	str	r2, [r3, #4]
 8006d82:	e0a7      	b.n	8006ed4 <HAL_OSPIM_Config+0x988>
        /* Nothing to do */
      }
    }
    else
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 8006d84:	4a62      	ldr	r2, [pc, #392]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006d86:	68bb      	ldr	r3, [r7, #8]
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	3b01      	subs	r3, #1
 8006d8c:	009b      	lsls	r3, r3, #2
 8006d8e:	4413      	add	r3, r2
 8006d90:	685b      	ldr	r3, [r3, #4]
 8006d92:	f023 0203 	bic.w	r2, r3, #3
 8006d96:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006d98:	005b      	lsls	r3, r3, #1
 8006d9a:	431a      	orrs	r2, r3
 8006d9c:	495c      	ldr	r1, [pc, #368]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006d9e:	68bb      	ldr	r3, [r7, #8]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	3b01      	subs	r3, #1
 8006da4:	f042 0201 	orr.w	r2, r2, #1
 8006da8:	009b      	lsls	r3, r3, #2
 8006daa:	440b      	add	r3, r1
 8006dac:	605a      	str	r2, [r3, #4]
                 (OCTOSPIM_PCR_CLKEN | (instance << OCTOSPIM_PCR_CLKSRC_Pos)));
      if (cfg->DQSPort != 0U)
 8006dae:	68bb      	ldr	r3, [r7, #8]
 8006db0:	685b      	ldr	r3, [r3, #4]
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d014      	beq.n	8006de0 <HAL_OSPIM_Config+0x894>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 8006db6:	4a56      	ldr	r2, [pc, #344]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006db8:	68bb      	ldr	r3, [r7, #8]
 8006dba:	685b      	ldr	r3, [r3, #4]
 8006dbc:	3b01      	subs	r3, #1
 8006dbe:	009b      	lsls	r3, r3, #2
 8006dc0:	4413      	add	r3, r2
 8006dc2:	685b      	ldr	r3, [r3, #4]
 8006dc4:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8006dc8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006dca:	015b      	lsls	r3, r3, #5
 8006dcc:	431a      	orrs	r2, r3
 8006dce:	4950      	ldr	r1, [pc, #320]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006dd0:	68bb      	ldr	r3, [r7, #8]
 8006dd2:	685b      	ldr	r3, [r3, #4]
 8006dd4:	3b01      	subs	r3, #1
 8006dd6:	f042 0210 	orr.w	r2, r2, #16
 8006dda:	009b      	lsls	r3, r3, #2
 8006ddc:	440b      	add	r3, r1
 8006dde:	605a      	str	r2, [r3, #4]
                   (OCTOSPIM_PCR_DQSEN | (instance << OCTOSPIM_PCR_DQSSRC_Pos)));
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006de0:	68bb      	ldr	r3, [r7, #8]
 8006de2:	68db      	ldr	r3, [r3, #12]
 8006de4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d019      	beq.n	8006e20 <HAL_OSPIM_Config+0x8d4>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006dec:	4a48      	ldr	r2, [pc, #288]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006dee:	68bb      	ldr	r3, [r7, #8]
 8006df0:	68db      	ldr	r3, [r3, #12]
 8006df2:	3b01      	subs	r3, #1
 8006df4:	f003 0301 	and.w	r3, r3, #1
 8006df8:	009b      	lsls	r3, r3, #2
 8006dfa:	4413      	add	r3, r2
 8006dfc:	685b      	ldr	r3, [r3, #4]
 8006dfe:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006e02:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006e04:	049b      	lsls	r3, r3, #18
 8006e06:	431a      	orrs	r2, r3
 8006e08:	4941      	ldr	r1, [pc, #260]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006e0a:	68bb      	ldr	r3, [r7, #8]
 8006e0c:	68db      	ldr	r3, [r3, #12]
 8006e0e:	3b01      	subs	r3, #1
 8006e10:	f003 0301 	and.w	r3, r3, #1
 8006e14:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006e18:	009b      	lsls	r3, r3, #2
 8006e1a:	440b      	add	r3, r1
 8006e1c:	605a      	str	r2, [r3, #4]
 8006e1e:	e01c      	b.n	8006e5a <HAL_OSPIM_Config+0x90e>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006e20:	68bb      	ldr	r3, [r7, #8]
 8006e22:	68db      	ldr	r3, [r3, #12]
 8006e24:	2b00      	cmp	r3, #0
 8006e26:	d018      	beq.n	8006e5a <HAL_OSPIM_Config+0x90e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006e28:	4a39      	ldr	r2, [pc, #228]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006e2a:	68bb      	ldr	r3, [r7, #8]
 8006e2c:	68db      	ldr	r3, [r3, #12]
 8006e2e:	3b01      	subs	r3, #1
 8006e30:	f003 0301 	and.w	r3, r3, #1
 8006e34:	009b      	lsls	r3, r3, #2
 8006e36:	4413      	add	r3, r2
 8006e38:	685b      	ldr	r3, [r3, #4]
 8006e3a:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006e3e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006e40:	069b      	lsls	r3, r3, #26
 8006e42:	431a      	orrs	r2, r3
 8006e44:	4932      	ldr	r1, [pc, #200]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006e46:	68bb      	ldr	r3, [r7, #8]
 8006e48:	68db      	ldr	r3, [r3, #12]
 8006e4a:	3b01      	subs	r3, #1
 8006e4c:	f003 0301 	and.w	r3, r3, #1
 8006e50:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006e54:	009b      	lsls	r3, r3, #2
 8006e56:	440b      	add	r3, r1
 8006e58:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006e5a:	68bb      	ldr	r3, [r7, #8]
 8006e5c:	691b      	ldr	r3, [r3, #16]
 8006e5e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d019      	beq.n	8006e9a <HAL_OSPIM_Config+0x94e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006e66:	4a2a      	ldr	r2, [pc, #168]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006e68:	68bb      	ldr	r3, [r7, #8]
 8006e6a:	691b      	ldr	r3, [r3, #16]
 8006e6c:	3b01      	subs	r3, #1
 8006e6e:	f003 0301 	and.w	r3, r3, #1
 8006e72:	009b      	lsls	r3, r3, #2
 8006e74:	4413      	add	r3, r2
 8006e76:	685b      	ldr	r3, [r3, #4]
 8006e78:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006e7c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006e7e:	049b      	lsls	r3, r3, #18
 8006e80:	431a      	orrs	r2, r3
 8006e82:	4923      	ldr	r1, [pc, #140]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006e84:	68bb      	ldr	r3, [r7, #8]
 8006e86:	691b      	ldr	r3, [r3, #16]
 8006e88:	3b01      	subs	r3, #1
 8006e8a:	f003 0301 	and.w	r3, r3, #1
 8006e8e:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006e92:	009b      	lsls	r3, r3, #2
 8006e94:	440b      	add	r3, r1
 8006e96:	605a      	str	r2, [r3, #4]
 8006e98:	e01c      	b.n	8006ed4 <HAL_OSPIM_Config+0x988>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0 | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006e9a:	68bb      	ldr	r3, [r7, #8]
 8006e9c:	691b      	ldr	r3, [r3, #16]
 8006e9e:	2b00      	cmp	r3, #0
 8006ea0:	d018      	beq.n	8006ed4 <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006ea2:	4a1b      	ldr	r2, [pc, #108]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	691b      	ldr	r3, [r3, #16]
 8006ea8:	3b01      	subs	r3, #1
 8006eaa:	f003 0301 	and.w	r3, r3, #1
 8006eae:	009b      	lsls	r3, r3, #2
 8006eb0:	4413      	add	r3, r2
 8006eb2:	685b      	ldr	r3, [r3, #4]
 8006eb4:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006eb8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006eba:	069b      	lsls	r3, r3, #26
 8006ebc:	431a      	orrs	r2, r3
 8006ebe:	4914      	ldr	r1, [pc, #80]	; (8006f10 <HAL_OSPIM_Config+0x9c4>)
 8006ec0:	68bb      	ldr	r3, [r7, #8]
 8006ec2:	691b      	ldr	r3, [r3, #16]
 8006ec4:	3b01      	subs	r3, #1
 8006ec6:	f003 0301 	and.w	r3, r3, #1
 8006eca:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006ece:	009b      	lsls	r3, r3, #2
 8006ed0:	440b      	add	r3, r1
 8006ed2:	605a      	str	r2, [r3, #4]
        /* Nothing to do */
      }
    }

    /******* Re-enable both OctoSPI after configure OctoSPI IO Manager ********/
    if ((ospi_enabled & 0x1U) != 0U)
 8006ed4:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ed8:	f003 0301 	and.w	r3, r3, #1
 8006edc:	2b00      	cmp	r3, #0
 8006ede:	d005      	beq.n	8006eec <HAL_OSPIM_Config+0x9a0>
    {
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006ee0:	4b0c      	ldr	r3, [pc, #48]	; (8006f14 <HAL_OSPIM_Config+0x9c8>)
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	4a0b      	ldr	r2, [pc, #44]	; (8006f14 <HAL_OSPIM_Config+0x9c8>)
 8006ee6:	f043 0301 	orr.w	r3, r3, #1
 8006eea:	6013      	str	r3, [r2, #0]
    }
    if ((ospi_enabled & 0x2U) != 0U)
 8006eec:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ef0:	f003 0302 	and.w	r3, r3, #2
 8006ef4:	2b00      	cmp	r3, #0
 8006ef6:	d005      	beq.n	8006f04 <HAL_OSPIM_Config+0x9b8>
    {
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006ef8:	4b07      	ldr	r3, [pc, #28]	; (8006f18 <HAL_OSPIM_Config+0x9cc>)
 8006efa:	681b      	ldr	r3, [r3, #0]
 8006efc:	4a06      	ldr	r2, [pc, #24]	; (8006f18 <HAL_OSPIM_Config+0x9cc>)
 8006efe:	f043 0301 	orr.w	r3, r3, #1
 8006f02:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return function status */
  return status;
 8006f04:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
}
 8006f08:	4618      	mov	r0, r3
 8006f0a:	3750      	adds	r7, #80	; 0x50
 8006f0c:	46bd      	mov	sp, r7
 8006f0e:	bd80      	pop	{r7, pc}
 8006f10:	5200b400 	.word	0x5200b400
 8006f14:	52005000 	.word	0x52005000
 8006f18:	5200a000 	.word	0x5200a000

08006f1c <OSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_WaitFlagStateUntilTimeout(OSPI_HandleTypeDef *hospi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006f1c:	b580      	push	{r7, lr}
 8006f1e:	b084      	sub	sp, #16
 8006f20:	af00      	add	r7, sp, #0
 8006f22:	60f8      	str	r0, [r7, #12]
 8006f24:	60b9      	str	r1, [r7, #8]
 8006f26:	603b      	str	r3, [r7, #0]
 8006f28:	4613      	mov	r3, r2
 8006f2a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006f2c:	e01a      	b.n	8006f64 <OSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006f2e:	69bb      	ldr	r3, [r7, #24]
 8006f30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006f34:	d016      	beq.n	8006f64 <OSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006f36:	f7fa ff8b 	bl	8001e50 <HAL_GetTick>
 8006f3a:	4602      	mov	r2, r0
 8006f3c:	683b      	ldr	r3, [r7, #0]
 8006f3e:	1ad3      	subs	r3, r2, r3
 8006f40:	69ba      	ldr	r2, [r7, #24]
 8006f42:	429a      	cmp	r2, r3
 8006f44:	d302      	bcc.n	8006f4c <OSPI_WaitFlagStateUntilTimeout+0x30>
 8006f46:	69bb      	ldr	r3, [r7, #24]
 8006f48:	2b00      	cmp	r3, #0
 8006f4a:	d10b      	bne.n	8006f64 <OSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8006f4c:	68fb      	ldr	r3, [r7, #12]
 8006f4e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006f52:	651a      	str	r2, [r3, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006f58:	f043 0201 	orr.w	r2, r3, #1
 8006f5c:	68fb      	ldr	r3, [r7, #12]
 8006f5e:	655a      	str	r2, [r3, #84]	; 0x54

        return HAL_ERROR;
 8006f60:	2301      	movs	r3, #1
 8006f62:	e00e      	b.n	8006f82 <OSPI_WaitFlagStateUntilTimeout+0x66>
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006f64:	68fb      	ldr	r3, [r7, #12]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	6a1a      	ldr	r2, [r3, #32]
 8006f6a:	68bb      	ldr	r3, [r7, #8]
 8006f6c:	4013      	ands	r3, r2
 8006f6e:	2b00      	cmp	r3, #0
 8006f70:	bf14      	ite	ne
 8006f72:	2301      	movne	r3, #1
 8006f74:	2300      	moveq	r3, #0
 8006f76:	b2db      	uxtb	r3, r3
 8006f78:	461a      	mov	r2, r3
 8006f7a:	79fb      	ldrb	r3, [r7, #7]
 8006f7c:	429a      	cmp	r2, r3
 8006f7e:	d1d6      	bne.n	8006f2e <OSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8006f80:	2300      	movs	r3, #0
}
 8006f82:	4618      	mov	r0, r3
 8006f84:	3710      	adds	r7, #16
 8006f86:	46bd      	mov	sp, r7
 8006f88:	bd80      	pop	{r7, pc}
	...

08006f8c <OSPIM_GetConfig>:
  * @param  instance_nb : number of the instance
  * @param  cfg         : configuration of the IO Manager for the instance
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPIM_GetConfig(uint8_t instance_nb, OSPIM_CfgTypeDef *cfg)
{
 8006f8c:	b480      	push	{r7}
 8006f8e:	b087      	sub	sp, #28
 8006f90:	af00      	add	r7, sp, #0
 8006f92:	4603      	mov	r3, r0
 8006f94:	6039      	str	r1, [r7, #0]
 8006f96:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status = HAL_OK;
 8006f98:	2300      	movs	r3, #0
 8006f9a:	75fb      	strb	r3, [r7, #23]
  uint32_t reg;
  uint32_t value = 0U;
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	613b      	str	r3, [r7, #16]
  uint32_t index;

  if ((instance_nb == 0U) || (instance_nb > OSPI_NB_INSTANCE) || (cfg == NULL))
 8006fa0:	79fb      	ldrb	r3, [r7, #7]
 8006fa2:	2b00      	cmp	r3, #0
 8006fa4:	d005      	beq.n	8006fb2 <OSPIM_GetConfig+0x26>
 8006fa6:	79fb      	ldrb	r3, [r7, #7]
 8006fa8:	2b02      	cmp	r3, #2
 8006faa:	d802      	bhi.n	8006fb2 <OSPIM_GetConfig+0x26>
 8006fac:	683b      	ldr	r3, [r7, #0]
 8006fae:	2b00      	cmp	r3, #0
 8006fb0:	d102      	bne.n	8006fb8 <OSPIM_GetConfig+0x2c>
  {
    /* Invalid parameter -> error returned */
    status = HAL_ERROR;
 8006fb2:	2301      	movs	r3, #1
 8006fb4:	75fb      	strb	r3, [r7, #23]
 8006fb6:	e098      	b.n	80070ea <OSPIM_GetConfig+0x15e>
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006fb8:	683b      	ldr	r3, [r7, #0]
 8006fba:	2200      	movs	r2, #0
 8006fbc:	601a      	str	r2, [r3, #0]
    cfg->DQSPort    = 0U;
 8006fbe:	683b      	ldr	r3, [r7, #0]
 8006fc0:	2200      	movs	r2, #0
 8006fc2:	605a      	str	r2, [r3, #4]
    cfg->NCSPort    = 0U;
 8006fc4:	683b      	ldr	r3, [r7, #0]
 8006fc6:	2200      	movs	r2, #0
 8006fc8:	609a      	str	r2, [r3, #8]
    cfg->IOLowPort  = 0U;
 8006fca:	683b      	ldr	r3, [r7, #0]
 8006fcc:	2200      	movs	r2, #0
 8006fce:	60da      	str	r2, [r3, #12]
    cfg->IOHighPort = 0U;
 8006fd0:	683b      	ldr	r3, [r7, #0]
 8006fd2:	2200      	movs	r2, #0
 8006fd4:	611a      	str	r2, [r3, #16]

    if (instance_nb == 2U)
 8006fd6:	79fb      	ldrb	r3, [r7, #7]
 8006fd8:	2b02      	cmp	r3, #2
 8006fda:	d10b      	bne.n	8006ff4 <OSPIM_GetConfig+0x68>
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006fdc:	4b46      	ldr	r3, [pc, #280]	; (80070f8 <OSPIM_GetConfig+0x16c>)
 8006fde:	681b      	ldr	r3, [r3, #0]
 8006fe0:	f003 0301 	and.w	r3, r3, #1
 8006fe4:	2b00      	cmp	r3, #0
 8006fe6:	d102      	bne.n	8006fee <OSPIM_GetConfig+0x62>
      {
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006fe8:	4b44      	ldr	r3, [pc, #272]	; (80070fc <OSPIM_GetConfig+0x170>)
 8006fea:	613b      	str	r3, [r7, #16]
 8006fec:	e002      	b.n	8006ff4 <OSPIM_GetConfig+0x68>
                 | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 8006fee:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006ff2:	613b      	str	r3, [r7, #16]
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006ff4:	2300      	movs	r3, #0
 8006ff6:	60fb      	str	r3, [r7, #12]
 8006ff8:	e074      	b.n	80070e4 <OSPIM_GetConfig+0x158>
    {
      reg = OCTOSPIM->PCR[index];
 8006ffa:	4a3f      	ldr	r2, [pc, #252]	; (80070f8 <OSPIM_GetConfig+0x16c>)
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	009b      	lsls	r3, r3, #2
 8007000:	4413      	add	r3, r2
 8007002:	685b      	ldr	r3, [r3, #4]
 8007004:	60bb      	str	r3, [r7, #8]

      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8007006:	68bb      	ldr	r3, [r7, #8]
 8007008:	f003 0301 	and.w	r3, r3, #1
 800700c:	2b00      	cmp	r3, #0
 800700e:	d00a      	beq.n	8007026 <OSPIM_GetConfig+0x9a>
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8007010:	68ba      	ldr	r2, [r7, #8]
 8007012:	693b      	ldr	r3, [r7, #16]
 8007014:	4053      	eors	r3, r2
 8007016:	f003 0302 	and.w	r3, r3, #2
 800701a:	2b00      	cmp	r3, #0
 800701c:	d103      	bne.n	8007026 <OSPIM_GetConfig+0x9a>
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index + 1U;
 800701e:	68fb      	ldr	r3, [r7, #12]
 8007020:	1c5a      	adds	r2, r3, #1
 8007022:	683b      	ldr	r3, [r7, #0]
 8007024:	601a      	str	r2, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 8007026:	68bb      	ldr	r3, [r7, #8]
 8007028:	f003 0310 	and.w	r3, r3, #16
 800702c:	2b00      	cmp	r3, #0
 800702e:	d00a      	beq.n	8007046 <OSPIM_GetConfig+0xba>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 8007030:	68ba      	ldr	r2, [r7, #8]
 8007032:	693b      	ldr	r3, [r7, #16]
 8007034:	4053      	eors	r3, r2
 8007036:	f003 0320 	and.w	r3, r3, #32
 800703a:	2b00      	cmp	r3, #0
 800703c:	d103      	bne.n	8007046 <OSPIM_GetConfig+0xba>
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index + 1U;
 800703e:	68fb      	ldr	r3, [r7, #12]
 8007040:	1c5a      	adds	r2, r3, #1
 8007042:	683b      	ldr	r3, [r7, #0]
 8007044:	605a      	str	r2, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 8007046:	68bb      	ldr	r3, [r7, #8]
 8007048:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800704c:	2b00      	cmp	r3, #0
 800704e:	d00a      	beq.n	8007066 <OSPIM_GetConfig+0xda>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 8007050:	68ba      	ldr	r2, [r7, #8]
 8007052:	693b      	ldr	r3, [r7, #16]
 8007054:	4053      	eors	r3, r2
 8007056:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800705a:	2b00      	cmp	r3, #0
 800705c:	d103      	bne.n	8007066 <OSPIM_GetConfig+0xda>
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index + 1U;
 800705e:	68fb      	ldr	r3, [r7, #12]
 8007060:	1c5a      	adds	r2, r3, #1
 8007062:	683b      	ldr	r3, [r7, #0]
 8007064:	609a      	str	r2, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8007066:	68bb      	ldr	r3, [r7, #8]
 8007068:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800706c:	2b00      	cmp	r3, #0
 800706e:	d018      	beq.n	80070a2 <OSPIM_GetConfig+0x116>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 8007070:	68ba      	ldr	r2, [r7, #8]
 8007072:	693b      	ldr	r3, [r7, #16]
 8007074:	4053      	eors	r3, r2
 8007076:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800707a:	2b00      	cmp	r3, #0
 800707c:	d111      	bne.n	80070a2 <OSPIM_GetConfig+0x116>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 800707e:	68bb      	ldr	r3, [r7, #8]
 8007080:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007084:	2b00      	cmp	r3, #0
 8007086:	d106      	bne.n	8007096 <OSPIM_GetConfig+0x10a>
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8007088:	68fb      	ldr	r3, [r7, #12]
 800708a:	3301      	adds	r3, #1
 800708c:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8007090:	683b      	ldr	r3, [r7, #0]
 8007092:	60da      	str	r2, [r3, #12]
 8007094:	e005      	b.n	80070a2 <OSPIM_GetConfig+0x116>
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	3301      	adds	r3, #1
 800709a:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 800709e:	683b      	ldr	r3, [r7, #0]
 80070a0:	60da      	str	r2, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 80070a2:	68bb      	ldr	r3, [r7, #8]
 80070a4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	d018      	beq.n	80070de <OSPIM_GetConfig+0x152>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 80070ac:	68ba      	ldr	r2, [r7, #8]
 80070ae:	693b      	ldr	r3, [r7, #16]
 80070b0:	4053      	eors	r3, r2
 80070b2:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	d111      	bne.n	80070de <OSPIM_GetConfig+0x152>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 80070ba:	68bb      	ldr	r3, [r7, #8]
 80070bc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80070c0:	2b00      	cmp	r3, #0
 80070c2:	d106      	bne.n	80070d2 <OSPIM_GetConfig+0x146>
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 80070c4:	68fb      	ldr	r3, [r7, #12]
 80070c6:	3301      	adds	r3, #1
 80070c8:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80070cc:	683b      	ldr	r3, [r7, #0]
 80070ce:	611a      	str	r2, [r3, #16]
 80070d0:	e005      	b.n	80070de <OSPIM_GetConfig+0x152>
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 80070d2:	68fb      	ldr	r3, [r7, #12]
 80070d4:	3301      	adds	r3, #1
 80070d6:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 80070da:	683b      	ldr	r3, [r7, #0]
 80070dc:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	3301      	adds	r3, #1
 80070e2:	60fb      	str	r3, [r7, #12]
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	2b01      	cmp	r3, #1
 80070e8:	d987      	bls.n	8006ffa <OSPIM_GetConfig+0x6e>
      }
    }
  }

  /* Return function status */
  return status;
 80070ea:	7dfb      	ldrb	r3, [r7, #23]
}
 80070ec:	4618      	mov	r0, r3
 80070ee:	371c      	adds	r7, #28
 80070f0:	46bd      	mov	sp, r7
 80070f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070f6:	4770      	bx	lr
 80070f8:	5200b400 	.word	0x5200b400
 80070fc:	04040222 	.word	0x04040222

08007100 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8007100:	b580      	push	{r7, lr}
 8007102:	b084      	sub	sp, #16
 8007104:	af00      	add	r7, sp, #0
 8007106:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8007108:	4b19      	ldr	r3, [pc, #100]	; (8007170 <HAL_PWREx_ConfigSupply+0x70>)
 800710a:	68db      	ldr	r3, [r3, #12]
 800710c:	f003 0304 	and.w	r3, r3, #4
 8007110:	2b04      	cmp	r3, #4
 8007112:	d00a      	beq.n	800712a <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8007114:	4b16      	ldr	r3, [pc, #88]	; (8007170 <HAL_PWREx_ConfigSupply+0x70>)
 8007116:	68db      	ldr	r3, [r3, #12]
 8007118:	f003 0307 	and.w	r3, r3, #7
 800711c:	687a      	ldr	r2, [r7, #4]
 800711e:	429a      	cmp	r2, r3
 8007120:	d001      	beq.n	8007126 <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8007122:	2301      	movs	r3, #1
 8007124:	e01f      	b.n	8007166 <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 8007126:	2300      	movs	r3, #0
 8007128:	e01d      	b.n	8007166 <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 800712a:	4b11      	ldr	r3, [pc, #68]	; (8007170 <HAL_PWREx_ConfigSupply+0x70>)
 800712c:	68db      	ldr	r3, [r3, #12]
 800712e:	f023 0207 	bic.w	r2, r3, #7
 8007132:	490f      	ldr	r1, [pc, #60]	; (8007170 <HAL_PWREx_ConfigSupply+0x70>)
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	4313      	orrs	r3, r2
 8007138:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 800713a:	f7fa fe89 	bl	8001e50 <HAL_GetTick>
 800713e:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8007140:	e009      	b.n	8007156 <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8007142:	f7fa fe85 	bl	8001e50 <HAL_GetTick>
 8007146:	4602      	mov	r2, r0
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	1ad3      	subs	r3, r2, r3
 800714c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8007150:	d901      	bls.n	8007156 <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 8007152:	2301      	movs	r3, #1
 8007154:	e007      	b.n	8007166 <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8007156:	4b06      	ldr	r3, [pc, #24]	; (8007170 <HAL_PWREx_ConfigSupply+0x70>)
 8007158:	685b      	ldr	r3, [r3, #4]
 800715a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800715e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007162:	d1ee      	bne.n	8007142 <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 8007164:	2300      	movs	r3, #0
}
 8007166:	4618      	mov	r0, r3
 8007168:	3710      	adds	r7, #16
 800716a:	46bd      	mov	sp, r7
 800716c:	bd80      	pop	{r7, pc}
 800716e:	bf00      	nop
 8007170:	58024800 	.word	0x58024800

08007174 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007174:	b580      	push	{r7, lr}
 8007176:	b08c      	sub	sp, #48	; 0x30
 8007178:	af00      	add	r7, sp, #0
 800717a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	2b00      	cmp	r3, #0
 8007180:	d101      	bne.n	8007186 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8007182:	2301      	movs	r3, #1
 8007184:	e3c8      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	f003 0301 	and.w	r3, r3, #1
 800718e:	2b00      	cmp	r3, #0
 8007190:	f000 8087 	beq.w	80072a2 <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007194:	4b88      	ldr	r3, [pc, #544]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007196:	691b      	ldr	r3, [r3, #16]
 8007198:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800719c:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800719e:	4b86      	ldr	r3, [pc, #536]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80071a2:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 80071a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80071a6:	2b10      	cmp	r3, #16
 80071a8:	d007      	beq.n	80071ba <HAL_RCC_OscConfig+0x46>
 80071aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80071ac:	2b18      	cmp	r3, #24
 80071ae:	d110      	bne.n	80071d2 <HAL_RCC_OscConfig+0x5e>
 80071b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80071b2:	f003 0303 	and.w	r3, r3, #3
 80071b6:	2b02      	cmp	r3, #2
 80071b8:	d10b      	bne.n	80071d2 <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80071ba:	4b7f      	ldr	r3, [pc, #508]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071bc:	681b      	ldr	r3, [r3, #0]
 80071be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80071c2:	2b00      	cmp	r3, #0
 80071c4:	d06c      	beq.n	80072a0 <HAL_RCC_OscConfig+0x12c>
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	685b      	ldr	r3, [r3, #4]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d168      	bne.n	80072a0 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 80071ce:	2301      	movs	r3, #1
 80071d0:	e3a2      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	685b      	ldr	r3, [r3, #4]
 80071d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80071da:	d106      	bne.n	80071ea <HAL_RCC_OscConfig+0x76>
 80071dc:	4b76      	ldr	r3, [pc, #472]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	4a75      	ldr	r2, [pc, #468]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80071e6:	6013      	str	r3, [r2, #0]
 80071e8:	e02e      	b.n	8007248 <HAL_RCC_OscConfig+0xd4>
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	685b      	ldr	r3, [r3, #4]
 80071ee:	2b00      	cmp	r3, #0
 80071f0:	d10c      	bne.n	800720c <HAL_RCC_OscConfig+0x98>
 80071f2:	4b71      	ldr	r3, [pc, #452]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071f4:	681b      	ldr	r3, [r3, #0]
 80071f6:	4a70      	ldr	r2, [pc, #448]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80071f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80071fc:	6013      	str	r3, [r2, #0]
 80071fe:	4b6e      	ldr	r3, [pc, #440]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	4a6d      	ldr	r2, [pc, #436]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007204:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007208:	6013      	str	r3, [r2, #0]
 800720a:	e01d      	b.n	8007248 <HAL_RCC_OscConfig+0xd4>
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	685b      	ldr	r3, [r3, #4]
 8007210:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007214:	d10c      	bne.n	8007230 <HAL_RCC_OscConfig+0xbc>
 8007216:	4b68      	ldr	r3, [pc, #416]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007218:	681b      	ldr	r3, [r3, #0]
 800721a:	4a67      	ldr	r2, [pc, #412]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800721c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007220:	6013      	str	r3, [r2, #0]
 8007222:	4b65      	ldr	r3, [pc, #404]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007224:	681b      	ldr	r3, [r3, #0]
 8007226:	4a64      	ldr	r2, [pc, #400]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007228:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800722c:	6013      	str	r3, [r2, #0]
 800722e:	e00b      	b.n	8007248 <HAL_RCC_OscConfig+0xd4>
 8007230:	4b61      	ldr	r3, [pc, #388]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	4a60      	ldr	r2, [pc, #384]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007236:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800723a:	6013      	str	r3, [r2, #0]
 800723c:	4b5e      	ldr	r3, [pc, #376]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	4a5d      	ldr	r2, [pc, #372]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007242:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007246:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	685b      	ldr	r3, [r3, #4]
 800724c:	2b00      	cmp	r3, #0
 800724e:	d013      	beq.n	8007278 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007250:	f7fa fdfe 	bl	8001e50 <HAL_GetTick>
 8007254:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007256:	e008      	b.n	800726a <HAL_RCC_OscConfig+0xf6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007258:	f7fa fdfa 	bl	8001e50 <HAL_GetTick>
 800725c:	4602      	mov	r2, r0
 800725e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007260:	1ad3      	subs	r3, r2, r3
 8007262:	2b64      	cmp	r3, #100	; 0x64
 8007264:	d901      	bls.n	800726a <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8007266:	2303      	movs	r3, #3
 8007268:	e356      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800726a:	4b53      	ldr	r3, [pc, #332]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007272:	2b00      	cmp	r3, #0
 8007274:	d0f0      	beq.n	8007258 <HAL_RCC_OscConfig+0xe4>
 8007276:	e014      	b.n	80072a2 <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007278:	f7fa fdea 	bl	8001e50 <HAL_GetTick>
 800727c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 800727e:	e008      	b.n	8007292 <HAL_RCC_OscConfig+0x11e>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007280:	f7fa fde6 	bl	8001e50 <HAL_GetTick>
 8007284:	4602      	mov	r2, r0
 8007286:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007288:	1ad3      	subs	r3, r2, r3
 800728a:	2b64      	cmp	r3, #100	; 0x64
 800728c:	d901      	bls.n	8007292 <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 800728e:	2303      	movs	r3, #3
 8007290:	e342      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8007292:	4b49      	ldr	r3, [pc, #292]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800729a:	2b00      	cmp	r3, #0
 800729c:	d1f0      	bne.n	8007280 <HAL_RCC_OscConfig+0x10c>
 800729e:	e000      	b.n	80072a2 <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80072a0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	f003 0302 	and.w	r3, r3, #2
 80072aa:	2b00      	cmp	r3, #0
 80072ac:	f000 808c 	beq.w	80073c8 <HAL_RCC_OscConfig+0x254>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80072b0:	4b41      	ldr	r3, [pc, #260]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80072b2:	691b      	ldr	r3, [r3, #16]
 80072b4:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80072b8:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 80072ba:	4b3f      	ldr	r3, [pc, #252]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80072bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80072be:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 80072c0:	6a3b      	ldr	r3, [r7, #32]
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d007      	beq.n	80072d6 <HAL_RCC_OscConfig+0x162>
 80072c6:	6a3b      	ldr	r3, [r7, #32]
 80072c8:	2b18      	cmp	r3, #24
 80072ca:	d137      	bne.n	800733c <HAL_RCC_OscConfig+0x1c8>
 80072cc:	69fb      	ldr	r3, [r7, #28]
 80072ce:	f003 0303 	and.w	r3, r3, #3
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d132      	bne.n	800733c <HAL_RCC_OscConfig+0x1c8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80072d6:	4b38      	ldr	r3, [pc, #224]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	f003 0304 	and.w	r3, r3, #4
 80072de:	2b00      	cmp	r3, #0
 80072e0:	d005      	beq.n	80072ee <HAL_RCC_OscConfig+0x17a>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	68db      	ldr	r3, [r3, #12]
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d101      	bne.n	80072ee <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 80072ea:	2301      	movs	r3, #1
 80072ec:	e314      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 80072ee:	4b32      	ldr	r3, [pc, #200]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	f023 0219 	bic.w	r2, r3, #25
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	68db      	ldr	r3, [r3, #12]
 80072fa:	492f      	ldr	r1, [pc, #188]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 80072fc:	4313      	orrs	r3, r2
 80072fe:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007300:	f7fa fda6 	bl	8001e50 <HAL_GetTick>
 8007304:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007306:	e008      	b.n	800731a <HAL_RCC_OscConfig+0x1a6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007308:	f7fa fda2 	bl	8001e50 <HAL_GetTick>
 800730c:	4602      	mov	r2, r0
 800730e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007310:	1ad3      	subs	r3, r2, r3
 8007312:	2b02      	cmp	r3, #2
 8007314:	d901      	bls.n	800731a <HAL_RCC_OscConfig+0x1a6>
          {
            return HAL_TIMEOUT;
 8007316:	2303      	movs	r3, #3
 8007318:	e2fe      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800731a:	4b27      	ldr	r3, [pc, #156]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800731c:	681b      	ldr	r3, [r3, #0]
 800731e:	f003 0304 	and.w	r3, r3, #4
 8007322:	2b00      	cmp	r3, #0
 8007324:	d0f0      	beq.n	8007308 <HAL_RCC_OscConfig+0x194>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007326:	4b24      	ldr	r3, [pc, #144]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007328:	685b      	ldr	r3, [r3, #4]
 800732a:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800732e:	687b      	ldr	r3, [r7, #4]
 8007330:	691b      	ldr	r3, [r3, #16]
 8007332:	061b      	lsls	r3, r3, #24
 8007334:	4920      	ldr	r1, [pc, #128]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007336:	4313      	orrs	r3, r2
 8007338:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800733a:	e045      	b.n	80073c8 <HAL_RCC_OscConfig+0x254>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	68db      	ldr	r3, [r3, #12]
 8007340:	2b00      	cmp	r3, #0
 8007342:	d026      	beq.n	8007392 <HAL_RCC_OscConfig+0x21e>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007344:	4b1c      	ldr	r3, [pc, #112]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	f023 0219 	bic.w	r2, r3, #25
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	68db      	ldr	r3, [r3, #12]
 8007350:	4919      	ldr	r1, [pc, #100]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007352:	4313      	orrs	r3, r2
 8007354:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007356:	f7fa fd7b 	bl	8001e50 <HAL_GetTick>
 800735a:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800735c:	e008      	b.n	8007370 <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800735e:	f7fa fd77 	bl	8001e50 <HAL_GetTick>
 8007362:	4602      	mov	r2, r0
 8007364:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007366:	1ad3      	subs	r3, r2, r3
 8007368:	2b02      	cmp	r3, #2
 800736a:	d901      	bls.n	8007370 <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 800736c:	2303      	movs	r3, #3
 800736e:	e2d3      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007370:	4b11      	ldr	r3, [pc, #68]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	f003 0304 	and.w	r3, r3, #4
 8007378:	2b00      	cmp	r3, #0
 800737a:	d0f0      	beq.n	800735e <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800737c:	4b0e      	ldr	r3, [pc, #56]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800737e:	685b      	ldr	r3, [r3, #4]
 8007380:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	691b      	ldr	r3, [r3, #16]
 8007388:	061b      	lsls	r3, r3, #24
 800738a:	490b      	ldr	r1, [pc, #44]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 800738c:	4313      	orrs	r3, r2
 800738e:	604b      	str	r3, [r1, #4]
 8007390:	e01a      	b.n	80073c8 <HAL_RCC_OscConfig+0x254>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8007392:	4b09      	ldr	r3, [pc, #36]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	4a08      	ldr	r2, [pc, #32]	; (80073b8 <HAL_RCC_OscConfig+0x244>)
 8007398:	f023 0301 	bic.w	r3, r3, #1
 800739c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800739e:	f7fa fd57 	bl	8001e50 <HAL_GetTick>
 80073a2:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80073a4:	e00a      	b.n	80073bc <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80073a6:	f7fa fd53 	bl	8001e50 <HAL_GetTick>
 80073aa:	4602      	mov	r2, r0
 80073ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073ae:	1ad3      	subs	r3, r2, r3
 80073b0:	2b02      	cmp	r3, #2
 80073b2:	d903      	bls.n	80073bc <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 80073b4:	2303      	movs	r3, #3
 80073b6:	e2af      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
 80073b8:	58024400 	.word	0x58024400
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80073bc:	4b96      	ldr	r3, [pc, #600]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f003 0304 	and.w	r3, r3, #4
 80073c4:	2b00      	cmp	r3, #0
 80073c6:	d1ee      	bne.n	80073a6 <HAL_RCC_OscConfig+0x232>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	f003 0310 	and.w	r3, r3, #16
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	d06a      	beq.n	80074aa <HAL_RCC_OscConfig+0x336>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80073d4:	4b90      	ldr	r3, [pc, #576]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80073d6:	691b      	ldr	r3, [r3, #16]
 80073d8:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80073dc:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 80073de:	4b8e      	ldr	r3, [pc, #568]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80073e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80073e2:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 80073e4:	69bb      	ldr	r3, [r7, #24]
 80073e6:	2b08      	cmp	r3, #8
 80073e8:	d007      	beq.n	80073fa <HAL_RCC_OscConfig+0x286>
 80073ea:	69bb      	ldr	r3, [r7, #24]
 80073ec:	2b18      	cmp	r3, #24
 80073ee:	d11b      	bne.n	8007428 <HAL_RCC_OscConfig+0x2b4>
 80073f0:	697b      	ldr	r3, [r7, #20]
 80073f2:	f003 0303 	and.w	r3, r3, #3
 80073f6:	2b01      	cmp	r3, #1
 80073f8:	d116      	bne.n	8007428 <HAL_RCC_OscConfig+0x2b4>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 80073fa:	4b87      	ldr	r3, [pc, #540]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007402:	2b00      	cmp	r3, #0
 8007404:	d005      	beq.n	8007412 <HAL_RCC_OscConfig+0x29e>
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	69db      	ldr	r3, [r3, #28]
 800740a:	2b80      	cmp	r3, #128	; 0x80
 800740c:	d001      	beq.n	8007412 <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 800740e:	2301      	movs	r3, #1
 8007410:	e282      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007412:	4b81      	ldr	r3, [pc, #516]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007414:	68db      	ldr	r3, [r3, #12]
 8007416:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	6a1b      	ldr	r3, [r3, #32]
 800741e:	061b      	lsls	r3, r3, #24
 8007420:	497d      	ldr	r1, [pc, #500]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007422:	4313      	orrs	r3, r2
 8007424:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8007426:	e040      	b.n	80074aa <HAL_RCC_OscConfig+0x336>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	69db      	ldr	r3, [r3, #28]
 800742c:	2b00      	cmp	r3, #0
 800742e:	d023      	beq.n	8007478 <HAL_RCC_OscConfig+0x304>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8007430:	4b79      	ldr	r3, [pc, #484]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	4a78      	ldr	r2, [pc, #480]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007436:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800743a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800743c:	f7fa fd08 	bl	8001e50 <HAL_GetTick>
 8007440:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007442:	e008      	b.n	8007456 <HAL_RCC_OscConfig+0x2e2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8007444:	f7fa fd04 	bl	8001e50 <HAL_GetTick>
 8007448:	4602      	mov	r2, r0
 800744a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800744c:	1ad3      	subs	r3, r2, r3
 800744e:	2b02      	cmp	r3, #2
 8007450:	d901      	bls.n	8007456 <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 8007452:	2303      	movs	r3, #3
 8007454:	e260      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007456:	4b70      	ldr	r3, [pc, #448]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800745e:	2b00      	cmp	r3, #0
 8007460:	d0f0      	beq.n	8007444 <HAL_RCC_OscConfig+0x2d0>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007462:	4b6d      	ldr	r3, [pc, #436]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007464:	68db      	ldr	r3, [r3, #12]
 8007466:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	6a1b      	ldr	r3, [r3, #32]
 800746e:	061b      	lsls	r3, r3, #24
 8007470:	4969      	ldr	r1, [pc, #420]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007472:	4313      	orrs	r3, r2
 8007474:	60cb      	str	r3, [r1, #12]
 8007476:	e018      	b.n	80074aa <HAL_RCC_OscConfig+0x336>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8007478:	4b67      	ldr	r3, [pc, #412]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800747a:	681b      	ldr	r3, [r3, #0]
 800747c:	4a66      	ldr	r2, [pc, #408]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800747e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007482:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007484:	f7fa fce4 	bl	8001e50 <HAL_GetTick>
 8007488:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 800748a:	e008      	b.n	800749e <HAL_RCC_OscConfig+0x32a>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800748c:	f7fa fce0 	bl	8001e50 <HAL_GetTick>
 8007490:	4602      	mov	r2, r0
 8007492:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007494:	1ad3      	subs	r3, r2, r3
 8007496:	2b02      	cmp	r3, #2
 8007498:	d901      	bls.n	800749e <HAL_RCC_OscConfig+0x32a>
          {
            return HAL_TIMEOUT;
 800749a:	2303      	movs	r3, #3
 800749c:	e23c      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 800749e:	4b5e      	ldr	r3, [pc, #376]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80074a6:	2b00      	cmp	r3, #0
 80074a8:	d1f0      	bne.n	800748c <HAL_RCC_OscConfig+0x318>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	f003 0308 	and.w	r3, r3, #8
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d036      	beq.n	8007524 <HAL_RCC_OscConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	695b      	ldr	r3, [r3, #20]
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d019      	beq.n	80074f2 <HAL_RCC_OscConfig+0x37e>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80074be:	4b56      	ldr	r3, [pc, #344]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074c0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80074c2:	4a55      	ldr	r2, [pc, #340]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074c4:	f043 0301 	orr.w	r3, r3, #1
 80074c8:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80074ca:	f7fa fcc1 	bl	8001e50 <HAL_GetTick>
 80074ce:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80074d0:	e008      	b.n	80074e4 <HAL_RCC_OscConfig+0x370>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80074d2:	f7fa fcbd 	bl	8001e50 <HAL_GetTick>
 80074d6:	4602      	mov	r2, r0
 80074d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074da:	1ad3      	subs	r3, r2, r3
 80074dc:	2b02      	cmp	r3, #2
 80074de:	d901      	bls.n	80074e4 <HAL_RCC_OscConfig+0x370>
        {
          return HAL_TIMEOUT;
 80074e0:	2303      	movs	r3, #3
 80074e2:	e219      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80074e4:	4b4c      	ldr	r3, [pc, #304]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80074e8:	f003 0302 	and.w	r3, r3, #2
 80074ec:	2b00      	cmp	r3, #0
 80074ee:	d0f0      	beq.n	80074d2 <HAL_RCC_OscConfig+0x35e>
 80074f0:	e018      	b.n	8007524 <HAL_RCC_OscConfig+0x3b0>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80074f2:	4b49      	ldr	r3, [pc, #292]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80074f6:	4a48      	ldr	r2, [pc, #288]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80074f8:	f023 0301 	bic.w	r3, r3, #1
 80074fc:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80074fe:	f7fa fca7 	bl	8001e50 <HAL_GetTick>
 8007502:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007504:	e008      	b.n	8007518 <HAL_RCC_OscConfig+0x3a4>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007506:	f7fa fca3 	bl	8001e50 <HAL_GetTick>
 800750a:	4602      	mov	r2, r0
 800750c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800750e:	1ad3      	subs	r3, r2, r3
 8007510:	2b02      	cmp	r3, #2
 8007512:	d901      	bls.n	8007518 <HAL_RCC_OscConfig+0x3a4>
        {
          return HAL_TIMEOUT;
 8007514:	2303      	movs	r3, #3
 8007516:	e1ff      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007518:	4b3f      	ldr	r3, [pc, #252]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800751a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800751c:	f003 0302 	and.w	r3, r3, #2
 8007520:	2b00      	cmp	r3, #0
 8007522:	d1f0      	bne.n	8007506 <HAL_RCC_OscConfig+0x392>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	681b      	ldr	r3, [r3, #0]
 8007528:	f003 0320 	and.w	r3, r3, #32
 800752c:	2b00      	cmp	r3, #0
 800752e:	d036      	beq.n	800759e <HAL_RCC_OscConfig+0x42a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	699b      	ldr	r3, [r3, #24]
 8007534:	2b00      	cmp	r3, #0
 8007536:	d019      	beq.n	800756c <HAL_RCC_OscConfig+0x3f8>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8007538:	4b37      	ldr	r3, [pc, #220]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	4a36      	ldr	r2, [pc, #216]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800753e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007542:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8007544:	f7fa fc84 	bl	8001e50 <HAL_GetTick>
 8007548:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 800754a:	e008      	b.n	800755e <HAL_RCC_OscConfig+0x3ea>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800754c:	f7fa fc80 	bl	8001e50 <HAL_GetTick>
 8007550:	4602      	mov	r2, r0
 8007552:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007554:	1ad3      	subs	r3, r2, r3
 8007556:	2b02      	cmp	r3, #2
 8007558:	d901      	bls.n	800755e <HAL_RCC_OscConfig+0x3ea>
        {
          return HAL_TIMEOUT;
 800755a:	2303      	movs	r3, #3
 800755c:	e1dc      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 800755e:	4b2e      	ldr	r3, [pc, #184]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007560:	681b      	ldr	r3, [r3, #0]
 8007562:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007566:	2b00      	cmp	r3, #0
 8007568:	d0f0      	beq.n	800754c <HAL_RCC_OscConfig+0x3d8>
 800756a:	e018      	b.n	800759e <HAL_RCC_OscConfig+0x42a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 800756c:	4b2a      	ldr	r3, [pc, #168]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	4a29      	ldr	r2, [pc, #164]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007572:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007576:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8007578:	f7fa fc6a 	bl	8001e50 <HAL_GetTick>
 800757c:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 800757e:	e008      	b.n	8007592 <HAL_RCC_OscConfig+0x41e>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007580:	f7fa fc66 	bl	8001e50 <HAL_GetTick>
 8007584:	4602      	mov	r2, r0
 8007586:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007588:	1ad3      	subs	r3, r2, r3
 800758a:	2b02      	cmp	r3, #2
 800758c:	d901      	bls.n	8007592 <HAL_RCC_OscConfig+0x41e>
        {
          return HAL_TIMEOUT;
 800758e:	2303      	movs	r3, #3
 8007590:	e1c2      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007592:	4b21      	ldr	r3, [pc, #132]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800759a:	2b00      	cmp	r3, #0
 800759c:	d1f0      	bne.n	8007580 <HAL_RCC_OscConfig+0x40c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	f003 0304 	and.w	r3, r3, #4
 80075a6:	2b00      	cmp	r3, #0
 80075a8:	f000 8086 	beq.w	80076b8 <HAL_RCC_OscConfig+0x544>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80075ac:	4b1b      	ldr	r3, [pc, #108]	; (800761c <HAL_RCC_OscConfig+0x4a8>)
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	4a1a      	ldr	r2, [pc, #104]	; (800761c <HAL_RCC_OscConfig+0x4a8>)
 80075b2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80075b6:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80075b8:	f7fa fc4a 	bl	8001e50 <HAL_GetTick>
 80075bc:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80075be:	e008      	b.n	80075d2 <HAL_RCC_OscConfig+0x45e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80075c0:	f7fa fc46 	bl	8001e50 <HAL_GetTick>
 80075c4:	4602      	mov	r2, r0
 80075c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075c8:	1ad3      	subs	r3, r2, r3
 80075ca:	2b64      	cmp	r3, #100	; 0x64
 80075cc:	d901      	bls.n	80075d2 <HAL_RCC_OscConfig+0x45e>
      {
        return HAL_TIMEOUT;
 80075ce:	2303      	movs	r3, #3
 80075d0:	e1a2      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80075d2:	4b12      	ldr	r3, [pc, #72]	; (800761c <HAL_RCC_OscConfig+0x4a8>)
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80075da:	2b00      	cmp	r3, #0
 80075dc:	d0f0      	beq.n	80075c0 <HAL_RCC_OscConfig+0x44c>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	689b      	ldr	r3, [r3, #8]
 80075e2:	2b01      	cmp	r3, #1
 80075e4:	d106      	bne.n	80075f4 <HAL_RCC_OscConfig+0x480>
 80075e6:	4b0c      	ldr	r3, [pc, #48]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80075e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075ea:	4a0b      	ldr	r2, [pc, #44]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80075ec:	f043 0301 	orr.w	r3, r3, #1
 80075f0:	6713      	str	r3, [r2, #112]	; 0x70
 80075f2:	e032      	b.n	800765a <HAL_RCC_OscConfig+0x4e6>
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	689b      	ldr	r3, [r3, #8]
 80075f8:	2b00      	cmp	r3, #0
 80075fa:	d111      	bne.n	8007620 <HAL_RCC_OscConfig+0x4ac>
 80075fc:	4b06      	ldr	r3, [pc, #24]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 80075fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007600:	4a05      	ldr	r2, [pc, #20]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 8007602:	f023 0301 	bic.w	r3, r3, #1
 8007606:	6713      	str	r3, [r2, #112]	; 0x70
 8007608:	4b03      	ldr	r3, [pc, #12]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800760a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800760c:	4a02      	ldr	r2, [pc, #8]	; (8007618 <HAL_RCC_OscConfig+0x4a4>)
 800760e:	f023 0304 	bic.w	r3, r3, #4
 8007612:	6713      	str	r3, [r2, #112]	; 0x70
 8007614:	e021      	b.n	800765a <HAL_RCC_OscConfig+0x4e6>
 8007616:	bf00      	nop
 8007618:	58024400 	.word	0x58024400
 800761c:	58024800 	.word	0x58024800
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	689b      	ldr	r3, [r3, #8]
 8007624:	2b05      	cmp	r3, #5
 8007626:	d10c      	bne.n	8007642 <HAL_RCC_OscConfig+0x4ce>
 8007628:	4b83      	ldr	r3, [pc, #524]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800762a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800762c:	4a82      	ldr	r2, [pc, #520]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800762e:	f043 0304 	orr.w	r3, r3, #4
 8007632:	6713      	str	r3, [r2, #112]	; 0x70
 8007634:	4b80      	ldr	r3, [pc, #512]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007636:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007638:	4a7f      	ldr	r2, [pc, #508]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800763a:	f043 0301 	orr.w	r3, r3, #1
 800763e:	6713      	str	r3, [r2, #112]	; 0x70
 8007640:	e00b      	b.n	800765a <HAL_RCC_OscConfig+0x4e6>
 8007642:	4b7d      	ldr	r3, [pc, #500]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007644:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007646:	4a7c      	ldr	r2, [pc, #496]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007648:	f023 0301 	bic.w	r3, r3, #1
 800764c:	6713      	str	r3, [r2, #112]	; 0x70
 800764e:	4b7a      	ldr	r3, [pc, #488]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007650:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007652:	4a79      	ldr	r2, [pc, #484]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007654:	f023 0304 	bic.w	r3, r3, #4
 8007658:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800765a:	687b      	ldr	r3, [r7, #4]
 800765c:	689b      	ldr	r3, [r3, #8]
 800765e:	2b00      	cmp	r3, #0
 8007660:	d015      	beq.n	800768e <HAL_RCC_OscConfig+0x51a>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007662:	f7fa fbf5 	bl	8001e50 <HAL_GetTick>
 8007666:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007668:	e00a      	b.n	8007680 <HAL_RCC_OscConfig+0x50c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800766a:	f7fa fbf1 	bl	8001e50 <HAL_GetTick>
 800766e:	4602      	mov	r2, r0
 8007670:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007672:	1ad3      	subs	r3, r2, r3
 8007674:	f241 3288 	movw	r2, #5000	; 0x1388
 8007678:	4293      	cmp	r3, r2
 800767a:	d901      	bls.n	8007680 <HAL_RCC_OscConfig+0x50c>
        {
          return HAL_TIMEOUT;
 800767c:	2303      	movs	r3, #3
 800767e:	e14b      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007680:	4b6d      	ldr	r3, [pc, #436]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007682:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007684:	f003 0302 	and.w	r3, r3, #2
 8007688:	2b00      	cmp	r3, #0
 800768a:	d0ee      	beq.n	800766a <HAL_RCC_OscConfig+0x4f6>
 800768c:	e014      	b.n	80076b8 <HAL_RCC_OscConfig+0x544>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800768e:	f7fa fbdf 	bl	8001e50 <HAL_GetTick>
 8007692:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8007694:	e00a      	b.n	80076ac <HAL_RCC_OscConfig+0x538>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007696:	f7fa fbdb 	bl	8001e50 <HAL_GetTick>
 800769a:	4602      	mov	r2, r0
 800769c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800769e:	1ad3      	subs	r3, r2, r3
 80076a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80076a4:	4293      	cmp	r3, r2
 80076a6:	d901      	bls.n	80076ac <HAL_RCC_OscConfig+0x538>
        {
          return HAL_TIMEOUT;
 80076a8:	2303      	movs	r3, #3
 80076aa:	e135      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80076ac:	4b62      	ldr	r3, [pc, #392]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80076ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80076b0:	f003 0302 	and.w	r3, r3, #2
 80076b4:	2b00      	cmp	r3, #0
 80076b6:	d1ee      	bne.n	8007696 <HAL_RCC_OscConfig+0x522>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076bc:	2b00      	cmp	r3, #0
 80076be:	f000 812a 	beq.w	8007916 <HAL_RCC_OscConfig+0x7a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80076c2:	4b5d      	ldr	r3, [pc, #372]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80076c4:	691b      	ldr	r3, [r3, #16]
 80076c6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80076ca:	2b18      	cmp	r3, #24
 80076cc:	f000 80ba 	beq.w	8007844 <HAL_RCC_OscConfig+0x6d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076d4:	2b02      	cmp	r3, #2
 80076d6:	f040 8095 	bne.w	8007804 <HAL_RCC_OscConfig+0x690>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80076da:	4b57      	ldr	r3, [pc, #348]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	4a56      	ldr	r2, [pc, #344]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80076e0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80076e4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80076e6:	f7fa fbb3 	bl	8001e50 <HAL_GetTick>
 80076ea:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80076ec:	e008      	b.n	8007700 <HAL_RCC_OscConfig+0x58c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80076ee:	f7fa fbaf 	bl	8001e50 <HAL_GetTick>
 80076f2:	4602      	mov	r2, r0
 80076f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80076f6:	1ad3      	subs	r3, r2, r3
 80076f8:	2b02      	cmp	r3, #2
 80076fa:	d901      	bls.n	8007700 <HAL_RCC_OscConfig+0x58c>
          {
            return HAL_TIMEOUT;
 80076fc:	2303      	movs	r3, #3
 80076fe:	e10b      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007700:	4b4d      	ldr	r3, [pc, #308]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007708:	2b00      	cmp	r3, #0
 800770a:	d1f0      	bne.n	80076ee <HAL_RCC_OscConfig+0x57a>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800770c:	4b4a      	ldr	r3, [pc, #296]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800770e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007710:	4b4a      	ldr	r3, [pc, #296]	; (800783c <HAL_RCC_OscConfig+0x6c8>)
 8007712:	4013      	ands	r3, r2
 8007714:	687a      	ldr	r2, [r7, #4]
 8007716:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8007718:	687a      	ldr	r2, [r7, #4]
 800771a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800771c:	0112      	lsls	r2, r2, #4
 800771e:	430a      	orrs	r2, r1
 8007720:	4945      	ldr	r1, [pc, #276]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007722:	4313      	orrs	r3, r2
 8007724:	628b      	str	r3, [r1, #40]	; 0x28
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800772a:	3b01      	subs	r3, #1
 800772c:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007734:	3b01      	subs	r3, #1
 8007736:	025b      	lsls	r3, r3, #9
 8007738:	b29b      	uxth	r3, r3
 800773a:	431a      	orrs	r2, r3
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007740:	3b01      	subs	r3, #1
 8007742:	041b      	lsls	r3, r3, #16
 8007744:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8007748:	431a      	orrs	r2, r3
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800774e:	3b01      	subs	r3, #1
 8007750:	061b      	lsls	r3, r3, #24
 8007752:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8007756:	4938      	ldr	r1, [pc, #224]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007758:	4313      	orrs	r3, r2
 800775a:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 800775c:	4b36      	ldr	r3, [pc, #216]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800775e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007760:	4a35      	ldr	r2, [pc, #212]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007762:	f023 0301 	bic.w	r3, r3, #1
 8007766:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8007768:	4b33      	ldr	r3, [pc, #204]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800776a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800776c:	4b34      	ldr	r3, [pc, #208]	; (8007840 <HAL_RCC_OscConfig+0x6cc>)
 800776e:	4013      	ands	r3, r2
 8007770:	687a      	ldr	r2, [r7, #4]
 8007772:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8007774:	00d2      	lsls	r2, r2, #3
 8007776:	4930      	ldr	r1, [pc, #192]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007778:	4313      	orrs	r3, r2
 800777a:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 800777c:	4b2e      	ldr	r3, [pc, #184]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800777e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007780:	f023 020c 	bic.w	r2, r3, #12
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007788:	492b      	ldr	r1, [pc, #172]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800778a:	4313      	orrs	r3, r2
 800778c:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 800778e:	4b2a      	ldr	r3, [pc, #168]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007790:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007792:	f023 0202 	bic.w	r2, r3, #2
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800779a:	4927      	ldr	r1, [pc, #156]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800779c:	4313      	orrs	r3, r2
 800779e:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80077a0:	4b25      	ldr	r3, [pc, #148]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077a4:	4a24      	ldr	r2, [pc, #144]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80077aa:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80077ac:	4b22      	ldr	r3, [pc, #136]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077b0:	4a21      	ldr	r2, [pc, #132]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077b2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80077b6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80077b8:	4b1f      	ldr	r3, [pc, #124]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077bc:	4a1e      	ldr	r2, [pc, #120]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077be:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80077c2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 80077c4:	4b1c      	ldr	r3, [pc, #112]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077c8:	4a1b      	ldr	r2, [pc, #108]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077ca:	f043 0301 	orr.w	r3, r3, #1
 80077ce:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80077d0:	4b19      	ldr	r3, [pc, #100]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077d2:	681b      	ldr	r3, [r3, #0]
 80077d4:	4a18      	ldr	r2, [pc, #96]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077d6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80077da:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80077dc:	f7fa fb38 	bl	8001e50 <HAL_GetTick>
 80077e0:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80077e2:	e008      	b.n	80077f6 <HAL_RCC_OscConfig+0x682>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80077e4:	f7fa fb34 	bl	8001e50 <HAL_GetTick>
 80077e8:	4602      	mov	r2, r0
 80077ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077ec:	1ad3      	subs	r3, r2, r3
 80077ee:	2b02      	cmp	r3, #2
 80077f0:	d901      	bls.n	80077f6 <HAL_RCC_OscConfig+0x682>
          {
            return HAL_TIMEOUT;
 80077f2:	2303      	movs	r3, #3
 80077f4:	e090      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80077f6:	4b10      	ldr	r3, [pc, #64]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80077fe:	2b00      	cmp	r3, #0
 8007800:	d0f0      	beq.n	80077e4 <HAL_RCC_OscConfig+0x670>
 8007802:	e088      	b.n	8007916 <HAL_RCC_OscConfig+0x7a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007804:	4b0c      	ldr	r3, [pc, #48]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 8007806:	681b      	ldr	r3, [r3, #0]
 8007808:	4a0b      	ldr	r2, [pc, #44]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800780a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800780e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007810:	f7fa fb1e 	bl	8001e50 <HAL_GetTick>
 8007814:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007816:	e008      	b.n	800782a <HAL_RCC_OscConfig+0x6b6>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007818:	f7fa fb1a 	bl	8001e50 <HAL_GetTick>
 800781c:	4602      	mov	r2, r0
 800781e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007820:	1ad3      	subs	r3, r2, r3
 8007822:	2b02      	cmp	r3, #2
 8007824:	d901      	bls.n	800782a <HAL_RCC_OscConfig+0x6b6>
          {
            return HAL_TIMEOUT;
 8007826:	2303      	movs	r3, #3
 8007828:	e076      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800782a:	4b03      	ldr	r3, [pc, #12]	; (8007838 <HAL_RCC_OscConfig+0x6c4>)
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007832:	2b00      	cmp	r3, #0
 8007834:	d1f0      	bne.n	8007818 <HAL_RCC_OscConfig+0x6a4>
 8007836:	e06e      	b.n	8007916 <HAL_RCC_OscConfig+0x7a2>
 8007838:	58024400 	.word	0x58024400
 800783c:	fffffc0c 	.word	0xfffffc0c
 8007840:	ffff0007 	.word	0xffff0007
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 8007844:	4b36      	ldr	r3, [pc, #216]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 8007846:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007848:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 800784a:	4b35      	ldr	r3, [pc, #212]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 800784c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800784e:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007854:	2b01      	cmp	r3, #1
 8007856:	d031      	beq.n	80078bc <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007858:	693b      	ldr	r3, [r7, #16]
 800785a:	f003 0203 	and.w	r2, r3, #3
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007862:	429a      	cmp	r2, r3
 8007864:	d12a      	bne.n	80078bc <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8007866:	693b      	ldr	r3, [r7, #16]
 8007868:	091b      	lsrs	r3, r3, #4
 800786a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007872:	429a      	cmp	r2, r3
 8007874:	d122      	bne.n	80078bc <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007876:	68fb      	ldr	r3, [r7, #12]
 8007878:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007880:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8007882:	429a      	cmp	r2, r3
 8007884:	d11a      	bne.n	80078bc <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007886:	68fb      	ldr	r3, [r7, #12]
 8007888:	0a5b      	lsrs	r3, r3, #9
 800788a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007892:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007894:	429a      	cmp	r2, r3
 8007896:	d111      	bne.n	80078bc <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007898:	68fb      	ldr	r3, [r7, #12]
 800789a:	0c1b      	lsrs	r3, r3, #16
 800789c:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80078a4:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80078a6:	429a      	cmp	r2, r3
 80078a8:	d108      	bne.n	80078bc <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80078aa:	68fb      	ldr	r3, [r7, #12]
 80078ac:	0e1b      	lsrs	r3, r3, #24
 80078ae:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80078b6:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80078b8:	429a      	cmp	r2, r3
 80078ba:	d001      	beq.n	80078c0 <HAL_RCC_OscConfig+0x74c>
      {
        return HAL_ERROR;
 80078bc:	2301      	movs	r3, #1
 80078be:	e02b      	b.n	8007918 <HAL_RCC_OscConfig+0x7a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 80078c0:	4b17      	ldr	r3, [pc, #92]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 80078c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80078c4:	08db      	lsrs	r3, r3, #3
 80078c6:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80078ca:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80078d0:	693a      	ldr	r2, [r7, #16]
 80078d2:	429a      	cmp	r2, r3
 80078d4:	d01f      	beq.n	8007916 <HAL_RCC_OscConfig+0x7a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 80078d6:	4b12      	ldr	r3, [pc, #72]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 80078d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80078da:	4a11      	ldr	r2, [pc, #68]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 80078dc:	f023 0301 	bic.w	r3, r3, #1
 80078e0:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 80078e2:	f7fa fab5 	bl	8001e50 <HAL_GetTick>
 80078e6:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 80078e8:	bf00      	nop
 80078ea:	f7fa fab1 	bl	8001e50 <HAL_GetTick>
 80078ee:	4602      	mov	r2, r0
 80078f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80078f2:	4293      	cmp	r3, r2
 80078f4:	d0f9      	beq.n	80078ea <HAL_RCC_OscConfig+0x776>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80078f6:	4b0a      	ldr	r3, [pc, #40]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 80078f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80078fa:	4b0a      	ldr	r3, [pc, #40]	; (8007924 <HAL_RCC_OscConfig+0x7b0>)
 80078fc:	4013      	ands	r3, r2
 80078fe:	687a      	ldr	r2, [r7, #4]
 8007900:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8007902:	00d2      	lsls	r2, r2, #3
 8007904:	4906      	ldr	r1, [pc, #24]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 8007906:	4313      	orrs	r3, r2
 8007908:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 800790a:	4b05      	ldr	r3, [pc, #20]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 800790c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800790e:	4a04      	ldr	r2, [pc, #16]	; (8007920 <HAL_RCC_OscConfig+0x7ac>)
 8007910:	f043 0301 	orr.w	r3, r3, #1
 8007914:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 8007916:	2300      	movs	r3, #0
}
 8007918:	4618      	mov	r0, r3
 800791a:	3730      	adds	r7, #48	; 0x30
 800791c:	46bd      	mov	sp, r7
 800791e:	bd80      	pop	{r7, pc}
 8007920:	58024400 	.word	0x58024400
 8007924:	ffff0007 	.word	0xffff0007

08007928 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007928:	b580      	push	{r7, lr}
 800792a:	b086      	sub	sp, #24
 800792c:	af00      	add	r7, sp, #0
 800792e:	6078      	str	r0, [r7, #4]
 8007930:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	2b00      	cmp	r3, #0
 8007936:	d101      	bne.n	800793c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007938:	2301      	movs	r3, #1
 800793a:	e19c      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800793c:	4b8a      	ldr	r3, [pc, #552]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	f003 030f 	and.w	r3, r3, #15
 8007944:	683a      	ldr	r2, [r7, #0]
 8007946:	429a      	cmp	r2, r3
 8007948:	d910      	bls.n	800796c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800794a:	4b87      	ldr	r3, [pc, #540]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	f023 020f 	bic.w	r2, r3, #15
 8007952:	4985      	ldr	r1, [pc, #532]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 8007954:	683b      	ldr	r3, [r7, #0]
 8007956:	4313      	orrs	r3, r2
 8007958:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800795a:	4b83      	ldr	r3, [pc, #524]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	f003 030f 	and.w	r3, r3, #15
 8007962:	683a      	ldr	r2, [r7, #0]
 8007964:	429a      	cmp	r2, r3
 8007966:	d001      	beq.n	800796c <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8007968:	2301      	movs	r3, #1
 800796a:	e184      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	f003 0304 	and.w	r3, r3, #4
 8007974:	2b00      	cmp	r3, #0
 8007976:	d010      	beq.n	800799a <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	691a      	ldr	r2, [r3, #16]
 800797c:	4b7b      	ldr	r3, [pc, #492]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 800797e:	699b      	ldr	r3, [r3, #24]
 8007980:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007984:	429a      	cmp	r2, r3
 8007986:	d908      	bls.n	800799a <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007988:	4b78      	ldr	r3, [pc, #480]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 800798a:	699b      	ldr	r3, [r3, #24]
 800798c:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	691b      	ldr	r3, [r3, #16]
 8007994:	4975      	ldr	r1, [pc, #468]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007996:	4313      	orrs	r3, r2
 8007998:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	f003 0308 	and.w	r3, r3, #8
 80079a2:	2b00      	cmp	r3, #0
 80079a4:	d010      	beq.n	80079c8 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	695a      	ldr	r2, [r3, #20]
 80079aa:	4b70      	ldr	r3, [pc, #448]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079ac:	69db      	ldr	r3, [r3, #28]
 80079ae:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80079b2:	429a      	cmp	r2, r3
 80079b4:	d908      	bls.n	80079c8 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80079b6:	4b6d      	ldr	r3, [pc, #436]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079b8:	69db      	ldr	r3, [r3, #28]
 80079ba:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	695b      	ldr	r3, [r3, #20]
 80079c2:	496a      	ldr	r1, [pc, #424]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079c4:	4313      	orrs	r3, r2
 80079c6:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	f003 0310 	and.w	r3, r3, #16
 80079d0:	2b00      	cmp	r3, #0
 80079d2:	d010      	beq.n	80079f6 <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	699a      	ldr	r2, [r3, #24]
 80079d8:	4b64      	ldr	r3, [pc, #400]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079da:	69db      	ldr	r3, [r3, #28]
 80079dc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80079e0:	429a      	cmp	r2, r3
 80079e2:	d908      	bls.n	80079f6 <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80079e4:	4b61      	ldr	r3, [pc, #388]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079e6:	69db      	ldr	r3, [r3, #28]
 80079e8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	699b      	ldr	r3, [r3, #24]
 80079f0:	495e      	ldr	r1, [pc, #376]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 80079f2:	4313      	orrs	r3, r2
 80079f4:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80079f6:	687b      	ldr	r3, [r7, #4]
 80079f8:	681b      	ldr	r3, [r3, #0]
 80079fa:	f003 0320 	and.w	r3, r3, #32
 80079fe:	2b00      	cmp	r3, #0
 8007a00:	d010      	beq.n	8007a24 <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	69da      	ldr	r2, [r3, #28]
 8007a06:	4b59      	ldr	r3, [pc, #356]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a08:	6a1b      	ldr	r3, [r3, #32]
 8007a0a:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007a0e:	429a      	cmp	r2, r3
 8007a10:	d908      	bls.n	8007a24 <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8007a12:	4b56      	ldr	r3, [pc, #344]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a14:	6a1b      	ldr	r3, [r3, #32]
 8007a16:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	69db      	ldr	r3, [r3, #28]
 8007a1e:	4953      	ldr	r1, [pc, #332]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a20:	4313      	orrs	r3, r2
 8007a22:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	f003 0302 	and.w	r3, r3, #2
 8007a2c:	2b00      	cmp	r3, #0
 8007a2e:	d010      	beq.n	8007a52 <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007a30:	687b      	ldr	r3, [r7, #4]
 8007a32:	68da      	ldr	r2, [r3, #12]
 8007a34:	4b4d      	ldr	r3, [pc, #308]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a36:	699b      	ldr	r3, [r3, #24]
 8007a38:	f003 030f 	and.w	r3, r3, #15
 8007a3c:	429a      	cmp	r2, r3
 8007a3e:	d908      	bls.n	8007a52 <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007a40:	4b4a      	ldr	r3, [pc, #296]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a42:	699b      	ldr	r3, [r3, #24]
 8007a44:	f023 020f 	bic.w	r2, r3, #15
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	68db      	ldr	r3, [r3, #12]
 8007a4c:	4947      	ldr	r1, [pc, #284]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	681b      	ldr	r3, [r3, #0]
 8007a56:	f003 0301 	and.w	r3, r3, #1
 8007a5a:	2b00      	cmp	r3, #0
 8007a5c:	d055      	beq.n	8007b0a <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8007a5e:	4b43      	ldr	r3, [pc, #268]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a60:	699b      	ldr	r3, [r3, #24]
 8007a62:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	689b      	ldr	r3, [r3, #8]
 8007a6a:	4940      	ldr	r1, [pc, #256]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a6c:	4313      	orrs	r3, r2
 8007a6e:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	685b      	ldr	r3, [r3, #4]
 8007a74:	2b02      	cmp	r3, #2
 8007a76:	d107      	bne.n	8007a88 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007a78:	4b3c      	ldr	r3, [pc, #240]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	d121      	bne.n	8007ac8 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a84:	2301      	movs	r3, #1
 8007a86:	e0f6      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	685b      	ldr	r3, [r3, #4]
 8007a8c:	2b03      	cmp	r3, #3
 8007a8e:	d107      	bne.n	8007aa0 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007a90:	4b36      	ldr	r3, [pc, #216]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	d115      	bne.n	8007ac8 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a9c:	2301      	movs	r3, #1
 8007a9e:	e0ea      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007aa0:	687b      	ldr	r3, [r7, #4]
 8007aa2:	685b      	ldr	r3, [r3, #4]
 8007aa4:	2b01      	cmp	r3, #1
 8007aa6:	d107      	bne.n	8007ab8 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007aa8:	4b30      	ldr	r3, [pc, #192]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007aaa:	681b      	ldr	r3, [r3, #0]
 8007aac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d109      	bne.n	8007ac8 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007ab4:	2301      	movs	r3, #1
 8007ab6:	e0de      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007ab8:	4b2c      	ldr	r3, [pc, #176]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	f003 0304 	and.w	r3, r3, #4
 8007ac0:	2b00      	cmp	r3, #0
 8007ac2:	d101      	bne.n	8007ac8 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007ac4:	2301      	movs	r3, #1
 8007ac6:	e0d6      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007ac8:	4b28      	ldr	r3, [pc, #160]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007aca:	691b      	ldr	r3, [r3, #16]
 8007acc:	f023 0207 	bic.w	r2, r3, #7
 8007ad0:	687b      	ldr	r3, [r7, #4]
 8007ad2:	685b      	ldr	r3, [r3, #4]
 8007ad4:	4925      	ldr	r1, [pc, #148]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007ad6:	4313      	orrs	r3, r2
 8007ad8:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007ada:	f7fa f9b9 	bl	8001e50 <HAL_GetTick>
 8007ade:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007ae0:	e00a      	b.n	8007af8 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007ae2:	f7fa f9b5 	bl	8001e50 <HAL_GetTick>
 8007ae6:	4602      	mov	r2, r0
 8007ae8:	697b      	ldr	r3, [r7, #20]
 8007aea:	1ad3      	subs	r3, r2, r3
 8007aec:	f241 3288 	movw	r2, #5000	; 0x1388
 8007af0:	4293      	cmp	r3, r2
 8007af2:	d901      	bls.n	8007af8 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 8007af4:	2303      	movs	r3, #3
 8007af6:	e0be      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007af8:	4b1c      	ldr	r3, [pc, #112]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007afa:	691b      	ldr	r3, [r3, #16]
 8007afc:	f003 0238 	and.w	r2, r3, #56	; 0x38
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	685b      	ldr	r3, [r3, #4]
 8007b04:	00db      	lsls	r3, r3, #3
 8007b06:	429a      	cmp	r2, r3
 8007b08:	d1eb      	bne.n	8007ae2 <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	681b      	ldr	r3, [r3, #0]
 8007b0e:	f003 0302 	and.w	r3, r3, #2
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d010      	beq.n	8007b38 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	68da      	ldr	r2, [r3, #12]
 8007b1a:	4b14      	ldr	r3, [pc, #80]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007b1c:	699b      	ldr	r3, [r3, #24]
 8007b1e:	f003 030f 	and.w	r3, r3, #15
 8007b22:	429a      	cmp	r2, r3
 8007b24:	d208      	bcs.n	8007b38 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007b26:	4b11      	ldr	r3, [pc, #68]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007b28:	699b      	ldr	r3, [r3, #24]
 8007b2a:	f023 020f 	bic.w	r2, r3, #15
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	68db      	ldr	r3, [r3, #12]
 8007b32:	490e      	ldr	r1, [pc, #56]	; (8007b6c <HAL_RCC_ClockConfig+0x244>)
 8007b34:	4313      	orrs	r3, r2
 8007b36:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007b38:	4b0b      	ldr	r3, [pc, #44]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	f003 030f 	and.w	r3, r3, #15
 8007b40:	683a      	ldr	r2, [r7, #0]
 8007b42:	429a      	cmp	r2, r3
 8007b44:	d214      	bcs.n	8007b70 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007b46:	4b08      	ldr	r3, [pc, #32]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	f023 020f 	bic.w	r2, r3, #15
 8007b4e:	4906      	ldr	r1, [pc, #24]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 8007b50:	683b      	ldr	r3, [r7, #0]
 8007b52:	4313      	orrs	r3, r2
 8007b54:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007b56:	4b04      	ldr	r3, [pc, #16]	; (8007b68 <HAL_RCC_ClockConfig+0x240>)
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	f003 030f 	and.w	r3, r3, #15
 8007b5e:	683a      	ldr	r2, [r7, #0]
 8007b60:	429a      	cmp	r2, r3
 8007b62:	d005      	beq.n	8007b70 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 8007b64:	2301      	movs	r3, #1
 8007b66:	e086      	b.n	8007c76 <HAL_RCC_ClockConfig+0x34e>
 8007b68:	52002000 	.word	0x52002000
 8007b6c:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	681b      	ldr	r3, [r3, #0]
 8007b74:	f003 0304 	and.w	r3, r3, #4
 8007b78:	2b00      	cmp	r3, #0
 8007b7a:	d010      	beq.n	8007b9e <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	691a      	ldr	r2, [r3, #16]
 8007b80:	4b3f      	ldr	r3, [pc, #252]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007b82:	699b      	ldr	r3, [r3, #24]
 8007b84:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007b88:	429a      	cmp	r2, r3
 8007b8a:	d208      	bcs.n	8007b9e <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007b8c:	4b3c      	ldr	r3, [pc, #240]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007b8e:	699b      	ldr	r3, [r3, #24]
 8007b90:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	691b      	ldr	r3, [r3, #16]
 8007b98:	4939      	ldr	r1, [pc, #228]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007b9a:	4313      	orrs	r3, r2
 8007b9c:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	f003 0308 	and.w	r3, r3, #8
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d010      	beq.n	8007bcc <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	695a      	ldr	r2, [r3, #20]
 8007bae:	4b34      	ldr	r3, [pc, #208]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bb0:	69db      	ldr	r3, [r3, #28]
 8007bb2:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007bb6:	429a      	cmp	r2, r3
 8007bb8:	d208      	bcs.n	8007bcc <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007bba:	4b31      	ldr	r3, [pc, #196]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bbc:	69db      	ldr	r3, [r3, #28]
 8007bbe:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	695b      	ldr	r3, [r3, #20]
 8007bc6:	492e      	ldr	r1, [pc, #184]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bc8:	4313      	orrs	r3, r2
 8007bca:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	681b      	ldr	r3, [r3, #0]
 8007bd0:	f003 0310 	and.w	r3, r3, #16
 8007bd4:	2b00      	cmp	r3, #0
 8007bd6:	d010      	beq.n	8007bfa <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	699a      	ldr	r2, [r3, #24]
 8007bdc:	4b28      	ldr	r3, [pc, #160]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bde:	69db      	ldr	r3, [r3, #28]
 8007be0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007be4:	429a      	cmp	r2, r3
 8007be6:	d208      	bcs.n	8007bfa <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007be8:	4b25      	ldr	r3, [pc, #148]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bea:	69db      	ldr	r3, [r3, #28]
 8007bec:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	699b      	ldr	r3, [r3, #24]
 8007bf4:	4922      	ldr	r1, [pc, #136]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007bf6:	4313      	orrs	r3, r2
 8007bf8:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	f003 0320 	and.w	r3, r3, #32
 8007c02:	2b00      	cmp	r3, #0
 8007c04:	d010      	beq.n	8007c28 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8007c06:	687b      	ldr	r3, [r7, #4]
 8007c08:	69da      	ldr	r2, [r3, #28]
 8007c0a:	4b1d      	ldr	r3, [pc, #116]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007c0c:	6a1b      	ldr	r3, [r3, #32]
 8007c0e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007c12:	429a      	cmp	r2, r3
 8007c14:	d208      	bcs.n	8007c28 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8007c16:	4b1a      	ldr	r3, [pc, #104]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007c18:	6a1b      	ldr	r3, [r3, #32]
 8007c1a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007c1e:	687b      	ldr	r3, [r7, #4]
 8007c20:	69db      	ldr	r3, [r3, #28]
 8007c22:	4917      	ldr	r1, [pc, #92]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007c24:	4313      	orrs	r3, r2
 8007c26:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007c28:	f000 f834 	bl	8007c94 <HAL_RCC_GetSysClockFreq>
 8007c2c:	4602      	mov	r2, r0
 8007c2e:	4b14      	ldr	r3, [pc, #80]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007c30:	699b      	ldr	r3, [r3, #24]
 8007c32:	0a1b      	lsrs	r3, r3, #8
 8007c34:	f003 030f 	and.w	r3, r3, #15
 8007c38:	4912      	ldr	r1, [pc, #72]	; (8007c84 <HAL_RCC_ClockConfig+0x35c>)
 8007c3a:	5ccb      	ldrb	r3, [r1, r3]
 8007c3c:	f003 031f 	and.w	r3, r3, #31
 8007c40:	fa22 f303 	lsr.w	r3, r2, r3
 8007c44:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007c46:	4b0e      	ldr	r3, [pc, #56]	; (8007c80 <HAL_RCC_ClockConfig+0x358>)
 8007c48:	699b      	ldr	r3, [r3, #24]
 8007c4a:	f003 030f 	and.w	r3, r3, #15
 8007c4e:	4a0d      	ldr	r2, [pc, #52]	; (8007c84 <HAL_RCC_ClockConfig+0x35c>)
 8007c50:	5cd3      	ldrb	r3, [r2, r3]
 8007c52:	f003 031f 	and.w	r3, r3, #31
 8007c56:	693a      	ldr	r2, [r7, #16]
 8007c58:	fa22 f303 	lsr.w	r3, r2, r3
 8007c5c:	4a0a      	ldr	r2, [pc, #40]	; (8007c88 <HAL_RCC_ClockConfig+0x360>)
 8007c5e:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007c60:	4a0a      	ldr	r2, [pc, #40]	; (8007c8c <HAL_RCC_ClockConfig+0x364>)
 8007c62:	693b      	ldr	r3, [r7, #16]
 8007c64:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 8007c66:	4b0a      	ldr	r3, [pc, #40]	; (8007c90 <HAL_RCC_ClockConfig+0x368>)
 8007c68:	681b      	ldr	r3, [r3, #0]
 8007c6a:	4618      	mov	r0, r3
 8007c6c:	f7fa f8a6 	bl	8001dbc <HAL_InitTick>
 8007c70:	4603      	mov	r3, r0
 8007c72:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 8007c74:	7bfb      	ldrb	r3, [r7, #15]
}
 8007c76:	4618      	mov	r0, r3
 8007c78:	3718      	adds	r7, #24
 8007c7a:	46bd      	mov	sp, r7
 8007c7c:	bd80      	pop	{r7, pc}
 8007c7e:	bf00      	nop
 8007c80:	58024400 	.word	0x58024400
 8007c84:	08027c80 	.word	0x08027c80
 8007c88:	24000008 	.word	0x24000008
 8007c8c:	24000004 	.word	0x24000004
 8007c90:	2400000c 	.word	0x2400000c

08007c94 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8007c94:	b480      	push	{r7}
 8007c96:	b089      	sub	sp, #36	; 0x24
 8007c98:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007c9a:	4bb3      	ldr	r3, [pc, #716]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007c9c:	691b      	ldr	r3, [r3, #16]
 8007c9e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007ca2:	2b18      	cmp	r3, #24
 8007ca4:	f200 8155 	bhi.w	8007f52 <HAL_RCC_GetSysClockFreq+0x2be>
 8007ca8:	a201      	add	r2, pc, #4	; (adr r2, 8007cb0 <HAL_RCC_GetSysClockFreq+0x1c>)
 8007caa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007cae:	bf00      	nop
 8007cb0:	08007d15 	.word	0x08007d15
 8007cb4:	08007f53 	.word	0x08007f53
 8007cb8:	08007f53 	.word	0x08007f53
 8007cbc:	08007f53 	.word	0x08007f53
 8007cc0:	08007f53 	.word	0x08007f53
 8007cc4:	08007f53 	.word	0x08007f53
 8007cc8:	08007f53 	.word	0x08007f53
 8007ccc:	08007f53 	.word	0x08007f53
 8007cd0:	08007d3b 	.word	0x08007d3b
 8007cd4:	08007f53 	.word	0x08007f53
 8007cd8:	08007f53 	.word	0x08007f53
 8007cdc:	08007f53 	.word	0x08007f53
 8007ce0:	08007f53 	.word	0x08007f53
 8007ce4:	08007f53 	.word	0x08007f53
 8007ce8:	08007f53 	.word	0x08007f53
 8007cec:	08007f53 	.word	0x08007f53
 8007cf0:	08007d41 	.word	0x08007d41
 8007cf4:	08007f53 	.word	0x08007f53
 8007cf8:	08007f53 	.word	0x08007f53
 8007cfc:	08007f53 	.word	0x08007f53
 8007d00:	08007f53 	.word	0x08007f53
 8007d04:	08007f53 	.word	0x08007f53
 8007d08:	08007f53 	.word	0x08007f53
 8007d0c:	08007f53 	.word	0x08007f53
 8007d10:	08007d47 	.word	0x08007d47
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8007d14:	4b94      	ldr	r3, [pc, #592]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	f003 0320 	and.w	r3, r3, #32
 8007d1c:	2b00      	cmp	r3, #0
 8007d1e:	d009      	beq.n	8007d34 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007d20:	4b91      	ldr	r3, [pc, #580]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	08db      	lsrs	r3, r3, #3
 8007d26:	f003 0303 	and.w	r3, r3, #3
 8007d2a:	4a90      	ldr	r2, [pc, #576]	; (8007f6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007d2c:	fa22 f303 	lsr.w	r3, r2, r3
 8007d30:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 8007d32:	e111      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8007d34:	4b8d      	ldr	r3, [pc, #564]	; (8007f6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007d36:	61bb      	str	r3, [r7, #24]
      break;
 8007d38:	e10e      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8007d3a:	4b8d      	ldr	r3, [pc, #564]	; (8007f70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007d3c:	61bb      	str	r3, [r7, #24]
      break;
 8007d3e:	e10b      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8007d40:	4b8c      	ldr	r3, [pc, #560]	; (8007f74 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8007d42:	61bb      	str	r3, [r7, #24]
      break;
 8007d44:	e108      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8007d46:	4b88      	ldr	r3, [pc, #544]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007d4a:	f003 0303 	and.w	r3, r3, #3
 8007d4e:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007d50:	4b85      	ldr	r3, [pc, #532]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007d54:	091b      	lsrs	r3, r3, #4
 8007d56:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8007d5a:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007d5c:	4b82      	ldr	r3, [pc, #520]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d60:	f003 0301 	and.w	r3, r3, #1
 8007d64:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007d66:	4b80      	ldr	r3, [pc, #512]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d6a:	08db      	lsrs	r3, r3, #3
 8007d6c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007d70:	68fa      	ldr	r2, [r7, #12]
 8007d72:	fb02 f303 	mul.w	r3, r2, r3
 8007d76:	ee07 3a90 	vmov	s15, r3
 8007d7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007d7e:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 8007d82:	693b      	ldr	r3, [r7, #16]
 8007d84:	2b00      	cmp	r3, #0
 8007d86:	f000 80e1 	beq.w	8007f4c <HAL_RCC_GetSysClockFreq+0x2b8>
 8007d8a:	697b      	ldr	r3, [r7, #20]
 8007d8c:	2b02      	cmp	r3, #2
 8007d8e:	f000 8083 	beq.w	8007e98 <HAL_RCC_GetSysClockFreq+0x204>
 8007d92:	697b      	ldr	r3, [r7, #20]
 8007d94:	2b02      	cmp	r3, #2
 8007d96:	f200 80a1 	bhi.w	8007edc <HAL_RCC_GetSysClockFreq+0x248>
 8007d9a:	697b      	ldr	r3, [r7, #20]
 8007d9c:	2b00      	cmp	r3, #0
 8007d9e:	d003      	beq.n	8007da8 <HAL_RCC_GetSysClockFreq+0x114>
 8007da0:	697b      	ldr	r3, [r7, #20]
 8007da2:	2b01      	cmp	r3, #1
 8007da4:	d056      	beq.n	8007e54 <HAL_RCC_GetSysClockFreq+0x1c0>
 8007da6:	e099      	b.n	8007edc <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8007da8:	4b6f      	ldr	r3, [pc, #444]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	f003 0320 	and.w	r3, r3, #32
 8007db0:	2b00      	cmp	r3, #0
 8007db2:	d02d      	beq.n	8007e10 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007db4:	4b6c      	ldr	r3, [pc, #432]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007db6:	681b      	ldr	r3, [r3, #0]
 8007db8:	08db      	lsrs	r3, r3, #3
 8007dba:	f003 0303 	and.w	r3, r3, #3
 8007dbe:	4a6b      	ldr	r2, [pc, #428]	; (8007f6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007dc0:	fa22 f303 	lsr.w	r3, r2, r3
 8007dc4:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007dc6:	687b      	ldr	r3, [r7, #4]
 8007dc8:	ee07 3a90 	vmov	s15, r3
 8007dcc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007dd0:	693b      	ldr	r3, [r7, #16]
 8007dd2:	ee07 3a90 	vmov	s15, r3
 8007dd6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007dda:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007dde:	4b62      	ldr	r3, [pc, #392]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007de0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007de2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007de6:	ee07 3a90 	vmov	s15, r3
 8007dea:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007dee:	ed97 6a02 	vldr	s12, [r7, #8]
 8007df2:	eddf 5a61 	vldr	s11, [pc, #388]	; 8007f78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007df6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007dfa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007dfe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007e02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e06:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007e0a:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8007e0e:	e087      	b.n	8007f20 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007e10:	693b      	ldr	r3, [r7, #16]
 8007e12:	ee07 3a90 	vmov	s15, r3
 8007e16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007e1a:	eddf 6a58 	vldr	s13, [pc, #352]	; 8007f7c <HAL_RCC_GetSysClockFreq+0x2e8>
 8007e1e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007e22:	4b51      	ldr	r3, [pc, #324]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e26:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e2a:	ee07 3a90 	vmov	s15, r3
 8007e2e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007e32:	ed97 6a02 	vldr	s12, [r7, #8]
 8007e36:	eddf 5a50 	vldr	s11, [pc, #320]	; 8007f78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007e3a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007e3e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007e42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007e46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e4a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007e4e:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007e52:	e065      	b.n	8007f20 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007e54:	693b      	ldr	r3, [r7, #16]
 8007e56:	ee07 3a90 	vmov	s15, r3
 8007e5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007e5e:	eddf 6a48 	vldr	s13, [pc, #288]	; 8007f80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007e62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007e66:	4b40      	ldr	r3, [pc, #256]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007e68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e6e:	ee07 3a90 	vmov	s15, r3
 8007e72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007e76:	ed97 6a02 	vldr	s12, [r7, #8]
 8007e7a:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8007f78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007e7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007e82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007e86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007e8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007e92:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007e96:	e043      	b.n	8007f20 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007e98:	693b      	ldr	r3, [r7, #16]
 8007e9a:	ee07 3a90 	vmov	s15, r3
 8007e9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ea2:	eddf 6a38 	vldr	s13, [pc, #224]	; 8007f84 <HAL_RCC_GetSysClockFreq+0x2f0>
 8007ea6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007eaa:	4b2f      	ldr	r3, [pc, #188]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007eac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007eae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007eb2:	ee07 3a90 	vmov	s15, r3
 8007eb6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007eba:	ed97 6a02 	vldr	s12, [r7, #8]
 8007ebe:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8007f78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007ec2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007ec6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007eca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007ece:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007ed2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007ed6:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007eda:	e021      	b.n	8007f20 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007edc:	693b      	ldr	r3, [r7, #16]
 8007ede:	ee07 3a90 	vmov	s15, r3
 8007ee2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ee6:	eddf 6a26 	vldr	s13, [pc, #152]	; 8007f80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007eea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007eee:	4b1e      	ldr	r3, [pc, #120]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ef2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007ef6:	ee07 3a90 	vmov	s15, r3
 8007efa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007efe:	ed97 6a02 	vldr	s12, [r7, #8]
 8007f02:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8007f78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007f06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007f0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007f0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007f12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007f16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007f1a:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007f1e:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007f20:	4b11      	ldr	r3, [pc, #68]	; (8007f68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007f22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007f24:	0a5b      	lsrs	r3, r3, #9
 8007f26:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007f2a:	3301      	adds	r3, #1
 8007f2c:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8007f2e:	683b      	ldr	r3, [r7, #0]
 8007f30:	ee07 3a90 	vmov	s15, r3
 8007f34:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007f38:	edd7 6a07 	vldr	s13, [r7, #28]
 8007f3c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007f40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007f44:	ee17 3a90 	vmov	r3, s15
 8007f48:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8007f4a:	e005      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8007f4c:	2300      	movs	r3, #0
 8007f4e:	61bb      	str	r3, [r7, #24]
      break;
 8007f50:	e002      	b.n	8007f58 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8007f52:	4b07      	ldr	r3, [pc, #28]	; (8007f70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007f54:	61bb      	str	r3, [r7, #24]
      break;
 8007f56:	bf00      	nop
  }

  return sysclockfreq;
 8007f58:	69bb      	ldr	r3, [r7, #24]
}
 8007f5a:	4618      	mov	r0, r3
 8007f5c:	3724      	adds	r7, #36	; 0x24
 8007f5e:	46bd      	mov	sp, r7
 8007f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f64:	4770      	bx	lr
 8007f66:	bf00      	nop
 8007f68:	58024400 	.word	0x58024400
 8007f6c:	03d09000 	.word	0x03d09000
 8007f70:	003d0900 	.word	0x003d0900
 8007f74:	017d7840 	.word	0x017d7840
 8007f78:	46000000 	.word	0x46000000
 8007f7c:	4c742400 	.word	0x4c742400
 8007f80:	4a742400 	.word	0x4a742400
 8007f84:	4bbebc20 	.word	0x4bbebc20

08007f88 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007f88:	b580      	push	{r7, lr}
 8007f8a:	b082      	sub	sp, #8
 8007f8c:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007f8e:	f7ff fe81 	bl	8007c94 <HAL_RCC_GetSysClockFreq>
 8007f92:	4602      	mov	r2, r0
 8007f94:	4b10      	ldr	r3, [pc, #64]	; (8007fd8 <HAL_RCC_GetHCLKFreq+0x50>)
 8007f96:	699b      	ldr	r3, [r3, #24]
 8007f98:	0a1b      	lsrs	r3, r3, #8
 8007f9a:	f003 030f 	and.w	r3, r3, #15
 8007f9e:	490f      	ldr	r1, [pc, #60]	; (8007fdc <HAL_RCC_GetHCLKFreq+0x54>)
 8007fa0:	5ccb      	ldrb	r3, [r1, r3]
 8007fa2:	f003 031f 	and.w	r3, r3, #31
 8007fa6:	fa22 f303 	lsr.w	r3, r2, r3
 8007faa:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007fac:	4b0a      	ldr	r3, [pc, #40]	; (8007fd8 <HAL_RCC_GetHCLKFreq+0x50>)
 8007fae:	699b      	ldr	r3, [r3, #24]
 8007fb0:	f003 030f 	and.w	r3, r3, #15
 8007fb4:	4a09      	ldr	r2, [pc, #36]	; (8007fdc <HAL_RCC_GetHCLKFreq+0x54>)
 8007fb6:	5cd3      	ldrb	r3, [r2, r3]
 8007fb8:	f003 031f 	and.w	r3, r3, #31
 8007fbc:	687a      	ldr	r2, [r7, #4]
 8007fbe:	fa22 f303 	lsr.w	r3, r2, r3
 8007fc2:	4a07      	ldr	r2, [pc, #28]	; (8007fe0 <HAL_RCC_GetHCLKFreq+0x58>)
 8007fc4:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007fc6:	4a07      	ldr	r2, [pc, #28]	; (8007fe4 <HAL_RCC_GetHCLKFreq+0x5c>)
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8007fcc:	4b04      	ldr	r3, [pc, #16]	; (8007fe0 <HAL_RCC_GetHCLKFreq+0x58>)
 8007fce:	681b      	ldr	r3, [r3, #0]
}
 8007fd0:	4618      	mov	r0, r3
 8007fd2:	3708      	adds	r7, #8
 8007fd4:	46bd      	mov	sp, r7
 8007fd6:	bd80      	pop	{r7, pc}
 8007fd8:	58024400 	.word	0x58024400
 8007fdc:	08027c80 	.word	0x08027c80
 8007fe0:	24000008 	.word	0x24000008
 8007fe4:	24000004 	.word	0x24000004

08007fe8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007fe8:	b580      	push	{r7, lr}
 8007fea:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007fec:	f7ff ffcc 	bl	8007f88 <HAL_RCC_GetHCLKFreq>
 8007ff0:	4602      	mov	r2, r0
 8007ff2:	4b06      	ldr	r3, [pc, #24]	; (800800c <HAL_RCC_GetPCLK1Freq+0x24>)
 8007ff4:	69db      	ldr	r3, [r3, #28]
 8007ff6:	091b      	lsrs	r3, r3, #4
 8007ff8:	f003 0307 	and.w	r3, r3, #7
 8007ffc:	4904      	ldr	r1, [pc, #16]	; (8008010 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007ffe:	5ccb      	ldrb	r3, [r1, r3]
 8008000:	f003 031f 	and.w	r3, r3, #31
 8008004:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8008008:	4618      	mov	r0, r3
 800800a:	bd80      	pop	{r7, pc}
 800800c:	58024400 	.word	0x58024400
 8008010:	08027c80 	.word	0x08027c80

08008014 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8008014:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008018:	b0c6      	sub	sp, #280	; 0x118
 800801a:	af00      	add	r7, sp, #0
 800801c:	f8c7 0104 	str.w	r0, [r7, #260]	; 0x104
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8008020:	2300      	movs	r3, #0
 8008022:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8008026:	2300      	movs	r3, #0
 8008028:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800802c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008030:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008034:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8008038:	2500      	movs	r5, #0
 800803a:	ea54 0305 	orrs.w	r3, r4, r5
 800803e:	d049      	beq.n	80080d4 <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 8008040:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008044:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008046:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800804a:	d02f      	beq.n	80080ac <HAL_RCCEx_PeriphCLKConfig+0x98>
 800804c:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008050:	d828      	bhi.n	80080a4 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8008052:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008056:	d01a      	beq.n	800808e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8008058:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800805c:	d822      	bhi.n	80080a4 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800805e:	2b00      	cmp	r3, #0
 8008060:	d003      	beq.n	800806a <HAL_RCCEx_PeriphCLKConfig+0x56>
 8008062:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008066:	d007      	beq.n	8008078 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008068:	e01c      	b.n	80080a4 <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800806a:	4bab      	ldr	r3, [pc, #684]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800806c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800806e:	4aaa      	ldr	r2, [pc, #680]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8008070:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008074:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8008076:	e01a      	b.n	80080ae <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008078:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800807c:	3308      	adds	r3, #8
 800807e:	2102      	movs	r1, #2
 8008080:	4618      	mov	r0, r3
 8008082:	f002 fa49 	bl	800a518 <RCCEx_PLL2_Config>
 8008086:	4603      	mov	r3, r0
 8008088:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 800808c:	e00f      	b.n	80080ae <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800808e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008092:	3328      	adds	r3, #40	; 0x28
 8008094:	2102      	movs	r1, #2
 8008096:	4618      	mov	r0, r3
 8008098:	f002 faf0 	bl	800a67c <RCCEx_PLL3_Config>
 800809c:	4603      	mov	r3, r0
 800809e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 80080a2:	e004      	b.n	80080ae <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80080a4:	2301      	movs	r3, #1
 80080a6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80080aa:	e000      	b.n	80080ae <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 80080ac:	bf00      	nop
    }

    if (ret == HAL_OK)
 80080ae:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d10a      	bne.n	80080cc <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 80080b6:	4b98      	ldr	r3, [pc, #608]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80080b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80080ba:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 80080be:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080c2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80080c4:	4a94      	ldr	r2, [pc, #592]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80080c6:	430b      	orrs	r3, r1
 80080c8:	6513      	str	r3, [r2, #80]	; 0x50
 80080ca:	e003      	b.n	80080d4 <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80080cc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80080d0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 80080d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080dc:	f402 7880 	and.w	r8, r2, #256	; 0x100
 80080e0:	f04f 0900 	mov.w	r9, #0
 80080e4:	ea58 0309 	orrs.w	r3, r8, r9
 80080e8:	d047      	beq.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 80080ea:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080ee:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080f0:	2b04      	cmp	r3, #4
 80080f2:	d82a      	bhi.n	800814a <HAL_RCCEx_PeriphCLKConfig+0x136>
 80080f4:	a201      	add	r2, pc, #4	; (adr r2, 80080fc <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 80080f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80080fa:	bf00      	nop
 80080fc:	08008111 	.word	0x08008111
 8008100:	0800811f 	.word	0x0800811f
 8008104:	08008135 	.word	0x08008135
 8008108:	08008153 	.word	0x08008153
 800810c:	08008153 	.word	0x08008153
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008110:	4b81      	ldr	r3, [pc, #516]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8008112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008114:	4a80      	ldr	r2, [pc, #512]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8008116:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800811a:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 800811c:	e01a      	b.n	8008154 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800811e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008122:	3308      	adds	r3, #8
 8008124:	2100      	movs	r1, #0
 8008126:	4618      	mov	r0, r3
 8008128:	f002 f9f6 	bl	800a518 <RCCEx_PLL2_Config>
 800812c:	4603      	mov	r3, r0
 800812e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8008132:	e00f      	b.n	8008154 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008134:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008138:	3328      	adds	r3, #40	; 0x28
 800813a:	2100      	movs	r1, #0
 800813c:	4618      	mov	r0, r3
 800813e:	f002 fa9d 	bl	800a67c <RCCEx_PLL3_Config>
 8008142:	4603      	mov	r3, r0
 8008144:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8008148:	e004      	b.n	8008154 <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800814a:	2301      	movs	r3, #1
 800814c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008150:	e000      	b.n	8008154 <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 8008152:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008154:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008158:	2b00      	cmp	r3, #0
 800815a:	d10a      	bne.n	8008172 <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800815c:	4b6e      	ldr	r3, [pc, #440]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800815e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008160:	f023 0107 	bic.w	r1, r3, #7
 8008164:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008168:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800816a:	4a6b      	ldr	r2, [pc, #428]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800816c:	430b      	orrs	r3, r1
 800816e:	6513      	str	r3, [r2, #80]	; 0x50
 8008170:	e003      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008172:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008176:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 800817a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800817e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008182:	f402 6a80 	and.w	sl, r2, #1024	; 0x400
 8008186:	f04f 0b00 	mov.w	fp, #0
 800818a:	ea5a 030b 	orrs.w	r3, sl, fp
 800818e:	d05b      	beq.n	8008248 <HAL_RCCEx_PeriphCLKConfig+0x234>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8008190:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008194:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008198:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 800819c:	d03b      	beq.n	8008216 <HAL_RCCEx_PeriphCLKConfig+0x202>
 800819e:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 80081a2:	d834      	bhi.n	800820e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80081a4:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80081a8:	d037      	beq.n	800821a <HAL_RCCEx_PeriphCLKConfig+0x206>
 80081aa:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80081ae:	d82e      	bhi.n	800820e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80081b0:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80081b4:	d033      	beq.n	800821e <HAL_RCCEx_PeriphCLKConfig+0x20a>
 80081b6:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80081ba:	d828      	bhi.n	800820e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80081bc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80081c0:	d01a      	beq.n	80081f8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 80081c2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80081c6:	d822      	bhi.n	800820e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80081c8:	2b00      	cmp	r3, #0
 80081ca:	d003      	beq.n	80081d4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 80081cc:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80081d0:	d007      	beq.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 80081d2:	e01c      	b.n	800820e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80081d4:	4b50      	ldr	r3, [pc, #320]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80081d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081d8:	4a4f      	ldr	r2, [pc, #316]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80081da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80081de:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80081e0:	e01e      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80081e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081e6:	3308      	adds	r3, #8
 80081e8:	2100      	movs	r1, #0
 80081ea:	4618      	mov	r0, r3
 80081ec:	f002 f994 	bl	800a518 <RCCEx_PLL2_Config>
 80081f0:	4603      	mov	r3, r0
 80081f2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 80081f6:	e013      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80081f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081fc:	3328      	adds	r3, #40	; 0x28
 80081fe:	2100      	movs	r1, #0
 8008200:	4618      	mov	r0, r3
 8008202:	f002 fa3b 	bl	800a67c <RCCEx_PLL3_Config>
 8008206:	4603      	mov	r3, r0
 8008208:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 800820c:	e008      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 800820e:	2301      	movs	r3, #1
 8008210:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008214:	e004      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8008216:	bf00      	nop
 8008218:	e002      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 800821a:	bf00      	nop
 800821c:	e000      	b.n	8008220 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 800821e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008220:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008224:	2b00      	cmp	r3, #0
 8008226:	d10b      	bne.n	8008240 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8008228:	4b3b      	ldr	r3, [pc, #236]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800822a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800822c:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 8008230:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008234:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008238:	4a37      	ldr	r2, [pc, #220]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800823a:	430b      	orrs	r3, r1
 800823c:	6593      	str	r3, [r2, #88]	; 0x58
 800823e:	e003      	b.n	8008248 <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008240:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008244:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8008248:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800824c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008250:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 8008254:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8008258:	2300      	movs	r3, #0
 800825a:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800825e:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 8008262:	460b      	mov	r3, r1
 8008264:	4313      	orrs	r3, r2
 8008266:	d05d      	beq.n	8008324 <HAL_RCCEx_PeriphCLKConfig+0x310>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 8008268:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800826c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008270:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8008274:	d03b      	beq.n	80082ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8008276:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 800827a:	d834      	bhi.n	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800827c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008280:	d037      	beq.n	80082f2 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8008282:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008286:	d82e      	bhi.n	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8008288:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800828c:	d033      	beq.n	80082f6 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 800828e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008292:	d828      	bhi.n	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8008294:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008298:	d01a      	beq.n	80082d0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 800829a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800829e:	d822      	bhi.n	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 80082a0:	2b00      	cmp	r3, #0
 80082a2:	d003      	beq.n	80082ac <HAL_RCCEx_PeriphCLKConfig+0x298>
 80082a4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80082a8:	d007      	beq.n	80082ba <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 80082aa:	e01c      	b.n	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80082ac:	4b1a      	ldr	r3, [pc, #104]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80082ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082b0:	4a19      	ldr	r2, [pc, #100]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80082b2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80082b6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80082b8:	e01e      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80082ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082be:	3308      	adds	r3, #8
 80082c0:	2100      	movs	r1, #0
 80082c2:	4618      	mov	r0, r3
 80082c4:	f002 f928 	bl	800a518 <RCCEx_PLL2_Config>
 80082c8:	4603      	mov	r3, r0
 80082ca:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 80082ce:	e013      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80082d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082d4:	3328      	adds	r3, #40	; 0x28
 80082d6:	2100      	movs	r1, #0
 80082d8:	4618      	mov	r0, r3
 80082da:	f002 f9cf 	bl	800a67c <RCCEx_PLL3_Config>
 80082de:	4603      	mov	r3, r0
 80082e0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80082e4:	e008      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 80082e6:	2301      	movs	r3, #1
 80082e8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80082ec:	e004      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 80082ee:	bf00      	nop
 80082f0:	e002      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 80082f2:	bf00      	nop
 80082f4:	e000      	b.n	80082f8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 80082f6:	bf00      	nop
    }

    if (ret == HAL_OK)
 80082f8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80082fc:	2b00      	cmp	r3, #0
 80082fe:	d10d      	bne.n	800831c <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8008300:	4b05      	ldr	r3, [pc, #20]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8008302:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008304:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8008308:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800830c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008310:	4a01      	ldr	r2, [pc, #4]	; (8008318 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8008312:	430b      	orrs	r3, r1
 8008314:	6593      	str	r3, [r2, #88]	; 0x58
 8008316:	e005      	b.n	8008324 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8008318:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 800831c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008320:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*QUADSPI*/

#if defined(OCTOSPI1) || defined(OCTOSPI2)
  /*---------------------------- OCTOSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8008324:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008328:	e9d3 2300 	ldrd	r2, r3, [r3]
 800832c:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 8008330:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8008334:	2300      	movs	r3, #0
 8008336:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800833a:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 800833e:	460b      	mov	r3, r1
 8008340:	4313      	orrs	r3, r2
 8008342:	d03a      	beq.n	80083ba <HAL_RCCEx_PeriphCLKConfig+0x3a6>
  {
    switch (PeriphClkInit->OspiClockSelection)
 8008344:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800834a:	2b30      	cmp	r3, #48	; 0x30
 800834c:	d01f      	beq.n	800838e <HAL_RCCEx_PeriphCLKConfig+0x37a>
 800834e:	2b30      	cmp	r3, #48	; 0x30
 8008350:	d819      	bhi.n	8008386 <HAL_RCCEx_PeriphCLKConfig+0x372>
 8008352:	2b20      	cmp	r3, #32
 8008354:	d00c      	beq.n	8008370 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8008356:	2b20      	cmp	r3, #32
 8008358:	d815      	bhi.n	8008386 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800835a:	2b00      	cmp	r3, #0
 800835c:	d019      	beq.n	8008392 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 800835e:	2b10      	cmp	r3, #16
 8008360:	d111      	bne.n	8008386 <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      case RCC_OSPICLKSOURCE_PLL:      /* PLL is used as clock source for OSPI*/
        /* Enable OSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008362:	4baa      	ldr	r3, [pc, #680]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008364:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008366:	4aa9      	ldr	r2, [pc, #676]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008368:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800836c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* OSPI clock source configuration done later after clock selection check */
        break;
 800836e:	e011      	b.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0x380>

      case RCC_OSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for OSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008370:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008374:	3308      	adds	r3, #8
 8008376:	2102      	movs	r1, #2
 8008378:	4618      	mov	r0, r3
 800837a:	f002 f8cd 	bl	800a518 <RCCEx_PLL2_Config>
 800837e:	4603      	mov	r3, r0
 8008380:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8008384:	e006      	b.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0x380>
      case RCC_OSPICLKSOURCE_HCLK:
        /* HCLK clock selected as OSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8008386:	2301      	movs	r3, #1
 8008388:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800838c:	e002      	b.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 800838e:	bf00      	nop
 8008390:	e000      	b.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8008392:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008394:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008398:	2b00      	cmp	r3, #0
 800839a:	d10a      	bne.n	80083b2 <HAL_RCCEx_PeriphCLKConfig+0x39e>
    {
      /* Set the source of OSPI clock*/
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 800839c:	4b9b      	ldr	r3, [pc, #620]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800839e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083a0:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 80083a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083aa:	4a98      	ldr	r2, [pc, #608]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80083ac:	430b      	orrs	r3, r1
 80083ae:	64d3      	str	r3, [r2, #76]	; 0x4c
 80083b0:	e003      	b.n	80083ba <HAL_RCCEx_PeriphCLKConfig+0x3a6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80083b2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80083b6:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 80083ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80083c2:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 80083c6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80083ca:	2300      	movs	r3, #0
 80083cc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80083d0:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 80083d4:	460b      	mov	r3, r1
 80083d6:	4313      	orrs	r3, r2
 80083d8:	d051      	beq.n	800847e <HAL_RCCEx_PeriphCLKConfig+0x46a>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 80083da:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80083e0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80083e4:	d035      	beq.n	8008452 <HAL_RCCEx_PeriphCLKConfig+0x43e>
 80083e6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80083ea:	d82e      	bhi.n	800844a <HAL_RCCEx_PeriphCLKConfig+0x436>
 80083ec:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80083f0:	d031      	beq.n	8008456 <HAL_RCCEx_PeriphCLKConfig+0x442>
 80083f2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80083f6:	d828      	bhi.n	800844a <HAL_RCCEx_PeriphCLKConfig+0x436>
 80083f8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80083fc:	d01a      	beq.n	8008434 <HAL_RCCEx_PeriphCLKConfig+0x420>
 80083fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008402:	d822      	bhi.n	800844a <HAL_RCCEx_PeriphCLKConfig+0x436>
 8008404:	2b00      	cmp	r3, #0
 8008406:	d003      	beq.n	8008410 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8008408:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800840c:	d007      	beq.n	800841e <HAL_RCCEx_PeriphCLKConfig+0x40a>
 800840e:	e01c      	b.n	800844a <HAL_RCCEx_PeriphCLKConfig+0x436>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008410:	4b7e      	ldr	r3, [pc, #504]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008412:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008414:	4a7d      	ldr	r2, [pc, #500]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008416:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800841a:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 800841c:	e01c      	b.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800841e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008422:	3308      	adds	r3, #8
 8008424:	2100      	movs	r1, #0
 8008426:	4618      	mov	r0, r3
 8008428:	f002 f876 	bl	800a518 <RCCEx_PLL2_Config>
 800842c:	4603      	mov	r3, r0
 800842e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008432:	e011      	b.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008434:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008438:	3328      	adds	r3, #40	; 0x28
 800843a:	2100      	movs	r1, #0
 800843c:	4618      	mov	r0, r3
 800843e:	f002 f91d 	bl	800a67c <RCCEx_PLL3_Config>
 8008442:	4603      	mov	r3, r0
 8008444:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008448:	e006      	b.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x444>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800844a:	2301      	movs	r3, #1
 800844c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008450:	e002      	b.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8008452:	bf00      	nop
 8008454:	e000      	b.n	8008458 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8008456:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008458:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800845c:	2b00      	cmp	r3, #0
 800845e:	d10a      	bne.n	8008476 <HAL_RCCEx_PeriphCLKConfig+0x462>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8008460:	4b6a      	ldr	r3, [pc, #424]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008462:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008464:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 8008468:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800846c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800846e:	4a67      	ldr	r2, [pc, #412]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008470:	430b      	orrs	r3, r1
 8008472:	6513      	str	r3, [r2, #80]	; 0x50
 8008474:	e003      	b.n	800847e <HAL_RCCEx_PeriphCLKConfig+0x46a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008476:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800847a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 800847e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008482:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008486:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 800848a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800848e:	2300      	movs	r3, #0
 8008490:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8008494:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 8008498:	460b      	mov	r3, r1
 800849a:	4313      	orrs	r3, r2
 800849c:	d053      	beq.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x532>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 800849e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80084a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80084a4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80084a8:	d033      	beq.n	8008512 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80084aa:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80084ae:	d82c      	bhi.n	800850a <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80084b0:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80084b4:	d02f      	beq.n	8008516 <HAL_RCCEx_PeriphCLKConfig+0x502>
 80084b6:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80084ba:	d826      	bhi.n	800850a <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80084bc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80084c0:	d02b      	beq.n	800851a <HAL_RCCEx_PeriphCLKConfig+0x506>
 80084c2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80084c6:	d820      	bhi.n	800850a <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80084c8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80084cc:	d012      	beq.n	80084f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80084ce:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80084d2:	d81a      	bhi.n	800850a <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80084d4:	2b00      	cmp	r3, #0
 80084d6:	d022      	beq.n	800851e <HAL_RCCEx_PeriphCLKConfig+0x50a>
 80084d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80084dc:	d115      	bne.n	800850a <HAL_RCCEx_PeriphCLKConfig+0x4f6>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80084de:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80084e2:	3308      	adds	r3, #8
 80084e4:	2101      	movs	r1, #1
 80084e6:	4618      	mov	r0, r3
 80084e8:	f002 f816 	bl	800a518 <RCCEx_PLL2_Config>
 80084ec:	4603      	mov	r3, r0
 80084ee:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 80084f2:	e015      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80084f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80084f8:	3328      	adds	r3, #40	; 0x28
 80084fa:	2101      	movs	r1, #1
 80084fc:	4618      	mov	r0, r3
 80084fe:	f002 f8bd 	bl	800a67c <RCCEx_PLL3_Config>
 8008502:	4603      	mov	r3, r0
 8008504:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8008508:	e00a      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800850a:	2301      	movs	r3, #1
 800850c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008510:	e006      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008512:	bf00      	nop
 8008514:	e004      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008516:	bf00      	nop
 8008518:	e002      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800851a:	bf00      	nop
 800851c:	e000      	b.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800851e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008520:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008524:	2b00      	cmp	r3, #0
 8008526:	d10a      	bne.n	800853e <HAL_RCCEx_PeriphCLKConfig+0x52a>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008528:	4b38      	ldr	r3, [pc, #224]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800852a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800852c:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 8008530:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008534:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008536:	4a35      	ldr	r2, [pc, #212]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008538:	430b      	orrs	r3, r1
 800853a:	6513      	str	r3, [r2, #80]	; 0x50
 800853c:	e003      	b.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x532>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800853e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008542:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8008546:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800854a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800854e:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 8008552:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8008556:	2300      	movs	r3, #0
 8008558:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800855c:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8008560:	460b      	mov	r3, r1
 8008562:	4313      	orrs	r3, r2
 8008564:	d058      	beq.n	8008618 <HAL_RCCEx_PeriphCLKConfig+0x604>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 8008566:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800856a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800856e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008572:	d033      	beq.n	80085dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8008574:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008578:	d82c      	bhi.n	80085d4 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800857a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800857e:	d02f      	beq.n	80085e0 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8008580:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008584:	d826      	bhi.n	80085d4 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008586:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800858a:	d02b      	beq.n	80085e4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 800858c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008590:	d820      	bhi.n	80085d4 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008592:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008596:	d012      	beq.n	80085be <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8008598:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800859c:	d81a      	bhi.n	80085d4 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d022      	beq.n	80085e8 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 80085a2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80085a6:	d115      	bne.n	80085d4 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80085a8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085ac:	3308      	adds	r3, #8
 80085ae:	2101      	movs	r1, #1
 80085b0:	4618      	mov	r0, r3
 80085b2:	f001 ffb1 	bl	800a518 <RCCEx_PLL2_Config>
 80085b6:	4603      	mov	r3, r0
 80085b8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80085bc:	e015      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80085be:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085c2:	3328      	adds	r3, #40	; 0x28
 80085c4:	2101      	movs	r1, #1
 80085c6:	4618      	mov	r0, r3
 80085c8:	f002 f858 	bl	800a67c <RCCEx_PLL3_Config>
 80085cc:	4603      	mov	r3, r0
 80085ce:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80085d2:	e00a      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 80085d4:	2301      	movs	r3, #1
 80085d6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80085da:	e006      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80085dc:	bf00      	nop
 80085de:	e004      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80085e0:	bf00      	nop
 80085e2:	e002      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80085e4:	bf00      	nop
 80085e6:	e000      	b.n	80085ea <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80085e8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80085ea:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80085ee:	2b00      	cmp	r3, #0
 80085f0:	d10e      	bne.n	8008610 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 80085f2:	4b06      	ldr	r3, [pc, #24]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80085f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80085f6:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80085fa:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085fe:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008602:	4a02      	ldr	r2, [pc, #8]	; (800860c <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008604:	430b      	orrs	r3, r1
 8008606:	6593      	str	r3, [r2, #88]	; 0x58
 8008608:	e006      	b.n	8008618 <HAL_RCCEx_PeriphCLKConfig+0x604>
 800860a:	bf00      	nop
 800860c:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008610:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008614:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8008618:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800861c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008620:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 8008624:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8008628:	2300      	movs	r3, #0
 800862a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800862e:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 8008632:	460b      	mov	r3, r1
 8008634:	4313      	orrs	r3, r2
 8008636:	d037      	beq.n	80086a8 <HAL_RCCEx_PeriphCLKConfig+0x694>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8008638:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800863c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800863e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008642:	d00e      	beq.n	8008662 <HAL_RCCEx_PeriphCLKConfig+0x64e>
 8008644:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008648:	d816      	bhi.n	8008678 <HAL_RCCEx_PeriphCLKConfig+0x664>
 800864a:	2b00      	cmp	r3, #0
 800864c:	d018      	beq.n	8008680 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 800864e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008652:	d111      	bne.n	8008678 <HAL_RCCEx_PeriphCLKConfig+0x664>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008654:	4bc4      	ldr	r3, [pc, #784]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008656:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008658:	4ac3      	ldr	r2, [pc, #780]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800865a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800865e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8008660:	e00f      	b.n	8008682 <HAL_RCCEx_PeriphCLKConfig+0x66e>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008662:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008666:	3308      	adds	r3, #8
 8008668:	2101      	movs	r1, #1
 800866a:	4618      	mov	r0, r3
 800866c:	f001 ff54 	bl	800a518 <RCCEx_PLL2_Config>
 8008670:	4603      	mov	r3, r0
 8008672:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8008676:	e004      	b.n	8008682 <HAL_RCCEx_PeriphCLKConfig+0x66e>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008678:	2301      	movs	r3, #1
 800867a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800867e:	e000      	b.n	8008682 <HAL_RCCEx_PeriphCLKConfig+0x66e>
        break;
 8008680:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008682:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008686:	2b00      	cmp	r3, #0
 8008688:	d10a      	bne.n	80086a0 <HAL_RCCEx_PeriphCLKConfig+0x68c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 800868a:	4bb7      	ldr	r3, [pc, #732]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800868c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800868e:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8008692:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008696:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008698:	4ab3      	ldr	r2, [pc, #716]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800869a:	430b      	orrs	r3, r1
 800869c:	6513      	str	r3, [r2, #80]	; 0x50
 800869e:	e003      	b.n	80086a8 <HAL_RCCEx_PeriphCLKConfig+0x694>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80086a0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80086a4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80086a8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086b0:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 80086b4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80086b8:	2300      	movs	r3, #0
 80086ba:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80086be:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 80086c2:	460b      	mov	r3, r1
 80086c4:	4313      	orrs	r3, r2
 80086c6:	d039      	beq.n	800873c <HAL_RCCEx_PeriphCLKConfig+0x728>
  {
    switch (PeriphClkInit->FmcClockSelection)
 80086c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80086ce:	2b03      	cmp	r3, #3
 80086d0:	d81c      	bhi.n	800870c <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 80086d2:	a201      	add	r2, pc, #4	; (adr r2, 80086d8 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 80086d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80086d8:	08008715 	.word	0x08008715
 80086dc:	080086e9 	.word	0x080086e9
 80086e0:	080086f7 	.word	0x080086f7
 80086e4:	08008715 	.word	0x08008715
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80086e8:	4b9f      	ldr	r3, [pc, #636]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80086ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086ec:	4a9e      	ldr	r2, [pc, #632]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80086ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80086f2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 80086f4:	e00f      	b.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0x702>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80086f6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086fa:	3308      	adds	r3, #8
 80086fc:	2102      	movs	r1, #2
 80086fe:	4618      	mov	r0, r3
 8008700:	f001 ff0a 	bl	800a518 <RCCEx_PLL2_Config>
 8008704:	4603      	mov	r3, r0
 8008706:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FMC clock source configuration done later after clock selection check */
        break;
 800870a:	e004      	b.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0x702>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 800870c:	2301      	movs	r3, #1
 800870e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008712:	e000      	b.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0x702>
        break;
 8008714:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008716:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800871a:	2b00      	cmp	r3, #0
 800871c:	d10a      	bne.n	8008734 <HAL_RCCEx_PeriphCLKConfig+0x720>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 800871e:	4b92      	ldr	r3, [pc, #584]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008720:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008722:	f023 0103 	bic.w	r1, r3, #3
 8008726:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800872a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800872c:	4a8e      	ldr	r2, [pc, #568]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800872e:	430b      	orrs	r3, r1
 8008730:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008732:	e003      	b.n	800873c <HAL_RCCEx_PeriphCLKConfig+0x728>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008734:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008738:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 800873c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008740:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008744:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 8008748:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800874c:	2300      	movs	r3, #0
 800874e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8008752:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8008756:	460b      	mov	r3, r1
 8008758:	4313      	orrs	r3, r2
 800875a:	f000 8099 	beq.w	8008890 <HAL_RCCEx_PeriphCLKConfig+0x87c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800875e:	4b83      	ldr	r3, [pc, #524]	; (800896c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	4a82      	ldr	r2, [pc, #520]	; (800896c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008764:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008768:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 800876a:	f7f9 fb71 	bl	8001e50 <HAL_GetTick>
 800876e:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008772:	e00b      	b.n	800878c <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008774:	f7f9 fb6c 	bl	8001e50 <HAL_GetTick>
 8008778:	4602      	mov	r2, r0
 800877a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800877e:	1ad3      	subs	r3, r2, r3
 8008780:	2b64      	cmp	r3, #100	; 0x64
 8008782:	d903      	bls.n	800878c <HAL_RCCEx_PeriphCLKConfig+0x778>
      {
        ret = HAL_TIMEOUT;
 8008784:	2303      	movs	r3, #3
 8008786:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800878a:	e005      	b.n	8008798 <HAL_RCCEx_PeriphCLKConfig+0x784>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 800878c:	4b77      	ldr	r3, [pc, #476]	; (800896c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800878e:	681b      	ldr	r3, [r3, #0]
 8008790:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008794:	2b00      	cmp	r3, #0
 8008796:	d0ed      	beq.n	8008774 <HAL_RCCEx_PeriphCLKConfig+0x760>
      }
    }

    if (ret == HAL_OK)
 8008798:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800879c:	2b00      	cmp	r3, #0
 800879e:	d173      	bne.n	8008888 <HAL_RCCEx_PeriphCLKConfig+0x874>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 80087a0:	4b71      	ldr	r3, [pc, #452]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087a2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80087a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087a8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80087ac:	4053      	eors	r3, r2
 80087ae:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80087b2:	2b00      	cmp	r3, #0
 80087b4:	d015      	beq.n	80087e2 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80087b6:	4b6c      	ldr	r3, [pc, #432]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80087be:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80087c2:	4b69      	ldr	r3, [pc, #420]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087c6:	4a68      	ldr	r2, [pc, #416]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80087cc:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80087ce:	4b66      	ldr	r3, [pc, #408]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087d2:	4a65      	ldr	r2, [pc, #404]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087d4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80087d8:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 80087da:	4a63      	ldr	r2, [pc, #396]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80087dc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80087e0:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80087e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087e6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80087ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80087ee:	d118      	bne.n	8008822 <HAL_RCCEx_PeriphCLKConfig+0x80e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80087f0:	f7f9 fb2e 	bl	8001e50 <HAL_GetTick>
 80087f4:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80087f8:	e00d      	b.n	8008816 <HAL_RCCEx_PeriphCLKConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80087fa:	f7f9 fb29 	bl	8001e50 <HAL_GetTick>
 80087fe:	4602      	mov	r2, r0
 8008800:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8008804:	1ad2      	subs	r2, r2, r3
 8008806:	f241 3388 	movw	r3, #5000	; 0x1388
 800880a:	429a      	cmp	r2, r3
 800880c:	d903      	bls.n	8008816 <HAL_RCCEx_PeriphCLKConfig+0x802>
          {
            ret = HAL_TIMEOUT;
 800880e:	2303      	movs	r3, #3
 8008810:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
            break;
 8008814:	e005      	b.n	8008822 <HAL_RCCEx_PeriphCLKConfig+0x80e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008816:	4b54      	ldr	r3, [pc, #336]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008818:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800881a:	f003 0302 	and.w	r3, r3, #2
 800881e:	2b00      	cmp	r3, #0
 8008820:	d0eb      	beq.n	80087fa <HAL_RCCEx_PeriphCLKConfig+0x7e6>
          }
        }
      }

      if (ret == HAL_OK)
 8008822:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008826:	2b00      	cmp	r3, #0
 8008828:	d129      	bne.n	800887e <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800882a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800882e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008832:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008836:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800883a:	d10e      	bne.n	800885a <HAL_RCCEx_PeriphCLKConfig+0x846>
 800883c:	4b4a      	ldr	r3, [pc, #296]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800883e:	691b      	ldr	r3, [r3, #16]
 8008840:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 8008844:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008848:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800884c:	091a      	lsrs	r2, r3, #4
 800884e:	4b48      	ldr	r3, [pc, #288]	; (8008970 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 8008850:	4013      	ands	r3, r2
 8008852:	4a45      	ldr	r2, [pc, #276]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008854:	430b      	orrs	r3, r1
 8008856:	6113      	str	r3, [r2, #16]
 8008858:	e005      	b.n	8008866 <HAL_RCCEx_PeriphCLKConfig+0x852>
 800885a:	4b43      	ldr	r3, [pc, #268]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800885c:	691b      	ldr	r3, [r3, #16]
 800885e:	4a42      	ldr	r2, [pc, #264]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008860:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8008864:	6113      	str	r3, [r2, #16]
 8008866:	4b40      	ldr	r3, [pc, #256]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008868:	6f19      	ldr	r1, [r3, #112]	; 0x70
 800886a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800886e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008872:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008876:	4a3c      	ldr	r2, [pc, #240]	; (8008968 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008878:	430b      	orrs	r3, r1
 800887a:	6713      	str	r3, [r2, #112]	; 0x70
 800887c:	e008      	b.n	8008890 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 800887e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008882:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 8008886:	e003      	b.n	8008890 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008888:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800888c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8008890:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008894:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008898:	f002 0301 	and.w	r3, r2, #1
 800889c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80088a0:	2300      	movs	r3, #0
 80088a2:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 80088a6:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 80088aa:	460b      	mov	r3, r1
 80088ac:	4313      	orrs	r3, r2
 80088ae:	f000 808f 	beq.w	80089d0 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 80088b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80088b6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80088b8:	2b28      	cmp	r3, #40	; 0x28
 80088ba:	d871      	bhi.n	80089a0 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 80088bc:	a201      	add	r2, pc, #4	; (adr r2, 80088c4 <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 80088be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80088c2:	bf00      	nop
 80088c4:	080089a9 	.word	0x080089a9
 80088c8:	080089a1 	.word	0x080089a1
 80088cc:	080089a1 	.word	0x080089a1
 80088d0:	080089a1 	.word	0x080089a1
 80088d4:	080089a1 	.word	0x080089a1
 80088d8:	080089a1 	.word	0x080089a1
 80088dc:	080089a1 	.word	0x080089a1
 80088e0:	080089a1 	.word	0x080089a1
 80088e4:	08008975 	.word	0x08008975
 80088e8:	080089a1 	.word	0x080089a1
 80088ec:	080089a1 	.word	0x080089a1
 80088f0:	080089a1 	.word	0x080089a1
 80088f4:	080089a1 	.word	0x080089a1
 80088f8:	080089a1 	.word	0x080089a1
 80088fc:	080089a1 	.word	0x080089a1
 8008900:	080089a1 	.word	0x080089a1
 8008904:	0800898b 	.word	0x0800898b
 8008908:	080089a1 	.word	0x080089a1
 800890c:	080089a1 	.word	0x080089a1
 8008910:	080089a1 	.word	0x080089a1
 8008914:	080089a1 	.word	0x080089a1
 8008918:	080089a1 	.word	0x080089a1
 800891c:	080089a1 	.word	0x080089a1
 8008920:	080089a1 	.word	0x080089a1
 8008924:	080089a9 	.word	0x080089a9
 8008928:	080089a1 	.word	0x080089a1
 800892c:	080089a1 	.word	0x080089a1
 8008930:	080089a1 	.word	0x080089a1
 8008934:	080089a1 	.word	0x080089a1
 8008938:	080089a1 	.word	0x080089a1
 800893c:	080089a1 	.word	0x080089a1
 8008940:	080089a1 	.word	0x080089a1
 8008944:	080089a9 	.word	0x080089a9
 8008948:	080089a1 	.word	0x080089a1
 800894c:	080089a1 	.word	0x080089a1
 8008950:	080089a1 	.word	0x080089a1
 8008954:	080089a1 	.word	0x080089a1
 8008958:	080089a1 	.word	0x080089a1
 800895c:	080089a1 	.word	0x080089a1
 8008960:	080089a1 	.word	0x080089a1
 8008964:	080089a9 	.word	0x080089a9
 8008968:	58024400 	.word	0x58024400
 800896c:	58024800 	.word	0x58024800
 8008970:	00ffffcf 	.word	0x00ffffcf
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008974:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008978:	3308      	adds	r3, #8
 800897a:	2101      	movs	r1, #1
 800897c:	4618      	mov	r0, r3
 800897e:	f001 fdcb 	bl	800a518 <RCCEx_PLL2_Config>
 8008982:	4603      	mov	r3, r0
 8008984:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008988:	e00f      	b.n	80089aa <HAL_RCCEx_PeriphCLKConfig+0x996>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800898a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800898e:	3328      	adds	r3, #40	; 0x28
 8008990:	2101      	movs	r1, #1
 8008992:	4618      	mov	r0, r3
 8008994:	f001 fe72 	bl	800a67c <RCCEx_PLL3_Config>
 8008998:	4603      	mov	r3, r0
 800899a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 800899e:	e004      	b.n	80089aa <HAL_RCCEx_PeriphCLKConfig+0x996>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80089a0:	2301      	movs	r3, #1
 80089a2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80089a6:	e000      	b.n	80089aa <HAL_RCCEx_PeriphCLKConfig+0x996>
        break;
 80089a8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80089aa:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80089ae:	2b00      	cmp	r3, #0
 80089b0:	d10a      	bne.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80089b2:	4bbf      	ldr	r3, [pc, #764]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80089b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80089b6:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 80089ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089be:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80089c0:	4abb      	ldr	r2, [pc, #748]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80089c2:	430b      	orrs	r3, r1
 80089c4:	6553      	str	r3, [r2, #84]	; 0x54
 80089c6:	e003      	b.n	80089d0 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80089c8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80089cc:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 80089d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089d8:	f002 0302 	and.w	r3, r2, #2
 80089dc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80089e0:	2300      	movs	r3, #0
 80089e2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80089e6:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 80089ea:	460b      	mov	r3, r1
 80089ec:	4313      	orrs	r3, r2
 80089ee:	d041      	beq.n	8008a74 <HAL_RCCEx_PeriphCLKConfig+0xa60>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 80089f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80089f6:	2b05      	cmp	r3, #5
 80089f8:	d824      	bhi.n	8008a44 <HAL_RCCEx_PeriphCLKConfig+0xa30>
 80089fa:	a201      	add	r2, pc, #4	; (adr r2, 8008a00 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 80089fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008a00:	08008a4d 	.word	0x08008a4d
 8008a04:	08008a19 	.word	0x08008a19
 8008a08:	08008a2f 	.word	0x08008a2f
 8008a0c:	08008a4d 	.word	0x08008a4d
 8008a10:	08008a4d 	.word	0x08008a4d
 8008a14:	08008a4d 	.word	0x08008a4d
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008a18:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a1c:	3308      	adds	r3, #8
 8008a1e:	2101      	movs	r1, #1
 8008a20:	4618      	mov	r0, r3
 8008a22:	f001 fd79 	bl	800a518 <RCCEx_PLL2_Config>
 8008a26:	4603      	mov	r3, r0
 8008a28:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008a2c:	e00f      	b.n	8008a4e <HAL_RCCEx_PeriphCLKConfig+0xa3a>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008a2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a32:	3328      	adds	r3, #40	; 0x28
 8008a34:	2101      	movs	r1, #1
 8008a36:	4618      	mov	r0, r3
 8008a38:	f001 fe20 	bl	800a67c <RCCEx_PLL3_Config>
 8008a3c:	4603      	mov	r3, r0
 8008a3e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008a42:	e004      	b.n	8008a4e <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008a44:	2301      	movs	r3, #1
 8008a46:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008a4a:	e000      	b.n	8008a4e <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        break;
 8008a4c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008a4e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008a52:	2b00      	cmp	r3, #0
 8008a54:	d10a      	bne.n	8008a6c <HAL_RCCEx_PeriphCLKConfig+0xa58>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8008a56:	4b96      	ldr	r3, [pc, #600]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008a58:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008a5a:	f023 0107 	bic.w	r1, r3, #7
 8008a5e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a62:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008a64:	4a92      	ldr	r2, [pc, #584]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008a66:	430b      	orrs	r3, r1
 8008a68:	6553      	str	r3, [r2, #84]	; 0x54
 8008a6a:	e003      	b.n	8008a74 <HAL_RCCEx_PeriphCLKConfig+0xa60>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008a6c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008a70:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8008a74:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a7c:	f002 0304 	and.w	r3, r2, #4
 8008a80:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008a84:	2300      	movs	r3, #0
 8008a86:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008a8a:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8008a8e:	460b      	mov	r3, r1
 8008a90:	4313      	orrs	r3, r2
 8008a92:	d044      	beq.n	8008b1e <HAL_RCCEx_PeriphCLKConfig+0xb0a>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8008a94:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a98:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a9c:	2b05      	cmp	r3, #5
 8008a9e:	d825      	bhi.n	8008aec <HAL_RCCEx_PeriphCLKConfig+0xad8>
 8008aa0:	a201      	add	r2, pc, #4	; (adr r2, 8008aa8 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 8008aa2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008aa6:	bf00      	nop
 8008aa8:	08008af5 	.word	0x08008af5
 8008aac:	08008ac1 	.word	0x08008ac1
 8008ab0:	08008ad7 	.word	0x08008ad7
 8008ab4:	08008af5 	.word	0x08008af5
 8008ab8:	08008af5 	.word	0x08008af5
 8008abc:	08008af5 	.word	0x08008af5
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008ac0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ac4:	3308      	adds	r3, #8
 8008ac6:	2101      	movs	r1, #1
 8008ac8:	4618      	mov	r0, r3
 8008aca:	f001 fd25 	bl	800a518 <RCCEx_PLL2_Config>
 8008ace:	4603      	mov	r3, r0
 8008ad0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8008ad4:	e00f      	b.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0xae2>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008ad6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ada:	3328      	adds	r3, #40	; 0x28
 8008adc:	2101      	movs	r1, #1
 8008ade:	4618      	mov	r0, r3
 8008ae0:	f001 fdcc 	bl	800a67c <RCCEx_PLL3_Config>
 8008ae4:	4603      	mov	r3, r0
 8008ae6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8008aea:	e004      	b.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0xae2>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008aec:	2301      	movs	r3, #1
 8008aee:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008af2:	e000      	b.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0xae2>
        break;
 8008af4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008af6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008afa:	2b00      	cmp	r3, #0
 8008afc:	d10b      	bne.n	8008b16 <HAL_RCCEx_PeriphCLKConfig+0xb02>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008afe:	4b6c      	ldr	r3, [pc, #432]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008b00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008b02:	f023 0107 	bic.w	r1, r3, #7
 8008b06:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b0a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008b0e:	4a68      	ldr	r2, [pc, #416]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008b10:	430b      	orrs	r3, r1
 8008b12:	6593      	str	r3, [r2, #88]	; 0x58
 8008b14:	e003      	b.n	8008b1e <HAL_RCCEx_PeriphCLKConfig+0xb0a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008b16:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008b1a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008b1e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b26:	f002 0320 	and.w	r3, r2, #32
 8008b2a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008b2e:	2300      	movs	r3, #0
 8008b30:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8008b34:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8008b38:	460b      	mov	r3, r1
 8008b3a:	4313      	orrs	r3, r2
 8008b3c:	d055      	beq.n	8008bea <HAL_RCCEx_PeriphCLKConfig+0xbd6>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 8008b3e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b42:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008b46:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008b4a:	d033      	beq.n	8008bb4 <HAL_RCCEx_PeriphCLKConfig+0xba0>
 8008b4c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008b50:	d82c      	bhi.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008b52:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b56:	d02f      	beq.n	8008bb8 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 8008b58:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b5c:	d826      	bhi.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008b5e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008b62:	d02b      	beq.n	8008bbc <HAL_RCCEx_PeriphCLKConfig+0xba8>
 8008b64:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008b68:	d820      	bhi.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008b6a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008b6e:	d012      	beq.n	8008b96 <HAL_RCCEx_PeriphCLKConfig+0xb82>
 8008b70:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008b74:	d81a      	bhi.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008b76:	2b00      	cmp	r3, #0
 8008b78:	d022      	beq.n	8008bc0 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 8008b7a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008b7e:	d115      	bne.n	8008bac <HAL_RCCEx_PeriphCLKConfig+0xb98>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008b80:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b84:	3308      	adds	r3, #8
 8008b86:	2100      	movs	r1, #0
 8008b88:	4618      	mov	r0, r3
 8008b8a:	f001 fcc5 	bl	800a518 <RCCEx_PLL2_Config>
 8008b8e:	4603      	mov	r3, r0
 8008b90:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8008b94:	e015      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008b96:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b9a:	3328      	adds	r3, #40	; 0x28
 8008b9c:	2102      	movs	r1, #2
 8008b9e:	4618      	mov	r0, r3
 8008ba0:	f001 fd6c 	bl	800a67c <RCCEx_PLL3_Config>
 8008ba4:	4603      	mov	r3, r0
 8008ba6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8008baa:	e00a      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008bac:	2301      	movs	r3, #1
 8008bae:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008bb2:	e006      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008bb4:	bf00      	nop
 8008bb6:	e004      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008bb8:	bf00      	nop
 8008bba:	e002      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008bbc:	bf00      	nop
 8008bbe:	e000      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008bc0:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008bc2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008bc6:	2b00      	cmp	r3, #0
 8008bc8:	d10b      	bne.n	8008be2 <HAL_RCCEx_PeriphCLKConfig+0xbce>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8008bca:	4b39      	ldr	r3, [pc, #228]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008bcc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008bce:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 8008bd2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bd6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008bda:	4a35      	ldr	r2, [pc, #212]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008bdc:	430b      	orrs	r3, r1
 8008bde:	6553      	str	r3, [r2, #84]	; 0x54
 8008be0:	e003      	b.n	8008bea <HAL_RCCEx_PeriphCLKConfig+0xbd6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008be2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008be6:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8008bea:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bf2:	f002 0340 	and.w	r3, r2, #64	; 0x40
 8008bf6:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008bfa:	2300      	movs	r3, #0
 8008bfc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8008c00:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 8008c04:	460b      	mov	r3, r1
 8008c06:	4313      	orrs	r3, r2
 8008c08:	d058      	beq.n	8008cbc <HAL_RCCEx_PeriphCLKConfig+0xca8>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8008c0a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c0e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008c12:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008c16:	d033      	beq.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 8008c18:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008c1c:	d82c      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008c1e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008c22:	d02f      	beq.n	8008c84 <HAL_RCCEx_PeriphCLKConfig+0xc70>
 8008c24:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008c28:	d826      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008c2a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008c2e:	d02b      	beq.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 8008c30:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008c34:	d820      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008c36:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008c3a:	d012      	beq.n	8008c62 <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 8008c3c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008c40:	d81a      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008c42:	2b00      	cmp	r3, #0
 8008c44:	d022      	beq.n	8008c8c <HAL_RCCEx_PeriphCLKConfig+0xc78>
 8008c46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008c4a:	d115      	bne.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0xc64>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008c4c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c50:	3308      	adds	r3, #8
 8008c52:	2100      	movs	r1, #0
 8008c54:	4618      	mov	r0, r3
 8008c56:	f001 fc5f 	bl	800a518 <RCCEx_PLL2_Config>
 8008c5a:	4603      	mov	r3, r0
 8008c5c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008c60:	e015      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008c62:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c66:	3328      	adds	r3, #40	; 0x28
 8008c68:	2102      	movs	r1, #2
 8008c6a:	4618      	mov	r0, r3
 8008c6c:	f001 fd06 	bl	800a67c <RCCEx_PLL3_Config>
 8008c70:	4603      	mov	r3, r0
 8008c72:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008c76:	e00a      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008c78:	2301      	movs	r3, #1
 8008c7a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008c7e:	e006      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008c80:	bf00      	nop
 8008c82:	e004      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008c84:	bf00      	nop
 8008c86:	e002      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008c88:	bf00      	nop
 8008c8a:	e000      	b.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008c8c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008c8e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	d10e      	bne.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xca0>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8008c96:	4b06      	ldr	r3, [pc, #24]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008c98:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008c9a:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 8008c9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ca2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008ca6:	4a02      	ldr	r2, [pc, #8]	; (8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008ca8:	430b      	orrs	r3, r1
 8008caa:	6593      	str	r3, [r2, #88]	; 0x58
 8008cac:	e006      	b.n	8008cbc <HAL_RCCEx_PeriphCLKConfig+0xca8>
 8008cae:	bf00      	nop
 8008cb0:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008cb4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008cb8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8008cbc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008cc4:	f002 0380 	and.w	r3, r2, #128	; 0x80
 8008cc8:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8008ccc:	2300      	movs	r3, #0
 8008cce:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8008cd2:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 8008cd6:	460b      	mov	r3, r1
 8008cd8:	4313      	orrs	r3, r2
 8008cda:	d055      	beq.n	8008d88 <HAL_RCCEx_PeriphCLKConfig+0xd74>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 8008cdc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ce0:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008ce4:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8008ce8:	d033      	beq.n	8008d52 <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 8008cea:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8008cee:	d82c      	bhi.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008cf0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008cf4:	d02f      	beq.n	8008d56 <HAL_RCCEx_PeriphCLKConfig+0xd42>
 8008cf6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008cfa:	d826      	bhi.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008cfc:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8008d00:	d02b      	beq.n	8008d5a <HAL_RCCEx_PeriphCLKConfig+0xd46>
 8008d02:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8008d06:	d820      	bhi.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008d08:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008d0c:	d012      	beq.n	8008d34 <HAL_RCCEx_PeriphCLKConfig+0xd20>
 8008d0e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008d12:	d81a      	bhi.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008d14:	2b00      	cmp	r3, #0
 8008d16:	d022      	beq.n	8008d5e <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8008d18:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008d1c:	d115      	bne.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0xd36>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008d1e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d22:	3308      	adds	r3, #8
 8008d24:	2100      	movs	r1, #0
 8008d26:	4618      	mov	r0, r3
 8008d28:	f001 fbf6 	bl	800a518 <RCCEx_PLL2_Config>
 8008d2c:	4603      	mov	r3, r0
 8008d2e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008d32:	e015      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008d34:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d38:	3328      	adds	r3, #40	; 0x28
 8008d3a:	2102      	movs	r1, #2
 8008d3c:	4618      	mov	r0, r3
 8008d3e:	f001 fc9d 	bl	800a67c <RCCEx_PLL3_Config>
 8008d42:	4603      	mov	r3, r0
 8008d44:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008d48:	e00a      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008d4a:	2301      	movs	r3, #1
 8008d4c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008d50:	e006      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008d52:	bf00      	nop
 8008d54:	e004      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008d56:	bf00      	nop
 8008d58:	e002      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008d5a:	bf00      	nop
 8008d5c:	e000      	b.n	8008d60 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008d5e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008d60:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008d64:	2b00      	cmp	r3, #0
 8008d66:	d10b      	bne.n	8008d80 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8008d68:	4ba0      	ldr	r3, [pc, #640]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008d6a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008d6c:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8008d70:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d74:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008d78:	4a9c      	ldr	r2, [pc, #624]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008d7a:	430b      	orrs	r3, r1
 8008d7c:	6593      	str	r3, [r2, #88]	; 0x58
 8008d7e:	e003      	b.n	8008d88 <HAL_RCCEx_PeriphCLKConfig+0xd74>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008d80:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008d84:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ I2C1/2/3/5* Configuration ------------------------*/
#if defined(I2C5)
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 8008d88:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d90:	f002 0308 	and.w	r3, r2, #8
 8008d94:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008d98:	2300      	movs	r3, #0
 8008d9a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8008d9e:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 8008da2:	460b      	mov	r3, r1
 8008da4:	4313      	orrs	r3, r2
 8008da6:	d01e      	beq.n	8008de6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1235CLKSOURCE(PeriphClkInit->I2c1235ClockSelection));

    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 8008da8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008dac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008db0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008db4:	d10c      	bne.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008db6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008dba:	3328      	adds	r3, #40	; 0x28
 8008dbc:	2102      	movs	r1, #2
 8008dbe:	4618      	mov	r0, r3
 8008dc0:	f001 fc5c 	bl	800a67c <RCCEx_PLL3_Config>
 8008dc4:	4603      	mov	r3, r0
 8008dc6:	2b00      	cmp	r3, #0
 8008dc8:	d002      	beq.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      {
        status = HAL_ERROR;
 8008dca:	2301      	movs	r3, #1
 8008dcc:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 8008dd0:	4b86      	ldr	r3, [pc, #536]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008dd2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008dd4:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8008dd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ddc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008de0:	4a82      	ldr	r2, [pc, #520]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008de2:	430b      	orrs	r3, r1
 8008de4:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8008de6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008dea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008dee:	f002 0310 	and.w	r3, r2, #16
 8008df2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008df6:	2300      	movs	r3, #0
 8008df8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008dfc:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 8008e00:	460b      	mov	r3, r1
 8008e02:	4313      	orrs	r3, r2
 8008e04:	d01e      	beq.n	8008e44 <HAL_RCCEx_PeriphCLKConfig+0xe30>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8008e06:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e0a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008e0e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008e12:	d10c      	bne.n	8008e2e <HAL_RCCEx_PeriphCLKConfig+0xe1a>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008e14:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e18:	3328      	adds	r3, #40	; 0x28
 8008e1a:	2102      	movs	r1, #2
 8008e1c:	4618      	mov	r0, r3
 8008e1e:	f001 fc2d 	bl	800a67c <RCCEx_PLL3_Config>
 8008e22:	4603      	mov	r3, r0
 8008e24:	2b00      	cmp	r3, #0
 8008e26:	d002      	beq.n	8008e2e <HAL_RCCEx_PeriphCLKConfig+0xe1a>
      {
        status = HAL_ERROR;
 8008e28:	2301      	movs	r3, #1
 8008e2a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008e2e:	4b6f      	ldr	r3, [pc, #444]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008e30:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008e32:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008e36:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e3a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008e3e:	4a6b      	ldr	r2, [pc, #428]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008e40:	430b      	orrs	r3, r1
 8008e42:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008e44:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e4c:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8008e50:	67bb      	str	r3, [r7, #120]	; 0x78
 8008e52:	2300      	movs	r3, #0
 8008e54:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008e56:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8008e5a:	460b      	mov	r3, r1
 8008e5c:	4313      	orrs	r3, r2
 8008e5e:	d03e      	beq.n	8008ede <HAL_RCCEx_PeriphCLKConfig+0xeca>
  {
    switch (PeriphClkInit->AdcClockSelection)
 8008e60:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e64:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008e68:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008e6c:	d022      	beq.n	8008eb4 <HAL_RCCEx_PeriphCLKConfig+0xea0>
 8008e6e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008e72:	d81b      	bhi.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0xe98>
 8008e74:	2b00      	cmp	r3, #0
 8008e76:	d003      	beq.n	8008e80 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 8008e78:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008e7c:	d00b      	beq.n	8008e96 <HAL_RCCEx_PeriphCLKConfig+0xe82>
 8008e7e:	e015      	b.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0xe98>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008e80:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e84:	3308      	adds	r3, #8
 8008e86:	2100      	movs	r1, #0
 8008e88:	4618      	mov	r0, r3
 8008e8a:	f001 fb45 	bl	800a518 <RCCEx_PLL2_Config>
 8008e8e:	4603      	mov	r3, r0
 8008e90:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008e94:	e00f      	b.n	8008eb6 <HAL_RCCEx_PeriphCLKConfig+0xea2>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008e96:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e9a:	3328      	adds	r3, #40	; 0x28
 8008e9c:	2102      	movs	r1, #2
 8008e9e:	4618      	mov	r0, r3
 8008ea0:	f001 fbec 	bl	800a67c <RCCEx_PLL3_Config>
 8008ea4:	4603      	mov	r3, r0
 8008ea6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008eaa:	e004      	b.n	8008eb6 <HAL_RCCEx_PeriphCLKConfig+0xea2>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008eac:	2301      	movs	r3, #1
 8008eae:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008eb2:	e000      	b.n	8008eb6 <HAL_RCCEx_PeriphCLKConfig+0xea2>
        break;
 8008eb4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008eb6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d10b      	bne.n	8008ed6 <HAL_RCCEx_PeriphCLKConfig+0xec2>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008ebe:	4b4b      	ldr	r3, [pc, #300]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ec0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008ec2:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8008ec6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008eca:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008ece:	4a47      	ldr	r2, [pc, #284]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ed0:	430b      	orrs	r3, r1
 8008ed2:	6593      	str	r3, [r2, #88]	; 0x58
 8008ed4:	e003      	b.n	8008ede <HAL_RCCEx_PeriphCLKConfig+0xeca>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ed6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008eda:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008ede:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ee2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ee6:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 8008eea:	673b      	str	r3, [r7, #112]	; 0x70
 8008eec:	2300      	movs	r3, #0
 8008eee:	677b      	str	r3, [r7, #116]	; 0x74
 8008ef0:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 8008ef4:	460b      	mov	r3, r1
 8008ef6:	4313      	orrs	r3, r2
 8008ef8:	d03b      	beq.n	8008f72 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
  {

    switch (PeriphClkInit->UsbClockSelection)
 8008efa:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008efe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008f02:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f06:	d01f      	beq.n	8008f48 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 8008f08:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f0c:	d818      	bhi.n	8008f40 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8008f0e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008f12:	d003      	beq.n	8008f1c <HAL_RCCEx_PeriphCLKConfig+0xf08>
 8008f14:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008f18:	d007      	beq.n	8008f2a <HAL_RCCEx_PeriphCLKConfig+0xf16>
 8008f1a:	e011      	b.n	8008f40 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008f1c:	4b33      	ldr	r3, [pc, #204]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f20:	4a32      	ldr	r2, [pc, #200]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008f22:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008f26:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8008f28:	e00f      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0xf36>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008f2a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f2e:	3328      	adds	r3, #40	; 0x28
 8008f30:	2101      	movs	r1, #1
 8008f32:	4618      	mov	r0, r3
 8008f34:	f001 fba2 	bl	800a67c <RCCEx_PLL3_Config>
 8008f38:	4603      	mov	r3, r0
 8008f3a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* USB clock source configuration done later after clock selection check */
        break;
 8008f3e:	e004      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0xf36>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008f40:	2301      	movs	r3, #1
 8008f42:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008f46:	e000      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0xf36>
        break;
 8008f48:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008f4a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f4e:	2b00      	cmp	r3, #0
 8008f50:	d10b      	bne.n	8008f6a <HAL_RCCEx_PeriphCLKConfig+0xf56>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008f52:	4b26      	ldr	r3, [pc, #152]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008f54:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f56:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8008f5a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f5e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008f62:	4a22      	ldr	r2, [pc, #136]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008f64:	430b      	orrs	r3, r1
 8008f66:	6553      	str	r3, [r2, #84]	; 0x54
 8008f68:	e003      	b.n	8008f72 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008f6a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f6e:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8008f72:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f7a:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8008f7e:	66bb      	str	r3, [r7, #104]	; 0x68
 8008f80:	2300      	movs	r3, #0
 8008f82:	66fb      	str	r3, [r7, #108]	; 0x6c
 8008f84:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 8008f88:	460b      	mov	r3, r1
 8008f8a:	4313      	orrs	r3, r2
 8008f8c:	d034      	beq.n	8008ff8 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8008f8e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f92:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008f94:	2b00      	cmp	r3, #0
 8008f96:	d003      	beq.n	8008fa0 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 8008f98:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008f9c:	d007      	beq.n	8008fae <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 8008f9e:	e011      	b.n	8008fc4 <HAL_RCCEx_PeriphCLKConfig+0xfb0>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008fa0:	4b12      	ldr	r3, [pc, #72]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008fa4:	4a11      	ldr	r2, [pc, #68]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008fa6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008faa:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008fac:	e00e      	b.n	8008fcc <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008fae:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008fb2:	3308      	adds	r3, #8
 8008fb4:	2102      	movs	r1, #2
 8008fb6:	4618      	mov	r0, r3
 8008fb8:	f001 faae 	bl	800a518 <RCCEx_PLL2_Config>
 8008fbc:	4603      	mov	r3, r0
 8008fbe:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008fc2:	e003      	b.n	8008fcc <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      default:
        ret = HAL_ERROR;
 8008fc4:	2301      	movs	r3, #1
 8008fc6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008fca:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008fcc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008fd0:	2b00      	cmp	r3, #0
 8008fd2:	d10d      	bne.n	8008ff0 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8008fd4:	4b05      	ldr	r3, [pc, #20]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008fd6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008fd8:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008fdc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008fe0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008fe2:	4a02      	ldr	r2, [pc, #8]	; (8008fec <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008fe4:	430b      	orrs	r3, r1
 8008fe6:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008fe8:	e006      	b.n	8008ff8 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 8008fea:	bf00      	nop
 8008fec:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ff0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ff4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8008ff8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ffc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009000:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8009004:	663b      	str	r3, [r7, #96]	; 0x60
 8009006:	2300      	movs	r3, #0
 8009008:	667b      	str	r3, [r7, #100]	; 0x64
 800900a:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 800900e:	460b      	mov	r3, r1
 8009010:	4313      	orrs	r3, r2
 8009012:	d00c      	beq.n	800902e <HAL_RCCEx_PeriphCLKConfig+0x101a>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8009014:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009018:	3328      	adds	r3, #40	; 0x28
 800901a:	2102      	movs	r1, #2
 800901c:	4618      	mov	r0, r3
 800901e:	f001 fb2d 	bl	800a67c <RCCEx_PLL3_Config>
 8009022:	4603      	mov	r3, r0
 8009024:	2b00      	cmp	r3, #0
 8009026:	d002      	beq.n	800902e <HAL_RCCEx_PeriphCLKConfig+0x101a>
    {
      status = HAL_ERROR;
 8009028:	2301      	movs	r3, #1
 800902a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 800902e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009032:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009036:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 800903a:	65bb      	str	r3, [r7, #88]	; 0x58
 800903c:	2300      	movs	r3, #0
 800903e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009040:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8009044:	460b      	mov	r3, r1
 8009046:	4313      	orrs	r3, r2
 8009048:	d036      	beq.n	80090b8 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
  {

    switch (PeriphClkInit->RngClockSelection)
 800904a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800904e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009050:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009054:	d018      	beq.n	8009088 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 8009056:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800905a:	d811      	bhi.n	8009080 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800905c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009060:	d014      	beq.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x1078>
 8009062:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009066:	d80b      	bhi.n	8009080 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8009068:	2b00      	cmp	r3, #0
 800906a:	d011      	beq.n	8009090 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 800906c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009070:	d106      	bne.n	8009080 <HAL_RCCEx_PeriphCLKConfig+0x106c>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009072:	4bb7      	ldr	r3, [pc, #732]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009076:	4ab6      	ldr	r2, [pc, #728]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009078:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800907c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 800907e:	e008      	b.n	8009092 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8009080:	2301      	movs	r3, #1
 8009082:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8009086:	e004      	b.n	8009092 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8009088:	bf00      	nop
 800908a:	e002      	b.n	8009092 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 800908c:	bf00      	nop
 800908e:	e000      	b.n	8009092 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8009090:	bf00      	nop
    }

    if (ret == HAL_OK)
 8009092:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009096:	2b00      	cmp	r3, #0
 8009098:	d10a      	bne.n	80090b0 <HAL_RCCEx_PeriphCLKConfig+0x109c>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 800909a:	4bad      	ldr	r3, [pc, #692]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800909c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800909e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80090a2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80090a6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80090a8:	4aa9      	ldr	r2, [pc, #676]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80090aa:	430b      	orrs	r3, r1
 80090ac:	6553      	str	r3, [r2, #84]	; 0x54
 80090ae:	e003      	b.n	80090b8 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80090b0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80090b4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 80090b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80090bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80090c0:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 80090c4:	653b      	str	r3, [r7, #80]	; 0x50
 80090c6:	2300      	movs	r3, #0
 80090c8:	657b      	str	r3, [r7, #84]	; 0x54
 80090ca:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 80090ce:	460b      	mov	r3, r1
 80090d0:	4313      	orrs	r3, r2
 80090d2:	d009      	beq.n	80090e8 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 80090d4:	4b9e      	ldr	r3, [pc, #632]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80090d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80090d8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80090dc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80090e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090e2:	4a9b      	ldr	r2, [pc, #620]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80090e4:	430b      	orrs	r3, r1
 80090e6:	6513      	str	r3, [r2, #80]	; 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 80090e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80090ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80090f0:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 80090f4:	64bb      	str	r3, [r7, #72]	; 0x48
 80090f6:	2300      	movs	r3, #0
 80090f8:	64fb      	str	r3, [r7, #76]	; 0x4c
 80090fa:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 80090fe:	460b      	mov	r3, r1
 8009100:	4313      	orrs	r3, r2
 8009102:	d009      	beq.n	8009118 <HAL_RCCEx_PeriphCLKConfig+0x1104>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8009104:	4b92      	ldr	r3, [pc, #584]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009106:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009108:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 800910c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009110:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009112:	4a8f      	ldr	r2, [pc, #572]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009114:	430b      	orrs	r3, r1
 8009116:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8009118:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800911c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009120:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 8009124:	643b      	str	r3, [r7, #64]	; 0x40
 8009126:	2300      	movs	r3, #0
 8009128:	647b      	str	r3, [r7, #68]	; 0x44
 800912a:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 800912e:	460b      	mov	r3, r1
 8009130:	4313      	orrs	r3, r2
 8009132:	d00e      	beq.n	8009152 <HAL_RCCEx_PeriphCLKConfig+0x113e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8009134:	4b86      	ldr	r3, [pc, #536]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009136:	691b      	ldr	r3, [r3, #16]
 8009138:	4a85      	ldr	r2, [pc, #532]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800913a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800913e:	6113      	str	r3, [r2, #16]
 8009140:	4b83      	ldr	r3, [pc, #524]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009142:	6919      	ldr	r1, [r3, #16]
 8009144:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009148:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800914c:	4a80      	ldr	r2, [pc, #512]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800914e:	430b      	orrs	r3, r1
 8009150:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8009152:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009156:	e9d3 2300 	ldrd	r2, r3, [r3]
 800915a:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 800915e:	63bb      	str	r3, [r7, #56]	; 0x38
 8009160:	2300      	movs	r3, #0
 8009162:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009164:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 8009168:	460b      	mov	r3, r1
 800916a:	4313      	orrs	r3, r2
 800916c:	d009      	beq.n	8009182 <HAL_RCCEx_PeriphCLKConfig+0x116e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 800916e:	4b78      	ldr	r3, [pc, #480]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8009170:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009172:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8009176:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800917a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800917c:	4a74      	ldr	r2, [pc, #464]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800917e:	430b      	orrs	r3, r1
 8009180:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8009182:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009186:	e9d3 2300 	ldrd	r2, r3, [r3]
 800918a:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 800918e:	633b      	str	r3, [r7, #48]	; 0x30
 8009190:	2300      	movs	r3, #0
 8009192:	637b      	str	r3, [r7, #52]	; 0x34
 8009194:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8009198:	460b      	mov	r3, r1
 800919a:	4313      	orrs	r3, r2
 800919c:	d00a      	beq.n	80091b4 <HAL_RCCEx_PeriphCLKConfig+0x11a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800919e:	4b6c      	ldr	r3, [pc, #432]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80091a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091a2:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 80091a6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80091aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80091ae:	4a68      	ldr	r2, [pc, #416]	; (8009350 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80091b0:	430b      	orrs	r3, r1
 80091b2:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 80091b4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80091b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80091bc:	2100      	movs	r1, #0
 80091be:	62b9      	str	r1, [r7, #40]	; 0x28
 80091c0:	f003 0301 	and.w	r3, r3, #1
 80091c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80091c6:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 80091ca:	460b      	mov	r3, r1
 80091cc:	4313      	orrs	r3, r2
 80091ce:	d011      	beq.n	80091f4 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80091d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80091d4:	3308      	adds	r3, #8
 80091d6:	2100      	movs	r1, #0
 80091d8:	4618      	mov	r0, r3
 80091da:	f001 f99d 	bl	800a518 <RCCEx_PLL2_Config>
 80091de:	4603      	mov	r3, r0
 80091e0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 80091e4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80091e8:	2b00      	cmp	r3, #0
 80091ea:	d003      	beq.n	80091f4 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80091ec:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80091f0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 80091f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80091f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80091fc:	2100      	movs	r1, #0
 80091fe:	6239      	str	r1, [r7, #32]
 8009200:	f003 0302 	and.w	r3, r3, #2
 8009204:	627b      	str	r3, [r7, #36]	; 0x24
 8009206:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 800920a:	460b      	mov	r3, r1
 800920c:	4313      	orrs	r3, r2
 800920e:	d011      	beq.n	8009234 <HAL_RCCEx_PeriphCLKConfig+0x1220>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8009210:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009214:	3308      	adds	r3, #8
 8009216:	2101      	movs	r1, #1
 8009218:	4618      	mov	r0, r3
 800921a:	f001 f97d 	bl	800a518 <RCCEx_PLL2_Config>
 800921e:	4603      	mov	r3, r0
 8009220:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8009224:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009228:	2b00      	cmp	r3, #0
 800922a:	d003      	beq.n	8009234 <HAL_RCCEx_PeriphCLKConfig+0x1220>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800922c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009230:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8009234:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009238:	e9d3 2300 	ldrd	r2, r3, [r3]
 800923c:	2100      	movs	r1, #0
 800923e:	61b9      	str	r1, [r7, #24]
 8009240:	f003 0304 	and.w	r3, r3, #4
 8009244:	61fb      	str	r3, [r7, #28]
 8009246:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800924a:	460b      	mov	r3, r1
 800924c:	4313      	orrs	r3, r2
 800924e:	d011      	beq.n	8009274 <HAL_RCCEx_PeriphCLKConfig+0x1260>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8009250:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009254:	3308      	adds	r3, #8
 8009256:	2102      	movs	r1, #2
 8009258:	4618      	mov	r0, r3
 800925a:	f001 f95d 	bl	800a518 <RCCEx_PLL2_Config>
 800925e:	4603      	mov	r3, r0
 8009260:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8009264:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009268:	2b00      	cmp	r3, #0
 800926a:	d003      	beq.n	8009274 <HAL_RCCEx_PeriphCLKConfig+0x1260>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800926c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009270:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8009274:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009278:	e9d3 2300 	ldrd	r2, r3, [r3]
 800927c:	2100      	movs	r1, #0
 800927e:	6139      	str	r1, [r7, #16]
 8009280:	f003 0308 	and.w	r3, r3, #8
 8009284:	617b      	str	r3, [r7, #20]
 8009286:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800928a:	460b      	mov	r3, r1
 800928c:	4313      	orrs	r3, r2
 800928e:	d011      	beq.n	80092b4 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8009290:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009294:	3328      	adds	r3, #40	; 0x28
 8009296:	2100      	movs	r1, #0
 8009298:	4618      	mov	r0, r3
 800929a:	f001 f9ef 	bl	800a67c <RCCEx_PLL3_Config>
 800929e:	4603      	mov	r3, r0
 80092a0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  
    if (ret == HAL_OK)
 80092a4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d003      	beq.n	80092b4 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80092ac:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80092b0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 80092b4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80092b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092bc:	2100      	movs	r1, #0
 80092be:	60b9      	str	r1, [r7, #8]
 80092c0:	f003 0310 	and.w	r3, r3, #16
 80092c4:	60fb      	str	r3, [r7, #12]
 80092c6:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80092ca:	460b      	mov	r3, r1
 80092cc:	4313      	orrs	r3, r2
 80092ce:	d011      	beq.n	80092f4 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80092d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80092d4:	3328      	adds	r3, #40	; 0x28
 80092d6:	2101      	movs	r1, #1
 80092d8:	4618      	mov	r0, r3
 80092da:	f001 f9cf 	bl	800a67c <RCCEx_PLL3_Config>
 80092de:	4603      	mov	r3, r0
 80092e0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 80092e4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80092e8:	2b00      	cmp	r3, #0
 80092ea:	d003      	beq.n	80092f4 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80092ec:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80092f0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 80092f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80092f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092fc:	2100      	movs	r1, #0
 80092fe:	6039      	str	r1, [r7, #0]
 8009300:	f003 0320 	and.w	r3, r3, #32
 8009304:	607b      	str	r3, [r7, #4]
 8009306:	e9d7 1200 	ldrd	r1, r2, [r7]
 800930a:	460b      	mov	r3, r1
 800930c:	4313      	orrs	r3, r2
 800930e:	d011      	beq.n	8009334 <HAL_RCCEx_PeriphCLKConfig+0x1320>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8009310:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8009314:	3328      	adds	r3, #40	; 0x28
 8009316:	2102      	movs	r1, #2
 8009318:	4618      	mov	r0, r3
 800931a:	f001 f9af 	bl	800a67c <RCCEx_PLL3_Config>
 800931e:	4603      	mov	r3, r0
 8009320:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8009324:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009328:	2b00      	cmp	r3, #0
 800932a:	d003      	beq.n	8009334 <HAL_RCCEx_PeriphCLKConfig+0x1320>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800932c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8009330:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }

  if (status == HAL_OK)
 8009334:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 8009338:	2b00      	cmp	r3, #0
 800933a:	d101      	bne.n	8009340 <HAL_RCCEx_PeriphCLKConfig+0x132c>
  {
    return HAL_OK;
 800933c:	2300      	movs	r3, #0
 800933e:	e000      	b.n	8009342 <HAL_RCCEx_PeriphCLKConfig+0x132e>
  }
  return HAL_ERROR;
 8009340:	2301      	movs	r3, #1
}
 8009342:	4618      	mov	r0, r3
 8009344:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8009348:	46bd      	mov	sp, r7
 800934a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800934e:	bf00      	nop
 8009350:	58024400 	.word	0x58024400

08009354 <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in KHz
  *
  *  (*) : Available on some STM32H7 lines only.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 8009354:	b580      	push	{r7, lr}
 8009356:	b090      	sub	sp, #64	; 0x40
 8009358:	af00      	add	r7, sp, #0
 800935a:	e9c7 0100 	strd	r0, r1, [r7]
  /* This variable is used to store the SAI and CKP clock source */
  uint32_t saiclocksource;
  uint32_t ckpclocksource;
  uint32_t srcclk;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 800935e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009362:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 8009366:	430b      	orrs	r3, r1
 8009368:	f040 8094 	bne.w	8009494 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
  {

    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
 800936c:	4b9b      	ldr	r3, [pc, #620]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800936e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009370:	f003 0307 	and.w	r3, r3, #7
 8009374:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009376:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009378:	2b04      	cmp	r3, #4
 800937a:	f200 8087 	bhi.w	800948c <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 800937e:	a201      	add	r2, pc, #4	; (adr r2, 8009384 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8009380:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009384:	08009399 	.word	0x08009399
 8009388:	080093c1 	.word	0x080093c1
 800938c:	080093e9 	.word	0x080093e9
 8009390:	08009485 	.word	0x08009485
 8009394:	08009411 	.word	0x08009411
    {
      case RCC_SAI1CLKSOURCE_PLL: /* PLL1 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009398:	4b90      	ldr	r3, [pc, #576]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80093a0:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80093a4:	d108      	bne.n	80093b8 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80093a6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80093aa:	4618      	mov	r0, r3
 80093ac:	f000 ff62 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80093b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093b2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093b4:	f000 bc93 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093b8:	2300      	movs	r3, #0
 80093ba:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093bc:	f000 bc8f 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80093c0:	4b86      	ldr	r3, [pc, #536]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80093c8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80093cc:	d108      	bne.n	80093e0 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80093ce:	f107 0318 	add.w	r3, r7, #24
 80093d2:	4618      	mov	r0, r3
 80093d4:	f000 fca6 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80093d8:	69bb      	ldr	r3, [r7, #24]
 80093da:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093dc:	f000 bc7f 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093e0:	2300      	movs	r3, #0
 80093e2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093e4:	f000 bc7b 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80093e8:	4b7c      	ldr	r3, [pc, #496]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80093ea:	681b      	ldr	r3, [r3, #0]
 80093ec:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80093f0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80093f4:	d108      	bne.n	8009408 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80093f6:	f107 030c 	add.w	r3, r7, #12
 80093fa:	4618      	mov	r0, r3
 80093fc:	f000 fde6 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009404:	f000 bc6b 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009408:	2300      	movs	r3, #0
 800940a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800940c:	f000 bc67 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_CLKP: /* CKPER is the clock source for SAI1*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009410:	4b72      	ldr	r3, [pc, #456]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009412:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009414:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009418:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800941a:	4b70      	ldr	r3, [pc, #448]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800941c:	681b      	ldr	r3, [r3, #0]
 800941e:	f003 0304 	and.w	r3, r3, #4
 8009422:	2b04      	cmp	r3, #4
 8009424:	d10c      	bne.n	8009440 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 8009426:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009428:	2b00      	cmp	r3, #0
 800942a:	d109      	bne.n	8009440 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800942c:	4b6b      	ldr	r3, [pc, #428]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800942e:	681b      	ldr	r3, [r3, #0]
 8009430:	08db      	lsrs	r3, r3, #3
 8009432:	f003 0303 	and.w	r3, r3, #3
 8009436:	4a6a      	ldr	r2, [pc, #424]	; (80095e0 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8009438:	fa22 f303 	lsr.w	r3, r2, r3
 800943c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800943e:	e01f      	b.n	8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009440:	4b66      	ldr	r3, [pc, #408]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009442:	681b      	ldr	r3, [r3, #0]
 8009444:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009448:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800944c:	d106      	bne.n	800945c <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800944e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009450:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009454:	d102      	bne.n	800945c <HAL_RCCEx_GetPeriphCLKFreq+0x108>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009456:	4b63      	ldr	r3, [pc, #396]	; (80095e4 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 8009458:	63fb      	str	r3, [r7, #60]	; 0x3c
 800945a:	e011      	b.n	8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 800945c:	4b5f      	ldr	r3, [pc, #380]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800945e:	681b      	ldr	r3, [r3, #0]
 8009460:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009464:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009468:	d106      	bne.n	8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800946a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800946c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009470:	d102      	bne.n	8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009472:	4b5d      	ldr	r3, [pc, #372]	; (80095e8 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009474:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009476:	e003      	b.n	8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009478:	2300      	movs	r3, #0
 800947a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800947c:	f000 bc2f 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009480:	f000 bc2d 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SAI1CLKSOURCE_PIN): /* External clock is the clock source for SAI1 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8009484:	4b59      	ldr	r3, [pc, #356]	; (80095ec <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 8009486:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009488:	f000 bc29 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 800948c:	2300      	movs	r3, #0
 800948e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009490:	f000 bc25 	b.w	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
    }
  }
#endif

#if defined(SAI4)
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
 8009494:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009498:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 800949c:	430b      	orrs	r3, r1
 800949e:	f040 80a7 	bne.w	80095f0 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
  {

    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
 80094a2:	4b4e      	ldr	r3, [pc, #312]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80094a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80094a6:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 80094aa:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 80094ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094ae:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80094b2:	d054      	beq.n	800955e <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 80094b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094b6:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80094ba:	f200 808b 	bhi.w	80095d4 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80094be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094c0:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80094c4:	f000 8083 	beq.w	80095ce <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 80094c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094ca:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80094ce:	f200 8081 	bhi.w	80095d4 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80094d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094d4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80094d8:	d02f      	beq.n	800953a <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 80094da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094dc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80094e0:	d878      	bhi.n	80095d4 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80094e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094e4:	2b00      	cmp	r3, #0
 80094e6:	d004      	beq.n	80094f2 <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 80094e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80094ea:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80094ee:	d012      	beq.n	8009516 <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 80094f0:	e070      	b.n	80095d4 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
    {
      case RCC_SAI4ACLKSOURCE_PLL: /* PLL1 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80094f2:	4b3a      	ldr	r3, [pc, #232]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80094f4:	681b      	ldr	r3, [r3, #0]
 80094f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80094fa:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80094fe:	d107      	bne.n	8009510 <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009500:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009504:	4618      	mov	r0, r3
 8009506:	f000 feb5 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800950a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800950c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800950e:	e3e6      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009510:	2300      	movs	r3, #0
 8009512:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009514:	e3e3      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4ACLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009516:	4b31      	ldr	r3, [pc, #196]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800951e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009522:	d107      	bne.n	8009534 <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009524:	f107 0318 	add.w	r3, r7, #24
 8009528:	4618      	mov	r0, r3
 800952a:	f000 fbfb 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800952e:	69bb      	ldr	r3, [r7, #24]
 8009530:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009532:	e3d4      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009534:	2300      	movs	r3, #0
 8009536:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009538:	e3d1      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800953a:	4b28      	ldr	r3, [pc, #160]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009542:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009546:	d107      	bne.n	8009558 <HAL_RCCEx_GetPeriphCLKFreq+0x204>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009548:	f107 030c 	add.w	r3, r7, #12
 800954c:	4618      	mov	r0, r3
 800954e:	f000 fd3d 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8009552:	68fb      	ldr	r3, [r7, #12]
 8009554:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009556:	e3c2      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009558:	2300      	movs	r3, #0
 800955a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800955c:	e3bf      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_CLKP: /* CKPER is the clock source for SAI4A*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 800955e:	4b1f      	ldr	r3, [pc, #124]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009560:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009562:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009566:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009568:	4b1c      	ldr	r3, [pc, #112]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	f003 0304 	and.w	r3, r3, #4
 8009570:	2b04      	cmp	r3, #4
 8009572:	d10c      	bne.n	800958e <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 8009574:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009576:	2b00      	cmp	r3, #0
 8009578:	d109      	bne.n	800958e <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800957a:	4b18      	ldr	r3, [pc, #96]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800957c:	681b      	ldr	r3, [r3, #0]
 800957e:	08db      	lsrs	r3, r3, #3
 8009580:	f003 0303 	and.w	r3, r3, #3
 8009584:	4a16      	ldr	r2, [pc, #88]	; (80095e0 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8009586:	fa22 f303 	lsr.w	r3, r2, r3
 800958a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800958c:	e01e      	b.n	80095cc <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800958e:	4b13      	ldr	r3, [pc, #76]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009590:	681b      	ldr	r3, [r3, #0]
 8009592:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009596:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800959a:	d106      	bne.n	80095aa <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 800959c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800959e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80095a2:	d102      	bne.n	80095aa <HAL_RCCEx_GetPeriphCLKFreq+0x256>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80095a4:	4b0f      	ldr	r3, [pc, #60]	; (80095e4 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 80095a6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80095a8:	e010      	b.n	80095cc <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80095aa:	4b0c      	ldr	r3, [pc, #48]	; (80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80095ac:	681b      	ldr	r3, [r3, #0]
 80095ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80095b2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80095b6:	d106      	bne.n	80095c6 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 80095b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80095ba:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80095be:	d102      	bne.n	80095c6 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80095c0:	4b09      	ldr	r3, [pc, #36]	; (80095e8 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80095c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80095c4:	e002      	b.n	80095cc <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80095c6:	2300      	movs	r3, #0
 80095c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80095ca:	e388      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80095cc:	e387      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PIN: /* External clock is the clock source for SAI4A */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80095ce:	4b07      	ldr	r3, [pc, #28]	; (80095ec <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80095d0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095d2:	e384      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 80095d4:	2300      	movs	r3, #0
 80095d6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095d8:	e381      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80095da:	bf00      	nop
 80095dc:	58024400 	.word	0x58024400
 80095e0:	03d09000 	.word	0x03d09000
 80095e4:	003d0900 	.word	0x003d0900
 80095e8:	017d7840 	.word	0x017d7840
 80095ec:	00bb8000 	.word	0x00bb8000
      }
    }
  }

  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
 80095f0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80095f4:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 80095f8:	430b      	orrs	r3, r1
 80095fa:	f040 809c 	bne.w	8009736 <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
  {

    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
 80095fe:	4b9e      	ldr	r3, [pc, #632]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009600:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009602:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 8009606:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009608:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800960a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800960e:	d054      	beq.n	80096ba <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 8009610:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009612:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8009616:	f200 808b 	bhi.w	8009730 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800961a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800961c:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009620:	f000 8083 	beq.w	800972a <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 8009624:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009626:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800962a:	f200 8081 	bhi.w	8009730 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800962e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009630:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009634:	d02f      	beq.n	8009696 <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 8009636:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009638:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800963c:	d878      	bhi.n	8009730 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800963e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009640:	2b00      	cmp	r3, #0
 8009642:	d004      	beq.n	800964e <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 8009644:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009646:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800964a:	d012      	beq.n	8009672 <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 800964c:	e070      	b.n	8009730 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
    {
      case RCC_SAI4BCLKSOURCE_PLL: /* PLL1 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800964e:	4b8a      	ldr	r3, [pc, #552]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009650:	681b      	ldr	r3, [r3, #0]
 8009652:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009656:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800965a:	d107      	bne.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x318>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800965c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009660:	4618      	mov	r0, r3
 8009662:	f000 fe07 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009666:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009668:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800966a:	e338      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800966c:	2300      	movs	r3, #0
 800966e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009670:	e335      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4BCLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009672:	4b81      	ldr	r3, [pc, #516]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009674:	681b      	ldr	r3, [r3, #0]
 8009676:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800967a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800967e:	d107      	bne.n	8009690 <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009680:	f107 0318 	add.w	r3, r7, #24
 8009684:	4618      	mov	r0, r3
 8009686:	f000 fb4d 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800968a:	69bb      	ldr	r3, [r7, #24]
 800968c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800968e:	e326      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009690:	2300      	movs	r3, #0
 8009692:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009694:	e323      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009696:	4b78      	ldr	r3, [pc, #480]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009698:	681b      	ldr	r3, [r3, #0]
 800969a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800969e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80096a2:	d107      	bne.n	80096b4 <HAL_RCCEx_GetPeriphCLKFreq+0x360>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80096a4:	f107 030c 	add.w	r3, r7, #12
 80096a8:	4618      	mov	r0, r3
 80096aa:	f000 fc8f 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80096ae:	68fb      	ldr	r3, [r7, #12]
 80096b0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096b2:	e314      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80096b4:	2300      	movs	r3, #0
 80096b6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80096b8:	e311      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_CLKP: /* CKPER is the clock source for SAI4B*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80096ba:	4b6f      	ldr	r3, [pc, #444]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80096bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096be:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80096c2:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80096c4:	4b6c      	ldr	r3, [pc, #432]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80096c6:	681b      	ldr	r3, [r3, #0]
 80096c8:	f003 0304 	and.w	r3, r3, #4
 80096cc:	2b04      	cmp	r3, #4
 80096ce:	d10c      	bne.n	80096ea <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 80096d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	d109      	bne.n	80096ea <HAL_RCCEx_GetPeriphCLKFreq+0x396>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80096d6:	4b68      	ldr	r3, [pc, #416]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80096d8:	681b      	ldr	r3, [r3, #0]
 80096da:	08db      	lsrs	r3, r3, #3
 80096dc:	f003 0303 	and.w	r3, r3, #3
 80096e0:	4a66      	ldr	r2, [pc, #408]	; (800987c <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 80096e2:	fa22 f303 	lsr.w	r3, r2, r3
 80096e6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80096e8:	e01e      	b.n	8009728 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80096ea:	4b63      	ldr	r3, [pc, #396]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80096ec:	681b      	ldr	r3, [r3, #0]
 80096ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80096f2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80096f6:	d106      	bne.n	8009706 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 80096f8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80096fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80096fe:	d102      	bne.n	8009706 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009700:	4b5f      	ldr	r3, [pc, #380]	; (8009880 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 8009702:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009704:	e010      	b.n	8009728 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009706:	4b5c      	ldr	r3, [pc, #368]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800970e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009712:	d106      	bne.n	8009722 <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 8009714:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009716:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800971a:	d102      	bne.n	8009722 <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800971c:	4b59      	ldr	r3, [pc, #356]	; (8009884 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800971e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009720:	e002      	b.n	8009728 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009722:	2300      	movs	r3, #0
 8009724:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009726:	e2da      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009728:	e2d9      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PIN: /* External clock is the clock source for SAI4B */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800972a:	4b57      	ldr	r3, [pc, #348]	; (8009888 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800972c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800972e:	e2d6      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009730:	2300      	movs	r3, #0
 8009732:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009734:	e2d3      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
#endif /*SAI4*/
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
 8009736:	e9d7 2300 	ldrd	r2, r3, [r7]
 800973a:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 800973e:	430b      	orrs	r3, r1
 8009740:	f040 80a7 	bne.w	8009892 <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
  {
    /* Get SPI1/2/3 clock source */
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
 8009744:	4b4c      	ldr	r3, [pc, #304]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009746:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009748:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 800974c:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800974e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009750:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009754:	d055      	beq.n	8009802 <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 8009756:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009758:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800975c:	f200 8096 	bhi.w	800988c <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8009760:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009762:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009766:	f000 8084 	beq.w	8009872 <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 800976a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800976c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009770:	f200 808c 	bhi.w	800988c <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8009774:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009776:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800977a:	d030      	beq.n	80097de <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 800977c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800977e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009782:	f200 8083 	bhi.w	800988c <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8009786:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009788:	2b00      	cmp	r3, #0
 800978a:	d004      	beq.n	8009796 <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 800978c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800978e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009792:	d012      	beq.n	80097ba <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 8009794:	e07a      	b.n	800988c <HAL_RCCEx_GetPeriphCLKFreq+0x538>
    {
      case RCC_SPI123CLKSOURCE_PLL: /* PLL1 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009796:	4b38      	ldr	r3, [pc, #224]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009798:	681b      	ldr	r3, [r3, #0]
 800979a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800979e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80097a2:	d107      	bne.n	80097b4 <HAL_RCCEx_GetPeriphCLKFreq+0x460>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80097a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80097a8:	4618      	mov	r0, r3
 80097aa:	f000 fd63 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80097ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80097b0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097b2:	e294      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097b4:	2300      	movs	r3, #0
 80097b6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097b8:	e291      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80097ba:	4b2f      	ldr	r3, [pc, #188]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80097bc:	681b      	ldr	r3, [r3, #0]
 80097be:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80097c2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80097c6:	d107      	bne.n	80097d8 <HAL_RCCEx_GetPeriphCLKFreq+0x484>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80097c8:	f107 0318 	add.w	r3, r7, #24
 80097cc:	4618      	mov	r0, r3
 80097ce:	f000 faa9 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80097d2:	69bb      	ldr	r3, [r7, #24]
 80097d4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097d6:	e282      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097d8:	2300      	movs	r3, #0
 80097da:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097dc:	e27f      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80097de:	4b26      	ldr	r3, [pc, #152]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80097e0:	681b      	ldr	r3, [r3, #0]
 80097e2:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80097e6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80097ea:	d107      	bne.n	80097fc <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80097ec:	f107 030c 	add.w	r3, r7, #12
 80097f0:	4618      	mov	r0, r3
 80097f2:	f000 fbeb 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80097f6:	68fb      	ldr	r3, [r7, #12]
 80097f8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097fa:	e270      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097fc:	2300      	movs	r3, #0
 80097fe:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009800:	e26d      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_CLKP: /* CKPER is the clock source for SPI123 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009802:	4b1d      	ldr	r3, [pc, #116]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009804:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009806:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800980a:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800980c:	4b1a      	ldr	r3, [pc, #104]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800980e:	681b      	ldr	r3, [r3, #0]
 8009810:	f003 0304 	and.w	r3, r3, #4
 8009814:	2b04      	cmp	r3, #4
 8009816:	d10c      	bne.n	8009832 <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 8009818:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800981a:	2b00      	cmp	r3, #0
 800981c:	d109      	bne.n	8009832 <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800981e:	4b16      	ldr	r3, [pc, #88]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009820:	681b      	ldr	r3, [r3, #0]
 8009822:	08db      	lsrs	r3, r3, #3
 8009824:	f003 0303 	and.w	r3, r3, #3
 8009828:	4a14      	ldr	r2, [pc, #80]	; (800987c <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 800982a:	fa22 f303 	lsr.w	r3, r2, r3
 800982e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009830:	e01e      	b.n	8009870 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009832:	4b11      	ldr	r3, [pc, #68]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800983a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800983e:	d106      	bne.n	800984e <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 8009840:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009842:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009846:	d102      	bne.n	800984e <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009848:	4b0d      	ldr	r3, [pc, #52]	; (8009880 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 800984a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800984c:	e010      	b.n	8009870 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 800984e:	4b0a      	ldr	r3, [pc, #40]	; (8009878 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009850:	681b      	ldr	r3, [r3, #0]
 8009852:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009856:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800985a:	d106      	bne.n	800986a <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 800985c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800985e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009862:	d102      	bne.n	800986a <HAL_RCCEx_GetPeriphCLKFreq+0x516>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009864:	4b07      	ldr	r3, [pc, #28]	; (8009884 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009866:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009868:	e002      	b.n	8009870 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800986a:	2300      	movs	r3, #0
 800986c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800986e:	e236      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009870:	e235      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SPI123CLKSOURCE_PIN): /* External clock is the clock source for I2S */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8009872:	4b05      	ldr	r3, [pc, #20]	; (8009888 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8009874:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009876:	e232      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009878:	58024400 	.word	0x58024400
 800987c:	03d09000 	.word	0x03d09000
 8009880:	003d0900 	.word	0x003d0900
 8009884:	017d7840 	.word	0x017d7840
 8009888:	00bb8000 	.word	0x00bb8000
      }
      default :
      {
        frequency = 0;
 800988c:	2300      	movs	r3, #0
 800988e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009890:	e225      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
 8009892:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009896:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 800989a:	430b      	orrs	r3, r1
 800989c:	f040 8085 	bne.w	80099aa <HAL_RCCEx_GetPeriphCLKFreq+0x656>
  {
    /* Get SPI45 clock source */
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
 80098a0:	4b9c      	ldr	r3, [pc, #624]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80098a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80098a4:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 80098a8:	63bb      	str	r3, [r7, #56]	; 0x38
    switch (srcclk)
 80098aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098ac:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80098b0:	d06b      	beq.n	800998a <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 80098b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098b4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80098b8:	d874      	bhi.n	80099a4 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80098ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098bc:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80098c0:	d056      	beq.n	8009970 <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 80098c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098c4:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80098c8:	d86c      	bhi.n	80099a4 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80098ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098cc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80098d0:	d03b      	beq.n	800994a <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 80098d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098d4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80098d8:	d864      	bhi.n	80099a4 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80098da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098dc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80098e0:	d021      	beq.n	8009926 <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 80098e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098e4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80098e8:	d85c      	bhi.n	80099a4 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80098ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098ec:	2b00      	cmp	r3, #0
 80098ee:	d004      	beq.n	80098fa <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 80098f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098f2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80098f6:	d004      	beq.n	8009902 <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 80098f8:	e054      	b.n	80099a4 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
    {
      case RCC_SPI45CLKSOURCE_PCLK2: /* CD/D2 PCLK2 is the clock source for SPI4/5 */
      {
        frequency = HAL_RCC_GetPCLK1Freq();
 80098fa:	f7fe fb75 	bl	8007fe8 <HAL_RCC_GetPCLK1Freq>
 80098fe:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8009900:	e1ed      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009902:	4b84      	ldr	r3, [pc, #528]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009904:	681b      	ldr	r3, [r3, #0]
 8009906:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800990a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800990e:	d107      	bne.n	8009920 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009910:	f107 0318 	add.w	r3, r7, #24
 8009914:	4618      	mov	r0, r3
 8009916:	f000 fa05 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 800991a:	69fb      	ldr	r3, [r7, #28]
 800991c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800991e:	e1de      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009920:	2300      	movs	r3, #0
 8009922:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009924:	e1db      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009926:	4b7b      	ldr	r3, [pc, #492]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009928:	681b      	ldr	r3, [r3, #0]
 800992a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800992e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009932:	d107      	bne.n	8009944 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009934:	f107 030c 	add.w	r3, r7, #12
 8009938:	4618      	mov	r0, r3
 800993a:	f000 fb47 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 800993e:	693b      	ldr	r3, [r7, #16]
 8009940:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009942:	e1cc      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009944:	2300      	movs	r3, #0
 8009946:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009948:	e1c9      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSI: /* HSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 800994a:	4b72      	ldr	r3, [pc, #456]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800994c:	681b      	ldr	r3, [r3, #0]
 800994e:	f003 0304 	and.w	r3, r3, #4
 8009952:	2b04      	cmp	r3, #4
 8009954:	d109      	bne.n	800996a <HAL_RCCEx_GetPeriphCLKFreq+0x616>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009956:	4b6f      	ldr	r3, [pc, #444]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	08db      	lsrs	r3, r3, #3
 800995c:	f003 0303 	and.w	r3, r3, #3
 8009960:	4a6d      	ldr	r2, [pc, #436]	; (8009b18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 8009962:	fa22 f303 	lsr.w	r3, r2, r3
 8009966:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009968:	e1b9      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800996a:	2300      	movs	r3, #0
 800996c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800996e:	e1b6      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_CSI: /* CSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009970:	4b68      	ldr	r3, [pc, #416]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009972:	681b      	ldr	r3, [r3, #0]
 8009974:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009978:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800997c:	d102      	bne.n	8009984 <HAL_RCCEx_GetPeriphCLKFreq+0x630>
        {
          frequency = CSI_VALUE;
 800997e:	4b67      	ldr	r3, [pc, #412]	; (8009b1c <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009980:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009982:	e1ac      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009984:	2300      	movs	r3, #0
 8009986:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009988:	e1a9      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSE: /* HSE is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 800998a:	4b62      	ldr	r3, [pc, #392]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800998c:	681b      	ldr	r3, [r3, #0]
 800998e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009992:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009996:	d102      	bne.n	800999e <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
        {
          frequency = HSE_VALUE;
 8009998:	4b61      	ldr	r3, [pc, #388]	; (8009b20 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 800999a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800999c:	e19f      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800999e:	2300      	movs	r3, #0
 80099a0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80099a2:	e19c      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 80099a4:	2300      	movs	r3, #0
 80099a6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80099a8:	e199      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
 80099aa:	e9d7 2300 	ldrd	r2, r3, [r7]
 80099ae:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 80099b2:	430b      	orrs	r3, r1
 80099b4:	d173      	bne.n	8009a9e <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
  {
    /* Get ADC clock source */
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
 80099b6:	4b57      	ldr	r3, [pc, #348]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80099b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80099ba:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80099be:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80099c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80099c2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80099c6:	d02f      	beq.n	8009a28 <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 80099c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80099ca:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80099ce:	d863      	bhi.n	8009a98 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 80099d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80099d2:	2b00      	cmp	r3, #0
 80099d4:	d004      	beq.n	80099e0 <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 80099d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80099d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80099dc:	d012      	beq.n	8009a04 <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 80099de:	e05b      	b.n	8009a98 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
    {
      case RCC_ADCCLKSOURCE_PLL2:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80099e0:	4b4c      	ldr	r3, [pc, #304]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80099e2:	681b      	ldr	r3, [r3, #0]
 80099e4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80099e8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80099ec:	d107      	bne.n	80099fe <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80099ee:	f107 0318 	add.w	r3, r7, #24
 80099f2:	4618      	mov	r0, r3
 80099f4:	f000 f996 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80099f8:	69bb      	ldr	r3, [r7, #24]
 80099fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80099fc:	e16f      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80099fe:	2300      	movs	r3, #0
 8009a00:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009a02:	e16c      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_ADCCLKSOURCE_PLL3:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009a04:	4b43      	ldr	r3, [pc, #268]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a06:	681b      	ldr	r3, [r3, #0]
 8009a08:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009a0c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009a10:	d107      	bne.n	8009a22 <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009a12:	f107 030c 	add.w	r3, r7, #12
 8009a16:	4618      	mov	r0, r3
 8009a18:	f000 fad8 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
 8009a1c:	697b      	ldr	r3, [r7, #20]
 8009a1e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009a20:	e15d      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009a22:	2300      	movs	r3, #0
 8009a24:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009a26:	e15a      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_ADCCLKSOURCE_CLKP:
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009a28:	4b3a      	ldr	r3, [pc, #232]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009a2c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009a30:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009a32:	4b38      	ldr	r3, [pc, #224]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	f003 0304 	and.w	r3, r3, #4
 8009a3a:	2b04      	cmp	r3, #4
 8009a3c:	d10c      	bne.n	8009a58 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 8009a3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a40:	2b00      	cmp	r3, #0
 8009a42:	d109      	bne.n	8009a58 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009a44:	4b33      	ldr	r3, [pc, #204]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a46:	681b      	ldr	r3, [r3, #0]
 8009a48:	08db      	lsrs	r3, r3, #3
 8009a4a:	f003 0303 	and.w	r3, r3, #3
 8009a4e:	4a32      	ldr	r2, [pc, #200]	; (8009b18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 8009a50:	fa22 f303 	lsr.w	r3, r2, r3
 8009a54:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a56:	e01e      	b.n	8009a96 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009a58:	4b2e      	ldr	r3, [pc, #184]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009a60:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009a64:	d106      	bne.n	8009a74 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 8009a66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a68:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009a6c:	d102      	bne.n	8009a74 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009a6e:	4b2b      	ldr	r3, [pc, #172]	; (8009b1c <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009a70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a72:	e010      	b.n	8009a96 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009a74:	4b27      	ldr	r3, [pc, #156]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009a76:	681b      	ldr	r3, [r3, #0]
 8009a78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009a7c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009a80:	d106      	bne.n	8009a90 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 8009a82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a84:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009a88:	d102      	bne.n	8009a90 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009a8a:	4b25      	ldr	r3, [pc, #148]	; (8009b20 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8009a8c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a8e:	e002      	b.n	8009a96 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009a90:	2300      	movs	r3, #0
 8009a92:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009a94:	e123      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009a96:	e122      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009a98:	2300      	movs	r3, #0
 8009a9a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009a9c:	e11f      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 8009a9e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009aa2:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 8009aa6:	430b      	orrs	r3, r1
 8009aa8:	d13c      	bne.n	8009b24 <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
  {
    /* Get SDMMC clock source */
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 8009aaa:	4b1a      	ldr	r3, [pc, #104]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009aac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009aae:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009ab2:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009ab4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ab6:	2b00      	cmp	r3, #0
 8009ab8:	d004      	beq.n	8009ac4 <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 8009aba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009abc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009ac0:	d012      	beq.n	8009ae8 <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 8009ac2:	e023      	b.n	8009b0c <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
    {
      case RCC_SDMMCCLKSOURCE_PLL: /* PLL1 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009ac4:	4b13      	ldr	r3, [pc, #76]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009ac6:	681b      	ldr	r3, [r3, #0]
 8009ac8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009acc:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009ad0:	d107      	bne.n	8009ae2 <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009ad2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009ad6:	4618      	mov	r0, r3
 8009ad8:	f000 fbcc 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009adc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009ade:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ae0:	e0fd      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009ae2:	2300      	movs	r3, #0
 8009ae4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009ae6:	e0fa      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009ae8:	4b0a      	ldr	r3, [pc, #40]	; (8009b14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009aea:	681b      	ldr	r3, [r3, #0]
 8009aec:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009af0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009af4:	d107      	bne.n	8009b06 <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009af6:	f107 0318 	add.w	r3, r7, #24
 8009afa:	4618      	mov	r0, r3
 8009afc:	f000 f912 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
 8009b00:	6a3b      	ldr	r3, [r7, #32]
 8009b02:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009b04:	e0eb      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009b06:	2300      	movs	r3, #0
 8009b08:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b0a:	e0e8      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009b0c:	2300      	movs	r3, #0
 8009b0e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b10:	e0e5      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009b12:	bf00      	nop
 8009b14:	58024400 	.word	0x58024400
 8009b18:	03d09000 	.word	0x03d09000
 8009b1c:	003d0900 	.word	0x003d0900
 8009b20:	017d7840 	.word	0x017d7840
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
 8009b24:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009b28:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8009b2c:	430b      	orrs	r3, r1
 8009b2e:	f040 8085 	bne.w	8009c3c <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
  {
    /* Get SPI6 clock source */
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
 8009b32:	4b6d      	ldr	r3, [pc, #436]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009b34:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b36:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8009b3a:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009b3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b3e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009b42:	d06b      	beq.n	8009c1c <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 8009b44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b46:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009b4a:	d874      	bhi.n	8009c36 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009b4c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b4e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009b52:	d056      	beq.n	8009c02 <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 8009b54:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b56:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009b5a:	d86c      	bhi.n	8009c36 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009b5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b5e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009b62:	d03b      	beq.n	8009bdc <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 8009b64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b66:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009b6a:	d864      	bhi.n	8009c36 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009b6c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b6e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009b72:	d021      	beq.n	8009bb8 <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 8009b74:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b76:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009b7a:	d85c      	bhi.n	8009c36 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009b7c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b7e:	2b00      	cmp	r3, #0
 8009b80:	d004      	beq.n	8009b8c <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 8009b82:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b84:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009b88:	d004      	beq.n	8009b94 <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 8009b8a:	e054      	b.n	8009c36 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
    {
      case RCC_SPI6CLKSOURCE_D3PCLK1: /* D3PCLK1 (PCLK4) is the clock source for SPI6 */
      {
        frequency = HAL_RCCEx_GetD3PCLK1Freq();
 8009b8c:	f000 f8b4 	bl	8009cf8 <HAL_RCCEx_GetD3PCLK1Freq>
 8009b90:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8009b92:	e0a4      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009b94:	4b54      	ldr	r3, [pc, #336]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009b96:	681b      	ldr	r3, [r3, #0]
 8009b98:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009b9c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009ba0:	d107      	bne.n	8009bb2 <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009ba2:	f107 0318 	add.w	r3, r7, #24
 8009ba6:	4618      	mov	r0, r3
 8009ba8:	f000 f8bc 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009bac:	69fb      	ldr	r3, [r7, #28]
 8009bae:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009bb0:	e095      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009bb2:	2300      	movs	r3, #0
 8009bb4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009bb6:	e092      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009bb8:	4b4b      	ldr	r3, [pc, #300]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009bc0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009bc4:	d107      	bne.n	8009bd6 <HAL_RCCEx_GetPeriphCLKFreq+0x882>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009bc6:	f107 030c 	add.w	r3, r7, #12
 8009bca:	4618      	mov	r0, r3
 8009bcc:	f000 f9fe 	bl	8009fcc <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 8009bd0:	693b      	ldr	r3, [r7, #16]
 8009bd2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009bd4:	e083      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009bd6:	2300      	movs	r3, #0
 8009bd8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009bda:	e080      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSI: /* HSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009bdc:	4b42      	ldr	r3, [pc, #264]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009bde:	681b      	ldr	r3, [r3, #0]
 8009be0:	f003 0304 	and.w	r3, r3, #4
 8009be4:	2b04      	cmp	r3, #4
 8009be6:	d109      	bne.n	8009bfc <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009be8:	4b3f      	ldr	r3, [pc, #252]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009bea:	681b      	ldr	r3, [r3, #0]
 8009bec:	08db      	lsrs	r3, r3, #3
 8009bee:	f003 0303 	and.w	r3, r3, #3
 8009bf2:	4a3e      	ldr	r2, [pc, #248]	; (8009cec <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 8009bf4:	fa22 f303 	lsr.w	r3, r2, r3
 8009bf8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009bfa:	e070      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009bfc:	2300      	movs	r3, #0
 8009bfe:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c00:	e06d      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_CSI: /* CSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009c02:	4b39      	ldr	r3, [pc, #228]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009c04:	681b      	ldr	r3, [r3, #0]
 8009c06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009c0a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009c0e:	d102      	bne.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
        {
          frequency = CSI_VALUE;
 8009c10:	4b37      	ldr	r3, [pc, #220]	; (8009cf0 <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 8009c12:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009c14:	e063      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009c16:	2300      	movs	r3, #0
 8009c18:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c1a:	e060      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSE: /* HSE is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009c1c:	4b32      	ldr	r3, [pc, #200]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009c1e:	681b      	ldr	r3, [r3, #0]
 8009c20:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009c24:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009c28:	d102      	bne.n	8009c30 <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
        {
          frequency = HSE_VALUE;
 8009c2a:	4b32      	ldr	r3, [pc, #200]	; (8009cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 8009c2c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009c2e:	e056      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009c30:	2300      	movs	r3, #0
 8009c32:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c34:	e053      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
        break;
      }
#endif /* RCC_SPI6CLKSOURCE_PIN */
      default :
      {
        frequency = 0;
 8009c36:	2300      	movs	r3, #0
 8009c38:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c3a:	e050      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
 8009c3c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009c40:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 8009c44:	430b      	orrs	r3, r1
 8009c46:	d148      	bne.n	8009cda <HAL_RCCEx_GetPeriphCLKFreq+0x986>
  {
    /* Get FDCAN clock source */
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
 8009c48:	4b27      	ldr	r3, [pc, #156]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009c4a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009c4c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009c50:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009c52:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c54:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009c58:	d02a      	beq.n	8009cb0 <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 8009c5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c5c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009c60:	d838      	bhi.n	8009cd4 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 8009c62:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c64:	2b00      	cmp	r3, #0
 8009c66:	d004      	beq.n	8009c72 <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8009c68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c6a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009c6e:	d00d      	beq.n	8009c8c <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 8009c70:	e030      	b.n	8009cd4 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
    {
      case RCC_FDCANCLKSOURCE_HSE: /* HSE is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009c72:	4b1d      	ldr	r3, [pc, #116]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009c7a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009c7e:	d102      	bne.n	8009c86 <HAL_RCCEx_GetPeriphCLKFreq+0x932>
        {
          frequency = HSE_VALUE;
 8009c80:	4b1c      	ldr	r3, [pc, #112]	; (8009cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 8009c82:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009c84:	e02b      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009c86:	2300      	movs	r3, #0
 8009c88:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c8a:	e028      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL: /* PLL is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009c8c:	4b16      	ldr	r3, [pc, #88]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009c94:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009c98:	d107      	bne.n	8009caa <HAL_RCCEx_GetPeriphCLKFreq+0x956>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009c9a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009c9e:	4618      	mov	r0, r3
 8009ca0:	f000 fae8 	bl	800a274 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009ca4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009ca6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ca8:	e019      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009caa:	2300      	movs	r3, #0
 8009cac:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009cae:	e016      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009cb0:	4b0d      	ldr	r3, [pc, #52]	; (8009ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009cb2:	681b      	ldr	r3, [r3, #0]
 8009cb4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009cb8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009cbc:	d107      	bne.n	8009cce <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009cbe:	f107 0318 	add.w	r3, r7, #24
 8009cc2:	4618      	mov	r0, r3
 8009cc4:	f000 f82e 	bl	8009d24 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009cc8:	69fb      	ldr	r3, [r7, #28]
 8009cca:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ccc:	e007      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009cce:	2300      	movs	r3, #0
 8009cd0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009cd2:	e004      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 8009cd4:	2300      	movs	r3, #0
 8009cd6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009cd8:	e001      	b.n	8009cde <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else
  {
    frequency = 0;
 8009cda:	2300      	movs	r3, #0
 8009cdc:	63fb      	str	r3, [r7, #60]	; 0x3c
  }

  return frequency;
 8009cde:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8009ce0:	4618      	mov	r0, r3
 8009ce2:	3740      	adds	r7, #64	; 0x40
 8009ce4:	46bd      	mov	sp, r7
 8009ce6:	bd80      	pop	{r7, pc}
 8009ce8:	58024400 	.word	0x58024400
 8009cec:	03d09000 	.word	0x03d09000
 8009cf0:	003d0900 	.word	0x003d0900
 8009cf4:	017d7840 	.word	0x017d7840

08009cf8 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 8009cf8:	b580      	push	{r7, lr}
 8009cfa:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 8009cfc:	f7fe f944 	bl	8007f88 <HAL_RCC_GetHCLKFreq>
 8009d00:	4602      	mov	r2, r0
 8009d02:	4b06      	ldr	r3, [pc, #24]	; (8009d1c <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8009d04:	6a1b      	ldr	r3, [r3, #32]
 8009d06:	091b      	lsrs	r3, r3, #4
 8009d08:	f003 0307 	and.w	r3, r3, #7
 8009d0c:	4904      	ldr	r1, [pc, #16]	; (8009d20 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009d0e:	5ccb      	ldrb	r3, [r1, r3]
 8009d10:	f003 031f 	and.w	r3, r3, #31
 8009d14:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8009d18:	4618      	mov	r0, r3
 8009d1a:	bd80      	pop	{r7, pc}
 8009d1c:	58024400 	.word	0x58024400
 8009d20:	08027c80 	.word	0x08027c80

08009d24 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8009d24:	b480      	push	{r7}
 8009d26:	b089      	sub	sp, #36	; 0x24
 8009d28:	af00      	add	r7, sp, #0
 8009d2a:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009d2c:	4ba1      	ldr	r3, [pc, #644]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d30:	f003 0303 	and.w	r3, r3, #3
 8009d34:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 8009d36:	4b9f      	ldr	r3, [pc, #636]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d3a:	0b1b      	lsrs	r3, r3, #12
 8009d3c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009d40:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 8009d42:	4b9c      	ldr	r3, [pc, #624]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d46:	091b      	lsrs	r3, r3, #4
 8009d48:	f003 0301 	and.w	r3, r3, #1
 8009d4c:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 8009d4e:	4b99      	ldr	r3, [pc, #612]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009d52:	08db      	lsrs	r3, r3, #3
 8009d54:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009d58:	693a      	ldr	r2, [r7, #16]
 8009d5a:	fb02 f303 	mul.w	r3, r2, r3
 8009d5e:	ee07 3a90 	vmov	s15, r3
 8009d62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d66:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8009d6a:	697b      	ldr	r3, [r7, #20]
 8009d6c:	2b00      	cmp	r3, #0
 8009d6e:	f000 8111 	beq.w	8009f94 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 8009d72:	69bb      	ldr	r3, [r7, #24]
 8009d74:	2b02      	cmp	r3, #2
 8009d76:	f000 8083 	beq.w	8009e80 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009d7a:	69bb      	ldr	r3, [r7, #24]
 8009d7c:	2b02      	cmp	r3, #2
 8009d7e:	f200 80a1 	bhi.w	8009ec4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009d82:	69bb      	ldr	r3, [r7, #24]
 8009d84:	2b00      	cmp	r3, #0
 8009d86:	d003      	beq.n	8009d90 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009d88:	69bb      	ldr	r3, [r7, #24]
 8009d8a:	2b01      	cmp	r3, #1
 8009d8c:	d056      	beq.n	8009e3c <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009d8e:	e099      	b.n	8009ec4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009d90:	4b88      	ldr	r3, [pc, #544]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d92:	681b      	ldr	r3, [r3, #0]
 8009d94:	f003 0320 	and.w	r3, r3, #32
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d02d      	beq.n	8009df8 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009d9c:	4b85      	ldr	r3, [pc, #532]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d9e:	681b      	ldr	r3, [r3, #0]
 8009da0:	08db      	lsrs	r3, r3, #3
 8009da2:	f003 0303 	and.w	r3, r3, #3
 8009da6:	4a84      	ldr	r2, [pc, #528]	; (8009fb8 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8009da8:	fa22 f303 	lsr.w	r3, r2, r3
 8009dac:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009dae:	68bb      	ldr	r3, [r7, #8]
 8009db0:	ee07 3a90 	vmov	s15, r3
 8009db4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009db8:	697b      	ldr	r3, [r7, #20]
 8009dba:	ee07 3a90 	vmov	s15, r3
 8009dbe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dc2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009dc6:	4b7b      	ldr	r3, [pc, #492]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009dca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009dce:	ee07 3a90 	vmov	s15, r3
 8009dd2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009dd6:	ed97 6a03 	vldr	s12, [r7, #12]
 8009dda:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009fbc <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009dde:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009de2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009de6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009dea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009dee:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009df2:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009df6:	e087      	b.n	8009f08 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009df8:	697b      	ldr	r3, [r7, #20]
 8009dfa:	ee07 3a90 	vmov	s15, r3
 8009dfe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e02:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009fc0 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8009e06:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009e0a:	4b6a      	ldr	r3, [pc, #424]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e0e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009e12:	ee07 3a90 	vmov	s15, r3
 8009e16:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009e1a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009e1e:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009fbc <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009e22:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009e26:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009e2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009e2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e32:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009e36:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009e3a:	e065      	b.n	8009f08 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009e3c:	697b      	ldr	r3, [r7, #20]
 8009e3e:	ee07 3a90 	vmov	s15, r3
 8009e42:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e46:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009fc4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009e4a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009e4e:	4b59      	ldr	r3, [pc, #356]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e52:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009e56:	ee07 3a90 	vmov	s15, r3
 8009e5a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009e5e:	ed97 6a03 	vldr	s12, [r7, #12]
 8009e62:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009fbc <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009e66:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009e6a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009e6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009e72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e76:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009e7a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009e7e:	e043      	b.n	8009f08 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009e80:	697b      	ldr	r3, [r7, #20]
 8009e82:	ee07 3a90 	vmov	s15, r3
 8009e86:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e8a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009fc8 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009e8e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009e92:	4b48      	ldr	r3, [pc, #288]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e96:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009e9a:	ee07 3a90 	vmov	s15, r3
 8009e9e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ea2:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ea6:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009fbc <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009eaa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009eae:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009eb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009eb6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009eba:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009ebe:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009ec2:	e021      	b.n	8009f08 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009ec4:	697b      	ldr	r3, [r7, #20]
 8009ec6:	ee07 3a90 	vmov	s15, r3
 8009eca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ece:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009fc4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009ed2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009ed6:	4b37      	ldr	r3, [pc, #220]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ed8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009eda:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ede:	ee07 3a90 	vmov	s15, r3
 8009ee2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ee6:	ed97 6a03 	vldr	s12, [r7, #12]
 8009eea:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009fbc <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009eee:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ef2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ef6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009efa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009efe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f02:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009f06:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8009f08:	4b2a      	ldr	r3, [pc, #168]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f0c:	0a5b      	lsrs	r3, r3, #9
 8009f0e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009f12:	ee07 3a90 	vmov	s15, r3
 8009f16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009f1e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009f22:	edd7 6a07 	vldr	s13, [r7, #28]
 8009f26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009f2a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009f2e:	ee17 2a90 	vmov	r2, s15
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8009f36:	4b1f      	ldr	r3, [pc, #124]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f3a:	0c1b      	lsrs	r3, r3, #16
 8009f3c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009f40:	ee07 3a90 	vmov	s15, r3
 8009f44:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009f4c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009f50:	edd7 6a07 	vldr	s13, [r7, #28]
 8009f54:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009f58:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009f5c:	ee17 2a90 	vmov	r2, s15
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8009f64:	4b13      	ldr	r3, [pc, #76]	; (8009fb4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f68:	0e1b      	lsrs	r3, r3, #24
 8009f6a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009f6e:	ee07 3a90 	vmov	s15, r3
 8009f72:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009f7a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009f7e:	edd7 6a07 	vldr	s13, [r7, #28]
 8009f82:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009f86:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009f8a:	ee17 2a90 	vmov	r2, s15
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8009f92:	e008      	b.n	8009fa6 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	2200      	movs	r2, #0
 8009f98:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	2200      	movs	r2, #0
 8009f9e:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	2200      	movs	r2, #0
 8009fa4:	609a      	str	r2, [r3, #8]
}
 8009fa6:	bf00      	nop
 8009fa8:	3724      	adds	r7, #36	; 0x24
 8009faa:	46bd      	mov	sp, r7
 8009fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fb0:	4770      	bx	lr
 8009fb2:	bf00      	nop
 8009fb4:	58024400 	.word	0x58024400
 8009fb8:	03d09000 	.word	0x03d09000
 8009fbc:	46000000 	.word	0x46000000
 8009fc0:	4c742400 	.word	0x4c742400
 8009fc4:	4a742400 	.word	0x4a742400
 8009fc8:	4bbebc20 	.word	0x4bbebc20

08009fcc <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8009fcc:	b480      	push	{r7}
 8009fce:	b089      	sub	sp, #36	; 0x24
 8009fd0:	af00      	add	r7, sp, #0
 8009fd2:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009fd4:	4ba1      	ldr	r3, [pc, #644]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009fd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009fd8:	f003 0303 	and.w	r3, r3, #3
 8009fdc:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 8009fde:	4b9f      	ldr	r3, [pc, #636]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009fe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009fe2:	0d1b      	lsrs	r3, r3, #20
 8009fe4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009fe8:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 8009fea:	4b9c      	ldr	r3, [pc, #624]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fee:	0a1b      	lsrs	r3, r3, #8
 8009ff0:	f003 0301 	and.w	r3, r3, #1
 8009ff4:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 8009ff6:	4b99      	ldr	r3, [pc, #612]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009ff8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ffa:	08db      	lsrs	r3, r3, #3
 8009ffc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a000:	693a      	ldr	r2, [r7, #16]
 800a002:	fb02 f303 	mul.w	r3, r2, r3
 800a006:	ee07 3a90 	vmov	s15, r3
 800a00a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a00e:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 800a012:	697b      	ldr	r3, [r7, #20]
 800a014:	2b00      	cmp	r3, #0
 800a016:	f000 8111 	beq.w	800a23c <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 800a01a:	69bb      	ldr	r3, [r7, #24]
 800a01c:	2b02      	cmp	r3, #2
 800a01e:	f000 8083 	beq.w	800a128 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800a022:	69bb      	ldr	r3, [r7, #24]
 800a024:	2b02      	cmp	r3, #2
 800a026:	f200 80a1 	bhi.w	800a16c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a02a:	69bb      	ldr	r3, [r7, #24]
 800a02c:	2b00      	cmp	r3, #0
 800a02e:	d003      	beq.n	800a038 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800a030:	69bb      	ldr	r3, [r7, #24]
 800a032:	2b01      	cmp	r3, #1
 800a034:	d056      	beq.n	800a0e4 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800a036:	e099      	b.n	800a16c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800a038:	4b88      	ldr	r3, [pc, #544]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a03a:	681b      	ldr	r3, [r3, #0]
 800a03c:	f003 0320 	and.w	r3, r3, #32
 800a040:	2b00      	cmp	r3, #0
 800a042:	d02d      	beq.n	800a0a0 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800a044:	4b85      	ldr	r3, [pc, #532]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	08db      	lsrs	r3, r3, #3
 800a04a:	f003 0303 	and.w	r3, r3, #3
 800a04e:	4a84      	ldr	r2, [pc, #528]	; (800a260 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800a050:	fa22 f303 	lsr.w	r3, r2, r3
 800a054:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a056:	68bb      	ldr	r3, [r7, #8]
 800a058:	ee07 3a90 	vmov	s15, r3
 800a05c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a060:	697b      	ldr	r3, [r7, #20]
 800a062:	ee07 3a90 	vmov	s15, r3
 800a066:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a06a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a06e:	4b7b      	ldr	r3, [pc, #492]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a070:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a072:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a076:	ee07 3a90 	vmov	s15, r3
 800a07a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a07e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a082:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a264 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a086:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a08a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a08e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a092:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a096:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a09a:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800a09e:	e087      	b.n	800a1b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a0a0:	697b      	ldr	r3, [r7, #20]
 800a0a2:	ee07 3a90 	vmov	s15, r3
 800a0a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0aa:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a268 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800a0ae:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a0b2:	4b6a      	ldr	r3, [pc, #424]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0b6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a0ba:	ee07 3a90 	vmov	s15, r3
 800a0be:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a0c2:	ed97 6a03 	vldr	s12, [r7, #12]
 800a0c6:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a264 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a0ca:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a0ce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a0d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a0d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0da:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a0de:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a0e2:	e065      	b.n	800a1b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a0e4:	697b      	ldr	r3, [r7, #20]
 800a0e6:	ee07 3a90 	vmov	s15, r3
 800a0ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0ee:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a26c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a0f2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a0f6:	4b59      	ldr	r3, [pc, #356]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a0fe:	ee07 3a90 	vmov	s15, r3
 800a102:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a106:	ed97 6a03 	vldr	s12, [r7, #12]
 800a10a:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a264 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a10e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a112:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a116:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a11a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a11e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a122:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a126:	e043      	b.n	800a1b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a128:	697b      	ldr	r3, [r7, #20]
 800a12a:	ee07 3a90 	vmov	s15, r3
 800a12e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a132:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a270 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800a136:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a13a:	4b48      	ldr	r3, [pc, #288]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a13c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a13e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a142:	ee07 3a90 	vmov	s15, r3
 800a146:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a14a:	ed97 6a03 	vldr	s12, [r7, #12]
 800a14e:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a264 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a152:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a156:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a15a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a15e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a162:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a166:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a16a:	e021      	b.n	800a1b0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a16c:	697b      	ldr	r3, [r7, #20]
 800a16e:	ee07 3a90 	vmov	s15, r3
 800a172:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a176:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a26c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a17a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a17e:	4b37      	ldr	r3, [pc, #220]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a182:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a186:	ee07 3a90 	vmov	s15, r3
 800a18a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a18e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a192:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a264 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a196:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a19a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a19e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a1a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a1aa:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a1ae:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 800a1b0:	4b2a      	ldr	r3, [pc, #168]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1b4:	0a5b      	lsrs	r3, r3, #9
 800a1b6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a1ba:	ee07 3a90 	vmov	s15, r3
 800a1be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a1c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a1c6:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a1ca:	edd7 6a07 	vldr	s13, [r7, #28]
 800a1ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a1d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a1d6:	ee17 2a90 	vmov	r2, s15
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 800a1de:	4b1f      	ldr	r3, [pc, #124]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1e2:	0c1b      	lsrs	r3, r3, #16
 800a1e4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a1e8:	ee07 3a90 	vmov	s15, r3
 800a1ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a1f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a1f4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a1f8:	edd7 6a07 	vldr	s13, [r7, #28]
 800a1fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a200:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a204:	ee17 2a90 	vmov	r2, s15
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 800a20c:	4b13      	ldr	r3, [pc, #76]	; (800a25c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a20e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a210:	0e1b      	lsrs	r3, r3, #24
 800a212:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a216:	ee07 3a90 	vmov	s15, r3
 800a21a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a21e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a222:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a226:	edd7 6a07 	vldr	s13, [r7, #28]
 800a22a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a22e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a232:	ee17 2a90 	vmov	r2, s15
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 800a23a:	e008      	b.n	800a24e <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	2200      	movs	r2, #0
 800a240:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 800a242:	687b      	ldr	r3, [r7, #4]
 800a244:	2200      	movs	r2, #0
 800a246:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 800a248:	687b      	ldr	r3, [r7, #4]
 800a24a:	2200      	movs	r2, #0
 800a24c:	609a      	str	r2, [r3, #8]
}
 800a24e:	bf00      	nop
 800a250:	3724      	adds	r7, #36	; 0x24
 800a252:	46bd      	mov	sp, r7
 800a254:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a258:	4770      	bx	lr
 800a25a:	bf00      	nop
 800a25c:	58024400 	.word	0x58024400
 800a260:	03d09000 	.word	0x03d09000
 800a264:	46000000 	.word	0x46000000
 800a268:	4c742400 	.word	0x4c742400
 800a26c:	4a742400 	.word	0x4a742400
 800a270:	4bbebc20 	.word	0x4bbebc20

0800a274 <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 800a274:	b480      	push	{r7}
 800a276:	b089      	sub	sp, #36	; 0x24
 800a278:	af00      	add	r7, sp, #0
 800a27a:	6078      	str	r0, [r7, #4]
  uint32_t pllsource, pll1m, pll1fracen, hsivalue;
  float_t fracn1, pll1vco;

  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800a27c:	4ba0      	ldr	r3, [pc, #640]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a27e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a280:	f003 0303 	and.w	r3, r3, #3
 800a284:	61bb      	str	r3, [r7, #24]
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 800a286:	4b9e      	ldr	r3, [pc, #632]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a288:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a28a:	091b      	lsrs	r3, r3, #4
 800a28c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a290:	617b      	str	r3, [r7, #20]
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
 800a292:	4b9b      	ldr	r3, [pc, #620]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a296:	f003 0301 	and.w	r3, r3, #1
 800a29a:	613b      	str	r3, [r7, #16]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 800a29c:	4b98      	ldr	r3, [pc, #608]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a29e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a2a0:	08db      	lsrs	r3, r3, #3
 800a2a2:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a2a6:	693a      	ldr	r2, [r7, #16]
 800a2a8:	fb02 f303 	mul.w	r3, r2, r3
 800a2ac:	ee07 3a90 	vmov	s15, r3
 800a2b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2b4:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll1m != 0U)
 800a2b8:	697b      	ldr	r3, [r7, #20]
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	f000 8111 	beq.w	800a4e2 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
  {
    switch (pllsource)
 800a2c0:	69bb      	ldr	r3, [r7, #24]
 800a2c2:	2b02      	cmp	r3, #2
 800a2c4:	f000 8083 	beq.w	800a3ce <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 800a2c8:	69bb      	ldr	r3, [r7, #24]
 800a2ca:	2b02      	cmp	r3, #2
 800a2cc:	f200 80a1 	bhi.w	800a412 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800a2d0:	69bb      	ldr	r3, [r7, #24]
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d003      	beq.n	800a2de <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 800a2d6:	69bb      	ldr	r3, [r7, #24]
 800a2d8:	2b01      	cmp	r3, #1
 800a2da:	d056      	beq.n	800a38a <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 800a2dc:	e099      	b.n	800a412 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800a2de:	4b88      	ldr	r3, [pc, #544]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a2e0:	681b      	ldr	r3, [r3, #0]
 800a2e2:	f003 0320 	and.w	r3, r3, #32
 800a2e6:	2b00      	cmp	r3, #0
 800a2e8:	d02d      	beq.n	800a346 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800a2ea:	4b85      	ldr	r3, [pc, #532]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	08db      	lsrs	r3, r3, #3
 800a2f0:	f003 0303 	and.w	r3, r3, #3
 800a2f4:	4a83      	ldr	r2, [pc, #524]	; (800a504 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 800a2f6:	fa22 f303 	lsr.w	r3, r2, r3
 800a2fa:	60bb      	str	r3, [r7, #8]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a2fc:	68bb      	ldr	r3, [r7, #8]
 800a2fe:	ee07 3a90 	vmov	s15, r3
 800a302:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a306:	697b      	ldr	r3, [r7, #20]
 800a308:	ee07 3a90 	vmov	s15, r3
 800a30c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a310:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a314:	4b7a      	ldr	r3, [pc, #488]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a318:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a31c:	ee07 3a90 	vmov	s15, r3
 800a320:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a324:	ed97 6a03 	vldr	s12, [r7, #12]
 800a328:	eddf 5a77 	vldr	s11, [pc, #476]	; 800a508 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a32c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a330:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a334:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a338:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a33c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a340:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800a344:	e087      	b.n	800a456 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a346:	697b      	ldr	r3, [r7, #20]
 800a348:	ee07 3a90 	vmov	s15, r3
 800a34c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a350:	eddf 6a6e 	vldr	s13, [pc, #440]	; 800a50c <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a354:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a358:	4b69      	ldr	r3, [pc, #420]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a35a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a35c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a360:	ee07 3a90 	vmov	s15, r3
 800a364:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a368:	ed97 6a03 	vldr	s12, [r7, #12]
 800a36c:	eddf 5a66 	vldr	s11, [pc, #408]	; 800a508 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a370:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a374:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a378:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a37c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a380:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a384:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a388:	e065      	b.n	800a456 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a38a:	697b      	ldr	r3, [r7, #20]
 800a38c:	ee07 3a90 	vmov	s15, r3
 800a390:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a394:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800a510 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 800a398:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a39c:	4b58      	ldr	r3, [pc, #352]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a39e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a3a0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a3a4:	ee07 3a90 	vmov	s15, r3
 800a3a8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a3ac:	ed97 6a03 	vldr	s12, [r7, #12]
 800a3b0:	eddf 5a55 	vldr	s11, [pc, #340]	; 800a508 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a3b4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a3b8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a3bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a3c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a3c4:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a3c8:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a3cc:	e043      	b.n	800a456 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a3ce:	697b      	ldr	r3, [r7, #20]
 800a3d0:	ee07 3a90 	vmov	s15, r3
 800a3d4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a3d8:	eddf 6a4e 	vldr	s13, [pc, #312]	; 800a514 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 800a3dc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a3e0:	4b47      	ldr	r3, [pc, #284]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a3e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a3e4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a3e8:	ee07 3a90 	vmov	s15, r3
 800a3ec:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a3f0:	ed97 6a03 	vldr	s12, [r7, #12]
 800a3f4:	eddf 5a44 	vldr	s11, [pc, #272]	; 800a508 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a3f8:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a3fc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a400:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a404:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a408:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a40c:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a410:	e021      	b.n	800a456 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      default:
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a412:	697b      	ldr	r3, [r7, #20]
 800a414:	ee07 3a90 	vmov	s15, r3
 800a418:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a41c:	eddf 6a3b 	vldr	s13, [pc, #236]	; 800a50c <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a420:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a424:	4b36      	ldr	r3, [pc, #216]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a428:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a42c:	ee07 3a90 	vmov	s15, r3
 800a430:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a434:	ed97 6a03 	vldr	s12, [r7, #12]
 800a438:	eddf 5a33 	vldr	s11, [pc, #204]	; 800a508 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a43c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a440:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a444:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a448:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a44c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a450:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a454:	bf00      	nop
    }

    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
 800a456:	4b2a      	ldr	r3, [pc, #168]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a45a:	0a5b      	lsrs	r3, r3, #9
 800a45c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a460:	ee07 3a90 	vmov	s15, r3
 800a464:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a468:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a46c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a470:	edd7 6a07 	vldr	s13, [r7, #28]
 800a474:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a478:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a47c:	ee17 2a90 	vmov	r2, s15
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
 800a484:	4b1e      	ldr	r3, [pc, #120]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a488:	0c1b      	lsrs	r3, r3, #16
 800a48a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a48e:	ee07 3a90 	vmov	s15, r3
 800a492:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a496:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a49a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a49e:	edd7 6a07 	vldr	s13, [r7, #28]
 800a4a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a4a6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a4aa:	ee17 2a90 	vmov	r2, s15
 800a4ae:	687b      	ldr	r3, [r7, #4]
 800a4b0:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
 800a4b2:	4b13      	ldr	r3, [pc, #76]	; (800a500 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a4b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4b6:	0e1b      	lsrs	r3, r3, #24
 800a4b8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a4bc:	ee07 3a90 	vmov	s15, r3
 800a4c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a4c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a4c8:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a4cc:	edd7 6a07 	vldr	s13, [r7, #28]
 800a4d0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a4d4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a4d8:	ee17 2a90 	vmov	r2, s15
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	609a      	str	r2, [r3, #8]
    PLL1_Clocks->PLL1_P_Frequency = 0U;
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 800a4e0:	e008      	b.n	800a4f4 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 800a4e2:	687b      	ldr	r3, [r7, #4]
 800a4e4:	2200      	movs	r2, #0
 800a4e6:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 800a4e8:	687b      	ldr	r3, [r7, #4]
 800a4ea:	2200      	movs	r2, #0
 800a4ec:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	2200      	movs	r2, #0
 800a4f2:	609a      	str	r2, [r3, #8]
}
 800a4f4:	bf00      	nop
 800a4f6:	3724      	adds	r7, #36	; 0x24
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4fe:	4770      	bx	lr
 800a500:	58024400 	.word	0x58024400
 800a504:	03d09000 	.word	0x03d09000
 800a508:	46000000 	.word	0x46000000
 800a50c:	4c742400 	.word	0x4c742400
 800a510:	4a742400 	.word	0x4a742400
 800a514:	4bbebc20 	.word	0x4bbebc20

0800a518 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 800a518:	b580      	push	{r7, lr}
 800a51a:	b084      	sub	sp, #16
 800a51c:	af00      	add	r7, sp, #0
 800a51e:	6078      	str	r0, [r7, #4]
 800a520:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a522:	2300      	movs	r3, #0
 800a524:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a526:	4b53      	ldr	r3, [pc, #332]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a528:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a52a:	f003 0303 	and.w	r3, r3, #3
 800a52e:	2b03      	cmp	r3, #3
 800a530:	d101      	bne.n	800a536 <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800a532:	2301      	movs	r3, #1
 800a534:	e099      	b.n	800a66a <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 800a536:	4b4f      	ldr	r3, [pc, #316]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	4a4e      	ldr	r2, [pc, #312]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a53c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a540:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a542:	f7f7 fc85 	bl	8001e50 <HAL_GetTick>
 800a546:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a548:	e008      	b.n	800a55c <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a54a:	f7f7 fc81 	bl	8001e50 <HAL_GetTick>
 800a54e:	4602      	mov	r2, r0
 800a550:	68bb      	ldr	r3, [r7, #8]
 800a552:	1ad3      	subs	r3, r2, r3
 800a554:	2b02      	cmp	r3, #2
 800a556:	d901      	bls.n	800a55c <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a558:	2303      	movs	r3, #3
 800a55a:	e086      	b.n	800a66a <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a55c:	4b45      	ldr	r3, [pc, #276]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a55e:	681b      	ldr	r3, [r3, #0]
 800a560:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a564:	2b00      	cmp	r3, #0
 800a566:	d1f0      	bne.n	800a54a <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 800a568:	4b42      	ldr	r3, [pc, #264]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a56a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a56c:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	031b      	lsls	r3, r3, #12
 800a576:	493f      	ldr	r1, [pc, #252]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a578:	4313      	orrs	r3, r2
 800a57a:	628b      	str	r3, [r1, #40]	; 0x28
 800a57c:	687b      	ldr	r3, [r7, #4]
 800a57e:	685b      	ldr	r3, [r3, #4]
 800a580:	3b01      	subs	r3, #1
 800a582:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a586:	687b      	ldr	r3, [r7, #4]
 800a588:	689b      	ldr	r3, [r3, #8]
 800a58a:	3b01      	subs	r3, #1
 800a58c:	025b      	lsls	r3, r3, #9
 800a58e:	b29b      	uxth	r3, r3
 800a590:	431a      	orrs	r2, r3
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	68db      	ldr	r3, [r3, #12]
 800a596:	3b01      	subs	r3, #1
 800a598:	041b      	lsls	r3, r3, #16
 800a59a:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a59e:	431a      	orrs	r2, r3
 800a5a0:	687b      	ldr	r3, [r7, #4]
 800a5a2:	691b      	ldr	r3, [r3, #16]
 800a5a4:	3b01      	subs	r3, #1
 800a5a6:	061b      	lsls	r3, r3, #24
 800a5a8:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a5ac:	4931      	ldr	r1, [pc, #196]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5ae:	4313      	orrs	r3, r2
 800a5b0:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 800a5b2:	4b30      	ldr	r3, [pc, #192]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5b6:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	695b      	ldr	r3, [r3, #20]
 800a5be:	492d      	ldr	r1, [pc, #180]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5c0:	4313      	orrs	r3, r2
 800a5c2:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 800a5c4:	4b2b      	ldr	r3, [pc, #172]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5c8:	f023 0220 	bic.w	r2, r3, #32
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	699b      	ldr	r3, [r3, #24]
 800a5d0:	4928      	ldr	r1, [pc, #160]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5d2:	4313      	orrs	r3, r2
 800a5d4:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 800a5d6:	4b27      	ldr	r3, [pc, #156]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5da:	4a26      	ldr	r2, [pc, #152]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5dc:	f023 0310 	bic.w	r3, r3, #16
 800a5e0:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800a5e2:	4b24      	ldr	r3, [pc, #144]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5e4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a5e6:	4b24      	ldr	r3, [pc, #144]	; (800a678 <RCCEx_PLL2_Config+0x160>)
 800a5e8:	4013      	ands	r3, r2
 800a5ea:	687a      	ldr	r2, [r7, #4]
 800a5ec:	69d2      	ldr	r2, [r2, #28]
 800a5ee:	00d2      	lsls	r2, r2, #3
 800a5f0:	4920      	ldr	r1, [pc, #128]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5f2:	4313      	orrs	r3, r2
 800a5f4:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800a5f6:	4b1f      	ldr	r3, [pc, #124]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5fa:	4a1e      	ldr	r2, [pc, #120]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a5fc:	f043 0310 	orr.w	r3, r3, #16
 800a600:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a602:	683b      	ldr	r3, [r7, #0]
 800a604:	2b00      	cmp	r3, #0
 800a606:	d106      	bne.n	800a616 <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800a608:	4b1a      	ldr	r3, [pc, #104]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a60a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a60c:	4a19      	ldr	r2, [pc, #100]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a60e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a612:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a614:	e00f      	b.n	800a636 <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a616:	683b      	ldr	r3, [r7, #0]
 800a618:	2b01      	cmp	r3, #1
 800a61a:	d106      	bne.n	800a62a <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800a61c:	4b15      	ldr	r3, [pc, #84]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a61e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a620:	4a14      	ldr	r2, [pc, #80]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a622:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a626:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a628:	e005      	b.n	800a636 <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800a62a:	4b12      	ldr	r3, [pc, #72]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a62c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a62e:	4a11      	ldr	r2, [pc, #68]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a630:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a634:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 800a636:	4b0f      	ldr	r3, [pc, #60]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	4a0e      	ldr	r2, [pc, #56]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a63c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a640:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a642:	f7f7 fc05 	bl	8001e50 <HAL_GetTick>
 800a646:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a648:	e008      	b.n	800a65c <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a64a:	f7f7 fc01 	bl	8001e50 <HAL_GetTick>
 800a64e:	4602      	mov	r2, r0
 800a650:	68bb      	ldr	r3, [r7, #8]
 800a652:	1ad3      	subs	r3, r2, r3
 800a654:	2b02      	cmp	r3, #2
 800a656:	d901      	bls.n	800a65c <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a658:	2303      	movs	r3, #3
 800a65a:	e006      	b.n	800a66a <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a65c:	4b05      	ldr	r3, [pc, #20]	; (800a674 <RCCEx_PLL2_Config+0x15c>)
 800a65e:	681b      	ldr	r3, [r3, #0]
 800a660:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a664:	2b00      	cmp	r3, #0
 800a666:	d0f0      	beq.n	800a64a <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 800a668:	7bfb      	ldrb	r3, [r7, #15]
}
 800a66a:	4618      	mov	r0, r3
 800a66c:	3710      	adds	r7, #16
 800a66e:	46bd      	mov	sp, r7
 800a670:	bd80      	pop	{r7, pc}
 800a672:	bf00      	nop
 800a674:	58024400 	.word	0x58024400
 800a678:	ffff0007 	.word	0xffff0007

0800a67c <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 800a67c:	b580      	push	{r7, lr}
 800a67e:	b084      	sub	sp, #16
 800a680:	af00      	add	r7, sp, #0
 800a682:	6078      	str	r0, [r7, #4]
 800a684:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a686:	2300      	movs	r3, #0
 800a688:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a68a:	4b53      	ldr	r3, [pc, #332]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a68c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a68e:	f003 0303 	and.w	r3, r3, #3
 800a692:	2b03      	cmp	r3, #3
 800a694:	d101      	bne.n	800a69a <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 800a696:	2301      	movs	r3, #1
 800a698:	e099      	b.n	800a7ce <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 800a69a:	4b4f      	ldr	r3, [pc, #316]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a69c:	681b      	ldr	r3, [r3, #0]
 800a69e:	4a4e      	ldr	r2, [pc, #312]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a6a0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a6a4:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a6a6:	f7f7 fbd3 	bl	8001e50 <HAL_GetTick>
 800a6aa:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a6ac:	e008      	b.n	800a6c0 <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a6ae:	f7f7 fbcf 	bl	8001e50 <HAL_GetTick>
 800a6b2:	4602      	mov	r2, r0
 800a6b4:	68bb      	ldr	r3, [r7, #8]
 800a6b6:	1ad3      	subs	r3, r2, r3
 800a6b8:	2b02      	cmp	r3, #2
 800a6ba:	d901      	bls.n	800a6c0 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a6bc:	2303      	movs	r3, #3
 800a6be:	e086      	b.n	800a7ce <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a6c0:	4b45      	ldr	r3, [pc, #276]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a6c8:	2b00      	cmp	r3, #0
 800a6ca:	d1f0      	bne.n	800a6ae <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 800a6cc:	4b42      	ldr	r3, [pc, #264]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a6ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a6d0:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a6d4:	687b      	ldr	r3, [r7, #4]
 800a6d6:	681b      	ldr	r3, [r3, #0]
 800a6d8:	051b      	lsls	r3, r3, #20
 800a6da:	493f      	ldr	r1, [pc, #252]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a6dc:	4313      	orrs	r3, r2
 800a6de:	628b      	str	r3, [r1, #40]	; 0x28
 800a6e0:	687b      	ldr	r3, [r7, #4]
 800a6e2:	685b      	ldr	r3, [r3, #4]
 800a6e4:	3b01      	subs	r3, #1
 800a6e6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a6ea:	687b      	ldr	r3, [r7, #4]
 800a6ec:	689b      	ldr	r3, [r3, #8]
 800a6ee:	3b01      	subs	r3, #1
 800a6f0:	025b      	lsls	r3, r3, #9
 800a6f2:	b29b      	uxth	r3, r3
 800a6f4:	431a      	orrs	r2, r3
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	68db      	ldr	r3, [r3, #12]
 800a6fa:	3b01      	subs	r3, #1
 800a6fc:	041b      	lsls	r3, r3, #16
 800a6fe:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a702:	431a      	orrs	r2, r3
 800a704:	687b      	ldr	r3, [r7, #4]
 800a706:	691b      	ldr	r3, [r3, #16]
 800a708:	3b01      	subs	r3, #1
 800a70a:	061b      	lsls	r3, r3, #24
 800a70c:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a710:	4931      	ldr	r1, [pc, #196]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a712:	4313      	orrs	r3, r2
 800a714:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 800a716:	4b30      	ldr	r3, [pc, #192]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a71a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	695b      	ldr	r3, [r3, #20]
 800a722:	492d      	ldr	r1, [pc, #180]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a724:	4313      	orrs	r3, r2
 800a726:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 800a728:	4b2b      	ldr	r3, [pc, #172]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a72a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a72c:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	699b      	ldr	r3, [r3, #24]
 800a734:	4928      	ldr	r1, [pc, #160]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a736:	4313      	orrs	r3, r2
 800a738:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 800a73a:	4b27      	ldr	r3, [pc, #156]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a73c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a73e:	4a26      	ldr	r2, [pc, #152]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a740:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a744:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800a746:	4b24      	ldr	r3, [pc, #144]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a748:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a74a:	4b24      	ldr	r3, [pc, #144]	; (800a7dc <RCCEx_PLL3_Config+0x160>)
 800a74c:	4013      	ands	r3, r2
 800a74e:	687a      	ldr	r2, [r7, #4]
 800a750:	69d2      	ldr	r2, [r2, #28]
 800a752:	00d2      	lsls	r2, r2, #3
 800a754:	4920      	ldr	r1, [pc, #128]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a756:	4313      	orrs	r3, r2
 800a758:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800a75a:	4b1f      	ldr	r3, [pc, #124]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a75c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a75e:	4a1e      	ldr	r2, [pc, #120]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a760:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a764:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a766:	683b      	ldr	r3, [r7, #0]
 800a768:	2b00      	cmp	r3, #0
 800a76a:	d106      	bne.n	800a77a <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800a76c:	4b1a      	ldr	r3, [pc, #104]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a76e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a770:	4a19      	ldr	r2, [pc, #100]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a772:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a776:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a778:	e00f      	b.n	800a79a <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a77a:	683b      	ldr	r3, [r7, #0]
 800a77c:	2b01      	cmp	r3, #1
 800a77e:	d106      	bne.n	800a78e <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800a780:	4b15      	ldr	r3, [pc, #84]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a782:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a784:	4a14      	ldr	r2, [pc, #80]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a786:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a78a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a78c:	e005      	b.n	800a79a <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800a78e:	4b12      	ldr	r3, [pc, #72]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a790:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a792:	4a11      	ldr	r2, [pc, #68]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a794:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a798:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800a79a:	4b0f      	ldr	r3, [pc, #60]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a79c:	681b      	ldr	r3, [r3, #0]
 800a79e:	4a0e      	ldr	r2, [pc, #56]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a7a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a7a4:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a7a6:	f7f7 fb53 	bl	8001e50 <HAL_GetTick>
 800a7aa:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a7ac:	e008      	b.n	800a7c0 <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a7ae:	f7f7 fb4f 	bl	8001e50 <HAL_GetTick>
 800a7b2:	4602      	mov	r2, r0
 800a7b4:	68bb      	ldr	r3, [r7, #8]
 800a7b6:	1ad3      	subs	r3, r2, r3
 800a7b8:	2b02      	cmp	r3, #2
 800a7ba:	d901      	bls.n	800a7c0 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a7bc:	2303      	movs	r3, #3
 800a7be:	e006      	b.n	800a7ce <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a7c0:	4b05      	ldr	r3, [pc, #20]	; (800a7d8 <RCCEx_PLL3_Config+0x15c>)
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a7c8:	2b00      	cmp	r3, #0
 800a7ca:	d0f0      	beq.n	800a7ae <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 800a7cc:	7bfb      	ldrb	r3, [r7, #15]
}
 800a7ce:	4618      	mov	r0, r3
 800a7d0:	3710      	adds	r7, #16
 800a7d2:	46bd      	mov	sp, r7
 800a7d4:	bd80      	pop	{r7, pc}
 800a7d6:	bf00      	nop
 800a7d8:	58024400 	.word	0x58024400
 800a7dc:	ffff0007 	.word	0xffff0007

0800a7e0 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800a7e0:	b580      	push	{r7, lr}
 800a7e2:	b084      	sub	sp, #16
 800a7e4:	af00      	add	r7, sp, #0
 800a7e6:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800a7e8:	687b      	ldr	r3, [r7, #4]
 800a7ea:	2b00      	cmp	r3, #0
 800a7ec:	d101      	bne.n	800a7f2 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800a7ee:	2301      	movs	r3, #1
 800a7f0:	e10f      	b.n	800aa12 <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a7f2:	687b      	ldr	r3, [r7, #4]
 800a7f4:	2200      	movs	r2, #0
 800a7f6:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	681b      	ldr	r3, [r3, #0]
 800a7fc:	4a87      	ldr	r2, [pc, #540]	; (800aa1c <HAL_SPI_Init+0x23c>)
 800a7fe:	4293      	cmp	r3, r2
 800a800:	d00f      	beq.n	800a822 <HAL_SPI_Init+0x42>
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	4a86      	ldr	r2, [pc, #536]	; (800aa20 <HAL_SPI_Init+0x240>)
 800a808:	4293      	cmp	r3, r2
 800a80a:	d00a      	beq.n	800a822 <HAL_SPI_Init+0x42>
 800a80c:	687b      	ldr	r3, [r7, #4]
 800a80e:	681b      	ldr	r3, [r3, #0]
 800a810:	4a84      	ldr	r2, [pc, #528]	; (800aa24 <HAL_SPI_Init+0x244>)
 800a812:	4293      	cmp	r3, r2
 800a814:	d005      	beq.n	800a822 <HAL_SPI_Init+0x42>
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	68db      	ldr	r3, [r3, #12]
 800a81a:	2b0f      	cmp	r3, #15
 800a81c:	d901      	bls.n	800a822 <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800a81e:	2301      	movs	r3, #1
 800a820:	e0f7      	b.n	800aa12 <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 800a822:	6878      	ldr	r0, [r7, #4]
 800a824:	f001 f9de 	bl	800bbe4 <SPI_GetPacketSize>
 800a828:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	4a7b      	ldr	r2, [pc, #492]	; (800aa1c <HAL_SPI_Init+0x23c>)
 800a830:	4293      	cmp	r3, r2
 800a832:	d00c      	beq.n	800a84e <HAL_SPI_Init+0x6e>
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	4a79      	ldr	r2, [pc, #484]	; (800aa20 <HAL_SPI_Init+0x240>)
 800a83a:	4293      	cmp	r3, r2
 800a83c:	d007      	beq.n	800a84e <HAL_SPI_Init+0x6e>
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	4a78      	ldr	r2, [pc, #480]	; (800aa24 <HAL_SPI_Init+0x244>)
 800a844:	4293      	cmp	r3, r2
 800a846:	d002      	beq.n	800a84e <HAL_SPI_Init+0x6e>
 800a848:	68fb      	ldr	r3, [r7, #12]
 800a84a:	2b08      	cmp	r3, #8
 800a84c:	d811      	bhi.n	800a872 <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a852:	4a72      	ldr	r2, [pc, #456]	; (800aa1c <HAL_SPI_Init+0x23c>)
 800a854:	4293      	cmp	r3, r2
 800a856:	d009      	beq.n	800a86c <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	4a70      	ldr	r2, [pc, #448]	; (800aa20 <HAL_SPI_Init+0x240>)
 800a85e:	4293      	cmp	r3, r2
 800a860:	d004      	beq.n	800a86c <HAL_SPI_Init+0x8c>
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	681b      	ldr	r3, [r3, #0]
 800a866:	4a6f      	ldr	r2, [pc, #444]	; (800aa24 <HAL_SPI_Init+0x244>)
 800a868:	4293      	cmp	r3, r2
 800a86a:	d104      	bne.n	800a876 <HAL_SPI_Init+0x96>
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	2b10      	cmp	r3, #16
 800a870:	d901      	bls.n	800a876 <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 800a872:	2301      	movs	r3, #1
 800a874:	e0cd      	b.n	800aa12 <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a87c:	b2db      	uxtb	r3, r3
 800a87e:	2b00      	cmp	r3, #0
 800a880:	d106      	bne.n	800a890 <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	2200      	movs	r2, #0
 800a886:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800a88a:	6878      	ldr	r0, [r7, #4]
 800a88c:	f7f6 fd96 	bl	80013bc <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	2202      	movs	r2, #2
 800a894:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800a898:	687b      	ldr	r3, [r7, #4]
 800a89a:	681b      	ldr	r3, [r3, #0]
 800a89c:	681a      	ldr	r2, [r3, #0]
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	681b      	ldr	r3, [r3, #0]
 800a8a2:	f022 0201 	bic.w	r2, r2, #1
 800a8a6:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	681b      	ldr	r3, [r3, #0]
 800a8ac:	689b      	ldr	r3, [r3, #8]
 800a8ae:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 800a8b2:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a8b4:	687b      	ldr	r3, [r7, #4]
 800a8b6:	699b      	ldr	r3, [r3, #24]
 800a8b8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a8bc:	d119      	bne.n	800a8f2 <HAL_SPI_Init+0x112>
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	685b      	ldr	r3, [r3, #4]
 800a8c2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a8c6:	d103      	bne.n	800a8d0 <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a8c8:	687b      	ldr	r3, [r7, #4]
 800a8ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a8cc:	2b00      	cmp	r3, #0
 800a8ce:	d008      	beq.n	800a8e2 <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	d10c      	bne.n	800a8f2 <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 800a8d8:	687b      	ldr	r3, [r7, #4]
 800a8da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a8dc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800a8e0:	d107      	bne.n	800a8f2 <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	681b      	ldr	r3, [r3, #0]
 800a8e6:	681a      	ldr	r2, [r3, #0]
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a8f0:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	685b      	ldr	r3, [r3, #4]
 800a8f6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a8fa:	2b00      	cmp	r3, #0
 800a8fc:	d00f      	beq.n	800a91e <HAL_SPI_Init+0x13e>
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	68db      	ldr	r3, [r3, #12]
 800a902:	2b06      	cmp	r3, #6
 800a904:	d90b      	bls.n	800a91e <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	681b      	ldr	r3, [r3, #0]
 800a90a:	681b      	ldr	r3, [r3, #0]
 800a90c:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 800a910:	687b      	ldr	r3, [r7, #4]
 800a912:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	681b      	ldr	r3, [r3, #0]
 800a918:	430a      	orrs	r2, r1
 800a91a:	601a      	str	r2, [r3, #0]
 800a91c:	e007      	b.n	800a92e <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	681b      	ldr	r3, [r3, #0]
 800a922:	681a      	ldr	r2, [r3, #0]
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a92c:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	69da      	ldr	r2, [r3, #28]
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a936:	431a      	orrs	r2, r3
 800a938:	68bb      	ldr	r3, [r7, #8]
 800a93a:	431a      	orrs	r2, r3
 800a93c:	687b      	ldr	r3, [r7, #4]
 800a93e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a940:	ea42 0103 	orr.w	r1, r2, r3
 800a944:	687b      	ldr	r3, [r7, #4]
 800a946:	68da      	ldr	r2, [r3, #12]
 800a948:	687b      	ldr	r3, [r7, #4]
 800a94a:	681b      	ldr	r3, [r3, #0]
 800a94c:	430a      	orrs	r2, r1
 800a94e:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a958:	431a      	orrs	r2, r3
 800a95a:	687b      	ldr	r3, [r7, #4]
 800a95c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a95e:	431a      	orrs	r2, r3
 800a960:	687b      	ldr	r3, [r7, #4]
 800a962:	699b      	ldr	r3, [r3, #24]
 800a964:	431a      	orrs	r2, r3
 800a966:	687b      	ldr	r3, [r7, #4]
 800a968:	691b      	ldr	r3, [r3, #16]
 800a96a:	431a      	orrs	r2, r3
 800a96c:	687b      	ldr	r3, [r7, #4]
 800a96e:	695b      	ldr	r3, [r3, #20]
 800a970:	431a      	orrs	r2, r3
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	6a1b      	ldr	r3, [r3, #32]
 800a976:	431a      	orrs	r2, r3
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	685b      	ldr	r3, [r3, #4]
 800a97c:	431a      	orrs	r2, r3
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a982:	431a      	orrs	r2, r3
 800a984:	687b      	ldr	r3, [r7, #4]
 800a986:	689b      	ldr	r3, [r3, #8]
 800a988:	431a      	orrs	r2, r3
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a98e:	ea42 0103 	orr.w	r1, r2, r3
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	681b      	ldr	r3, [r3, #0]
 800a99a:	430a      	orrs	r2, r1
 800a99c:	60da      	str	r2, [r3, #12]
    }
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	685b      	ldr	r3, [r3, #4]
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	d113      	bne.n	800a9ce <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	681b      	ldr	r3, [r3, #0]
 800a9aa:	689b      	ldr	r3, [r3, #8]
 800a9ac:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 800a9b0:	687b      	ldr	r3, [r7, #4]
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a9b8:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	681b      	ldr	r3, [r3, #0]
 800a9be:	689b      	ldr	r3, [r3, #8]
 800a9c0:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	681b      	ldr	r3, [r3, #0]
 800a9c8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a9cc:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	681b      	ldr	r3, [r3, #0]
 800a9d2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a9d4:	687b      	ldr	r3, [r7, #4]
 800a9d6:	681b      	ldr	r3, [r3, #0]
 800a9d8:	f022 0201 	bic.w	r2, r2, #1
 800a9dc:	651a      	str	r2, [r3, #80]	; 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 800a9de:	687b      	ldr	r3, [r7, #4]
 800a9e0:	685b      	ldr	r3, [r3, #4]
 800a9e2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a9e6:	2b00      	cmp	r3, #0
 800a9e8:	d00a      	beq.n	800aa00 <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	681b      	ldr	r3, [r3, #0]
 800a9ee:	68db      	ldr	r3, [r3, #12]
 800a9f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800a9f4:	687b      	ldr	r3, [r7, #4]
 800a9f6:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	430a      	orrs	r2, r1
 800a9fe:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800aa00:	687b      	ldr	r3, [r7, #4]
 800aa02:	2200      	movs	r2, #0
 800aa04:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	2201      	movs	r2, #1
 800aa0c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  return HAL_OK;
 800aa10:	2300      	movs	r3, #0
}
 800aa12:	4618      	mov	r0, r3
 800aa14:	3710      	adds	r7, #16
 800aa16:	46bd      	mov	sp, r7
 800aa18:	bd80      	pop	{r7, pc}
 800aa1a:	bf00      	nop
 800aa1c:	40013000 	.word	0x40013000
 800aa20:	40003800 	.word	0x40003800
 800aa24:	40003c00 	.word	0x40003c00

0800aa28 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800aa28:	b580      	push	{r7, lr}
 800aa2a:	b088      	sub	sp, #32
 800aa2c:	af02      	add	r7, sp, #8
 800aa2e:	60f8      	str	r0, [r7, #12]
 800aa30:	60b9      	str	r1, [r7, #8]
 800aa32:	603b      	str	r3, [r7, #0]
 800aa34:	4613      	mov	r3, r2
 800aa36:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 800aa38:	68fb      	ldr	r3, [r7, #12]
 800aa3a:	681b      	ldr	r3, [r3, #0]
 800aa3c:	3320      	adds	r3, #32
 800aa3e:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800aa40:	f7f7 fa06 	bl	8001e50 <HAL_GetTick>
 800aa44:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 800aa46:	68fb      	ldr	r3, [r7, #12]
 800aa48:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800aa4c:	b2db      	uxtb	r3, r3
 800aa4e:	2b01      	cmp	r3, #1
 800aa50:	d001      	beq.n	800aa56 <HAL_SPI_Transmit+0x2e>
  {
    return HAL_BUSY;
 800aa52:	2302      	movs	r3, #2
 800aa54:	e1d1      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
  }

  if ((pData == NULL) || (Size == 0UL))
 800aa56:	68bb      	ldr	r3, [r7, #8]
 800aa58:	2b00      	cmp	r3, #0
 800aa5a:	d002      	beq.n	800aa62 <HAL_SPI_Transmit+0x3a>
 800aa5c:	88fb      	ldrh	r3, [r7, #6]
 800aa5e:	2b00      	cmp	r3, #0
 800aa60:	d101      	bne.n	800aa66 <HAL_SPI_Transmit+0x3e>
  {
    return HAL_ERROR;
 800aa62:	2301      	movs	r3, #1
 800aa64:	e1c9      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800aa6c:	2b01      	cmp	r3, #1
 800aa6e:	d101      	bne.n	800aa74 <HAL_SPI_Transmit+0x4c>
 800aa70:	2302      	movs	r3, #2
 800aa72:	e1c2      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
 800aa74:	68fb      	ldr	r3, [r7, #12]
 800aa76:	2201      	movs	r2, #1
 800aa78:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aa7c:	68fb      	ldr	r3, [r7, #12]
 800aa7e:	2203      	movs	r2, #3
 800aa80:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa84:	68fb      	ldr	r3, [r7, #12]
 800aa86:	2200      	movs	r2, #0
 800aa88:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800aa8c:	68fb      	ldr	r3, [r7, #12]
 800aa8e:	68ba      	ldr	r2, [r7, #8]
 800aa90:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800aa92:	68fb      	ldr	r3, [r7, #12]
 800aa94:	88fa      	ldrh	r2, [r7, #6]
 800aa96:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800aa9a:	68fb      	ldr	r3, [r7, #12]
 800aa9c:	88fa      	ldrh	r2, [r7, #6]
 800aa9e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800aaa2:	68fb      	ldr	r3, [r7, #12]
 800aaa4:	2200      	movs	r2, #0
 800aaa6:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 800aaa8:	68fb      	ldr	r3, [r7, #12]
 800aaaa:	2200      	movs	r2, #0
 800aaac:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 800aab0:	68fb      	ldr	r3, [r7, #12]
 800aab2:	2200      	movs	r2, #0
 800aab4:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxISR       = NULL;
 800aab8:	68fb      	ldr	r3, [r7, #12]
 800aaba:	2200      	movs	r2, #0
 800aabc:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800aabe:	68fb      	ldr	r3, [r7, #12]
 800aac0:	2200      	movs	r2, #0
 800aac2:	671a      	str	r2, [r3, #112]	; 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aac4:	68fb      	ldr	r3, [r7, #12]
 800aac6:	689b      	ldr	r3, [r3, #8]
 800aac8:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800aacc:	d108      	bne.n	800aae0 <HAL_SPI_Transmit+0xb8>
  {
    SPI_1LINE_TX(hspi);
 800aace:	68fb      	ldr	r3, [r7, #12]
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	681a      	ldr	r2, [r3, #0]
 800aad4:	68fb      	ldr	r3, [r7, #12]
 800aad6:	681b      	ldr	r3, [r3, #0]
 800aad8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aadc:	601a      	str	r2, [r3, #0]
 800aade:	e009      	b.n	800aaf4 <HAL_SPI_Transmit+0xcc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	68db      	ldr	r3, [r3, #12]
 800aae6:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800aaea:	68fb      	ldr	r3, [r7, #12]
 800aaec:	681b      	ldr	r3, [r3, #0]
 800aaee:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800aaf2:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800aaf4:	68fb      	ldr	r3, [r7, #12]
 800aaf6:	681b      	ldr	r3, [r3, #0]
 800aaf8:	685a      	ldr	r2, [r3, #4]
 800aafa:	4b96      	ldr	r3, [pc, #600]	; (800ad54 <HAL_SPI_Transmit+0x32c>)
 800aafc:	4013      	ands	r3, r2
 800aafe:	88f9      	ldrh	r1, [r7, #6]
 800ab00:	68fa      	ldr	r2, [r7, #12]
 800ab02:	6812      	ldr	r2, [r2, #0]
 800ab04:	430b      	orrs	r3, r1
 800ab06:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800ab08:	68fb      	ldr	r3, [r7, #12]
 800ab0a:	681b      	ldr	r3, [r3, #0]
 800ab0c:	681a      	ldr	r2, [r3, #0]
 800ab0e:	68fb      	ldr	r3, [r7, #12]
 800ab10:	681b      	ldr	r3, [r3, #0]
 800ab12:	f042 0201 	orr.w	r2, r2, #1
 800ab16:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ab18:	68fb      	ldr	r3, [r7, #12]
 800ab1a:	685b      	ldr	r3, [r3, #4]
 800ab1c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800ab20:	d107      	bne.n	800ab32 <HAL_SPI_Transmit+0x10a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800ab22:	68fb      	ldr	r3, [r7, #12]
 800ab24:	681b      	ldr	r3, [r3, #0]
 800ab26:	681a      	ldr	r2, [r3, #0]
 800ab28:	68fb      	ldr	r3, [r7, #12]
 800ab2a:	681b      	ldr	r3, [r3, #0]
 800ab2c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab30:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800ab32:	68fb      	ldr	r3, [r7, #12]
 800ab34:	68db      	ldr	r3, [r3, #12]
 800ab36:	2b0f      	cmp	r3, #15
 800ab38:	d947      	bls.n	800abca <HAL_SPI_Transmit+0x1a2>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800ab3a:	e03f      	b.n	800abbc <HAL_SPI_Transmit+0x194>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800ab3c:	68fb      	ldr	r3, [r7, #12]
 800ab3e:	681b      	ldr	r3, [r3, #0]
 800ab40:	695b      	ldr	r3, [r3, #20]
 800ab42:	f003 0302 	and.w	r3, r3, #2
 800ab46:	2b02      	cmp	r3, #2
 800ab48:	d114      	bne.n	800ab74 <HAL_SPI_Transmit+0x14c>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800ab4e:	68fb      	ldr	r3, [r7, #12]
 800ab50:	681b      	ldr	r3, [r3, #0]
 800ab52:	6812      	ldr	r2, [r2, #0]
 800ab54:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ab5a:	1d1a      	adds	r2, r3, #4
 800ab5c:	68fb      	ldr	r3, [r7, #12]
 800ab5e:	65da      	str	r2, [r3, #92]	; 0x5c
        hspi->TxXferCount--;
 800ab60:	68fb      	ldr	r3, [r7, #12]
 800ab62:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab66:	b29b      	uxth	r3, r3
 800ab68:	3b01      	subs	r3, #1
 800ab6a:	b29a      	uxth	r2, r3
 800ab6c:	68fb      	ldr	r3, [r7, #12]
 800ab6e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ab72:	e023      	b.n	800abbc <HAL_SPI_Transmit+0x194>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ab74:	f7f7 f96c 	bl	8001e50 <HAL_GetTick>
 800ab78:	4602      	mov	r2, r0
 800ab7a:	693b      	ldr	r3, [r7, #16]
 800ab7c:	1ad3      	subs	r3, r2, r3
 800ab7e:	683a      	ldr	r2, [r7, #0]
 800ab80:	429a      	cmp	r2, r3
 800ab82:	d803      	bhi.n	800ab8c <HAL_SPI_Transmit+0x164>
 800ab84:	683b      	ldr	r3, [r7, #0]
 800ab86:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ab8a:	d102      	bne.n	800ab92 <HAL_SPI_Transmit+0x16a>
 800ab8c:	683b      	ldr	r3, [r7, #0]
 800ab8e:	2b00      	cmp	r3, #0
 800ab90:	d114      	bne.n	800abbc <HAL_SPI_Transmit+0x194>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800ab92:	68f8      	ldr	r0, [r7, #12]
 800ab94:	f000 ff58 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800ab98:	68fb      	ldr	r3, [r7, #12]
 800ab9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ab9e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800aba2:	68fb      	ldr	r3, [r7, #12]
 800aba4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800aba8:	68fb      	ldr	r3, [r7, #12]
 800abaa:	2201      	movs	r2, #1
 800abac:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	2200      	movs	r2, #0
 800abb4:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800abb8:	2303      	movs	r3, #3
 800abba:	e11e      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800abbc:	68fb      	ldr	r3, [r7, #12]
 800abbe:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800abc2:	b29b      	uxth	r3, r3
 800abc4:	2b00      	cmp	r3, #0
 800abc6:	d1b9      	bne.n	800ab3c <HAL_SPI_Transmit+0x114>
 800abc8:	e0f1      	b.n	800adae <HAL_SPI_Transmit+0x386>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800abca:	68fb      	ldr	r3, [r7, #12]
 800abcc:	68db      	ldr	r3, [r3, #12]
 800abce:	2b07      	cmp	r3, #7
 800abd0:	f240 80e6 	bls.w	800ada0 <HAL_SPI_Transmit+0x378>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800abd4:	e05d      	b.n	800ac92 <HAL_SPI_Transmit+0x26a>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	681b      	ldr	r3, [r3, #0]
 800abda:	695b      	ldr	r3, [r3, #20]
 800abdc:	f003 0302 	and.w	r3, r3, #2
 800abe0:	2b02      	cmp	r3, #2
 800abe2:	d132      	bne.n	800ac4a <HAL_SPI_Transmit+0x222>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800abe4:	68fb      	ldr	r3, [r7, #12]
 800abe6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800abea:	b29b      	uxth	r3, r3
 800abec:	2b01      	cmp	r3, #1
 800abee:	d918      	bls.n	800ac22 <HAL_SPI_Transmit+0x1fa>
 800abf0:	68fb      	ldr	r3, [r7, #12]
 800abf2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800abf4:	2b00      	cmp	r3, #0
 800abf6:	d014      	beq.n	800ac22 <HAL_SPI_Transmit+0x1fa>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800abf8:	68fb      	ldr	r3, [r7, #12]
 800abfa:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800abfc:	68fb      	ldr	r3, [r7, #12]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	6812      	ldr	r2, [r2, #0]
 800ac02:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800ac04:	68fb      	ldr	r3, [r7, #12]
 800ac06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac08:	1d1a      	adds	r2, r3, #4
 800ac0a:	68fb      	ldr	r3, [r7, #12]
 800ac0c:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800ac0e:	68fb      	ldr	r3, [r7, #12]
 800ac10:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ac14:	b29b      	uxth	r3, r3
 800ac16:	3b02      	subs	r3, #2
 800ac18:	b29a      	uxth	r2, r3
 800ac1a:	68fb      	ldr	r3, [r7, #12]
 800ac1c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ac20:	e037      	b.n	800ac92 <HAL_SPI_Transmit+0x26a>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac26:	881a      	ldrh	r2, [r3, #0]
 800ac28:	697b      	ldr	r3, [r7, #20]
 800ac2a:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800ac2c:	68fb      	ldr	r3, [r7, #12]
 800ac2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac30:	1c9a      	adds	r2, r3, #2
 800ac32:	68fb      	ldr	r3, [r7, #12]
 800ac34:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800ac36:	68fb      	ldr	r3, [r7, #12]
 800ac38:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ac3c:	b29b      	uxth	r3, r3
 800ac3e:	3b01      	subs	r3, #1
 800ac40:	b29a      	uxth	r2, r3
 800ac42:	68fb      	ldr	r3, [r7, #12]
 800ac44:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ac48:	e023      	b.n	800ac92 <HAL_SPI_Transmit+0x26a>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ac4a:	f7f7 f901 	bl	8001e50 <HAL_GetTick>
 800ac4e:	4602      	mov	r2, r0
 800ac50:	693b      	ldr	r3, [r7, #16]
 800ac52:	1ad3      	subs	r3, r2, r3
 800ac54:	683a      	ldr	r2, [r7, #0]
 800ac56:	429a      	cmp	r2, r3
 800ac58:	d803      	bhi.n	800ac62 <HAL_SPI_Transmit+0x23a>
 800ac5a:	683b      	ldr	r3, [r7, #0]
 800ac5c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ac60:	d102      	bne.n	800ac68 <HAL_SPI_Transmit+0x240>
 800ac62:	683b      	ldr	r3, [r7, #0]
 800ac64:	2b00      	cmp	r3, #0
 800ac66:	d114      	bne.n	800ac92 <HAL_SPI_Transmit+0x26a>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800ac68:	68f8      	ldr	r0, [r7, #12]
 800ac6a:	f000 feed 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800ac6e:	68fb      	ldr	r3, [r7, #12]
 800ac70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ac74:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800ac78:	68fb      	ldr	r3, [r7, #12]
 800ac7a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800ac7e:	68fb      	ldr	r3, [r7, #12]
 800ac80:	2201      	movs	r2, #1
 800ac82:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800ac86:	68fb      	ldr	r3, [r7, #12]
 800ac88:	2200      	movs	r2, #0
 800ac8a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800ac8e:	2303      	movs	r3, #3
 800ac90:	e0b3      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800ac92:	68fb      	ldr	r3, [r7, #12]
 800ac94:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ac98:	b29b      	uxth	r3, r3
 800ac9a:	2b00      	cmp	r3, #0
 800ac9c:	d19b      	bne.n	800abd6 <HAL_SPI_Transmit+0x1ae>
 800ac9e:	e086      	b.n	800adae <HAL_SPI_Transmit+0x386>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800aca0:	68fb      	ldr	r3, [r7, #12]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	695b      	ldr	r3, [r3, #20]
 800aca6:	f003 0302 	and.w	r3, r3, #2
 800acaa:	2b02      	cmp	r3, #2
 800acac:	d154      	bne.n	800ad58 <HAL_SPI_Transmit+0x330>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 800acae:	68fb      	ldr	r3, [r7, #12]
 800acb0:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800acb4:	b29b      	uxth	r3, r3
 800acb6:	2b03      	cmp	r3, #3
 800acb8:	d918      	bls.n	800acec <HAL_SPI_Transmit+0x2c4>
 800acba:	68fb      	ldr	r3, [r7, #12]
 800acbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800acbe:	2b40      	cmp	r3, #64	; 0x40
 800acc0:	d914      	bls.n	800acec <HAL_SPI_Transmit+0x2c4>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800acc2:	68fb      	ldr	r3, [r7, #12]
 800acc4:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800acc6:	68fb      	ldr	r3, [r7, #12]
 800acc8:	681b      	ldr	r3, [r3, #0]
 800acca:	6812      	ldr	r2, [r2, #0]
 800accc:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800acce:	68fb      	ldr	r3, [r7, #12]
 800acd0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800acd2:	1d1a      	adds	r2, r3, #4
 800acd4:	68fb      	ldr	r3, [r7, #12]
 800acd6:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 800acd8:	68fb      	ldr	r3, [r7, #12]
 800acda:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800acde:	b29b      	uxth	r3, r3
 800ace0:	3b04      	subs	r3, #4
 800ace2:	b29a      	uxth	r2, r3
 800ace4:	68fb      	ldr	r3, [r7, #12]
 800ace6:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800acea:	e059      	b.n	800ada0 <HAL_SPI_Transmit+0x378>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800acec:	68fb      	ldr	r3, [r7, #12]
 800acee:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800acf2:	b29b      	uxth	r3, r3
 800acf4:	2b01      	cmp	r3, #1
 800acf6:	d917      	bls.n	800ad28 <HAL_SPI_Transmit+0x300>
 800acf8:	68fb      	ldr	r3, [r7, #12]
 800acfa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800acfc:	2b00      	cmp	r3, #0
 800acfe:	d013      	beq.n	800ad28 <HAL_SPI_Transmit+0x300>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800ad00:	68fb      	ldr	r3, [r7, #12]
 800ad02:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad04:	881a      	ldrh	r2, [r3, #0]
 800ad06:	697b      	ldr	r3, [r7, #20]
 800ad08:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800ad0a:	68fb      	ldr	r3, [r7, #12]
 800ad0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad0e:	1c9a      	adds	r2, r3, #2
 800ad10:	68fb      	ldr	r3, [r7, #12]
 800ad12:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800ad14:	68fb      	ldr	r3, [r7, #12]
 800ad16:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ad1a:	b29b      	uxth	r3, r3
 800ad1c:	3b02      	subs	r3, #2
 800ad1e:	b29a      	uxth	r2, r3
 800ad20:	68fb      	ldr	r3, [r7, #12]
 800ad22:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ad26:	e03b      	b.n	800ada0 <HAL_SPI_Transmit+0x378>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800ad28:	68fb      	ldr	r3, [r7, #12]
 800ad2a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800ad2c:	68fb      	ldr	r3, [r7, #12]
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	3320      	adds	r3, #32
 800ad32:	7812      	ldrb	r2, [r2, #0]
 800ad34:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 800ad36:	68fb      	ldr	r3, [r7, #12]
 800ad38:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad3a:	1c5a      	adds	r2, r3, #1
 800ad3c:	68fb      	ldr	r3, [r7, #12]
 800ad3e:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800ad40:	68fb      	ldr	r3, [r7, #12]
 800ad42:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ad46:	b29b      	uxth	r3, r3
 800ad48:	3b01      	subs	r3, #1
 800ad4a:	b29a      	uxth	r2, r3
 800ad4c:	68fb      	ldr	r3, [r7, #12]
 800ad4e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ad52:	e025      	b.n	800ada0 <HAL_SPI_Transmit+0x378>
 800ad54:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ad58:	f7f7 f87a 	bl	8001e50 <HAL_GetTick>
 800ad5c:	4602      	mov	r2, r0
 800ad5e:	693b      	ldr	r3, [r7, #16]
 800ad60:	1ad3      	subs	r3, r2, r3
 800ad62:	683a      	ldr	r2, [r7, #0]
 800ad64:	429a      	cmp	r2, r3
 800ad66:	d803      	bhi.n	800ad70 <HAL_SPI_Transmit+0x348>
 800ad68:	683b      	ldr	r3, [r7, #0]
 800ad6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ad6e:	d102      	bne.n	800ad76 <HAL_SPI_Transmit+0x34e>
 800ad70:	683b      	ldr	r3, [r7, #0]
 800ad72:	2b00      	cmp	r3, #0
 800ad74:	d114      	bne.n	800ada0 <HAL_SPI_Transmit+0x378>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800ad76:	68f8      	ldr	r0, [r7, #12]
 800ad78:	f000 fe66 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800ad7c:	68fb      	ldr	r3, [r7, #12]
 800ad7e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ad82:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800ad86:	68fb      	ldr	r3, [r7, #12]
 800ad88:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800ad8c:	68fb      	ldr	r3, [r7, #12]
 800ad8e:	2201      	movs	r2, #1
 800ad90:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800ad94:	68fb      	ldr	r3, [r7, #12]
 800ad96:	2200      	movs	r2, #0
 800ad98:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800ad9c:	2303      	movs	r3, #3
 800ad9e:	e02c      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800ada0:	68fb      	ldr	r3, [r7, #12]
 800ada2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ada6:	b29b      	uxth	r3, r3
 800ada8:	2b00      	cmp	r3, #0
 800adaa:	f47f af79 	bne.w	800aca0 <HAL_SPI_Transmit+0x278>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 800adae:	693b      	ldr	r3, [r7, #16]
 800adb0:	9300      	str	r3, [sp, #0]
 800adb2:	683b      	ldr	r3, [r7, #0]
 800adb4:	2200      	movs	r2, #0
 800adb6:	2108      	movs	r1, #8
 800adb8:	68f8      	ldr	r0, [r7, #12]
 800adba:	f000 fee5 	bl	800bb88 <SPI_WaitOnFlagUntilTimeout>
 800adbe:	4603      	mov	r3, r0
 800adc0:	2b00      	cmp	r3, #0
 800adc2:	d007      	beq.n	800add4 <HAL_SPI_Transmit+0x3ac>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800adc4:	68fb      	ldr	r3, [r7, #12]
 800adc6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800adca:	f043 0220 	orr.w	r2, r3, #32
 800adce:	68fb      	ldr	r3, [r7, #12]
 800add0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800add4:	68f8      	ldr	r0, [r7, #12]
 800add6:	f000 fe37 	bl	800ba48 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 800adda:	68fb      	ldr	r3, [r7, #12]
 800addc:	2201      	movs	r2, #1
 800adde:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800ade2:	68fb      	ldr	r3, [r7, #12]
 800ade4:	2200      	movs	r2, #0
 800ade6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800adea:	68fb      	ldr	r3, [r7, #12]
 800adec:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800adf0:	2b00      	cmp	r3, #0
 800adf2:	d001      	beq.n	800adf8 <HAL_SPI_Transmit+0x3d0>
  {
    return HAL_ERROR;
 800adf4:	2301      	movs	r3, #1
 800adf6:	e000      	b.n	800adfa <HAL_SPI_Transmit+0x3d2>
  }
  else
  {
    return HAL_OK;
 800adf8:	2300      	movs	r3, #0
  }
}
 800adfa:	4618      	mov	r0, r3
 800adfc:	3718      	adds	r7, #24
 800adfe:	46bd      	mov	sp, r7
 800ae00:	bd80      	pop	{r7, pc}
 800ae02:	bf00      	nop

0800ae04 <HAL_SPI_Receive>:
  * @param  Size   : amount of data to be received
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800ae04:	b580      	push	{r7, lr}
 800ae06:	b088      	sub	sp, #32
 800ae08:	af00      	add	r7, sp, #0
 800ae0a:	60f8      	str	r0, [r7, #12]
 800ae0c:	60b9      	str	r1, [r7, #8]
 800ae0e:	603b      	str	r3, [r7, #0]
 800ae10:	4613      	mov	r3, r2
 800ae12:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  uint32_t temp_sr_reg;
  uint16_t init_max_data_in_fifo;
  init_max_data_in_fifo = (((uint16_t)(hspi->Init.FifoThreshold >> 5U) + 1U));
 800ae14:	68fb      	ldr	r3, [r7, #12]
 800ae16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae18:	095b      	lsrs	r3, r3, #5
 800ae1a:	b29b      	uxth	r3, r3
 800ae1c:	3301      	adds	r3, #1
 800ae1e:	83fb      	strh	r3, [r7, #30]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800ae20:	68fb      	ldr	r3, [r7, #12]
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	3330      	adds	r3, #48	; 0x30
 800ae26:	61bb      	str	r3, [r7, #24]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800ae28:	f7f7 f812 	bl	8001e50 <HAL_GetTick>
 800ae2c:	6178      	str	r0, [r7, #20]

  if (hspi->State != HAL_SPI_STATE_READY)
 800ae2e:	68fb      	ldr	r3, [r7, #12]
 800ae30:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800ae34:	b2db      	uxtb	r3, r3
 800ae36:	2b01      	cmp	r3, #1
 800ae38:	d001      	beq.n	800ae3e <HAL_SPI_Receive+0x3a>
  {
    return HAL_BUSY;
 800ae3a:	2302      	movs	r3, #2
 800ae3c:	e250      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
  }

  if ((pData == NULL) || (Size == 0UL))
 800ae3e:	68bb      	ldr	r3, [r7, #8]
 800ae40:	2b00      	cmp	r3, #0
 800ae42:	d002      	beq.n	800ae4a <HAL_SPI_Receive+0x46>
 800ae44:	88fb      	ldrh	r3, [r7, #6]
 800ae46:	2b00      	cmp	r3, #0
 800ae48:	d101      	bne.n	800ae4e <HAL_SPI_Receive+0x4a>
  {
    return HAL_ERROR;
 800ae4a:	2301      	movs	r3, #1
 800ae4c:	e248      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800ae54:	2b01      	cmp	r3, #1
 800ae56:	d101      	bne.n	800ae5c <HAL_SPI_Receive+0x58>
 800ae58:	2302      	movs	r3, #2
 800ae5a:	e241      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
 800ae5c:	68fb      	ldr	r3, [r7, #12]
 800ae5e:	2201      	movs	r2, #1
 800ae60:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ae64:	68fb      	ldr	r3, [r7, #12]
 800ae66:	2204      	movs	r2, #4
 800ae68:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ae6c:	68fb      	ldr	r3, [r7, #12]
 800ae6e:	2200      	movs	r2, #0
 800ae70:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ae74:	68fb      	ldr	r3, [r7, #12]
 800ae76:	68ba      	ldr	r2, [r7, #8]
 800ae78:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = Size;
 800ae7a:	68fb      	ldr	r3, [r7, #12]
 800ae7c:	88fa      	ldrh	r2, [r7, #6]
 800ae7e:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = Size;
 800ae82:	68fb      	ldr	r3, [r7, #12]
 800ae84:	88fa      	ldrh	r2, [r7, #6]
 800ae86:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = NULL;
 800ae8a:	68fb      	ldr	r3, [r7, #12]
 800ae8c:	2200      	movs	r2, #0
 800ae8e:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = (uint16_t) 0UL;
 800ae90:	68fb      	ldr	r3, [r7, #12]
 800ae92:	2200      	movs	r2, #0
 800ae94:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = (uint16_t) 0UL;
 800ae98:	68fb      	ldr	r3, [r7, #12]
 800ae9a:	2200      	movs	r2, #0
 800ae9c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxISR       = NULL;
 800aea0:	68fb      	ldr	r3, [r7, #12]
 800aea2:	2200      	movs	r2, #0
 800aea4:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->TxISR       = NULL;
 800aea6:	68fb      	ldr	r3, [r7, #12]
 800aea8:	2200      	movs	r2, #0
 800aeaa:	675a      	str	r2, [r3, #116]	; 0x74

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aeac:	68fb      	ldr	r3, [r7, #12]
 800aeae:	689b      	ldr	r3, [r3, #8]
 800aeb0:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800aeb4:	d108      	bne.n	800aec8 <HAL_SPI_Receive+0xc4>
  {
    SPI_1LINE_RX(hspi);
 800aeb6:	68fb      	ldr	r3, [r7, #12]
 800aeb8:	681b      	ldr	r3, [r3, #0]
 800aeba:	681a      	ldr	r2, [r3, #0]
 800aebc:	68fb      	ldr	r3, [r7, #12]
 800aebe:	681b      	ldr	r3, [r3, #0]
 800aec0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aec4:	601a      	str	r2, [r3, #0]
 800aec6:	e009      	b.n	800aedc <HAL_SPI_Receive+0xd8>
  }
  else
  {
    SPI_2LINES_RX(hspi);
 800aec8:	68fb      	ldr	r3, [r7, #12]
 800aeca:	681b      	ldr	r3, [r3, #0]
 800aecc:	68db      	ldr	r3, [r3, #12]
 800aece:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800aed2:	68fb      	ldr	r3, [r7, #12]
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800aeda:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800aedc:	68fb      	ldr	r3, [r7, #12]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	685a      	ldr	r2, [r3, #4]
 800aee2:	4b95      	ldr	r3, [pc, #596]	; (800b138 <HAL_SPI_Receive+0x334>)
 800aee4:	4013      	ands	r3, r2
 800aee6:	88f9      	ldrh	r1, [r7, #6]
 800aee8:	68fa      	ldr	r2, [r7, #12]
 800aeea:	6812      	ldr	r2, [r2, #0]
 800aeec:	430b      	orrs	r3, r1
 800aeee:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800aef0:	68fb      	ldr	r3, [r7, #12]
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	681a      	ldr	r2, [r3, #0]
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	f042 0201 	orr.w	r2, r2, #1
 800aefe:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800af00:	68fb      	ldr	r3, [r7, #12]
 800af02:	685b      	ldr	r3, [r3, #4]
 800af04:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800af08:	d107      	bne.n	800af1a <HAL_SPI_Receive+0x116>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	681b      	ldr	r3, [r3, #0]
 800af0e:	681a      	ldr	r2, [r3, #0]
 800af10:	68fb      	ldr	r3, [r7, #12]
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af18:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800af1a:	68fb      	ldr	r3, [r7, #12]
 800af1c:	68db      	ldr	r3, [r3, #12]
 800af1e:	2b0f      	cmp	r3, #15
 800af20:	d96c      	bls.n	800affc <HAL_SPI_Receive+0x1f8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
 800af22:	e064      	b.n	800afee <HAL_SPI_Receive+0x1ea>
    {
      /* Evaluate state of SR register */
      temp_sr_reg = hspi->Instance->SR;
 800af24:	68fb      	ldr	r3, [r7, #12]
 800af26:	681b      	ldr	r3, [r3, #0]
 800af28:	695b      	ldr	r3, [r3, #20]
 800af2a:	613b      	str	r3, [r7, #16]

      /* Check the RXP flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
 800af2c:	68fb      	ldr	r3, [r7, #12]
 800af2e:	681b      	ldr	r3, [r3, #0]
 800af30:	695b      	ldr	r3, [r3, #20]
 800af32:	f003 0301 	and.w	r3, r3, #1
 800af36:	2b01      	cmp	r3, #1
 800af38:	d114      	bne.n	800af64 <HAL_SPI_Receive+0x160>
      {
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800af3a:	68fb      	ldr	r3, [r7, #12]
 800af3c:	681a      	ldr	r2, [r3, #0]
 800af3e:	68fb      	ldr	r3, [r7, #12]
 800af40:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800af42:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800af44:	601a      	str	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint32_t);
 800af46:	68fb      	ldr	r3, [r7, #12]
 800af48:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800af4a:	1d1a      	adds	r2, r3, #4
 800af4c:	68fb      	ldr	r3, [r7, #12]
 800af4e:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800af50:	68fb      	ldr	r3, [r7, #12]
 800af52:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800af56:	b29b      	uxth	r3, r3
 800af58:	3b01      	subs	r3, #1
 800af5a:	b29a      	uxth	r2, r3
 800af5c:	68fb      	ldr	r3, [r7, #12]
 800af5e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800af62:	e044      	b.n	800afee <HAL_SPI_Receive+0x1ea>
      }
      /* Check RXWNE flag if RXP cannot be reached */
      else if ((hspi->RxXferCount < init_max_data_in_fifo) && ((temp_sr_reg & SPI_SR_RXWNE_Msk) != 0UL))
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800af6a:	b29b      	uxth	r3, r3
 800af6c:	8bfa      	ldrh	r2, [r7, #30]
 800af6e:	429a      	cmp	r2, r3
 800af70:	d919      	bls.n	800afa6 <HAL_SPI_Receive+0x1a2>
 800af72:	693b      	ldr	r3, [r7, #16]
 800af74:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800af78:	2b00      	cmp	r3, #0
 800af7a:	d014      	beq.n	800afa6 <HAL_SPI_Receive+0x1a2>
      {
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800af7c:	68fb      	ldr	r3, [r7, #12]
 800af7e:	681a      	ldr	r2, [r3, #0]
 800af80:	68fb      	ldr	r3, [r7, #12]
 800af82:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800af84:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800af86:	601a      	str	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint32_t);
 800af88:	68fb      	ldr	r3, [r7, #12]
 800af8a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800af8c:	1d1a      	adds	r2, r3, #4
 800af8e:	68fb      	ldr	r3, [r7, #12]
 800af90:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800af92:	68fb      	ldr	r3, [r7, #12]
 800af94:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800af98:	b29b      	uxth	r3, r3
 800af9a:	3b01      	subs	r3, #1
 800af9c:	b29a      	uxth	r2, r3
 800af9e:	68fb      	ldr	r3, [r7, #12]
 800afa0:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800afa4:	e023      	b.n	800afee <HAL_SPI_Receive+0x1ea>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800afa6:	f7f6 ff53 	bl	8001e50 <HAL_GetTick>
 800afaa:	4602      	mov	r2, r0
 800afac:	697b      	ldr	r3, [r7, #20]
 800afae:	1ad3      	subs	r3, r2, r3
 800afb0:	683a      	ldr	r2, [r7, #0]
 800afb2:	429a      	cmp	r2, r3
 800afb4:	d803      	bhi.n	800afbe <HAL_SPI_Receive+0x1ba>
 800afb6:	683b      	ldr	r3, [r7, #0]
 800afb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800afbc:	d102      	bne.n	800afc4 <HAL_SPI_Receive+0x1c0>
 800afbe:	683b      	ldr	r3, [r7, #0]
 800afc0:	2b00      	cmp	r3, #0
 800afc2:	d114      	bne.n	800afee <HAL_SPI_Receive+0x1ea>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800afc4:	68f8      	ldr	r0, [r7, #12]
 800afc6:	f000 fd3f 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800afca:	68fb      	ldr	r3, [r7, #12]
 800afcc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afd0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800afd4:	68fb      	ldr	r3, [r7, #12]
 800afd6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800afda:	68fb      	ldr	r3, [r7, #12]
 800afdc:	2201      	movs	r2, #1
 800afde:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800afe2:	68fb      	ldr	r3, [r7, #12]
 800afe4:	2200      	movs	r2, #0
 800afe6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800afea:	2303      	movs	r3, #3
 800afec:	e178      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
    while (hspi->RxXferCount > 0UL)
 800afee:	68fb      	ldr	r3, [r7, #12]
 800aff0:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800aff4:	b29b      	uxth	r3, r3
 800aff6:	2b00      	cmp	r3, #0
 800aff8:	d194      	bne.n	800af24 <HAL_SPI_Receive+0x120>
 800affa:	e15e      	b.n	800b2ba <HAL_SPI_Receive+0x4b6>
        }
      }
    }
  }
  /* Receive data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800affc:	68fb      	ldr	r3, [r7, #12]
 800affe:	68db      	ldr	r3, [r3, #12]
 800b000:	2b07      	cmp	r3, #7
 800b002:	f240 8153 	bls.w	800b2ac <HAL_SPI_Receive+0x4a8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
 800b006:	e08f      	b.n	800b128 <HAL_SPI_Receive+0x324>
    {
      /* Evaluate state of SR register */
      temp_sr_reg = hspi->Instance->SR;
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	695b      	ldr	r3, [r3, #20]
 800b00e:	613b      	str	r3, [r7, #16]

      /* Check the RXP flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
 800b010:	68fb      	ldr	r3, [r7, #12]
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	695b      	ldr	r3, [r3, #20]
 800b016:	f003 0301 	and.w	r3, r3, #1
 800b01a:	2b01      	cmp	r3, #1
 800b01c:	d114      	bne.n	800b048 <HAL_SPI_Receive+0x244>
      {
#if defined (__GNUC__)
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b01e:	68fb      	ldr	r3, [r7, #12]
 800b020:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b022:	69ba      	ldr	r2, [r7, #24]
 800b024:	8812      	ldrh	r2, [r2, #0]
 800b026:	b292      	uxth	r2, r2
 800b028:	801a      	strh	r2, [r3, #0]
#else
        *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b02e:	1c9a      	adds	r2, r3, #2
 800b030:	68fb      	ldr	r3, [r7, #12]
 800b032:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b034:	68fb      	ldr	r3, [r7, #12]
 800b036:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b03a:	b29b      	uxth	r3, r3
 800b03c:	3b01      	subs	r3, #1
 800b03e:	b29a      	uxth	r2, r3
 800b040:	68fb      	ldr	r3, [r7, #12]
 800b042:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b046:	e06f      	b.n	800b128 <HAL_SPI_Receive+0x324>
      }
      /* Check RXWNE flag if RXP cannot be reached */
      else if ((hspi->RxXferCount < init_max_data_in_fifo) && ((temp_sr_reg & SPI_SR_RXWNE_Msk) != 0UL))
 800b048:	68fb      	ldr	r3, [r7, #12]
 800b04a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b04e:	b29b      	uxth	r3, r3
 800b050:	8bfa      	ldrh	r2, [r7, #30]
 800b052:	429a      	cmp	r2, r3
 800b054:	d924      	bls.n	800b0a0 <HAL_SPI_Receive+0x29c>
 800b056:	693b      	ldr	r3, [r7, #16]
 800b058:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800b05c:	2b00      	cmp	r3, #0
 800b05e:	d01f      	beq.n	800b0a0 <HAL_SPI_Receive+0x29c>
      {
#if defined (__GNUC__)
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b060:	68fb      	ldr	r3, [r7, #12]
 800b062:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b064:	69ba      	ldr	r2, [r7, #24]
 800b066:	8812      	ldrh	r2, [r2, #0]
 800b068:	b292      	uxth	r2, r2
 800b06a:	801a      	strh	r2, [r3, #0]
#else
        *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b06c:	68fb      	ldr	r3, [r7, #12]
 800b06e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b070:	1c9a      	adds	r2, r3, #2
 800b072:	68fb      	ldr	r3, [r7, #12]
 800b074:	665a      	str	r2, [r3, #100]	; 0x64
#if defined (__GNUC__)
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b076:	68fb      	ldr	r3, [r7, #12]
 800b078:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b07a:	69ba      	ldr	r2, [r7, #24]
 800b07c:	8812      	ldrh	r2, [r2, #0]
 800b07e:	b292      	uxth	r2, r2
 800b080:	801a      	strh	r2, [r3, #0]
#else
        *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b082:	68fb      	ldr	r3, [r7, #12]
 800b084:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b086:	1c9a      	adds	r2, r3, #2
 800b088:	68fb      	ldr	r3, [r7, #12]
 800b08a:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount -= (uint16_t)2UL;
 800b08c:	68fb      	ldr	r3, [r7, #12]
 800b08e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b092:	b29b      	uxth	r3, r3
 800b094:	3b02      	subs	r3, #2
 800b096:	b29a      	uxth	r2, r3
 800b098:	68fb      	ldr	r3, [r7, #12]
 800b09a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b09e:	e043      	b.n	800b128 <HAL_SPI_Receive+0x324>
      }
      /* Check RXPLVL flags when RXWNE cannot be reached */
      else if ((hspi->RxXferCount == 1UL) && ((temp_sr_reg & SPI_SR_RXPLVL_0) != 0UL))
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b0a6:	b29b      	uxth	r3, r3
 800b0a8:	2b01      	cmp	r3, #1
 800b0aa:	d119      	bne.n	800b0e0 <HAL_SPI_Receive+0x2dc>
 800b0ac:	693b      	ldr	r3, [r7, #16]
 800b0ae:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800b0b2:	2b00      	cmp	r3, #0
 800b0b4:	d014      	beq.n	800b0e0 <HAL_SPI_Receive+0x2dc>
      {
#if defined (__GNUC__)
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b0b6:	68fb      	ldr	r3, [r7, #12]
 800b0b8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b0ba:	69ba      	ldr	r2, [r7, #24]
 800b0bc:	8812      	ldrh	r2, [r2, #0]
 800b0be:	b292      	uxth	r2, r2
 800b0c0:	801a      	strh	r2, [r3, #0]
#else
        *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b0c2:	68fb      	ldr	r3, [r7, #12]
 800b0c4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b0c6:	1c9a      	adds	r2, r3, #2
 800b0c8:	68fb      	ldr	r3, [r7, #12]
 800b0ca:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b0cc:	68fb      	ldr	r3, [r7, #12]
 800b0ce:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b0d2:	b29b      	uxth	r3, r3
 800b0d4:	3b01      	subs	r3, #1
 800b0d6:	b29a      	uxth	r2, r3
 800b0d8:	68fb      	ldr	r3, [r7, #12]
 800b0da:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b0de:	e023      	b.n	800b128 <HAL_SPI_Receive+0x324>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b0e0:	f7f6 feb6 	bl	8001e50 <HAL_GetTick>
 800b0e4:	4602      	mov	r2, r0
 800b0e6:	697b      	ldr	r3, [r7, #20]
 800b0e8:	1ad3      	subs	r3, r2, r3
 800b0ea:	683a      	ldr	r2, [r7, #0]
 800b0ec:	429a      	cmp	r2, r3
 800b0ee:	d803      	bhi.n	800b0f8 <HAL_SPI_Receive+0x2f4>
 800b0f0:	683b      	ldr	r3, [r7, #0]
 800b0f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b0f6:	d102      	bne.n	800b0fe <HAL_SPI_Receive+0x2fa>
 800b0f8:	683b      	ldr	r3, [r7, #0]
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	d114      	bne.n	800b128 <HAL_SPI_Receive+0x324>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b0fe:	68f8      	ldr	r0, [r7, #12]
 800b100:	f000 fca2 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b104:	68fb      	ldr	r3, [r7, #12]
 800b106:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b10a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b114:	68fb      	ldr	r3, [r7, #12]
 800b116:	2201      	movs	r2, #1
 800b118:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b11c:	68fb      	ldr	r3, [r7, #12]
 800b11e:	2200      	movs	r2, #0
 800b120:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800b124:	2303      	movs	r3, #3
 800b126:	e0db      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
    while (hspi->RxXferCount > 0UL)
 800b128:	68fb      	ldr	r3, [r7, #12]
 800b12a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b12e:	b29b      	uxth	r3, r3
 800b130:	2b00      	cmp	r3, #0
 800b132:	f47f af69 	bne.w	800b008 <HAL_SPI_Receive+0x204>
 800b136:	e0c0      	b.n	800b2ba <HAL_SPI_Receive+0x4b6>
 800b138:	ffff0000 	.word	0xffff0000
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
    {
      /* Evaluate state of SR register */
      temp_sr_reg = hspi->Instance->SR;
 800b13c:	68fb      	ldr	r3, [r7, #12]
 800b13e:	681b      	ldr	r3, [r3, #0]
 800b140:	695b      	ldr	r3, [r3, #20]
 800b142:	613b      	str	r3, [r7, #16]

      /* Check the RXP flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
 800b144:	68fb      	ldr	r3, [r7, #12]
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	695b      	ldr	r3, [r3, #20]
 800b14a:	f003 0301 	and.w	r3, r3, #1
 800b14e:	2b01      	cmp	r3, #1
 800b150:	d117      	bne.n	800b182 <HAL_SPI_Receive+0x37e>
      {
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b152:	68fb      	ldr	r3, [r7, #12]
 800b154:	681b      	ldr	r3, [r3, #0]
 800b156:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b15a:	68fb      	ldr	r3, [r7, #12]
 800b15c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b15e:	7812      	ldrb	r2, [r2, #0]
 800b160:	b2d2      	uxtb	r2, r2
 800b162:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b164:	68fb      	ldr	r3, [r7, #12]
 800b166:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b168:	1c5a      	adds	r2, r3, #1
 800b16a:	68fb      	ldr	r3, [r7, #12]
 800b16c:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b16e:	68fb      	ldr	r3, [r7, #12]
 800b170:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b174:	b29b      	uxth	r3, r3
 800b176:	3b01      	subs	r3, #1
 800b178:	b29a      	uxth	r2, r3
 800b17a:	68fb      	ldr	r3, [r7, #12]
 800b17c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b180:	e094      	b.n	800b2ac <HAL_SPI_Receive+0x4a8>
      }
      /* Check RXWNE flag if RXP cannot be reached */
      else if ((hspi->RxXferCount < init_max_data_in_fifo) && ((temp_sr_reg & SPI_SR_RXWNE_Msk) != 0UL))
 800b182:	68fb      	ldr	r3, [r7, #12]
 800b184:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b188:	b29b      	uxth	r3, r3
 800b18a:	8bfa      	ldrh	r2, [r7, #30]
 800b18c:	429a      	cmp	r2, r3
 800b18e:	d946      	bls.n	800b21e <HAL_SPI_Receive+0x41a>
 800b190:	693b      	ldr	r3, [r7, #16]
 800b192:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800b196:	2b00      	cmp	r3, #0
 800b198:	d041      	beq.n	800b21e <HAL_SPI_Receive+0x41a>
      {
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b19a:	68fb      	ldr	r3, [r7, #12]
 800b19c:	681b      	ldr	r3, [r3, #0]
 800b19e:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b1a2:	68fb      	ldr	r3, [r7, #12]
 800b1a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1a6:	7812      	ldrb	r2, [r2, #0]
 800b1a8:	b2d2      	uxtb	r2, r2
 800b1aa:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b1ac:	68fb      	ldr	r3, [r7, #12]
 800b1ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1b0:	1c5a      	adds	r2, r3, #1
 800b1b2:	68fb      	ldr	r3, [r7, #12]
 800b1b4:	665a      	str	r2, [r3, #100]	; 0x64
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b1b6:	68fb      	ldr	r3, [r7, #12]
 800b1b8:	681b      	ldr	r3, [r3, #0]
 800b1ba:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b1be:	68fb      	ldr	r3, [r7, #12]
 800b1c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1c2:	7812      	ldrb	r2, [r2, #0]
 800b1c4:	b2d2      	uxtb	r2, r2
 800b1c6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1cc:	1c5a      	adds	r2, r3, #1
 800b1ce:	68fb      	ldr	r3, [r7, #12]
 800b1d0:	665a      	str	r2, [r3, #100]	; 0x64
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b1d2:	68fb      	ldr	r3, [r7, #12]
 800b1d4:	681b      	ldr	r3, [r3, #0]
 800b1d6:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1de:	7812      	ldrb	r2, [r2, #0]
 800b1e0:	b2d2      	uxtb	r2, r2
 800b1e2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b1e4:	68fb      	ldr	r3, [r7, #12]
 800b1e6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1e8:	1c5a      	adds	r2, r3, #1
 800b1ea:	68fb      	ldr	r3, [r7, #12]
 800b1ec:	665a      	str	r2, [r3, #100]	; 0x64
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b1ee:	68fb      	ldr	r3, [r7, #12]
 800b1f0:	681b      	ldr	r3, [r3, #0]
 800b1f2:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b1fa:	7812      	ldrb	r2, [r2, #0]
 800b1fc:	b2d2      	uxtb	r2, r2
 800b1fe:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b200:	68fb      	ldr	r3, [r7, #12]
 800b202:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b204:	1c5a      	adds	r2, r3, #1
 800b206:	68fb      	ldr	r3, [r7, #12]
 800b208:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount -= (uint16_t)4UL;
 800b20a:	68fb      	ldr	r3, [r7, #12]
 800b20c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b210:	b29b      	uxth	r3, r3
 800b212:	3b04      	subs	r3, #4
 800b214:	b29a      	uxth	r2, r3
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b21c:	e046      	b.n	800b2ac <HAL_SPI_Receive+0x4a8>
      }
      /* Check RXPLVL flags when RXWNE cannot be reached */
      else if ((hspi->RxXferCount < 4UL) && ((temp_sr_reg & SPI_SR_RXPLVL_Msk) != 0UL))
 800b21e:	68fb      	ldr	r3, [r7, #12]
 800b220:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b224:	b29b      	uxth	r3, r3
 800b226:	2b03      	cmp	r3, #3
 800b228:	d81c      	bhi.n	800b264 <HAL_SPI_Receive+0x460>
 800b22a:	693b      	ldr	r3, [r7, #16]
 800b22c:	f403 43c0 	and.w	r3, r3, #24576	; 0x6000
 800b230:	2b00      	cmp	r3, #0
 800b232:	d017      	beq.n	800b264 <HAL_SPI_Receive+0x460>
      {
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	681b      	ldr	r3, [r3, #0]
 800b238:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b23c:	68fb      	ldr	r3, [r7, #12]
 800b23e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b240:	7812      	ldrb	r2, [r2, #0]
 800b242:	b2d2      	uxtb	r2, r2
 800b244:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b246:	68fb      	ldr	r3, [r7, #12]
 800b248:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b24a:	1c5a      	adds	r2, r3, #1
 800b24c:	68fb      	ldr	r3, [r7, #12]
 800b24e:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b250:	68fb      	ldr	r3, [r7, #12]
 800b252:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b256:	b29b      	uxth	r3, r3
 800b258:	3b01      	subs	r3, #1
 800b25a:	b29a      	uxth	r2, r3
 800b25c:	68fb      	ldr	r3, [r7, #12]
 800b25e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b262:	e023      	b.n	800b2ac <HAL_SPI_Receive+0x4a8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b264:	f7f6 fdf4 	bl	8001e50 <HAL_GetTick>
 800b268:	4602      	mov	r2, r0
 800b26a:	697b      	ldr	r3, [r7, #20]
 800b26c:	1ad3      	subs	r3, r2, r3
 800b26e:	683a      	ldr	r2, [r7, #0]
 800b270:	429a      	cmp	r2, r3
 800b272:	d803      	bhi.n	800b27c <HAL_SPI_Receive+0x478>
 800b274:	683b      	ldr	r3, [r7, #0]
 800b276:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b27a:	d102      	bne.n	800b282 <HAL_SPI_Receive+0x47e>
 800b27c:	683b      	ldr	r3, [r7, #0]
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d114      	bne.n	800b2ac <HAL_SPI_Receive+0x4a8>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b282:	68f8      	ldr	r0, [r7, #12]
 800b284:	f000 fbe0 	bl	800ba48 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b288:	68fb      	ldr	r3, [r7, #12]
 800b28a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b28e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b292:	68fb      	ldr	r3, [r7, #12]
 800b294:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b298:	68fb      	ldr	r3, [r7, #12]
 800b29a:	2201      	movs	r2, #1
 800b29c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b2a0:	68fb      	ldr	r3, [r7, #12]
 800b2a2:	2200      	movs	r2, #0
 800b2a4:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800b2a8:	2303      	movs	r3, #3
 800b2aa:	e019      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
    while (hspi->RxXferCount > 0UL)
 800b2ac:	68fb      	ldr	r3, [r7, #12]
 800b2ae:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b2b2:	b29b      	uxth	r3, r3
 800b2b4:	2b00      	cmp	r3, #0
 800b2b6:	f47f af41 	bne.w	800b13c <HAL_SPI_Receive+0x338>
    }
  }
#endif /* USE_SPI_CRC */

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800b2ba:	68f8      	ldr	r0, [r7, #12]
 800b2bc:	f000 fbc4 	bl	800ba48 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 800b2c0:	68fb      	ldr	r3, [r7, #12]
 800b2c2:	2201      	movs	r2, #1
 800b2c4:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800b2c8:	68fb      	ldr	r3, [r7, #12]
 800b2ca:	2200      	movs	r2, #0
 800b2cc:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80


  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b2d0:	68fb      	ldr	r3, [r7, #12]
 800b2d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b2d6:	2b00      	cmp	r3, #0
 800b2d8:	d001      	beq.n	800b2de <HAL_SPI_Receive+0x4da>
  {
    return HAL_ERROR;
 800b2da:	2301      	movs	r3, #1
 800b2dc:	e000      	b.n	800b2e0 <HAL_SPI_Receive+0x4dc>
  }
  else
  {
    return HAL_OK;
 800b2de:	2300      	movs	r3, #0
  }
}
 800b2e0:	4618      	mov	r0, r3
 800b2e2:	3720      	adds	r7, #32
 800b2e4:	46bd      	mov	sp, r7
 800b2e6:	bd80      	pop	{r7, pc}

0800b2e8 <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 800b2e8:	b580      	push	{r7, lr}
 800b2ea:	b084      	sub	sp, #16
 800b2ec:	af00      	add	r7, sp, #0
 800b2ee:	60f8      	str	r0, [r7, #12]
 800b2f0:	60b9      	str	r1, [r7, #8]
 800b2f2:	4613      	mov	r3, r2
 800b2f4:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 800b2f6:	68fb      	ldr	r3, [r7, #12]
 800b2f8:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b2fc:	b2db      	uxtb	r3, r3
 800b2fe:	2b01      	cmp	r3, #1
 800b300:	d001      	beq.n	800b306 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 800b302:	2302      	movs	r3, #2
 800b304:	e126      	b.n	800b554 <HAL_SPI_Transmit_DMA+0x26c>
  }

  if ((pData == NULL) || (Size == 0UL))
 800b306:	68bb      	ldr	r3, [r7, #8]
 800b308:	2b00      	cmp	r3, #0
 800b30a:	d002      	beq.n	800b312 <HAL_SPI_Transmit_DMA+0x2a>
 800b30c:	88fb      	ldrh	r3, [r7, #6]
 800b30e:	2b00      	cmp	r3, #0
 800b310:	d101      	bne.n	800b316 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 800b312:	2301      	movs	r3, #1
 800b314:	e11e      	b.n	800b554 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800b316:	68fb      	ldr	r3, [r7, #12]
 800b318:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b31c:	2b01      	cmp	r3, #1
 800b31e:	d101      	bne.n	800b324 <HAL_SPI_Transmit_DMA+0x3c>
 800b320:	2302      	movs	r3, #2
 800b322:	e117      	b.n	800b554 <HAL_SPI_Transmit_DMA+0x26c>
 800b324:	68fb      	ldr	r3, [r7, #12]
 800b326:	2201      	movs	r2, #1
 800b328:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b32c:	68fb      	ldr	r3, [r7, #12]
 800b32e:	2203      	movs	r2, #3
 800b330:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b334:	68fb      	ldr	r3, [r7, #12]
 800b336:	2200      	movs	r2, #0
 800b338:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800b33c:	68fb      	ldr	r3, [r7, #12]
 800b33e:	68ba      	ldr	r2, [r7, #8]
 800b340:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800b342:	68fb      	ldr	r3, [r7, #12]
 800b344:	88fa      	ldrh	r2, [r7, #6]
 800b346:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800b34a:	68fb      	ldr	r3, [r7, #12]
 800b34c:	88fa      	ldrh	r2, [r7, #6]
 800b34e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800b352:	68fb      	ldr	r3, [r7, #12]
 800b354:	2200      	movs	r2, #0
 800b356:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->TxISR       = NULL;
 800b358:	68fb      	ldr	r3, [r7, #12]
 800b35a:	2200      	movs	r2, #0
 800b35c:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800b35e:	68fb      	ldr	r3, [r7, #12]
 800b360:	2200      	movs	r2, #0
 800b362:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->RxXferSize  = (uint16_t)0UL;
 800b364:	68fb      	ldr	r3, [r7, #12]
 800b366:	2200      	movs	r2, #0
 800b368:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t)0UL;
 800b36c:	68fb      	ldr	r3, [r7, #12]
 800b36e:	2200      	movs	r2, #0
 800b370:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b374:	68fb      	ldr	r3, [r7, #12]
 800b376:	689b      	ldr	r3, [r3, #8]
 800b378:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800b37c:	d108      	bne.n	800b390 <HAL_SPI_Transmit_DMA+0xa8>
  {
    SPI_1LINE_TX(hspi);
 800b37e:	68fb      	ldr	r3, [r7, #12]
 800b380:	681b      	ldr	r3, [r3, #0]
 800b382:	681a      	ldr	r2, [r3, #0]
 800b384:	68fb      	ldr	r3, [r7, #12]
 800b386:	681b      	ldr	r3, [r3, #0]
 800b388:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b38c:	601a      	str	r2, [r3, #0]
 800b38e:	e009      	b.n	800b3a4 <HAL_SPI_Transmit_DMA+0xbc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800b390:	68fb      	ldr	r3, [r7, #12]
 800b392:	681b      	ldr	r3, [r3, #0]
 800b394:	68db      	ldr	r3, [r3, #12]
 800b396:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800b39a:	68fb      	ldr	r3, [r7, #12]
 800b39c:	681b      	ldr	r3, [r3, #0]
 800b39e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800b3a2:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800b3a4:	68fb      	ldr	r3, [r7, #12]
 800b3a6:	68db      	ldr	r3, [r3, #12]
 800b3a8:	2b0f      	cmp	r3, #15
 800b3aa:	d905      	bls.n	800b3b8 <HAL_SPI_Transmit_DMA+0xd0>
 800b3ac:	68fb      	ldr	r3, [r7, #12]
 800b3ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b3b0:	699b      	ldr	r3, [r3, #24]
 800b3b2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b3b6:	d10f      	bne.n	800b3d8 <HAL_SPI_Transmit_DMA+0xf0>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b3b8:	68fb      	ldr	r3, [r7, #12]
 800b3ba:	68db      	ldr	r3, [r3, #12]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800b3bc:	2b07      	cmp	r3, #7
 800b3be:	d911      	bls.n	800b3e4 <HAL_SPI_Transmit_DMA+0xfc>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b3c0:	68fb      	ldr	r3, [r7, #12]
 800b3c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b3c4:	699b      	ldr	r3, [r3, #24]
 800b3c6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b3ca:	d00b      	beq.n	800b3e4 <HAL_SPI_Transmit_DMA+0xfc>
                                                     (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))))
 800b3cc:	68fb      	ldr	r3, [r7, #12]
 800b3ce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b3d0:	699b      	ldr	r3, [r3, #24]
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b3d2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b3d6:	d005      	beq.n	800b3e4 <HAL_SPI_Transmit_DMA+0xfc>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 800b3d8:	68fb      	ldr	r3, [r7, #12]
 800b3da:	2200      	movs	r2, #0
 800b3dc:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return HAL_ERROR;
 800b3e0:	2301      	movs	r3, #1
 800b3e2:	e0b7      	b.n	800b554 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800b3e4:	68fb      	ldr	r3, [r7, #12]
 800b3e6:	68db      	ldr	r3, [r3, #12]
 800b3e8:	2b07      	cmp	r3, #7
 800b3ea:	d820      	bhi.n	800b42e <HAL_SPI_Transmit_DMA+0x146>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800b3ec:	68fb      	ldr	r3, [r7, #12]
 800b3ee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b3f0:	699b      	ldr	r3, [r3, #24]
 800b3f2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b3f6:	d109      	bne.n	800b40c <HAL_SPI_Transmit_DMA+0x124>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800b3f8:	68fb      	ldr	r3, [r7, #12]
 800b3fa:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b3fe:	b29b      	uxth	r3, r3
 800b400:	3301      	adds	r3, #1
 800b402:	105b      	asrs	r3, r3, #1
 800b404:	b29a      	uxth	r2, r3
 800b406:	68fb      	ldr	r3, [r7, #12]
 800b408:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
    }
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800b40c:	68fb      	ldr	r3, [r7, #12]
 800b40e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b410:	699b      	ldr	r3, [r3, #24]
 800b412:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b416:	d11e      	bne.n	800b456 <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 800b418:	68fb      	ldr	r3, [r7, #12]
 800b41a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b41e:	b29b      	uxth	r3, r3
 800b420:	3303      	adds	r3, #3
 800b422:	109b      	asrs	r3, r3, #2
 800b424:	b29a      	uxth	r2, r3
 800b426:	68fb      	ldr	r3, [r7, #12]
 800b428:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b42c:	e013      	b.n	800b456 <HAL_SPI_Transmit_DMA+0x16e>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800b42e:	68fb      	ldr	r3, [r7, #12]
 800b430:	68db      	ldr	r3, [r3, #12]
 800b432:	2b0f      	cmp	r3, #15
 800b434:	d80f      	bhi.n	800b456 <HAL_SPI_Transmit_DMA+0x16e>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800b436:	68fb      	ldr	r3, [r7, #12]
 800b438:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b43a:	699b      	ldr	r3, [r3, #24]
 800b43c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b440:	d109      	bne.n	800b456 <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800b442:	68fb      	ldr	r3, [r7, #12]
 800b444:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b448:	b29b      	uxth	r3, r3
 800b44a:	3301      	adds	r3, #1
 800b44c:	105b      	asrs	r3, r3, #1
 800b44e:	b29a      	uxth	r2, r3
 800b450:	68fb      	ldr	r3, [r7, #12]
 800b452:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800b456:	68fb      	ldr	r3, [r7, #12]
 800b458:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b45a:	4a40      	ldr	r2, [pc, #256]	; (800b55c <HAL_SPI_Transmit_DMA+0x274>)
 800b45c:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800b45e:	68fb      	ldr	r3, [r7, #12]
 800b460:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b462:	4a3f      	ldr	r2, [pc, #252]	; (800b560 <HAL_SPI_Transmit_DMA+0x278>)
 800b464:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800b466:	68fb      	ldr	r3, [r7, #12]
 800b468:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b46a:	4a3e      	ldr	r2, [pc, #248]	; (800b564 <HAL_SPI_Transmit_DMA+0x27c>)
 800b46c:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 800b46e:	68fb      	ldr	r3, [r7, #12]
 800b470:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b472:	2200      	movs	r2, #0
 800b474:	651a      	str	r2, [r3, #80]	; 0x50

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800b476:	68fb      	ldr	r3, [r7, #12]
 800b478:	681b      	ldr	r3, [r3, #0]
 800b47a:	689a      	ldr	r2, [r3, #8]
 800b47c:	68fb      	ldr	r3, [r7, #12]
 800b47e:	681b      	ldr	r3, [r3, #0]
 800b480:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b484:	609a      	str	r2, [r3, #8]

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800b486:	68fb      	ldr	r3, [r7, #12]
 800b488:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800b48a:	68fb      	ldr	r3, [r7, #12]
 800b48c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b48e:	4619      	mov	r1, r3
 800b490:	68fb      	ldr	r3, [r7, #12]
 800b492:	681b      	ldr	r3, [r3, #0]
 800b494:	3320      	adds	r3, #32
 800b496:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800b498:	68fb      	ldr	r3, [r7, #12]
 800b49a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b49e:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800b4a0:	f7f8 fdd4 	bl	800404c <HAL_DMA_Start_IT>
 800b4a4:	4603      	mov	r3, r0
 800b4a6:	2b00      	cmp	r3, #0
 800b4a8:	d011      	beq.n	800b4ce <HAL_SPI_Transmit_DMA+0x1e6>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800b4aa:	68fb      	ldr	r3, [r7, #12]
 800b4ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b4b0:	f043 0210 	orr.w	r2, r3, #16
 800b4b4:	68fb      	ldr	r3, [r7, #12]
 800b4b6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800b4ba:	68fb      	ldr	r3, [r7, #12]
 800b4bc:	2201      	movs	r2, #1
 800b4be:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 800b4c2:	68fb      	ldr	r3, [r7, #12]
 800b4c4:	2200      	movs	r2, #0
 800b4c6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    return HAL_ERROR;
 800b4ca:	2301      	movs	r3, #1
 800b4cc:	e042      	b.n	800b554 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800b4ce:	68fb      	ldr	r3, [r7, #12]
 800b4d0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b4d2:	69db      	ldr	r3, [r3, #28]
 800b4d4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b4d8:	d108      	bne.n	800b4ec <HAL_SPI_Transmit_DMA+0x204>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 800b4da:	68fb      	ldr	r3, [r7, #12]
 800b4dc:	681b      	ldr	r3, [r3, #0]
 800b4de:	6859      	ldr	r1, [r3, #4]
 800b4e0:	68fb      	ldr	r3, [r7, #12]
 800b4e2:	681a      	ldr	r2, [r3, #0]
 800b4e4:	4b20      	ldr	r3, [pc, #128]	; (800b568 <HAL_SPI_Transmit_DMA+0x280>)
 800b4e6:	400b      	ands	r3, r1
 800b4e8:	6053      	str	r3, [r2, #4]
 800b4ea:	e009      	b.n	800b500 <HAL_SPI_Transmit_DMA+0x218>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800b4ec:	68fb      	ldr	r3, [r7, #12]
 800b4ee:	681b      	ldr	r3, [r3, #0]
 800b4f0:	685a      	ldr	r2, [r3, #4]
 800b4f2:	4b1d      	ldr	r3, [pc, #116]	; (800b568 <HAL_SPI_Transmit_DMA+0x280>)
 800b4f4:	4013      	ands	r3, r2
 800b4f6:	88f9      	ldrh	r1, [r7, #6]
 800b4f8:	68fa      	ldr	r2, [r7, #12]
 800b4fa:	6812      	ldr	r2, [r2, #0]
 800b4fc:	430b      	orrs	r3, r1
 800b4fe:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800b500:	68fb      	ldr	r3, [r7, #12]
 800b502:	681b      	ldr	r3, [r3, #0]
 800b504:	689a      	ldr	r2, [r3, #8]
 800b506:	68fb      	ldr	r3, [r7, #12]
 800b508:	681b      	ldr	r3, [r3, #0]
 800b50a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b50e:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 800b510:	68fb      	ldr	r3, [r7, #12]
 800b512:	681b      	ldr	r3, [r3, #0]
 800b514:	691a      	ldr	r2, [r3, #16]
 800b516:	68fb      	ldr	r3, [r7, #12]
 800b518:	681b      	ldr	r3, [r3, #0]
 800b51a:	f442 7248 	orr.w	r2, r2, #800	; 0x320
 800b51e:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800b520:	68fb      	ldr	r3, [r7, #12]
 800b522:	681b      	ldr	r3, [r3, #0]
 800b524:	681a      	ldr	r2, [r3, #0]
 800b526:	68fb      	ldr	r3, [r7, #12]
 800b528:	681b      	ldr	r3, [r3, #0]
 800b52a:	f042 0201 	orr.w	r2, r2, #1
 800b52e:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b530:	68fb      	ldr	r3, [r7, #12]
 800b532:	685b      	ldr	r3, [r3, #4]
 800b534:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800b538:	d107      	bne.n	800b54a <HAL_SPI_Transmit_DMA+0x262>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800b53a:	68fb      	ldr	r3, [r7, #12]
 800b53c:	681b      	ldr	r3, [r3, #0]
 800b53e:	681a      	ldr	r2, [r3, #0]
 800b540:	68fb      	ldr	r3, [r7, #12]
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b548:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800b54a:	68fb      	ldr	r3, [r7, #12]
 800b54c:	2200      	movs	r2, #0
 800b54e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  return HAL_OK;
 800b552:	2300      	movs	r3, #0
}
 800b554:	4618      	mov	r0, r3
 800b556:	3710      	adds	r7, #16
 800b558:	46bd      	mov	sp, r7
 800b55a:	bd80      	pop	{r7, pc}
 800b55c:	0800b9b3 	.word	0x0800b9b3
 800b560:	0800b96d 	.word	0x0800b96d
 800b564:	0800b9cf 	.word	0x0800b9cf
 800b568:	ffff0000 	.word	0xffff0000

0800b56c <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800b56c:	b580      	push	{r7, lr}
 800b56e:	b08a      	sub	sp, #40	; 0x28
 800b570:	af00      	add	r7, sp, #0
 800b572:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 800b574:	687b      	ldr	r3, [r7, #4]
 800b576:	681b      	ldr	r3, [r3, #0]
 800b578:	691b      	ldr	r3, [r3, #16]
 800b57a:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 800b57c:	687b      	ldr	r3, [r7, #4]
 800b57e:	681b      	ldr	r3, [r3, #0]
 800b580:	695b      	ldr	r3, [r3, #20]
 800b582:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 800b584:	6a3a      	ldr	r2, [r7, #32]
 800b586:	69fb      	ldr	r3, [r7, #28]
 800b588:	4013      	ands	r3, r2
 800b58a:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	681b      	ldr	r3, [r3, #0]
 800b590:	689b      	ldr	r3, [r3, #8]
 800b592:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 800b594:	2300      	movs	r3, #0
 800b596:	627b      	str	r3, [r7, #36]	; 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b59e:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	681b      	ldr	r3, [r3, #0]
 800b5a4:	3330      	adds	r3, #48	; 0x30
 800b5a6:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 800b5a8:	69fb      	ldr	r3, [r7, #28]
 800b5aa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800b5ae:	2b00      	cmp	r3, #0
 800b5b0:	d010      	beq.n	800b5d4 <HAL_SPI_IRQHandler+0x68>
 800b5b2:	6a3b      	ldr	r3, [r7, #32]
 800b5b4:	f003 0308 	and.w	r3, r3, #8
 800b5b8:	2b00      	cmp	r3, #0
 800b5ba:	d00b      	beq.n	800b5d4 <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800b5bc:	687b      	ldr	r3, [r7, #4]
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	699a      	ldr	r2, [r3, #24]
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	681b      	ldr	r3, [r3, #0]
 800b5c6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b5ca:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 800b5cc:	6878      	ldr	r0, [r7, #4]
 800b5ce:	f000 f9c3 	bl	800b958 <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 800b5d2:	e192      	b.n	800b8fa <HAL_SPI_IRQHandler+0x38e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800b5d4:	69bb      	ldr	r3, [r7, #24]
 800b5d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b5da:	2b00      	cmp	r3, #0
 800b5dc:	d113      	bne.n	800b606 <HAL_SPI_IRQHandler+0x9a>
 800b5de:	69bb      	ldr	r3, [r7, #24]
 800b5e0:	f003 0320 	and.w	r3, r3, #32
 800b5e4:	2b00      	cmp	r3, #0
 800b5e6:	d10e      	bne.n	800b606 <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 800b5e8:	69bb      	ldr	r3, [r7, #24]
 800b5ea:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800b5ee:	2b00      	cmp	r3, #0
 800b5f0:	d009      	beq.n	800b606 <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b5f6:	6878      	ldr	r0, [r7, #4]
 800b5f8:	4798      	blx	r3
    hspi->RxISR(hspi);
 800b5fa:	687b      	ldr	r3, [r7, #4]
 800b5fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b5fe:	6878      	ldr	r0, [r7, #4]
 800b600:	4798      	blx	r3
    handled = 1UL;
 800b602:	2301      	movs	r3, #1
 800b604:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800b606:	69bb      	ldr	r3, [r7, #24]
 800b608:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b60c:	2b00      	cmp	r3, #0
 800b60e:	d10f      	bne.n	800b630 <HAL_SPI_IRQHandler+0xc4>
 800b610:	69bb      	ldr	r3, [r7, #24]
 800b612:	f003 0301 	and.w	r3, r3, #1
 800b616:	2b00      	cmp	r3, #0
 800b618:	d00a      	beq.n	800b630 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800b61a:	69bb      	ldr	r3, [r7, #24]
 800b61c:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800b620:	2b00      	cmp	r3, #0
 800b622:	d105      	bne.n	800b630 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b628:	6878      	ldr	r0, [r7, #4]
 800b62a:	4798      	blx	r3
    handled = 1UL;
 800b62c:	2301      	movs	r3, #1
 800b62e:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800b630:	69bb      	ldr	r3, [r7, #24]
 800b632:	f003 0320 	and.w	r3, r3, #32
 800b636:	2b00      	cmp	r3, #0
 800b638:	d10f      	bne.n	800b65a <HAL_SPI_IRQHandler+0xee>
 800b63a:	69bb      	ldr	r3, [r7, #24]
 800b63c:	f003 0302 	and.w	r3, r3, #2
 800b640:	2b00      	cmp	r3, #0
 800b642:	d00a      	beq.n	800b65a <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800b644:	69bb      	ldr	r3, [r7, #24]
 800b646:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800b64a:	2b00      	cmp	r3, #0
 800b64c:	d105      	bne.n	800b65a <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b652:	6878      	ldr	r0, [r7, #4]
 800b654:	4798      	blx	r3
    handled = 1UL;
 800b656:	2301      	movs	r3, #1
 800b658:	627b      	str	r3, [r7, #36]	; 0x24
  {
    __HAL_SPI_CLEAR_TSERFFLAG(hspi);
  }
#endif /* USE_SPI_RELOAD_TRANSFER */

  if (handled != 0UL)
 800b65a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b65c:	2b00      	cmp	r3, #0
 800b65e:	f040 8147 	bne.w	800b8f0 <HAL_SPI_IRQHandler+0x384>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 800b662:	69bb      	ldr	r3, [r7, #24]
 800b664:	f003 0308 	and.w	r3, r3, #8
 800b668:	2b00      	cmp	r3, #0
 800b66a:	f000 808b 	beq.w	800b784 <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	681b      	ldr	r3, [r3, #0]
 800b672:	699a      	ldr	r2, [r3, #24]
 800b674:	687b      	ldr	r3, [r7, #4]
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	f042 0208 	orr.w	r2, r2, #8
 800b67c:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	681b      	ldr	r3, [r3, #0]
 800b682:	699a      	ldr	r2, [r3, #24]
 800b684:	687b      	ldr	r3, [r7, #4]
 800b686:	681b      	ldr	r3, [r3, #0]
 800b688:	f042 0210 	orr.w	r2, r2, #16
 800b68c:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800b68e:	687b      	ldr	r3, [r7, #4]
 800b690:	681b      	ldr	r3, [r3, #0]
 800b692:	699a      	ldr	r2, [r3, #24]
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	681b      	ldr	r3, [r3, #0]
 800b698:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b69c:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 800b69e:	687b      	ldr	r3, [r7, #4]
 800b6a0:	681b      	ldr	r3, [r3, #0]
 800b6a2:	691a      	ldr	r2, [r3, #16]
 800b6a4:	687b      	ldr	r3, [r7, #4]
 800b6a6:	681b      	ldr	r3, [r3, #0]
 800b6a8:	f022 0208 	bic.w	r2, r2, #8
 800b6ac:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	681b      	ldr	r3, [r3, #0]
 800b6b2:	689b      	ldr	r3, [r3, #8]
 800b6b4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800b6b8:	2b00      	cmp	r3, #0
 800b6ba:	d13d      	bne.n	800b738 <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 800b6bc:	e036      	b.n	800b72c <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	68db      	ldr	r3, [r3, #12]
 800b6c2:	2b0f      	cmp	r3, #15
 800b6c4:	d90b      	bls.n	800b6de <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	681a      	ldr	r2, [r3, #0]
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b6ce:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800b6d0:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b6d6:	1d1a      	adds	r2, r3, #4
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	665a      	str	r2, [r3, #100]	; 0x64
 800b6dc:	e01d      	b.n	800b71a <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	68db      	ldr	r3, [r3, #12]
 800b6e2:	2b07      	cmp	r3, #7
 800b6e4:	d90b      	bls.n	800b6fe <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b6ea:	68fa      	ldr	r2, [r7, #12]
 800b6ec:	8812      	ldrh	r2, [r2, #0]
 800b6ee:	b292      	uxth	r2, r2
 800b6f0:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b6f6:	1c9a      	adds	r2, r3, #2
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	665a      	str	r2, [r3, #100]	; 0x64
 800b6fc:	e00d      	b.n	800b71a <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	681b      	ldr	r3, [r3, #0]
 800b702:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b70a:	7812      	ldrb	r2, [r2, #0]
 800b70c:	b2d2      	uxtb	r2, r2
 800b70e:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 800b710:	687b      	ldr	r3, [r7, #4]
 800b712:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b714:	1c5a      	adds	r2, r3, #1
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	665a      	str	r2, [r3, #100]	; 0x64
        }

        hspi->RxXferCount--;
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b720:	b29b      	uxth	r3, r3
 800b722:	3b01      	subs	r3, #1
 800b724:	b29a      	uxth	r2, r3
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
      while (hspi->RxXferCount != 0UL)
 800b72c:	687b      	ldr	r3, [r7, #4]
 800b72e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b732:	b29b      	uxth	r3, r3
 800b734:	2b00      	cmp	r3, #0
 800b736:	d1c2      	bne.n	800b6be <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 800b738:	6878      	ldr	r0, [r7, #4]
 800b73a:	f000 f985 	bl	800ba48 <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	2201      	movs	r2, #1
 800b742:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b74c:	2b00      	cmp	r3, #0
 800b74e:	d003      	beq.n	800b758 <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800b750:	6878      	ldr	r0, [r7, #4]
 800b752:	f000 f8f7 	bl	800b944 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800b756:	e0d0      	b.n	800b8fa <HAL_SPI_IRQHandler+0x38e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 800b758:	7cfb      	ldrb	r3, [r7, #19]
 800b75a:	2b05      	cmp	r3, #5
 800b75c:	d103      	bne.n	800b766 <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 800b75e:	6878      	ldr	r0, [r7, #4]
 800b760:	f000 f8dc 	bl	800b91c <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 800b764:	e0c6      	b.n	800b8f4 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 800b766:	7cfb      	ldrb	r3, [r7, #19]
 800b768:	2b04      	cmp	r3, #4
 800b76a:	d103      	bne.n	800b774 <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 800b76c:	6878      	ldr	r0, [r7, #4]
 800b76e:	f000 f8cb 	bl	800b908 <HAL_SPI_RxCpltCallback>
    return;
 800b772:	e0bf      	b.n	800b8f4 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 800b774:	7cfb      	ldrb	r3, [r7, #19]
 800b776:	2b03      	cmp	r3, #3
 800b778:	f040 80bc 	bne.w	800b8f4 <HAL_SPI_IRQHandler+0x388>
      HAL_SPI_TxCpltCallback(hspi);
 800b77c:	6878      	ldr	r0, [r7, #4]
 800b77e:	f004 ff6f 	bl	8010660 <HAL_SPI_TxCpltCallback>
    return;
 800b782:	e0b7      	b.n	800b8f4 <HAL_SPI_IRQHandler+0x388>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 800b784:	69bb      	ldr	r3, [r7, #24]
 800b786:	f403 7358 	and.w	r3, r3, #864	; 0x360
 800b78a:	2b00      	cmp	r3, #0
 800b78c:	f000 80b5 	beq.w	800b8fa <HAL_SPI_IRQHandler+0x38e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 800b790:	69bb      	ldr	r3, [r7, #24]
 800b792:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b796:	2b00      	cmp	r3, #0
 800b798:	d00f      	beq.n	800b7ba <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b7a0:	f043 0204 	orr.w	r2, r3, #4
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	681b      	ldr	r3, [r3, #0]
 800b7ae:	699a      	ldr	r2, [r3, #24]
 800b7b0:	687b      	ldr	r3, [r7, #4]
 800b7b2:	681b      	ldr	r3, [r3, #0]
 800b7b4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b7b8:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 800b7ba:	69bb      	ldr	r3, [r7, #24]
 800b7bc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b7c0:	2b00      	cmp	r3, #0
 800b7c2:	d00f      	beq.n	800b7e4 <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b7ca:	f043 0201 	orr.w	r2, r3, #1
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800b7d4:	687b      	ldr	r3, [r7, #4]
 800b7d6:	681b      	ldr	r3, [r3, #0]
 800b7d8:	699a      	ldr	r2, [r3, #24]
 800b7da:	687b      	ldr	r3, [r7, #4]
 800b7dc:	681b      	ldr	r3, [r3, #0]
 800b7de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b7e2:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 800b7e4:	69bb      	ldr	r3, [r7, #24]
 800b7e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b7ea:	2b00      	cmp	r3, #0
 800b7ec:	d00f      	beq.n	800b80e <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800b7ee:	687b      	ldr	r3, [r7, #4]
 800b7f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b7f4:	f043 0208 	orr.w	r2, r3, #8
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800b7fe:	687b      	ldr	r3, [r7, #4]
 800b800:	681b      	ldr	r3, [r3, #0]
 800b802:	699a      	ldr	r2, [r3, #24]
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	681b      	ldr	r3, [r3, #0]
 800b808:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b80c:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 800b80e:	69bb      	ldr	r3, [r7, #24]
 800b810:	f003 0320 	and.w	r3, r3, #32
 800b814:	2b00      	cmp	r3, #0
 800b816:	d00f      	beq.n	800b838 <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800b818:	687b      	ldr	r3, [r7, #4]
 800b81a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b81e:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800b822:	687b      	ldr	r3, [r7, #4]
 800b824:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800b828:	687b      	ldr	r3, [r7, #4]
 800b82a:	681b      	ldr	r3, [r3, #0]
 800b82c:	699a      	ldr	r2, [r3, #24]
 800b82e:	687b      	ldr	r3, [r7, #4]
 800b830:	681b      	ldr	r3, [r3, #0]
 800b832:	f042 0220 	orr.w	r2, r2, #32
 800b836:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b838:	687b      	ldr	r3, [r7, #4]
 800b83a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b83e:	2b00      	cmp	r3, #0
 800b840:	d05a      	beq.n	800b8f8 <HAL_SPI_IRQHandler+0x38c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	681b      	ldr	r3, [r3, #0]
 800b846:	681a      	ldr	r2, [r3, #0]
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	681b      	ldr	r3, [r3, #0]
 800b84c:	f022 0201 	bic.w	r2, r2, #1
 800b850:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	681b      	ldr	r3, [r3, #0]
 800b856:	6919      	ldr	r1, [r3, #16]
 800b858:	687b      	ldr	r3, [r7, #4]
 800b85a:	681a      	ldr	r2, [r3, #0]
 800b85c:	4b28      	ldr	r3, [pc, #160]	; (800b900 <HAL_SPI_IRQHandler+0x394>)
 800b85e:	400b      	ands	r3, r1
 800b860:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800b862:	697b      	ldr	r3, [r7, #20]
 800b864:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800b868:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800b86c:	d138      	bne.n	800b8e0 <HAL_SPI_IRQHandler+0x374>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	681b      	ldr	r3, [r3, #0]
 800b872:	689a      	ldr	r2, [r3, #8]
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	681b      	ldr	r3, [r3, #0]
 800b878:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800b87c:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b882:	2b00      	cmp	r3, #0
 800b884:	d013      	beq.n	800b8ae <HAL_SPI_IRQHandler+0x342>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800b886:	687b      	ldr	r3, [r7, #4]
 800b888:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b88a:	4a1e      	ldr	r2, [pc, #120]	; (800b904 <HAL_SPI_IRQHandler+0x398>)
 800b88c:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b892:	4618      	mov	r0, r3
 800b894:	f7f8 fe44 	bl	8004520 <HAL_DMA_Abort_IT>
 800b898:	4603      	mov	r3, r0
 800b89a:	2b00      	cmp	r3, #0
 800b89c:	d007      	beq.n	800b8ae <HAL_SPI_IRQHandler+0x342>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800b89e:	687b      	ldr	r3, [r7, #4]
 800b8a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b8a4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800b8a8:	687b      	ldr	r3, [r7, #4]
 800b8aa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8b2:	2b00      	cmp	r3, #0
 800b8b4:	d020      	beq.n	800b8f8 <HAL_SPI_IRQHandler+0x38c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800b8b6:	687b      	ldr	r3, [r7, #4]
 800b8b8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8ba:	4a12      	ldr	r2, [pc, #72]	; (800b904 <HAL_SPI_IRQHandler+0x398>)
 800b8bc:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800b8be:	687b      	ldr	r3, [r7, #4]
 800b8c0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8c2:	4618      	mov	r0, r3
 800b8c4:	f7f8 fe2c 	bl	8004520 <HAL_DMA_Abort_IT>
 800b8c8:	4603      	mov	r3, r0
 800b8ca:	2b00      	cmp	r3, #0
 800b8cc:	d014      	beq.n	800b8f8 <HAL_SPI_IRQHandler+0x38c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b8d4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
        HAL_SPI_ErrorCallback(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 800b8de:	e00b      	b.n	800b8f8 <HAL_SPI_IRQHandler+0x38c>
        hspi->State = HAL_SPI_STATE_READY;
 800b8e0:	687b      	ldr	r3, [r7, #4]
 800b8e2:	2201      	movs	r2, #1
 800b8e4:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
        HAL_SPI_ErrorCallback(hspi);
 800b8e8:	6878      	ldr	r0, [r7, #4]
 800b8ea:	f000 f82b 	bl	800b944 <HAL_SPI_ErrorCallback>
    return;
 800b8ee:	e003      	b.n	800b8f8 <HAL_SPI_IRQHandler+0x38c>
    return;
 800b8f0:	bf00      	nop
 800b8f2:	e002      	b.n	800b8fa <HAL_SPI_IRQHandler+0x38e>
    return;
 800b8f4:	bf00      	nop
 800b8f6:	e000      	b.n	800b8fa <HAL_SPI_IRQHandler+0x38e>
    return;
 800b8f8:	bf00      	nop
  }
}
 800b8fa:	3728      	adds	r7, #40	; 0x28
 800b8fc:	46bd      	mov	sp, r7
 800b8fe:	bd80      	pop	{r7, pc}
 800b900:	fffffc94 	.word	0xfffffc94
 800b904:	0800ba15 	.word	0x0800ba15

0800b908 <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b908:	b480      	push	{r7}
 800b90a:	b083      	sub	sp, #12
 800b90c:	af00      	add	r7, sp, #0
 800b90e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800b910:	bf00      	nop
 800b912:	370c      	adds	r7, #12
 800b914:	46bd      	mov	sp, r7
 800b916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b91a:	4770      	bx	lr

0800b91c <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b91c:	b480      	push	{r7}
 800b91e:	b083      	sub	sp, #12
 800b920:	af00      	add	r7, sp, #0
 800b922:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 800b924:	bf00      	nop
 800b926:	370c      	adds	r7, #12
 800b928:	46bd      	mov	sp, r7
 800b92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b92e:	4770      	bx	lr

0800b930 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b930:	b480      	push	{r7}
 800b932:	b083      	sub	sp, #12
 800b934:	af00      	add	r7, sp, #0
 800b936:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800b938:	bf00      	nop
 800b93a:	370c      	adds	r7, #12
 800b93c:	46bd      	mov	sp, r7
 800b93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b942:	4770      	bx	lr

0800b944 <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b944:	b480      	push	{r7}
 800b946:	b083      	sub	sp, #12
 800b948:	af00      	add	r7, sp, #0
 800b94a:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 800b94c:	bf00      	nop
 800b94e:	370c      	adds	r7, #12
 800b950:	46bd      	mov	sp, r7
 800b952:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b956:	4770      	bx	lr

0800b958 <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b958:	b480      	push	{r7}
 800b95a:	b083      	sub	sp, #12
 800b95c:	af00      	add	r7, sp, #0
 800b95e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 800b960:	bf00      	nop
 800b962:	370c      	adds	r7, #12
 800b964:	46bd      	mov	sp, r7
 800b966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b96a:	4770      	bx	lr

0800b96c <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800b96c:	b580      	push	{r7, lr}
 800b96e:	b084      	sub	sp, #16
 800b970:	af00      	add	r7, sp, #0
 800b972:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b974:	687b      	ldr	r3, [r7, #4]
 800b976:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b978:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 800b97a:	68fb      	ldr	r3, [r7, #12]
 800b97c:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b980:	b2db      	uxtb	r3, r3
 800b982:	2b07      	cmp	r3, #7
 800b984:	d011      	beq.n	800b9aa <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800b986:	68fb      	ldr	r3, [r7, #12]
 800b988:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b98a:	69db      	ldr	r3, [r3, #28]
 800b98c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b990:	d103      	bne.n	800b99a <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 800b992:	68f8      	ldr	r0, [r7, #12]
 800b994:	f004 fe64 	bl	8010660 <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 800b998:	e007      	b.n	800b9aa <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 800b99a:	68fb      	ldr	r3, [r7, #12]
 800b99c:	681b      	ldr	r3, [r3, #0]
 800b99e:	691a      	ldr	r2, [r3, #16]
 800b9a0:	68fb      	ldr	r3, [r7, #12]
 800b9a2:	681b      	ldr	r3, [r3, #0]
 800b9a4:	f042 0208 	orr.w	r2, r2, #8
 800b9a8:	611a      	str	r2, [r3, #16]
}
 800b9aa:	bf00      	nop
 800b9ac:	3710      	adds	r7, #16
 800b9ae:	46bd      	mov	sp, r7
 800b9b0:	bd80      	pop	{r7, pc}

0800b9b2 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b9b2:	b580      	push	{r7, lr}
 800b9b4:	b084      	sub	sp, #16
 800b9b6:	af00      	add	r7, sp, #0
 800b9b8:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9be:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800b9c0:	68f8      	ldr	r0, [r7, #12]
 800b9c2:	f7ff ffb5 	bl	800b930 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800b9c6:	bf00      	nop
 800b9c8:	3710      	adds	r7, #16
 800b9ca:	46bd      	mov	sp, r7
 800b9cc:	bd80      	pop	{r7, pc}

0800b9ce <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800b9ce:	b580      	push	{r7, lr}
 800b9d0:	b084      	sub	sp, #16
 800b9d2:	af00      	add	r7, sp, #0
 800b9d4:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9da:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 800b9dc:	6878      	ldr	r0, [r7, #4]
 800b9de:	f7f9 ff0f 	bl	8005800 <HAL_DMA_GetError>
 800b9e2:	4603      	mov	r3, r0
 800b9e4:	2b02      	cmp	r3, #2
 800b9e6:	d011      	beq.n	800ba0c <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 800b9e8:	68f8      	ldr	r0, [r7, #12]
 800b9ea:	f000 f82d 	bl	800ba48 <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800b9ee:	68fb      	ldr	r3, [r7, #12]
 800b9f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b9f4:	f043 0210 	orr.w	r2, r3, #16
 800b9f8:	68fb      	ldr	r3, [r7, #12]
 800b9fa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800b9fe:	68fb      	ldr	r3, [r7, #12]
 800ba00:	2201      	movs	r2, #1
 800ba02:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 800ba06:	68f8      	ldr	r0, [r7, #12]
 800ba08:	f7ff ff9c 	bl	800b944 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 800ba0c:	bf00      	nop
 800ba0e:	3710      	adds	r7, #16
 800ba10:	46bd      	mov	sp, r7
 800ba12:	bd80      	pop	{r7, pc}

0800ba14 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800ba14:	b580      	push	{r7, lr}
 800ba16:	b084      	sub	sp, #16
 800ba18:	af00      	add	r7, sp, #0
 800ba1a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800ba1c:	687b      	ldr	r3, [r7, #4]
 800ba1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ba20:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800ba22:	68fb      	ldr	r3, [r7, #12]
 800ba24:	2200      	movs	r2, #0
 800ba26:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxXferCount = (uint16_t) 0UL;
 800ba2a:	68fb      	ldr	r3, [r7, #12]
 800ba2c:	2200      	movs	r2, #0
 800ba2e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800ba32:	68fb      	ldr	r3, [r7, #12]
 800ba34:	2201      	movs	r2, #1
 800ba36:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800ba3a:	68f8      	ldr	r0, [r7, #12]
 800ba3c:	f7ff ff82 	bl	800b944 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800ba40:	bf00      	nop
 800ba42:	3710      	adds	r7, #16
 800ba44:	46bd      	mov	sp, r7
 800ba46:	bd80      	pop	{r7, pc}

0800ba48 <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 800ba48:	b480      	push	{r7}
 800ba4a:	b085      	sub	sp, #20
 800ba4c:	af00      	add	r7, sp, #0
 800ba4e:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	695b      	ldr	r3, [r3, #20]
 800ba56:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800ba58:	687b      	ldr	r3, [r7, #4]
 800ba5a:	681b      	ldr	r3, [r3, #0]
 800ba5c:	699a      	ldr	r2, [r3, #24]
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	681b      	ldr	r3, [r3, #0]
 800ba62:	f042 0208 	orr.w	r2, r2, #8
 800ba66:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800ba68:	687b      	ldr	r3, [r7, #4]
 800ba6a:	681b      	ldr	r3, [r3, #0]
 800ba6c:	699a      	ldr	r2, [r3, #24]
 800ba6e:	687b      	ldr	r3, [r7, #4]
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	f042 0210 	orr.w	r2, r2, #16
 800ba76:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800ba78:	687b      	ldr	r3, [r7, #4]
 800ba7a:	681b      	ldr	r3, [r3, #0]
 800ba7c:	681a      	ldr	r2, [r3, #0]
 800ba7e:	687b      	ldr	r3, [r7, #4]
 800ba80:	681b      	ldr	r3, [r3, #0]
 800ba82:	f022 0201 	bic.w	r2, r2, #1
 800ba86:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	681b      	ldr	r3, [r3, #0]
 800ba8c:	6919      	ldr	r1, [r3, #16]
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	681a      	ldr	r2, [r3, #0]
 800ba92:	4b3c      	ldr	r3, [pc, #240]	; (800bb84 <SPI_CloseTransfer+0x13c>)
 800ba94:	400b      	ands	r3, r1
 800ba96:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	689a      	ldr	r2, [r3, #8]
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800baa6:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800baae:	b2db      	uxtb	r3, r3
 800bab0:	2b04      	cmp	r3, #4
 800bab2:	d014      	beq.n	800bade <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 800bab4:	68fb      	ldr	r3, [r7, #12]
 800bab6:	f003 0320 	and.w	r3, r3, #32
 800baba:	2b00      	cmp	r3, #0
 800babc:	d00f      	beq.n	800bade <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800babe:	687b      	ldr	r3, [r7, #4]
 800bac0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bac4:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	681b      	ldr	r3, [r3, #0]
 800bad2:	699a      	ldr	r2, [r3, #24]
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	681b      	ldr	r3, [r3, #0]
 800bad8:	f042 0220 	orr.w	r2, r2, #32
 800badc:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800bae4:	b2db      	uxtb	r3, r3
 800bae6:	2b03      	cmp	r3, #3
 800bae8:	d014      	beq.n	800bb14 <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 800baea:	68fb      	ldr	r3, [r7, #12]
 800baec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800baf0:	2b00      	cmp	r3, #0
 800baf2:	d00f      	beq.n	800bb14 <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800baf4:	687b      	ldr	r3, [r7, #4]
 800baf6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bafa:	f043 0204 	orr.w	r2, r3, #4
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bb04:	687b      	ldr	r3, [r7, #4]
 800bb06:	681b      	ldr	r3, [r3, #0]
 800bb08:	699a      	ldr	r2, [r3, #24]
 800bb0a:	687b      	ldr	r3, [r7, #4]
 800bb0c:	681b      	ldr	r3, [r3, #0]
 800bb0e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800bb12:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 800bb14:	68fb      	ldr	r3, [r7, #12]
 800bb16:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800bb1a:	2b00      	cmp	r3, #0
 800bb1c:	d00f      	beq.n	800bb3e <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bb24:	f043 0201 	orr.w	r2, r3, #1
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800bb2e:	687b      	ldr	r3, [r7, #4]
 800bb30:	681b      	ldr	r3, [r3, #0]
 800bb32:	699a      	ldr	r2, [r3, #24]
 800bb34:	687b      	ldr	r3, [r7, #4]
 800bb36:	681b      	ldr	r3, [r3, #0]
 800bb38:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb3c:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 800bb3e:	68fb      	ldr	r3, [r7, #12]
 800bb40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bb44:	2b00      	cmp	r3, #0
 800bb46:	d00f      	beq.n	800bb68 <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bb4e:	f043 0208 	orr.w	r2, r3, #8
 800bb52:	687b      	ldr	r3, [r7, #4]
 800bb54:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 800bb58:	687b      	ldr	r3, [r7, #4]
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	699a      	ldr	r2, [r3, #24]
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	681b      	ldr	r3, [r3, #0]
 800bb62:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bb66:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 800bb68:	687b      	ldr	r3, [r7, #4]
 800bb6a:	2200      	movs	r2, #0
 800bb6c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	2200      	movs	r2, #0
 800bb74:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
}
 800bb78:	bf00      	nop
 800bb7a:	3714      	adds	r7, #20
 800bb7c:	46bd      	mov	sp, r7
 800bb7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb82:	4770      	bx	lr
 800bb84:	fffffc90 	.word	0xfffffc90

0800bb88 <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800bb88:	b580      	push	{r7, lr}
 800bb8a:	b084      	sub	sp, #16
 800bb8c:	af00      	add	r7, sp, #0
 800bb8e:	60f8      	str	r0, [r7, #12]
 800bb90:	60b9      	str	r1, [r7, #8]
 800bb92:	603b      	str	r3, [r7, #0]
 800bb94:	4613      	mov	r3, r2
 800bb96:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800bb98:	e010      	b.n	800bbbc <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bb9a:	f7f6 f959 	bl	8001e50 <HAL_GetTick>
 800bb9e:	4602      	mov	r2, r0
 800bba0:	69bb      	ldr	r3, [r7, #24]
 800bba2:	1ad3      	subs	r3, r2, r3
 800bba4:	683a      	ldr	r2, [r7, #0]
 800bba6:	429a      	cmp	r2, r3
 800bba8:	d803      	bhi.n	800bbb2 <SPI_WaitOnFlagUntilTimeout+0x2a>
 800bbaa:	683b      	ldr	r3, [r7, #0]
 800bbac:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bbb0:	d102      	bne.n	800bbb8 <SPI_WaitOnFlagUntilTimeout+0x30>
 800bbb2:	683b      	ldr	r3, [r7, #0]
 800bbb4:	2b00      	cmp	r3, #0
 800bbb6:	d101      	bne.n	800bbbc <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 800bbb8:	2303      	movs	r3, #3
 800bbba:	e00f      	b.n	800bbdc <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800bbbc:	68fb      	ldr	r3, [r7, #12]
 800bbbe:	681b      	ldr	r3, [r3, #0]
 800bbc0:	695a      	ldr	r2, [r3, #20]
 800bbc2:	68bb      	ldr	r3, [r7, #8]
 800bbc4:	4013      	ands	r3, r2
 800bbc6:	68ba      	ldr	r2, [r7, #8]
 800bbc8:	429a      	cmp	r2, r3
 800bbca:	bf0c      	ite	eq
 800bbcc:	2301      	moveq	r3, #1
 800bbce:	2300      	movne	r3, #0
 800bbd0:	b2db      	uxtb	r3, r3
 800bbd2:	461a      	mov	r2, r3
 800bbd4:	79fb      	ldrb	r3, [r7, #7]
 800bbd6:	429a      	cmp	r2, r3
 800bbd8:	d0df      	beq.n	800bb9a <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 800bbda:	2300      	movs	r3, #0
}
 800bbdc:	4618      	mov	r0, r3
 800bbde:	3710      	adds	r7, #16
 800bbe0:	46bd      	mov	sp, r7
 800bbe2:	bd80      	pop	{r7, pc}

0800bbe4 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 800bbe4:	b480      	push	{r7}
 800bbe6:	b085      	sub	sp, #20
 800bbe8:	af00      	add	r7, sp, #0
 800bbea:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 800bbec:	687b      	ldr	r3, [r7, #4]
 800bbee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbf0:	095b      	lsrs	r3, r3, #5
 800bbf2:	3301      	adds	r3, #1
 800bbf4:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	68db      	ldr	r3, [r3, #12]
 800bbfa:	3301      	adds	r3, #1
 800bbfc:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 800bbfe:	68bb      	ldr	r3, [r7, #8]
 800bc00:	3307      	adds	r3, #7
 800bc02:	08db      	lsrs	r3, r3, #3
 800bc04:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 800bc06:	68bb      	ldr	r3, [r7, #8]
 800bc08:	68fa      	ldr	r2, [r7, #12]
 800bc0a:	fb02 f303 	mul.w	r3, r2, r3
}
 800bc0e:	4618      	mov	r0, r3
 800bc10:	3714      	adds	r7, #20
 800bc12:	46bd      	mov	sp, r7
 800bc14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc18:	4770      	bx	lr

0800bc1a <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800bc1a:	b580      	push	{r7, lr}
 800bc1c:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800bc1e:	f005 f9e9 	bl	8010ff4 <touchgfx_components_init>
  touchgfx_init();
 800bc22:	f005 f9bd 	bl	8010fa0 <touchgfx_init>
}
 800bc26:	bf00      	nop
 800bc28:	bd80      	pop	{r7, pc}

0800bc2a <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800bc2a:	b580      	push	{r7, lr}
 800bc2c:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800bc2e:	f005 f9e9 	bl	8011004 <touchgfx_taskEntry>
}
 800bc32:	bf00      	nop
 800bc34:	bd80      	pop	{r7, pc}
	...

0800bc38 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800bc38:	b480      	push	{r7}
 800bc3a:	b083      	sub	sp, #12
 800bc3c:	af00      	add	r7, sp, #0
 800bc3e:	6078      	str	r0, [r7, #4]
    {
 800bc40:	4a04      	ldr	r2, [pc, #16]	; (800bc54 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800bc42:	687b      	ldr	r3, [r7, #4]
 800bc44:	601a      	str	r2, [r3, #0]
    }
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	4618      	mov	r0, r3
 800bc4a:	370c      	adds	r7, #12
 800bc4c:	46bd      	mov	sp, r7
 800bc4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc52:	4770      	bx	lr
 800bc54:	08027cb4 	.word	0x08027cb4

0800bc58 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800bc58:	b580      	push	{r7, lr}
 800bc5a:	b082      	sub	sp, #8
 800bc5c:	af00      	add	r7, sp, #0
 800bc5e:	6078      	str	r0, [r7, #4]
    }
 800bc60:	6878      	ldr	r0, [r7, #4]
 800bc62:	f7ff ffe9 	bl	800bc38 <_ZN8touchgfx12FontProviderD1Ev>
 800bc66:	2104      	movs	r1, #4
 800bc68:	6878      	ldr	r0, [r7, #4]
 800bc6a:	f019 fe34 	bl	80258d6 <_ZdlPvj>
 800bc6e:	687b      	ldr	r3, [r7, #4]
 800bc70:	4618      	mov	r0, r3
 800bc72:	3708      	adds	r7, #8
 800bc74:	46bd      	mov	sp, r7
 800bc76:	bd80      	pop	{r7, pc}

0800bc78 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800bc78:	b580      	push	{r7, lr}
 800bc7a:	b082      	sub	sp, #8
 800bc7c:	af00      	add	r7, sp, #0
 800bc7e:	6078      	str	r0, [r7, #4]
 800bc80:	460b      	mov	r3, r1
 800bc82:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800bc84:	887b      	ldrh	r3, [r7, #2]
 800bc86:	2b03      	cmp	r3, #3
 800bc88:	d81e      	bhi.n	800bcc8 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 800bc8a:	a201      	add	r2, pc, #4	; (adr r2, 800bc90 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 800bc8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bc90:	0800bca1 	.word	0x0800bca1
 800bc94:	0800bcab 	.word	0x0800bcab
 800bc98:	0800bcb5 	.word	0x0800bcb5
 800bc9c:	0800bcbf 	.word	0x0800bcbf
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800bca0:	f003 fddc 	bl	800f85c <_ZN17TypedTextDatabase8getFontsEv>
 800bca4:	4603      	mov	r3, r0
 800bca6:	681b      	ldr	r3, [r3, #0]
 800bca8:	e00f      	b.n	800bcca <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800bcaa:	f003 fdd7 	bl	800f85c <_ZN17TypedTextDatabase8getFontsEv>
 800bcae:	4603      	mov	r3, r0
 800bcb0:	685b      	ldr	r3, [r3, #4]
 800bcb2:	e00a      	b.n	800bcca <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800bcb4:	f003 fdd2 	bl	800f85c <_ZN17TypedTextDatabase8getFontsEv>
 800bcb8:	4603      	mov	r3, r0
 800bcba:	689b      	ldr	r3, [r3, #8]
 800bcbc:	e005      	b.n	800bcca <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::TYPOGRAPHY_00:
        // verdana_200_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800bcbe:	f003 fdcd 	bl	800f85c <_ZN17TypedTextDatabase8getFontsEv>
 800bcc2:	4603      	mov	r3, r0
 800bcc4:	68db      	ldr	r3, [r3, #12]
 800bcc6:	e000      	b.n	800bcca <_ZN23ApplicationFontProvider7getFontEt+0x52>
    default:
        return 0;
 800bcc8:	2300      	movs	r3, #0
    }
}
 800bcca:	4618      	mov	r0, r3
 800bccc:	3708      	adds	r7, #8
 800bcce:	46bd      	mov	sp, r7
 800bcd0:	bd80      	pop	{r7, pc}
 800bcd2:	bf00      	nop

0800bcd4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdana_200_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800bcd4:	b580      	push	{r7, lr}
 800bcd6:	b082      	sub	sp, #8
 800bcd8:	af00      	add	r7, sp, #0
 800bcda:	6078      	str	r0, [r7, #4]
 800bcdc:	4a05      	ldr	r2, [pc, #20]	; (800bcf4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	601a      	str	r2, [r3, #0]
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	4618      	mov	r0, r3
 800bce6:	f7ff ffa7 	bl	800bc38 <_ZN8touchgfx12FontProviderD1Ev>
 800bcea:	687b      	ldr	r3, [r7, #4]
 800bcec:	4618      	mov	r0, r3
 800bcee:	3708      	adds	r7, #8
 800bcf0:	46bd      	mov	sp, r7
 800bcf2:	bd80      	pop	{r7, pc}
 800bcf4:	08027ca0 	.word	0x08027ca0

0800bcf8 <_ZN23ApplicationFontProviderD0Ev>:
 800bcf8:	b580      	push	{r7, lr}
 800bcfa:	b082      	sub	sp, #8
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	6078      	str	r0, [r7, #4]
 800bd00:	6878      	ldr	r0, [r7, #4]
 800bd02:	f7ff ffe7 	bl	800bcd4 <_ZN23ApplicationFontProviderD1Ev>
 800bd06:	2104      	movs	r1, #4
 800bd08:	6878      	ldr	r0, [r7, #4]
 800bd0a:	f019 fde4 	bl	80258d6 <_ZdlPvj>
 800bd0e:	687b      	ldr	r3, [r7, #4]
 800bd10:	4618      	mov	r0, r3
 800bd12:	3708      	adds	r7, #8
 800bd14:	46bd      	mov	sp, r7
 800bd16:	bd80      	pop	{r7, pc}

0800bd18 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800bd18:	b480      	push	{r7}
 800bd1a:	b083      	sub	sp, #12
 800bd1c:	af00      	add	r7, sp, #0
 800bd1e:	6078      	str	r0, [r7, #4]
    {
 800bd20:	4a04      	ldr	r2, [pc, #16]	; (800bd34 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	601a      	str	r2, [r3, #0]
    }
 800bd26:	687b      	ldr	r3, [r7, #4]
 800bd28:	4618      	mov	r0, r3
 800bd2a:	370c      	adds	r7, #12
 800bd2c:	46bd      	mov	sp, r7
 800bd2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd32:	4770      	bx	lr
 800bd34:	080280d0 	.word	0x080280d0

0800bd38 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800bd38:	b580      	push	{r7, lr}
 800bd3a:	b082      	sub	sp, #8
 800bd3c:	af00      	add	r7, sp, #0
 800bd3e:	6078      	str	r0, [r7, #4]
    }
 800bd40:	6878      	ldr	r0, [r7, #4]
 800bd42:	f7ff ffe9 	bl	800bd18 <_ZN8touchgfx4FontD1Ev>
 800bd46:	2114      	movs	r1, #20
 800bd48:	6878      	ldr	r0, [r7, #4]
 800bd4a:	f019 fdc4 	bl	80258d6 <_ZdlPvj>
 800bd4e:	687b      	ldr	r3, [r7, #4]
 800bd50:	4618      	mov	r0, r3
 800bd52:	3708      	adds	r7, #8
 800bd54:	46bd      	mov	sp, r7
 800bd56:	bd80      	pop	{r7, pc}

0800bd58 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800bd58:	b590      	push	{r4, r7, lr}
 800bd5a:	b087      	sub	sp, #28
 800bd5c:	af00      	add	r7, sp, #0
 800bd5e:	6078      	str	r0, [r7, #4]
 800bd60:	460b      	mov	r3, r1
 800bd62:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800bd64:	887b      	ldrh	r3, [r7, #2]
 800bd66:	2b00      	cmp	r3, #0
 800bd68:	d101      	bne.n	800bd6e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800bd6a:	2300      	movs	r3, #0
 800bd6c:	e010      	b.n	800bd90 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800bd6e:	2300      	movs	r3, #0
 800bd70:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800bd72:	2300      	movs	r3, #0
 800bd74:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800bd76:	687b      	ldr	r3, [r7, #4]
 800bd78:	681b      	ldr	r3, [r3, #0]
 800bd7a:	3308      	adds	r3, #8
 800bd7c:	681c      	ldr	r4, [r3, #0]
 800bd7e:	f107 030f 	add.w	r3, r7, #15
 800bd82:	f107 0210 	add.w	r2, r7, #16
 800bd86:	8879      	ldrh	r1, [r7, #2]
 800bd88:	6878      	ldr	r0, [r7, #4]
 800bd8a:	47a0      	blx	r4
 800bd8c:	6178      	str	r0, [r7, #20]
        return glyph;
 800bd8e:	697b      	ldr	r3, [r7, #20]
    }
 800bd90:	4618      	mov	r0, r3
 800bd92:	371c      	adds	r7, #28
 800bd94:	46bd      	mov	sp, r7
 800bd96:	bd90      	pop	{r4, r7, pc}

0800bd98 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800bd98:	b480      	push	{r7}
 800bd9a:	b083      	sub	sp, #12
 800bd9c:	af00      	add	r7, sp, #0
 800bd9e:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800bda0:	687b      	ldr	r3, [r7, #4]
 800bda2:	89db      	ldrh	r3, [r3, #14]
    }
 800bda4:	4618      	mov	r0, r3
 800bda6:	370c      	adds	r7, #12
 800bda8:	46bd      	mov	sp, r7
 800bdaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdae:	4770      	bx	lr

0800bdb0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800bdb0:	b480      	push	{r7}
 800bdb2:	b083      	sub	sp, #12
 800bdb4:	af00      	add	r7, sp, #0
 800bdb6:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800bdb8:	687b      	ldr	r3, [r7, #4]
 800bdba:	8a1b      	ldrh	r3, [r3, #16]
    }
 800bdbc:	4618      	mov	r0, r3
 800bdbe:	370c      	adds	r7, #12
 800bdc0:	46bd      	mov	sp, r7
 800bdc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdc6:	4770      	bx	lr

0800bdc8 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800bdc8:	b480      	push	{r7}
 800bdca:	b083      	sub	sp, #12
 800bdcc:	af00      	add	r7, sp, #0
 800bdce:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800bdd0:	687b      	ldr	r3, [r7, #4]
 800bdd2:	88db      	ldrh	r3, [r3, #6]
    }
 800bdd4:	4618      	mov	r0, r3
 800bdd6:	370c      	adds	r7, #12
 800bdd8:	46bd      	mov	sp, r7
 800bdda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdde:	4770      	bx	lr

0800bde0 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800bde0:	b480      	push	{r7}
 800bde2:	b083      	sub	sp, #12
 800bde4:	af00      	add	r7, sp, #0
 800bde6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800bde8:	687b      	ldr	r3, [r7, #4]
 800bdea:	889b      	ldrh	r3, [r3, #4]
    }
 800bdec:	4618      	mov	r0, r3
 800bdee:	370c      	adds	r7, #12
 800bdf0:	46bd      	mov	sp, r7
 800bdf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdf6:	4770      	bx	lr

0800bdf8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800bdf8:	b480      	push	{r7}
 800bdfa:	b083      	sub	sp, #12
 800bdfc:	af00      	add	r7, sp, #0
 800bdfe:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800be00:	687b      	ldr	r3, [r7, #4]
 800be02:	7a9b      	ldrb	r3, [r3, #10]
 800be04:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800be08:	b2db      	uxtb	r3, r3
    }
 800be0a:	4618      	mov	r0, r3
 800be0c:	370c      	adds	r7, #12
 800be0e:	46bd      	mov	sp, r7
 800be10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be14:	4770      	bx	lr

0800be16 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800be16:	b480      	push	{r7}
 800be18:	b083      	sub	sp, #12
 800be1a:	af00      	add	r7, sp, #0
 800be1c:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800be1e:	687b      	ldr	r3, [r7, #4]
 800be20:	7a9b      	ldrb	r3, [r3, #10]
 800be22:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800be26:	b2db      	uxtb	r3, r3
    }
 800be28:	4618      	mov	r0, r3
 800be2a:	370c      	adds	r7, #12
 800be2c:	46bd      	mov	sp, r7
 800be2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be32:	4770      	bx	lr

0800be34 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800be34:	b580      	push	{r7, lr}
 800be36:	b082      	sub	sp, #8
 800be38:	af00      	add	r7, sp, #0
 800be3a:	6078      	str	r0, [r7, #4]
 800be3c:	4a05      	ldr	r2, [pc, #20]	; (800be54 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800be3e:	687b      	ldr	r3, [r7, #4]
 800be40:	601a      	str	r2, [r3, #0]
 800be42:	687b      	ldr	r3, [r7, #4]
 800be44:	4618      	mov	r0, r3
 800be46:	f7ff ff67 	bl	800bd18 <_ZN8touchgfx4FontD1Ev>
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	4618      	mov	r0, r3
 800be4e:	3708      	adds	r7, #8
 800be50:	46bd      	mov	sp, r7
 800be52:	bd80      	pop	{r7, pc}
 800be54:	08028bbc 	.word	0x08028bbc

0800be58 <_ZN8touchgfx9ConstFontD0Ev>:
 800be58:	b580      	push	{r7, lr}
 800be5a:	b082      	sub	sp, #8
 800be5c:	af00      	add	r7, sp, #0
 800be5e:	6078      	str	r0, [r7, #4]
 800be60:	6878      	ldr	r0, [r7, #4]
 800be62:	f7ff ffe7 	bl	800be34 <_ZN8touchgfx9ConstFontD1Ev>
 800be66:	211c      	movs	r1, #28
 800be68:	6878      	ldr	r0, [r7, #4]
 800be6a:	f019 fd34 	bl	80258d6 <_ZdlPvj>
 800be6e:	687b      	ldr	r3, [r7, #4]
 800be70:	4618      	mov	r0, r3
 800be72:	3708      	adds	r7, #8
 800be74:	46bd      	mov	sp, r7
 800be76:	bd80      	pop	{r7, pc}

0800be78 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800be78:	b580      	push	{r7, lr}
 800be7a:	b082      	sub	sp, #8
 800be7c:	af00      	add	r7, sp, #0
 800be7e:	6078      	str	r0, [r7, #4]
 800be80:	4a05      	ldr	r2, [pc, #20]	; (800be98 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800be82:	687b      	ldr	r3, [r7, #4]
 800be84:	601a      	str	r2, [r3, #0]
 800be86:	687b      	ldr	r3, [r7, #4]
 800be88:	4618      	mov	r0, r3
 800be8a:	f7ff ffd3 	bl	800be34 <_ZN8touchgfx9ConstFontD1Ev>
 800be8e:	687b      	ldr	r3, [r7, #4]
 800be90:	4618      	mov	r0, r3
 800be92:	3708      	adds	r7, #8
 800be94:	46bd      	mov	sp, r7
 800be96:	bd80      	pop	{r7, pc}
 800be98:	08027cd8 	.word	0x08027cd8

0800be9c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800be9c:	b580      	push	{r7, lr}
 800be9e:	b082      	sub	sp, #8
 800bea0:	af00      	add	r7, sp, #0
 800bea2:	6078      	str	r0, [r7, #4]
 800bea4:	6878      	ldr	r0, [r7, #4]
 800bea6:	f7ff ffe7 	bl	800be78 <_ZN8touchgfx13GeneratedFontD1Ev>
 800beaa:	212c      	movs	r1, #44	; 0x2c
 800beac:	6878      	ldr	r0, [r7, #4]
 800beae:	f019 fd12 	bl	80258d6 <_ZdlPvj>
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	4618      	mov	r0, r3
 800beb6:	3708      	adds	r7, #8
 800beb8:	46bd      	mov	sp, r7
 800beba:	bd80      	pop	{r7, pc}

0800bebc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800bebc:	b480      	push	{r7}
 800bebe:	b083      	sub	sp, #12
 800bec0:	af00      	add	r7, sp, #0
 800bec2:	6078      	str	r0, [r7, #4]
    {
 800bec4:	4a04      	ldr	r2, [pc, #16]	; (800bed8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	601a      	str	r2, [r3, #0]
    }
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	4618      	mov	r0, r3
 800bece:	370c      	adds	r7, #12
 800bed0:	46bd      	mov	sp, r7
 800bed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bed6:	4770      	bx	lr
 800bed8:	08027cc8 	.word	0x08027cc8

0800bedc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800bedc:	b580      	push	{r7, lr}
 800bede:	b082      	sub	sp, #8
 800bee0:	af00      	add	r7, sp, #0
 800bee2:	6078      	str	r0, [r7, #4]
    }
 800bee4:	6878      	ldr	r0, [r7, #4]
 800bee6:	f7ff ffe9 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
 800beea:	2108      	movs	r1, #8
 800beec:	6878      	ldr	r0, [r7, #4]
 800beee:	f019 fcf2 	bl	80258d6 <_ZdlPvj>
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	4618      	mov	r0, r3
 800bef6:	3708      	adds	r7, #8
 800bef8:	46bd      	mov	sp, r7
 800befa:	bd80      	pop	{r7, pc}

0800befc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800befc:	b480      	push	{r7}
 800befe:	b083      	sub	sp, #12
 800bf00:	af00      	add	r7, sp, #0
 800bf02:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800bf04:	687b      	ldr	r3, [r7, #4]
 800bf06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800bf08:	4618      	mov	r0, r3
 800bf0a:	370c      	adds	r7, #12
 800bf0c:	46bd      	mov	sp, r7
 800bf0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf12:	4770      	bx	lr

0800bf14 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800bf14:	b480      	push	{r7}
 800bf16:	b083      	sub	sp, #12
 800bf18:	af00      	add	r7, sp, #0
 800bf1a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800bf1c:	687b      	ldr	r3, [r7, #4]
 800bf1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800bf20:	4618      	mov	r0, r3
 800bf22:	370c      	adds	r7, #12
 800bf24:	46bd      	mov	sp, r7
 800bf26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf2a:	4770      	bx	lr

0800bf2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800bf2c:	b580      	push	{r7, lr}
 800bf2e:	b08e      	sub	sp, #56	; 0x38
 800bf30:	af0a      	add	r7, sp, #40	; 0x28
 800bf32:	60f8      	str	r0, [r7, #12]
 800bf34:	60b9      	str	r1, [r7, #8]
 800bf36:	4611      	mov	r1, r2
 800bf38:	461a      	mov	r2, r3
 800bf3a:	460b      	mov	r3, r1
 800bf3c:	80fb      	strh	r3, [r7, #6]
 800bf3e:	4613      	mov	r3, r2
 800bf40:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800bf42:	68f8      	ldr	r0, [r7, #12]
 800bf44:	88b9      	ldrh	r1, [r7, #4]
 800bf46:	88fa      	ldrh	r2, [r7, #6]
 800bf48:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800bf4c:	9308      	str	r3, [sp, #32]
 800bf4e:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800bf50:	9307      	str	r3, [sp, #28]
 800bf52:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800bf56:	9306      	str	r3, [sp, #24]
 800bf58:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800bf5c:	9305      	str	r3, [sp, #20]
 800bf5e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800bf62:	9304      	str	r3, [sp, #16]
 800bf64:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800bf68:	9303      	str	r3, [sp, #12]
 800bf6a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800bf6e:	9302      	str	r3, [sp, #8]
 800bf70:	7f3b      	ldrb	r3, [r7, #28]
 800bf72:	9301      	str	r3, [sp, #4]
 800bf74:	8b3b      	ldrh	r3, [r7, #24]
 800bf76:	9300      	str	r3, [sp, #0]
 800bf78:	460b      	mov	r3, r1
 800bf7a:	68b9      	ldr	r1, [r7, #8]
 800bf7c:	f00a fcae 	bl	80168dc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800bf80:	4a09      	ldr	r2, [pc, #36]	; (800bfa8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800bf82:	68fb      	ldr	r3, [r7, #12]
 800bf84:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800bf86:	68fb      	ldr	r3, [r7, #12]
 800bf88:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bf8a:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800bf8c:	68fb      	ldr	r3, [r7, #12]
 800bf8e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800bf90:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800bf92:	68fb      	ldr	r3, [r7, #12]
 800bf94:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800bf96:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800bf98:	68fb      	ldr	r3, [r7, #12]
 800bf9a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800bf9c:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800bf9e:	68fb      	ldr	r3, [r7, #12]
 800bfa0:	4618      	mov	r0, r3
 800bfa2:	3710      	adds	r7, #16
 800bfa4:	46bd      	mov	sp, r7
 800bfa6:	bd80      	pop	{r7, pc}
 800bfa8:	08027cd8 	.word	0x08027cd8

0800bfac <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800bfac:	b480      	push	{r7}
 800bfae:	b085      	sub	sp, #20
 800bfb0:	af00      	add	r7, sp, #0
 800bfb2:	6078      	str	r0, [r7, #4]
 800bfb4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800bfb6:	687b      	ldr	r3, [r7, #4]
 800bfb8:	69db      	ldr	r3, [r3, #28]
 800bfba:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800bfbc:	683b      	ldr	r3, [r7, #0]
 800bfbe:	889b      	ldrh	r3, [r3, #4]
 800bfc0:	0adb      	lsrs	r3, r3, #11
 800bfc2:	b29b      	uxth	r3, r3
 800bfc4:	009b      	lsls	r3, r3, #2
 800bfc6:	68fa      	ldr	r2, [r7, #12]
 800bfc8:	4413      	add	r3, r2
 800bfca:	681a      	ldr	r2, [r3, #0]
 800bfcc:	683b      	ldr	r3, [r7, #0]
 800bfce:	681b      	ldr	r3, [r3, #0]
 800bfd0:	4413      	add	r3, r2
}
 800bfd2:	4618      	mov	r0, r3
 800bfd4:	3714      	adds	r7, #20
 800bfd6:	46bd      	mov	sp, r7
 800bfd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfdc:	4770      	bx	lr

0800bfde <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800bfde:	b480      	push	{r7}
 800bfe0:	b089      	sub	sp, #36	; 0x24
 800bfe2:	af00      	add	r7, sp, #0
 800bfe4:	60f8      	str	r0, [r7, #12]
 800bfe6:	460b      	mov	r3, r1
 800bfe8:	607a      	str	r2, [r7, #4]
 800bfea:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800bfec:	687b      	ldr	r3, [r7, #4]
 800bfee:	2b00      	cmp	r3, #0
 800bff0:	d003      	beq.n	800bffa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	7b1b      	ldrb	r3, [r3, #12]
 800bff6:	2b00      	cmp	r3, #0
 800bff8:	d101      	bne.n	800bffe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800bffa:	2300      	movs	r3, #0
 800bffc:	e031      	b.n	800c062 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800bffe:	68fb      	ldr	r3, [r7, #12]
 800c000:	6a1a      	ldr	r2, [r3, #32]
 800c002:	687b      	ldr	r3, [r7, #4]
 800c004:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800c006:	697b      	ldr	r3, [r7, #20]
 800c008:	7b5b      	ldrb	r3, [r3, #13]
 800c00a:	021b      	lsls	r3, r3, #8
 800c00c:	b21b      	sxth	r3, r3
 800c00e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800c012:	b219      	sxth	r1, r3
 800c014:	697b      	ldr	r3, [r7, #20]
 800c016:	7adb      	ldrb	r3, [r3, #11]
 800c018:	b21b      	sxth	r3, r3
 800c01a:	430b      	orrs	r3, r1
 800c01c:	b21b      	sxth	r3, r3
 800c01e:	b29b      	uxth	r3, r3
 800c020:	009b      	lsls	r3, r3, #2
 800c022:	4413      	add	r3, r2
 800c024:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	7b1b      	ldrb	r3, [r3, #12]
 800c02a:	837b      	strh	r3, [r7, #26]
 800c02c:	e013      	b.n	800c056 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800c02e:	69fb      	ldr	r3, [r7, #28]
 800c030:	881b      	ldrh	r3, [r3, #0]
 800c032:	897a      	ldrh	r2, [r7, #10]
 800c034:	429a      	cmp	r2, r3
 800c036:	d103      	bne.n	800c040 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800c038:	69fb      	ldr	r3, [r7, #28]
 800c03a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800c03e:	e010      	b.n	800c062 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800c040:	69fb      	ldr	r3, [r7, #28]
 800c042:	881b      	ldrh	r3, [r3, #0]
 800c044:	897a      	ldrh	r2, [r7, #10]
 800c046:	429a      	cmp	r2, r3
 800c048:	d309      	bcc.n	800c05e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800c04a:	8b7b      	ldrh	r3, [r7, #26]
 800c04c:	3b01      	subs	r3, #1
 800c04e:	837b      	strh	r3, [r7, #26]
 800c050:	69fb      	ldr	r3, [r7, #28]
 800c052:	3304      	adds	r3, #4
 800c054:	61fb      	str	r3, [r7, #28]
 800c056:	8b7b      	ldrh	r3, [r7, #26]
 800c058:	2b00      	cmp	r3, #0
 800c05a:	d1e8      	bne.n	800c02e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800c05c:	e000      	b.n	800c060 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800c05e:	bf00      	nop
        }
    }
    return 0;
 800c060:	2300      	movs	r3, #0
}
 800c062:	4618      	mov	r0, r3
 800c064:	3724      	adds	r7, #36	; 0x24
 800c066:	46bd      	mov	sp, r7
 800c068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c06c:	4770      	bx	lr
	...

0800c070 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800c070:	b580      	push	{r7, lr}
 800c072:	af00      	add	r7, sp, #0
 800c074:	4801      	ldr	r0, [pc, #4]	; (800c07c <__tcf_0+0xc>)
 800c076:	f7ff feff 	bl	800be78 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c07a:	bd80      	pop	{r7, pc}
 800c07c:	240003a0 	.word	0x240003a0

0800c080 <_Z23getFont_verdana_10_4bppv>:
{
 800c080:	b580      	push	{r7, lr}
 800c082:	b08e      	sub	sp, #56	; 0x38
 800c084:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800c086:	4b21      	ldr	r3, [pc, #132]	; (800c10c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c088:	681b      	ldr	r3, [r3, #0]
 800c08a:	f3bf 8f5b 	dmb	ish
 800c08e:	f003 0301 	and.w	r3, r3, #1
 800c092:	2b00      	cmp	r3, #0
 800c094:	bf0c      	ite	eq
 800c096:	2301      	moveq	r3, #1
 800c098:	2300      	movne	r3, #0
 800c09a:	b2db      	uxtb	r3, r3
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d030      	beq.n	800c102 <_Z23getFont_verdana_10_4bppv+0x82>
 800c0a0:	481a      	ldr	r0, [pc, #104]	; (800c10c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c0a2:	f019 fc1a 	bl	80258da <__cxa_guard_acquire>
 800c0a6:	4603      	mov	r3, r0
 800c0a8:	2b00      	cmp	r3, #0
 800c0aa:	bf14      	ite	ne
 800c0ac:	2301      	movne	r3, #1
 800c0ae:	2300      	moveq	r3, #0
 800c0b0:	b2db      	uxtb	r3, r3
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d025      	beq.n	800c102 <_Z23getFont_verdana_10_4bppv+0x82>
 800c0b6:	2300      	movs	r3, #0
 800c0b8:	930c      	str	r3, [sp, #48]	; 0x30
 800c0ba:	2300      	movs	r3, #0
 800c0bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800c0be:	2300      	movs	r3, #0
 800c0c0:	930a      	str	r3, [sp, #40]	; 0x28
 800c0c2:	233f      	movs	r3, #63	; 0x3f
 800c0c4:	9309      	str	r3, [sp, #36]	; 0x24
 800c0c6:	4b12      	ldr	r3, [pc, #72]	; (800c110 <_Z23getFont_verdana_10_4bppv+0x90>)
 800c0c8:	9308      	str	r3, [sp, #32]
 800c0ca:	4b12      	ldr	r3, [pc, #72]	; (800c114 <_Z23getFont_verdana_10_4bppv+0x94>)
 800c0cc:	9307      	str	r3, [sp, #28]
 800c0ce:	2300      	movs	r3, #0
 800c0d0:	9306      	str	r3, [sp, #24]
 800c0d2:	2300      	movs	r3, #0
 800c0d4:	9305      	str	r3, [sp, #20]
 800c0d6:	2301      	movs	r3, #1
 800c0d8:	9304      	str	r3, [sp, #16]
 800c0da:	2304      	movs	r3, #4
 800c0dc:	9303      	str	r3, [sp, #12]
 800c0de:	2300      	movs	r3, #0
 800c0e0:	9302      	str	r3, [sp, #8]
 800c0e2:	2300      	movs	r3, #0
 800c0e4:	9301      	str	r3, [sp, #4]
 800c0e6:	230a      	movs	r3, #10
 800c0e8:	9300      	str	r3, [sp, #0]
 800c0ea:	230a      	movs	r3, #10
 800c0ec:	2201      	movs	r2, #1
 800c0ee:	490a      	ldr	r1, [pc, #40]	; (800c118 <_Z23getFont_verdana_10_4bppv+0x98>)
 800c0f0:	480a      	ldr	r0, [pc, #40]	; (800c11c <_Z23getFont_verdana_10_4bppv+0x9c>)
 800c0f2:	f7ff ff1b 	bl	800bf2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c0f6:	480a      	ldr	r0, [pc, #40]	; (800c120 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800c0f8:	f019 fc3a 	bl	8025970 <atexit>
 800c0fc:	4803      	ldr	r0, [pc, #12]	; (800c10c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c0fe:	f019 fbf8 	bl	80258f2 <__cxa_guard_release>
    return verdana_10_4bpp;
 800c102:	4b06      	ldr	r3, [pc, #24]	; (800c11c <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800c104:	4618      	mov	r0, r3
 800c106:	46bd      	mov	sp, r7
 800c108:	bd80      	pop	{r7, pc}
 800c10a:	bf00      	nop
 800c10c:	240003cc 	.word	0x240003cc
 800c110:	0802fa08 	.word	0x0802fa08
 800c114:	0802fa5c 	.word	0x0802fa5c
 800c118:	0802f7fc 	.word	0x0802f7fc
 800c11c:	240003a0 	.word	0x240003a0
 800c120:	0800c071 	.word	0x0800c071

0800c124 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_200_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_200_4bpp();

touchgfx::GeneratedFont& getFont_verdana_200_4bpp()
{
    static touchgfx::GeneratedFont verdana_200_4bpp(glyphs_verdana_200_4bpp, 3, 203, 200, 0, 0, 4, 1, 0, 0, unicodes_verdana_200_4bpp, kerning_verdana_200_4bpp, 63, 0, 0, 0);
 800c124:	b580      	push	{r7, lr}
 800c126:	af00      	add	r7, sp, #0
 800c128:	4801      	ldr	r0, [pc, #4]	; (800c130 <__tcf_0+0xc>)
 800c12a:	f7ff fea5 	bl	800be78 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c12e:	bd80      	pop	{r7, pc}
 800c130:	240003d0 	.word	0x240003d0

0800c134 <_Z24getFont_verdana_200_4bppv>:
{
 800c134:	b580      	push	{r7, lr}
 800c136:	b08e      	sub	sp, #56	; 0x38
 800c138:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_200_4bpp(glyphs_verdana_200_4bpp, 3, 203, 200, 0, 0, 4, 1, 0, 0, unicodes_verdana_200_4bpp, kerning_verdana_200_4bpp, 63, 0, 0, 0);
 800c13a:	4b21      	ldr	r3, [pc, #132]	; (800c1c0 <_Z24getFont_verdana_200_4bppv+0x8c>)
 800c13c:	681b      	ldr	r3, [r3, #0]
 800c13e:	f3bf 8f5b 	dmb	ish
 800c142:	f003 0301 	and.w	r3, r3, #1
 800c146:	2b00      	cmp	r3, #0
 800c148:	bf0c      	ite	eq
 800c14a:	2301      	moveq	r3, #1
 800c14c:	2300      	movne	r3, #0
 800c14e:	b2db      	uxtb	r3, r3
 800c150:	2b00      	cmp	r3, #0
 800c152:	d030      	beq.n	800c1b6 <_Z24getFont_verdana_200_4bppv+0x82>
 800c154:	481a      	ldr	r0, [pc, #104]	; (800c1c0 <_Z24getFont_verdana_200_4bppv+0x8c>)
 800c156:	f019 fbc0 	bl	80258da <__cxa_guard_acquire>
 800c15a:	4603      	mov	r3, r0
 800c15c:	2b00      	cmp	r3, #0
 800c15e:	bf14      	ite	ne
 800c160:	2301      	movne	r3, #1
 800c162:	2300      	moveq	r3, #0
 800c164:	b2db      	uxtb	r3, r3
 800c166:	2b00      	cmp	r3, #0
 800c168:	d025      	beq.n	800c1b6 <_Z24getFont_verdana_200_4bppv+0x82>
 800c16a:	2300      	movs	r3, #0
 800c16c:	930c      	str	r3, [sp, #48]	; 0x30
 800c16e:	2300      	movs	r3, #0
 800c170:	930b      	str	r3, [sp, #44]	; 0x2c
 800c172:	2300      	movs	r3, #0
 800c174:	930a      	str	r3, [sp, #40]	; 0x28
 800c176:	233f      	movs	r3, #63	; 0x3f
 800c178:	9309      	str	r3, [sp, #36]	; 0x24
 800c17a:	4b12      	ldr	r3, [pc, #72]	; (800c1c4 <_Z24getFont_verdana_200_4bppv+0x90>)
 800c17c:	9308      	str	r3, [sp, #32]
 800c17e:	4b12      	ldr	r3, [pc, #72]	; (800c1c8 <_Z24getFont_verdana_200_4bppv+0x94>)
 800c180:	9307      	str	r3, [sp, #28]
 800c182:	2300      	movs	r3, #0
 800c184:	9306      	str	r3, [sp, #24]
 800c186:	2300      	movs	r3, #0
 800c188:	9305      	str	r3, [sp, #20]
 800c18a:	2301      	movs	r3, #1
 800c18c:	9304      	str	r3, [sp, #16]
 800c18e:	2304      	movs	r3, #4
 800c190:	9303      	str	r3, [sp, #12]
 800c192:	2300      	movs	r3, #0
 800c194:	9302      	str	r3, [sp, #8]
 800c196:	2300      	movs	r3, #0
 800c198:	9301      	str	r3, [sp, #4]
 800c19a:	23c8      	movs	r3, #200	; 0xc8
 800c19c:	9300      	str	r3, [sp, #0]
 800c19e:	23cb      	movs	r3, #203	; 0xcb
 800c1a0:	2203      	movs	r2, #3
 800c1a2:	490a      	ldr	r1, [pc, #40]	; (800c1cc <_Z24getFont_verdana_200_4bppv+0x98>)
 800c1a4:	480a      	ldr	r0, [pc, #40]	; (800c1d0 <_Z24getFont_verdana_200_4bppv+0x9c>)
 800c1a6:	f7ff fec1 	bl	800bf2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c1aa:	480a      	ldr	r0, [pc, #40]	; (800c1d4 <_Z24getFont_verdana_200_4bppv+0xa0>)
 800c1ac:	f019 fbe0 	bl	8025970 <atexit>
 800c1b0:	4803      	ldr	r0, [pc, #12]	; (800c1c0 <_Z24getFont_verdana_200_4bppv+0x8c>)
 800c1b2:	f019 fb9e 	bl	80258f2 <__cxa_guard_release>
    return verdana_200_4bpp;
 800c1b6:	4b06      	ldr	r3, [pc, #24]	; (800c1d0 <_Z24getFont_verdana_200_4bppv+0x9c>)
}
 800c1b8:	4618      	mov	r0, r3
 800c1ba:	46bd      	mov	sp, r7
 800c1bc:	bd80      	pop	{r7, pc}
 800c1be:	bf00      	nop
 800c1c0:	240003fc 	.word	0x240003fc
 800c1c4:	0802fa0c 	.word	0x0802fa0c
 800c1c8:	0802fa60 	.word	0x0802fa60
 800c1cc:	0802f80c 	.word	0x0802f80c
 800c1d0:	240003d0 	.word	0x240003d0
 800c1d4:	0800c125 	.word	0x0800c125

0800c1d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 27, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800c1d8:	b580      	push	{r7, lr}
 800c1da:	af00      	add	r7, sp, #0
 800c1dc:	4801      	ldr	r0, [pc, #4]	; (800c1e4 <__tcf_0+0xc>)
 800c1de:	f7ff fe4b 	bl	800be78 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c1e2:	bd80      	pop	{r7, pc}
 800c1e4:	24000400 	.word	0x24000400

0800c1e8 <_Z23getFont_verdana_20_4bppv>:
{
 800c1e8:	b580      	push	{r7, lr}
 800c1ea:	b08e      	sub	sp, #56	; 0x38
 800c1ec:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 27, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800c1ee:	4b21      	ldr	r3, [pc, #132]	; (800c274 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	f3bf 8f5b 	dmb	ish
 800c1f6:	f003 0301 	and.w	r3, r3, #1
 800c1fa:	2b00      	cmp	r3, #0
 800c1fc:	bf0c      	ite	eq
 800c1fe:	2301      	moveq	r3, #1
 800c200:	2300      	movne	r3, #0
 800c202:	b2db      	uxtb	r3, r3
 800c204:	2b00      	cmp	r3, #0
 800c206:	d030      	beq.n	800c26a <_Z23getFont_verdana_20_4bppv+0x82>
 800c208:	481a      	ldr	r0, [pc, #104]	; (800c274 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c20a:	f019 fb66 	bl	80258da <__cxa_guard_acquire>
 800c20e:	4603      	mov	r3, r0
 800c210:	2b00      	cmp	r3, #0
 800c212:	bf14      	ite	ne
 800c214:	2301      	movne	r3, #1
 800c216:	2300      	moveq	r3, #0
 800c218:	b2db      	uxtb	r3, r3
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	d025      	beq.n	800c26a <_Z23getFont_verdana_20_4bppv+0x82>
 800c21e:	2300      	movs	r3, #0
 800c220:	930c      	str	r3, [sp, #48]	; 0x30
 800c222:	2300      	movs	r3, #0
 800c224:	930b      	str	r3, [sp, #44]	; 0x2c
 800c226:	2300      	movs	r3, #0
 800c228:	930a      	str	r3, [sp, #40]	; 0x28
 800c22a:	233f      	movs	r3, #63	; 0x3f
 800c22c:	9309      	str	r3, [sp, #36]	; 0x24
 800c22e:	4b12      	ldr	r3, [pc, #72]	; (800c278 <_Z23getFont_verdana_20_4bppv+0x90>)
 800c230:	9308      	str	r3, [sp, #32]
 800c232:	4b12      	ldr	r3, [pc, #72]	; (800c27c <_Z23getFont_verdana_20_4bppv+0x94>)
 800c234:	9307      	str	r3, [sp, #28]
 800c236:	2301      	movs	r3, #1
 800c238:	9306      	str	r3, [sp, #24]
 800c23a:	2300      	movs	r3, #0
 800c23c:	9305      	str	r3, [sp, #20]
 800c23e:	2301      	movs	r3, #1
 800c240:	9304      	str	r3, [sp, #16]
 800c242:	2304      	movs	r3, #4
 800c244:	9303      	str	r3, [sp, #12]
 800c246:	2300      	movs	r3, #0
 800c248:	9302      	str	r3, [sp, #8]
 800c24a:	2300      	movs	r3, #0
 800c24c:	9301      	str	r3, [sp, #4]
 800c24e:	2314      	movs	r3, #20
 800c250:	9300      	str	r3, [sp, #0]
 800c252:	2318      	movs	r3, #24
 800c254:	221b      	movs	r2, #27
 800c256:	490a      	ldr	r1, [pc, #40]	; (800c280 <_Z23getFont_verdana_20_4bppv+0x98>)
 800c258:	480a      	ldr	r0, [pc, #40]	; (800c284 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800c25a:	f7ff fe67 	bl	800bf2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c25e:	480a      	ldr	r0, [pc, #40]	; (800c288 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800c260:	f019 fb86 	bl	8025970 <atexit>
 800c264:	4803      	ldr	r0, [pc, #12]	; (800c274 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c266:	f019 fb44 	bl	80258f2 <__cxa_guard_release>
    return verdana_20_4bpp;
 800c26a:	4b06      	ldr	r3, [pc, #24]	; (800c284 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800c26c:	4618      	mov	r0, r3
 800c26e:	46bd      	mov	sp, r7
 800c270:	bd80      	pop	{r7, pc}
 800c272:	bf00      	nop
 800c274:	2400042c 	.word	0x2400042c
 800c278:	0802fa10 	.word	0x0802fa10
 800c27c:	0802fa64 	.word	0x0802fa64
 800c280:	0802f838 	.word	0x0802f838
 800c284:	24000400 	.word	0x24000400
 800c288:	0800c1d9 	.word	0x0800c1d9

0800c28c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 6, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800c28c:	b580      	push	{r7, lr}
 800c28e:	af00      	add	r7, sp, #0
 800c290:	4801      	ldr	r0, [pc, #4]	; (800c298 <__tcf_0+0xc>)
 800c292:	f7ff fdf1 	bl	800be78 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c296:	bd80      	pop	{r7, pc}
 800c298:	24000430 	.word	0x24000430

0800c29c <_Z23getFont_verdana_40_4bppv>:
{
 800c29c:	b580      	push	{r7, lr}
 800c29e:	b08e      	sub	sp, #56	; 0x38
 800c2a0:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 6, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800c2a2:	4b21      	ldr	r3, [pc, #132]	; (800c328 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c2a4:	681b      	ldr	r3, [r3, #0]
 800c2a6:	f3bf 8f5b 	dmb	ish
 800c2aa:	f003 0301 	and.w	r3, r3, #1
 800c2ae:	2b00      	cmp	r3, #0
 800c2b0:	bf0c      	ite	eq
 800c2b2:	2301      	moveq	r3, #1
 800c2b4:	2300      	movne	r3, #0
 800c2b6:	b2db      	uxtb	r3, r3
 800c2b8:	2b00      	cmp	r3, #0
 800c2ba:	d030      	beq.n	800c31e <_Z23getFont_verdana_40_4bppv+0x82>
 800c2bc:	481a      	ldr	r0, [pc, #104]	; (800c328 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c2be:	f019 fb0c 	bl	80258da <__cxa_guard_acquire>
 800c2c2:	4603      	mov	r3, r0
 800c2c4:	2b00      	cmp	r3, #0
 800c2c6:	bf14      	ite	ne
 800c2c8:	2301      	movne	r3, #1
 800c2ca:	2300      	moveq	r3, #0
 800c2cc:	b2db      	uxtb	r3, r3
 800c2ce:	2b00      	cmp	r3, #0
 800c2d0:	d025      	beq.n	800c31e <_Z23getFont_verdana_40_4bppv+0x82>
 800c2d2:	2300      	movs	r3, #0
 800c2d4:	930c      	str	r3, [sp, #48]	; 0x30
 800c2d6:	2300      	movs	r3, #0
 800c2d8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c2da:	2300      	movs	r3, #0
 800c2dc:	930a      	str	r3, [sp, #40]	; 0x28
 800c2de:	233f      	movs	r3, #63	; 0x3f
 800c2e0:	9309      	str	r3, [sp, #36]	; 0x24
 800c2e2:	4b12      	ldr	r3, [pc, #72]	; (800c32c <_Z23getFont_verdana_40_4bppv+0x90>)
 800c2e4:	9308      	str	r3, [sp, #32]
 800c2e6:	4b12      	ldr	r3, [pc, #72]	; (800c330 <_Z23getFont_verdana_40_4bppv+0x94>)
 800c2e8:	9307      	str	r3, [sp, #28]
 800c2ea:	2300      	movs	r3, #0
 800c2ec:	9306      	str	r3, [sp, #24]
 800c2ee:	2300      	movs	r3, #0
 800c2f0:	9305      	str	r3, [sp, #20]
 800c2f2:	2301      	movs	r3, #1
 800c2f4:	9304      	str	r3, [sp, #16]
 800c2f6:	2304      	movs	r3, #4
 800c2f8:	9303      	str	r3, [sp, #12]
 800c2fa:	2300      	movs	r3, #0
 800c2fc:	9302      	str	r3, [sp, #8]
 800c2fe:	2300      	movs	r3, #0
 800c300:	9301      	str	r3, [sp, #4]
 800c302:	2328      	movs	r3, #40	; 0x28
 800c304:	9300      	str	r3, [sp, #0]
 800c306:	2329      	movs	r3, #41	; 0x29
 800c308:	2206      	movs	r2, #6
 800c30a:	490a      	ldr	r1, [pc, #40]	; (800c334 <_Z23getFont_verdana_40_4bppv+0x98>)
 800c30c:	480a      	ldr	r0, [pc, #40]	; (800c338 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800c30e:	f7ff fe0d 	bl	800bf2c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c312:	480a      	ldr	r0, [pc, #40]	; (800c33c <_Z23getFont_verdana_40_4bppv+0xa0>)
 800c314:	f019 fb2c 	bl	8025970 <atexit>
 800c318:	4803      	ldr	r0, [pc, #12]	; (800c328 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c31a:	f019 faea 	bl	80258f2 <__cxa_guard_release>
    return verdana_40_4bpp;
 800c31e:	4b06      	ldr	r3, [pc, #24]	; (800c338 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800c320:	4618      	mov	r0, r3
 800c322:	46bd      	mov	sp, r7
 800c324:	bd80      	pop	{r7, pc}
 800c326:	bf00      	nop
 800c328:	2400045c 	.word	0x2400045c
 800c32c:	0802fa58 	.word	0x0802fa58
 800c330:	0802fa68 	.word	0x0802fa68
 800c334:	0802f9b4 	.word	0x0802f9b4
 800c338:	24000430 	.word	0x24000430
 800c33c:	0800c28d 	.word	0x0800c28d

0800c340 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800c340:	b480      	push	{r7}
 800c342:	b083      	sub	sp, #12
 800c344:	af00      	add	r7, sp, #0
 800c346:	6078      	str	r0, [r7, #4]
 800c348:	6039      	str	r1, [r7, #0]
 800c34a:	683b      	ldr	r3, [r7, #0]
 800c34c:	4618      	mov	r0, r3
 800c34e:	370c      	adds	r7, #12
 800c350:	46bd      	mov	sp, r7
 800c352:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c356:	4770      	bx	lr

0800c358 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c358:	b480      	push	{r7}
 800c35a:	b083      	sub	sp, #12
 800c35c:	af00      	add	r7, sp, #0
 800c35e:	6078      	str	r0, [r7, #4]
 800c360:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c362:	bf00      	nop
 800c364:	370c      	adds	r7, #12
 800c366:	46bd      	mov	sp, r7
 800c368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c36c:	4770      	bx	lr

0800c36e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c36e:	b480      	push	{r7}
 800c370:	b083      	sub	sp, #12
 800c372:	af00      	add	r7, sp, #0
 800c374:	6078      	str	r0, [r7, #4]
 800c376:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c378:	bf00      	nop
 800c37a:	370c      	adds	r7, #12
 800c37c:	46bd      	mov	sp, r7
 800c37e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c382:	4770      	bx	lr

0800c384 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c384:	b480      	push	{r7}
 800c386:	b083      	sub	sp, #12
 800c388:	af00      	add	r7, sp, #0
 800c38a:	6078      	str	r0, [r7, #4]
 800c38c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c38e:	bf00      	nop
 800c390:	370c      	adds	r7, #12
 800c392:	46bd      	mov	sp, r7
 800c394:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c398:	4770      	bx	lr

0800c39a <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800c39a:	b480      	push	{r7}
 800c39c:	b083      	sub	sp, #12
 800c39e:	af00      	add	r7, sp, #0
 800c3a0:	6078      	str	r0, [r7, #4]
 800c3a2:	460b      	mov	r3, r1
 800c3a4:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800c3a6:	bf00      	nop
 800c3a8:	370c      	adds	r7, #12
 800c3aa:	46bd      	mov	sp, r7
 800c3ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3b0:	4770      	bx	lr

0800c3b2 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800c3b2:	b480      	push	{r7}
 800c3b4:	b083      	sub	sp, #12
 800c3b6:	af00      	add	r7, sp, #0
 800c3b8:	6078      	str	r0, [r7, #4]
    {
    }
 800c3ba:	bf00      	nop
 800c3bc:	370c      	adds	r7, #12
 800c3be:	46bd      	mov	sp, r7
 800c3c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3c4:	4770      	bx	lr

0800c3c6 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800c3c6:	b480      	push	{r7}
 800c3c8:	b083      	sub	sp, #12
 800c3ca:	af00      	add	r7, sp, #0
 800c3cc:	6078      	str	r0, [r7, #4]
    {
    }
 800c3ce:	bf00      	nop
 800c3d0:	370c      	adds	r7, #12
 800c3d2:	46bd      	mov	sp, r7
 800c3d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d8:	4770      	bx	lr
	...

0800c3dc <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800c3dc:	b480      	push	{r7}
 800c3de:	b083      	sub	sp, #12
 800c3e0:	af00      	add	r7, sp, #0
 800c3e2:	6078      	str	r0, [r7, #4]
    {
 800c3e4:	4a04      	ldr	r2, [pc, #16]	; (800c3f8 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	601a      	str	r2, [r3, #0]
    }
 800c3ea:	687b      	ldr	r3, [r7, #4]
 800c3ec:	4618      	mov	r0, r3
 800c3ee:	370c      	adds	r7, #12
 800c3f0:	46bd      	mov	sp, r7
 800c3f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3f6:	4770      	bx	lr
 800c3f8:	08027e58 	.word	0x08027e58

0800c3fc <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800c3fc:	b580      	push	{r7, lr}
 800c3fe:	b082      	sub	sp, #8
 800c400:	af00      	add	r7, sp, #0
 800c402:	6078      	str	r0, [r7, #4]
    }
 800c404:	6878      	ldr	r0, [r7, #4]
 800c406:	f7ff ffe9 	bl	800c3dc <_ZN8touchgfx15UIEventListenerD1Ev>
 800c40a:	2104      	movs	r1, #4
 800c40c:	6878      	ldr	r0, [r7, #4]
 800c40e:	f019 fa62 	bl	80258d6 <_ZdlPvj>
 800c412:	687b      	ldr	r3, [r7, #4]
 800c414:	4618      	mov	r0, r3
 800c416:	3708      	adds	r7, #8
 800c418:	46bd      	mov	sp, r7
 800c41a:	bd80      	pop	{r7, pc}

0800c41c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800c41c:	b480      	push	{r7}
 800c41e:	b083      	sub	sp, #12
 800c420:	af00      	add	r7, sp, #0
 800c422:	6078      	str	r0, [r7, #4]
    {
    }
 800c424:	bf00      	nop
 800c426:	370c      	adds	r7, #12
 800c428:	46bd      	mov	sp, r7
 800c42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c42e:	4770      	bx	lr

0800c430 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800c430:	b480      	push	{r7}
 800c432:	b083      	sub	sp, #12
 800c434:	af00      	add	r7, sp, #0
 800c436:	6078      	str	r0, [r7, #4]
 800c438:	460b      	mov	r3, r1
 800c43a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800c43c:	bf00      	nop
 800c43e:	370c      	adds	r7, #12
 800c440:	46bd      	mov	sp, r7
 800c442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c446:	4770      	bx	lr

0800c448 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800c448:	b480      	push	{r7}
 800c44a:	b083      	sub	sp, #12
 800c44c:	af00      	add	r7, sp, #0
 800c44e:	6078      	str	r0, [r7, #4]
 800c450:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800c452:	687b      	ldr	r3, [r7, #4]
 800c454:	683a      	ldr	r2, [r7, #0]
 800c456:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800c45a:	6810      	ldr	r0, [r2, #0]
 800c45c:	6851      	ldr	r1, [r2, #4]
 800c45e:	c303      	stmia	r3!, {r0, r1}
    }
 800c460:	bf00      	nop
 800c462:	370c      	adds	r7, #12
 800c464:	46bd      	mov	sp, r7
 800c466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c46a:	4770      	bx	lr

0800c46c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800c46c:	b580      	push	{r7, lr}
 800c46e:	b082      	sub	sp, #8
 800c470:	af00      	add	r7, sp, #0
 800c472:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800c474:	687b      	ldr	r3, [r7, #4]
 800c476:	3304      	adds	r3, #4
 800c478:	4618      	mov	r0, r3
 800c47a:	f009 f92e 	bl	80156da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800c47e:	bf00      	nop
 800c480:	3708      	adds	r7, #8
 800c482:	46bd      	mov	sp, r7
 800c484:	bd80      	pop	{r7, pc}
	...

0800c488 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800c488:	b480      	push	{r7}
 800c48a:	b083      	sub	sp, #12
 800c48c:	af00      	add	r7, sp, #0
 800c48e:	6078      	str	r0, [r7, #4]
    {
 800c490:	4a04      	ldr	r2, [pc, #16]	; (800c4a4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800c492:	687b      	ldr	r3, [r7, #4]
 800c494:	601a      	str	r2, [r3, #0]
    }
 800c496:	687b      	ldr	r3, [r7, #4]
 800c498:	4618      	mov	r0, r3
 800c49a:	370c      	adds	r7, #12
 800c49c:	46bd      	mov	sp, r7
 800c49e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4a2:	4770      	bx	lr
 800c4a4:	08027e40 	.word	0x08027e40

0800c4a8 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800c4a8:	b580      	push	{r7, lr}
 800c4aa:	b082      	sub	sp, #8
 800c4ac:	af00      	add	r7, sp, #0
 800c4ae:	6078      	str	r0, [r7, #4]
    }
 800c4b0:	6878      	ldr	r0, [r7, #4]
 800c4b2:	f7ff ffe9 	bl	800c488 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c4b6:	2104      	movs	r1, #4
 800c4b8:	6878      	ldr	r0, [r7, #4]
 800c4ba:	f019 fa0c 	bl	80258d6 <_ZdlPvj>
 800c4be:	687b      	ldr	r3, [r7, #4]
 800c4c0:	4618      	mov	r0, r3
 800c4c2:	3708      	adds	r7, #8
 800c4c4:	46bd      	mov	sp, r7
 800c4c6:	bd80      	pop	{r7, pc}

0800c4c8 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800c4c8:	b480      	push	{r7}
 800c4ca:	af00      	add	r7, sp, #0
    {
        return instance;
 800c4cc:	4b03      	ldr	r3, [pc, #12]	; (800c4dc <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800c4ce:	681b      	ldr	r3, [r3, #0]
    }
 800c4d0:	4618      	mov	r0, r3
 800c4d2:	46bd      	mov	sp, r7
 800c4d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4d8:	4770      	bx	lr
 800c4da:	bf00      	nop
 800c4dc:	24002fa4 	.word	0x24002fa4

0800c4e0 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800c4e0:	b480      	push	{r7}
 800c4e2:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800c4e4:	4b0b      	ldr	r3, [pc, #44]	; (800c514 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800c4e6:	681b      	ldr	r3, [r3, #0]
 800c4e8:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800c4ec:	2b00      	cmp	r3, #0
 800c4ee:	d008      	beq.n	800c502 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800c4f0:	4b08      	ldr	r3, [pc, #32]	; (800c514 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800c4f2:	681b      	ldr	r3, [r3, #0]
 800c4f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c4f6:	2b00      	cmp	r3, #0
 800c4f8:	d003      	beq.n	800c502 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800c4fa:	4b06      	ldr	r3, [pc, #24]	; (800c514 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800c4fc:	681b      	ldr	r3, [r3, #0]
 800c4fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c500:	e002      	b.n	800c508 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800c502:	4b04      	ldr	r3, [pc, #16]	; (800c514 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800c504:	681b      	ldr	r3, [r3, #0]
 800c506:	689b      	ldr	r3, [r3, #8]
    }
 800c508:	4618      	mov	r0, r3
 800c50a:	46bd      	mov	sp, r7
 800c50c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c510:	4770      	bx	lr
 800c512:	bf00      	nop
 800c514:	24002fa4 	.word	0x24002fa4

0800c518 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800c518:	b480      	push	{r7}
 800c51a:	b083      	sub	sp, #12
 800c51c:	af00      	add	r7, sp, #0
 800c51e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800c520:	4a07      	ldr	r2, [pc, #28]	; (800c540 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	601a      	str	r2, [r3, #0]
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	2200      	movs	r2, #0
 800c52a:	605a      	str	r2, [r3, #4]
 800c52c:	687b      	ldr	r3, [r7, #4]
 800c52e:	2200      	movs	r2, #0
 800c530:	721a      	strb	r2, [r3, #8]
    {
    }
 800c532:	687b      	ldr	r3, [r7, #4]
 800c534:	4618      	mov	r0, r3
 800c536:	370c      	adds	r7, #12
 800c538:	46bd      	mov	sp, r7
 800c53a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c53e:	4770      	bx	lr
 800c540:	08027e1c 	.word	0x08027e1c

0800c544 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800c544:	b480      	push	{r7}
 800c546:	b083      	sub	sp, #12
 800c548:	af00      	add	r7, sp, #0
 800c54a:	6078      	str	r0, [r7, #4]
    {
 800c54c:	4a04      	ldr	r2, [pc, #16]	; (800c560 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	601a      	str	r2, [r3, #0]
    }
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	4618      	mov	r0, r3
 800c556:	370c      	adds	r7, #12
 800c558:	46bd      	mov	sp, r7
 800c55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c55e:	4770      	bx	lr
 800c560:	08027e1c 	.word	0x08027e1c

0800c564 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800c564:	b580      	push	{r7, lr}
 800c566:	b082      	sub	sp, #8
 800c568:	af00      	add	r7, sp, #0
 800c56a:	6078      	str	r0, [r7, #4]
    }
 800c56c:	6878      	ldr	r0, [r7, #4]
 800c56e:	f7ff ffe9 	bl	800c544 <_ZN8touchgfx10TransitionD1Ev>
 800c572:	210c      	movs	r1, #12
 800c574:	6878      	ldr	r0, [r7, #4]
 800c576:	f019 f9ae 	bl	80258d6 <_ZdlPvj>
 800c57a:	687b      	ldr	r3, [r7, #4]
 800c57c:	4618      	mov	r0, r3
 800c57e:	3708      	adds	r7, #8
 800c580:	46bd      	mov	sp, r7
 800c582:	bd80      	pop	{r7, pc}

0800c584 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800c584:	b480      	push	{r7}
 800c586:	b083      	sub	sp, #12
 800c588:	af00      	add	r7, sp, #0
 800c58a:	6078      	str	r0, [r7, #4]
    {
    }
 800c58c:	bf00      	nop
 800c58e:	370c      	adds	r7, #12
 800c590:	46bd      	mov	sp, r7
 800c592:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c596:	4770      	bx	lr

0800c598 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800c598:	b480      	push	{r7}
 800c59a:	b083      	sub	sp, #12
 800c59c:	af00      	add	r7, sp, #0
 800c59e:	6078      	str	r0, [r7, #4]
    {
    }
 800c5a0:	bf00      	nop
 800c5a2:	370c      	adds	r7, #12
 800c5a4:	46bd      	mov	sp, r7
 800c5a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5aa:	4770      	bx	lr

0800c5ac <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800c5ac:	b480      	push	{r7}
 800c5ae:	b083      	sub	sp, #12
 800c5b0:	af00      	add	r7, sp, #0
 800c5b2:	6078      	str	r0, [r7, #4]
    {
    }
 800c5b4:	bf00      	nop
 800c5b6:	370c      	adds	r7, #12
 800c5b8:	46bd      	mov	sp, r7
 800c5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5be:	4770      	bx	lr

0800c5c0 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800c5c0:	b580      	push	{r7, lr}
 800c5c2:	b082      	sub	sp, #8
 800c5c4:	af00      	add	r7, sp, #0
 800c5c6:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800c5c8:	f009 f862 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800c5cc:	4603      	mov	r3, r0
 800c5ce:	681a      	ldr	r2, [r3, #0]
 800c5d0:	323c      	adds	r2, #60	; 0x3c
 800c5d2:	6812      	ldr	r2, [r2, #0]
 800c5d4:	4618      	mov	r0, r3
 800c5d6:	4790      	blx	r2
    }
 800c5d8:	bf00      	nop
 800c5da:	3708      	adds	r7, #8
 800c5dc:	46bd      	mov	sp, r7
 800c5de:	bd80      	pop	{r7, pc}

0800c5e0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800c5e0:	b480      	push	{r7}
 800c5e2:	b083      	sub	sp, #12
 800c5e4:	af00      	add	r7, sp, #0
 800c5e6:	6078      	str	r0, [r7, #4]
 800c5e8:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	683a      	ldr	r2, [r7, #0]
 800c5ee:	605a      	str	r2, [r3, #4]
    }
 800c5f0:	bf00      	nop
 800c5f2:	370c      	adds	r7, #12
 800c5f4:	46bd      	mov	sp, r7
 800c5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5fa:	4770      	bx	lr

0800c5fc <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800c5fc:	b580      	push	{r7, lr}
 800c5fe:	b082      	sub	sp, #8
 800c600:	af00      	add	r7, sp, #0
 800c602:	6078      	str	r0, [r7, #4]
 800c604:	4a05      	ldr	r2, [pc, #20]	; (800c61c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	601a      	str	r2, [r3, #0]
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	4618      	mov	r0, r3
 800c60e:	f7ff fee5 	bl	800c3dc <_ZN8touchgfx15UIEventListenerD1Ev>
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	4618      	mov	r0, r3
 800c616:	3708      	adds	r7, #8
 800c618:	46bd      	mov	sp, r7
 800c61a:	bd80      	pop	{r7, pc}
 800c61c:	08028b00 	.word	0x08028b00

0800c620 <_ZN8touchgfx11ApplicationD0Ev>:
 800c620:	b580      	push	{r7, lr}
 800c622:	b082      	sub	sp, #8
 800c624:	af00      	add	r7, sp, #0
 800c626:	6078      	str	r0, [r7, #4]
 800c628:	6878      	ldr	r0, [r7, #4]
 800c62a:	f7ff ffe7 	bl	800c5fc <_ZN8touchgfx11ApplicationD1Ev>
 800c62e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800c632:	6878      	ldr	r0, [r7, #4]
 800c634:	f019 f94f 	bl	80258d6 <_ZdlPvj>
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	4618      	mov	r0, r3
 800c63c:	3708      	adds	r7, #8
 800c63e:	46bd      	mov	sp, r7
 800c640:	bd80      	pop	{r7, pc}
	...

0800c644 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800c644:	b580      	push	{r7, lr}
 800c646:	b082      	sub	sp, #8
 800c648:	af00      	add	r7, sp, #0
 800c64a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800c64c:	687b      	ldr	r3, [r7, #4]
 800c64e:	4618      	mov	r0, r3
 800c650:	f009 f8e4 	bl	801581c <_ZN8touchgfx11ApplicationC1Ev>
 800c654:	4a09      	ldr	r2, [pc, #36]	; (800c67c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	2200      	movs	r2, #0
 800c65e:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	2200      	movs	r2, #0
 800c666:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800c66a:	687b      	ldr	r3, [r7, #4]
 800c66c:	4a04      	ldr	r2, [pc, #16]	; (800c680 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800c66e:	6013      	str	r3, [r2, #0]
    }
 800c670:	687b      	ldr	r3, [r7, #4]
 800c672:	4618      	mov	r0, r3
 800c674:	3708      	adds	r7, #8
 800c676:	46bd      	mov	sp, r7
 800c678:	bd80      	pop	{r7, pc}
 800c67a:	bf00      	nop
 800c67c:	08027dc8 	.word	0x08027dc8
 800c680:	24002ff0 	.word	0x24002ff0

0800c684 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800c684:	b580      	push	{r7, lr}
 800c686:	b082      	sub	sp, #8
 800c688:	af00      	add	r7, sp, #0
 800c68a:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800c68c:	6878      	ldr	r0, [r7, #4]
 800c68e:	f000 f804 	bl	800c69a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800c692:	bf00      	nop
 800c694:	3708      	adds	r7, #8
 800c696:	46bd      	mov	sp, r7
 800c698:	bd80      	pop	{r7, pc}

0800c69a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800c69a:	b580      	push	{r7, lr}
 800c69c:	b082      	sub	sp, #8
 800c69e:	af00      	add	r7, sp, #0
 800c6a0:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800c6a2:	687b      	ldr	r3, [r7, #4]
 800c6a4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800c6a8:	2b00      	cmp	r3, #0
 800c6aa:	d00f      	beq.n	800c6cc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800c6ac:	687b      	ldr	r3, [r7, #4]
 800c6ae:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800c6b8:	681b      	ldr	r3, [r3, #0]
 800c6ba:	330c      	adds	r3, #12
 800c6bc:	681b      	ldr	r3, [r3, #0]
 800c6be:	4610      	mov	r0, r2
 800c6c0:	4798      	blx	r3
 800c6c2:	4603      	mov	r3, r0
 800c6c4:	2b00      	cmp	r3, #0
 800c6c6:	d001      	beq.n	800c6cc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800c6c8:	2301      	movs	r3, #1
 800c6ca:	e000      	b.n	800c6ce <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800c6cc:	2300      	movs	r3, #0
 800c6ce:	2b00      	cmp	r3, #0
 800c6d0:	d00e      	beq.n	800c6f0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800c6d8:	687b      	ldr	r3, [r7, #4]
 800c6da:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800c6de:	681b      	ldr	r3, [r3, #0]
 800c6e0:	3308      	adds	r3, #8
 800c6e2:	681b      	ldr	r3, [r3, #0]
 800c6e4:	4610      	mov	r0, r2
 800c6e6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	2200      	movs	r2, #0
 800c6ec:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800c6f0:	bf00      	nop
 800c6f2:	3708      	adds	r7, #8
 800c6f4:	46bd      	mov	sp, r7
 800c6f6:	bd80      	pop	{r7, pc}

0800c6f8 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800c6f8:	b480      	push	{r7}
 800c6fa:	b083      	sub	sp, #12
 800c6fc:	af00      	add	r7, sp, #0
 800c6fe:	6078      	str	r0, [r7, #4]
 800c700:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800c702:	687b      	ldr	r3, [r7, #4]
 800c704:	683a      	ldr	r2, [r7, #0]
 800c706:	601a      	str	r2, [r3, #0]
    }
 800c708:	bf00      	nop
 800c70a:	370c      	adds	r7, #12
 800c70c:	46bd      	mov	sp, r7
 800c70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c712:	4770      	bx	lr

0800c714 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800c714:	b580      	push	{r7, lr}
 800c716:	b082      	sub	sp, #8
 800c718:	af00      	add	r7, sp, #0
 800c71a:	6078      	str	r0, [r7, #4]
 800c71c:	4a05      	ldr	r2, [pc, #20]	; (800c734 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	601a      	str	r2, [r3, #0]
 800c722:	687b      	ldr	r3, [r7, #4]
 800c724:	4618      	mov	r0, r3
 800c726:	f7ff ff69 	bl	800c5fc <_ZN8touchgfx11ApplicationD1Ev>
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	4618      	mov	r0, r3
 800c72e:	3708      	adds	r7, #8
 800c730:	46bd      	mov	sp, r7
 800c732:	bd80      	pop	{r7, pc}
 800c734:	08027dc8 	.word	0x08027dc8

0800c738 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800c738:	b580      	push	{r7, lr}
 800c73a:	b082      	sub	sp, #8
 800c73c:	af00      	add	r7, sp, #0
 800c73e:	6078      	str	r0, [r7, #4]
 800c740:	6878      	ldr	r0, [r7, #4]
 800c742:	f7ff ffe7 	bl	800c714 <_ZN8touchgfx14MVPApplicationD1Ev>
 800c746:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800c74a:	6878      	ldr	r0, [r7, #4]
 800c74c:	f019 f8c3 	bl	80258d6 <_ZdlPvj>
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	4618      	mov	r0, r3
 800c754:	3708      	adds	r7, #8
 800c756:	46bd      	mov	sp, r7
 800c758:	bd80      	pop	{r7, pc}
	...

0800c75c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800c75c:	b580      	push	{r7, lr}
 800c75e:	b082      	sub	sp, #8
 800c760:	af00      	add	r7, sp, #0
 800c762:	6078      	str	r0, [r7, #4]
 800c764:	4a08      	ldr	r2, [pc, #32]	; (800c788 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800c766:	687b      	ldr	r3, [r7, #4]
 800c768:	601a      	str	r2, [r3, #0]
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800c770:	4618      	mov	r0, r3
 800c772:	f000 fdf5 	bl	800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c776:	687b      	ldr	r3, [r7, #4]
 800c778:	4618      	mov	r0, r3
 800c77a:	f7ff ffcb 	bl	800c714 <_ZN8touchgfx14MVPApplicationD1Ev>
 800c77e:	687b      	ldr	r3, [r7, #4]
 800c780:	4618      	mov	r0, r3
 800c782:	3708      	adds	r7, #8
 800c784:	46bd      	mov	sp, r7
 800c786:	bd80      	pop	{r7, pc}
 800c788:	08027d5c 	.word	0x08027d5c

0800c78c <_ZN23FrontendApplicationBaseD0Ev>:
 800c78c:	b580      	push	{r7, lr}
 800c78e:	b082      	sub	sp, #8
 800c790:	af00      	add	r7, sp, #0
 800c792:	6078      	str	r0, [r7, #4]
 800c794:	6878      	ldr	r0, [r7, #4]
 800c796:	f7ff ffe1 	bl	800c75c <_ZN23FrontendApplicationBaseD1Ev>
 800c79a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800c79e:	6878      	ldr	r0, [r7, #4]
 800c7a0:	f019 f899 	bl	80258d6 <_ZdlPvj>
 800c7a4:	687b      	ldr	r3, [r7, #4]
 800c7a6:	4618      	mov	r0, r3
 800c7a8:	3708      	adds	r7, #8
 800c7aa:	46bd      	mov	sp, r7
 800c7ac:	bd80      	pop	{r7, pc}

0800c7ae <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800c7ae:	b580      	push	{r7, lr}
 800c7b0:	b082      	sub	sp, #8
 800c7b2:	af00      	add	r7, sp, #0
 800c7b4:	6078      	str	r0, [r7, #4]
    {
        gotoscreen_settingsScreenNoTransition();
 800c7b6:	6878      	ldr	r0, [r7, #4]
 800c7b8:	f000 f882 	bl	800c8c0 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv>
    }
 800c7bc:	bf00      	nop
 800c7be:	3708      	adds	r7, #8
 800c7c0:	46bd      	mov	sp, r7
 800c7c2:	bd80      	pop	{r7, pc}

0800c7c4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800c7c4:	b480      	push	{r7}
 800c7c6:	b083      	sub	sp, #12
 800c7c8:	af00      	add	r7, sp, #0
 800c7ca:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800c7cc:	687b      	ldr	r3, [r7, #4]
 800c7ce:	2201      	movs	r2, #1
 800c7d0:	721a      	strb	r2, [r3, #8]
    }
 800c7d2:	bf00      	nop
 800c7d4:	370c      	adds	r7, #12
 800c7d6:	46bd      	mov	sp, r7
 800c7d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7dc:	4770      	bx	lr

0800c7de <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800c7de:	b480      	push	{r7}
 800c7e0:	b083      	sub	sp, #12
 800c7e2:	af00      	add	r7, sp, #0
 800c7e4:	6078      	str	r0, [r7, #4]
 800c7e6:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	683a      	ldr	r2, [r7, #0]
 800c7ec:	605a      	str	r2, [r3, #4]
    }
 800c7ee:	bf00      	nop
 800c7f0:	370c      	adds	r7, #12
 800c7f2:	46bd      	mov	sp, r7
 800c7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7f8:	4770      	bx	lr
	...

0800c7fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_info_screen/screen_infoView.hpp>
#include <gui/screen_info_screen/screen_infoPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800c7fc:	b580      	push	{r7, lr}
 800c7fe:	b084      	sub	sp, #16
 800c800:	af00      	add	r7, sp, #0
 800c802:	60f8      	str	r0, [r7, #12]
 800c804:	60b9      	str	r1, [r7, #8]
 800c806:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800c808:	68fb      	ldr	r3, [r7, #12]
 800c80a:	4618      	mov	r0, r3
 800c80c:	f7ff ff1a 	bl	800c644 <_ZN8touchgfx14MVPApplicationC1Ev>
 800c810:	4a16      	ldr	r2, [pc, #88]	; (800c86c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800c812:	68fb      	ldr	r3, [r7, #12]
 800c814:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800c816:	68fb      	ldr	r3, [r7, #12]
 800c818:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800c81c:	4618      	mov	r0, r3
 800c81e:	f000 f931 	bl	800ca84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800c822:	68fb      	ldr	r3, [r7, #12]
 800c824:	687a      	ldr	r2, [r7, #4]
 800c826:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800c82a:	68fb      	ldr	r3, [r7, #12]
 800c82c:	68ba      	ldr	r2, [r7, #8]
 800c82e:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800c832:	f7ff fe49 	bl	800c4c8 <_ZN8touchgfx3HAL11getInstanceEv>
 800c836:	4603      	mov	r3, r0
 800c838:	681a      	ldr	r2, [r3, #0]
 800c83a:	3208      	adds	r2, #8
 800c83c:	6812      	ldr	r2, [r2, #0]
 800c83e:	2100      	movs	r1, #0
 800c840:	4618      	mov	r0, r3
 800c842:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800c844:	2000      	movs	r0, #0
 800c846:	f002 ff91 	bl	800f76c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800c84a:	f7ff fe49 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 800c84e:	4603      	mov	r3, r0
 800c850:	4618      	mov	r0, r3
 800c852:	f011 fce6 	bl	801e222 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800c856:	f7ff fe43 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 800c85a:	4603      	mov	r3, r0
 800c85c:	4618      	mov	r0, r3
 800c85e:	f011 fd5b 	bl	801e318 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800c862:	68fb      	ldr	r3, [r7, #12]
 800c864:	4618      	mov	r0, r3
 800c866:	3710      	adds	r7, #16
 800c868:	46bd      	mov	sp, r7
 800c86a:	bd80      	pop	{r7, pc}
 800c86c:	08027d5c 	.word	0x08027d5c

0800c870 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800c870:	b480      	push	{r7}
 800c872:	b083      	sub	sp, #12
 800c874:	af00      	add	r7, sp, #0
 800c876:	6078      	str	r0, [r7, #4]
 800c878:	6039      	str	r1, [r7, #0]
 800c87a:	687b      	ldr	r3, [r7, #4]
 800c87c:	4618      	mov	r0, r3
 800c87e:	370c      	adds	r7, #12
 800c880:	46bd      	mov	sp, r7
 800c882:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c886:	4770      	bx	lr

0800c888 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c888:	b580      	push	{r7, lr}
 800c88a:	b082      	sub	sp, #8
 800c88c:	af00      	add	r7, sp, #0
 800c88e:	6078      	str	r0, [r7, #4]
 800c890:	6039      	str	r1, [r7, #0]
 800c892:	687b      	ldr	r3, [r7, #4]
 800c894:	683a      	ldr	r2, [r7, #0]
 800c896:	4611      	mov	r1, r2
 800c898:	4618      	mov	r0, r3
 800c89a:	f7ff ffe9 	bl	800c870 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800c89e:	683b      	ldr	r3, [r7, #0]
 800c8a0:	685a      	ldr	r2, [r3, #4]
 800c8a2:	687b      	ldr	r3, [r7, #4]
 800c8a4:	605a      	str	r2, [r3, #4]
 800c8a6:	687b      	ldr	r3, [r7, #4]
 800c8a8:	683a      	ldr	r2, [r7, #0]
 800c8aa:	3308      	adds	r3, #8
 800c8ac:	3208      	adds	r2, #8
 800c8ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c8b2:	e883 0003 	stmia.w	r3, {r0, r1}
 800c8b6:	687b      	ldr	r3, [r7, #4]
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	3708      	adds	r7, #8
 800c8bc:	46bd      	mov	sp, r7
 800c8be:	bd80      	pop	{r7, pc}

0800c8c0 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv>:
 */

// screen_settings

void FrontendApplicationBase::gotoscreen_settingsScreenNoTransition()
{
 800c8c0:	b590      	push	{r4, r7, lr}
 800c8c2:	b089      	sub	sp, #36	; 0x24
 800c8c4:	af00      	add	r7, sp, #0
 800c8c6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_settingsScreenNoTransitionImpl);
 800c8c8:	687b      	ldr	r3, [r7, #4]
 800c8ca:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800c8ce:	4b10      	ldr	r3, [pc, #64]	; (800c910 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv+0x50>)
 800c8d0:	61bb      	str	r3, [r7, #24]
 800c8d2:	2300      	movs	r3, #0
 800c8d4:	61fb      	str	r3, [r7, #28]
 800c8d6:	f107 0008 	add.w	r0, r7, #8
 800c8da:	f107 0318 	add.w	r3, r7, #24
 800c8de:	cb0c      	ldmia	r3, {r2, r3}
 800c8e0:	6879      	ldr	r1, [r7, #4]
 800c8e2:	f000 f8eb 	bl	800cabc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800c8e6:	f107 0308 	add.w	r3, r7, #8
 800c8ea:	4619      	mov	r1, r3
 800c8ec:	4620      	mov	r0, r4
 800c8ee:	f7ff ffcb 	bl	800c888 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800c8f2:	f107 0308 	add.w	r3, r7, #8
 800c8f6:	4618      	mov	r0, r3
 800c8f8:	f000 fd32 	bl	800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800c8fc:	687b      	ldr	r3, [r7, #4]
 800c8fe:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800c902:	687b      	ldr	r3, [r7, #4]
 800c904:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800c908:	bf00      	nop
 800c90a:	3724      	adds	r7, #36	; 0x24
 800c90c:	46bd      	mov	sp, r7
 800c90e:	bd90      	pop	{r4, r7, pc}
 800c910:	0800c915 	.word	0x0800c915

0800c914 <_ZN23FrontendApplicationBase41gotoscreen_settingsScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreen_settingsScreenNoTransitionImpl()
{
 800c914:	b580      	push	{r7, lr}
 800c916:	b084      	sub	sp, #16
 800c918:	af02      	add	r7, sp, #8
 800c91a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screen_settingsView, screen_settingsPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800c922:	687b      	ldr	r3, [r7, #4]
 800c924:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800c928:	461a      	mov	r2, r3
 800c92a:	687b      	ldr	r3, [r7, #4]
 800c92c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800c930:	9300      	str	r3, [sp, #0]
 800c932:	4b04      	ldr	r3, [pc, #16]	; (800c944 <_ZN23FrontendApplicationBase41gotoscreen_settingsScreenNoTransitionImplEv+0x30>)
 800c934:	4804      	ldr	r0, [pc, #16]	; (800c948 <_ZN23FrontendApplicationBase41gotoscreen_settingsScreenNoTransitionImplEv+0x34>)
 800c936:	f000 f8f3 	bl	800cb20 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800c93a:	bf00      	nop
 800c93c:	3708      	adds	r7, #8
 800c93e:	46bd      	mov	sp, r7
 800c940:	bd80      	pop	{r7, pc}
 800c942:	bf00      	nop
 800c944:	24002fe4 	.word	0x24002fe4
 800c948:	24002fe0 	.word	0x24002fe0

0800c94c <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv>:

// screen_perf_mode

void FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransition()
{
 800c94c:	b590      	push	{r4, r7, lr}
 800c94e:	b089      	sub	sp, #36	; 0x24
 800c950:	af00      	add	r7, sp, #0
 800c952:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransitionImpl);
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800c95a:	4b10      	ldr	r3, [pc, #64]	; (800c99c <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv+0x50>)
 800c95c:	61bb      	str	r3, [r7, #24]
 800c95e:	2300      	movs	r3, #0
 800c960:	61fb      	str	r3, [r7, #28]
 800c962:	f107 0008 	add.w	r0, r7, #8
 800c966:	f107 0318 	add.w	r3, r7, #24
 800c96a:	cb0c      	ldmia	r3, {r2, r3}
 800c96c:	6879      	ldr	r1, [r7, #4]
 800c96e:	f000 f8a5 	bl	800cabc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800c972:	f107 0308 	add.w	r3, r7, #8
 800c976:	4619      	mov	r1, r3
 800c978:	4620      	mov	r0, r4
 800c97a:	f7ff ff85 	bl	800c888 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800c97e:	f107 0308 	add.w	r3, r7, #8
 800c982:	4618      	mov	r0, r3
 800c984:	f000 fcec 	bl	800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800c988:	687b      	ldr	r3, [r7, #4]
 800c98a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800c98e:	687b      	ldr	r3, [r7, #4]
 800c990:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800c994:	bf00      	nop
 800c996:	3724      	adds	r7, #36	; 0x24
 800c998:	46bd      	mov	sp, r7
 800c99a:	bd90      	pop	{r4, r7, pc}
 800c99c:	0800c9a1 	.word	0x0800c9a1

0800c9a0 <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransitionImpl()
{
 800c9a0:	b580      	push	{r7, lr}
 800c9a2:	b084      	sub	sp, #16
 800c9a4:	af02      	add	r7, sp, #8
 800c9a6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screen_perf_modeView, screen_perf_modePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800c9a8:	687b      	ldr	r3, [r7, #4]
 800c9aa:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800c9b4:	461a      	mov	r2, r3
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800c9bc:	9300      	str	r3, [sp, #0]
 800c9be:	4b04      	ldr	r3, [pc, #16]	; (800c9d0 <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv+0x30>)
 800c9c0:	4804      	ldr	r0, [pc, #16]	; (800c9d4 <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv+0x34>)
 800c9c2:	f000 f9c7 	bl	800cd54 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800c9c6:	bf00      	nop
 800c9c8:	3708      	adds	r7, #8
 800c9ca:	46bd      	mov	sp, r7
 800c9cc:	bd80      	pop	{r7, pc}
 800c9ce:	bf00      	nop
 800c9d0:	24002fe4 	.word	0x24002fe4
 800c9d4:	24002fe0 	.word	0x24002fe0

0800c9d8 <_ZN23FrontendApplicationBase33gotoscreen_infoScreenNoTransitionEv>:

// screen_info

void FrontendApplicationBase::gotoscreen_infoScreenNoTransition()
{
 800c9d8:	b590      	push	{r4, r7, lr}
 800c9da:	b089      	sub	sp, #36	; 0x24
 800c9dc:	af00      	add	r7, sp, #0
 800c9de:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_infoScreenNoTransitionImpl);
 800c9e0:	687b      	ldr	r3, [r7, #4]
 800c9e2:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800c9e6:	4b10      	ldr	r3, [pc, #64]	; (800ca28 <_ZN23FrontendApplicationBase33gotoscreen_infoScreenNoTransitionEv+0x50>)
 800c9e8:	61bb      	str	r3, [r7, #24]
 800c9ea:	2300      	movs	r3, #0
 800c9ec:	61fb      	str	r3, [r7, #28]
 800c9ee:	f107 0008 	add.w	r0, r7, #8
 800c9f2:	f107 0318 	add.w	r3, r7, #24
 800c9f6:	cb0c      	ldmia	r3, {r2, r3}
 800c9f8:	6879      	ldr	r1, [r7, #4]
 800c9fa:	f000 f85f 	bl	800cabc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800c9fe:	f107 0308 	add.w	r3, r7, #8
 800ca02:	4619      	mov	r1, r3
 800ca04:	4620      	mov	r0, r4
 800ca06:	f7ff ff3f 	bl	800c888 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800ca0a:	f107 0308 	add.w	r3, r7, #8
 800ca0e:	4618      	mov	r0, r3
 800ca10:	f000 fca6 	bl	800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800ca20:	bf00      	nop
 800ca22:	3724      	adds	r7, #36	; 0x24
 800ca24:	46bd      	mov	sp, r7
 800ca26:	bd90      	pop	{r4, r7, pc}
 800ca28:	0800ca2d 	.word	0x0800ca2d

0800ca2c <_ZN23FrontendApplicationBase37gotoscreen_infoScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreen_infoScreenNoTransitionImpl()
{
 800ca2c:	b580      	push	{r7, lr}
 800ca2e:	b084      	sub	sp, #16
 800ca30:	af02      	add	r7, sp, #8
 800ca32:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screen_infoView, screen_infoPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800ca34:	687b      	ldr	r3, [r7, #4]
 800ca36:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800ca3a:	687b      	ldr	r3, [r7, #4]
 800ca3c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800ca40:	461a      	mov	r2, r3
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800ca48:	9300      	str	r3, [sp, #0]
 800ca4a:	4b04      	ldr	r3, [pc, #16]	; (800ca5c <_ZN23FrontendApplicationBase37gotoscreen_infoScreenNoTransitionImplEv+0x30>)
 800ca4c:	4804      	ldr	r0, [pc, #16]	; (800ca60 <_ZN23FrontendApplicationBase37gotoscreen_infoScreenNoTransitionImplEv+0x34>)
 800ca4e:	f000 fa9b 	bl	800cf88 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800ca52:	bf00      	nop
 800ca54:	3708      	adds	r7, #8
 800ca56:	46bd      	mov	sp, r7
 800ca58:	bd80      	pop	{r7, pc}
 800ca5a:	bf00      	nop
 800ca5c:	24002fe4 	.word	0x24002fe4
 800ca60:	24002fe0 	.word	0x24002fe0

0800ca64 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800ca64:	b480      	push	{r7}
 800ca66:	b083      	sub	sp, #12
 800ca68:	af00      	add	r7, sp, #0
 800ca6a:	6078      	str	r0, [r7, #4]
 800ca6c:	4a04      	ldr	r2, [pc, #16]	; (800ca80 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	601a      	str	r2, [r3, #0]
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	4618      	mov	r0, r3
 800ca76:	370c      	adds	r7, #12
 800ca78:	46bd      	mov	sp, r7
 800ca7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca7e:	4770      	bx	lr
 800ca80:	08027e40 	.word	0x08027e40

0800ca84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800ca84:	b580      	push	{r7, lr}
 800ca86:	b082      	sub	sp, #8
 800ca88:	af00      	add	r7, sp, #0
 800ca8a:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	4618      	mov	r0, r3
 800ca90:	f7ff ffe8 	bl	800ca64 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800ca94:	4a08      	ldr	r2, [pc, #32]	; (800cab8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	601a      	str	r2, [r3, #0]
 800ca9a:	687b      	ldr	r3, [r7, #4]
 800ca9c:	2200      	movs	r2, #0
 800ca9e:	605a      	str	r2, [r3, #4]
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	2200      	movs	r2, #0
 800caa4:	609a      	str	r2, [r3, #8]
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	2200      	movs	r2, #0
 800caaa:	60da      	str	r2, [r3, #12]
    {
    }
 800caac:	687b      	ldr	r3, [r7, #4]
 800caae:	4618      	mov	r0, r3
 800cab0:	3708      	adds	r7, #8
 800cab2:	46bd      	mov	sp, r7
 800cab4:	bd80      	pop	{r7, pc}
 800cab6:	bf00      	nop
 800cab8:	08027db0 	.word	0x08027db0

0800cabc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800cabc:	b580      	push	{r7, lr}
 800cabe:	b084      	sub	sp, #16
 800cac0:	af00      	add	r7, sp, #0
 800cac2:	60f8      	str	r0, [r7, #12]
 800cac4:	60b9      	str	r1, [r7, #8]
 800cac6:	4639      	mov	r1, r7
 800cac8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800cacc:	68fb      	ldr	r3, [r7, #12]
 800cace:	4618      	mov	r0, r3
 800cad0:	f7ff ffc8 	bl	800ca64 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800cad4:	4a08      	ldr	r2, [pc, #32]	; (800caf8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800cad6:	68fb      	ldr	r3, [r7, #12]
 800cad8:	601a      	str	r2, [r3, #0]
 800cada:	68fb      	ldr	r3, [r7, #12]
 800cadc:	68ba      	ldr	r2, [r7, #8]
 800cade:	605a      	str	r2, [r3, #4]
 800cae0:	68fb      	ldr	r3, [r7, #12]
 800cae2:	3308      	adds	r3, #8
 800cae4:	463a      	mov	r2, r7
 800cae6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800caea:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800caee:	68fb      	ldr	r3, [r7, #12]
 800caf0:	4618      	mov	r0, r3
 800caf2:	3710      	adds	r7, #16
 800caf4:	46bd      	mov	sp, r7
 800caf6:	bd80      	pop	{r7, pc}
 800caf8:	08027db0 	.word	0x08027db0

0800cafc <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800cafc:	b580      	push	{r7, lr}
 800cafe:	b082      	sub	sp, #8
 800cb00:	af00      	add	r7, sp, #0
 800cb02:	6078      	str	r0, [r7, #4]
 800cb04:	687b      	ldr	r3, [r7, #4]
 800cb06:	4618      	mov	r0, r3
 800cb08:	f7ff fd06 	bl	800c518 <_ZN8touchgfx10TransitionC1Ev>
 800cb0c:	4a03      	ldr	r2, [pc, #12]	; (800cb1c <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800cb0e:	687b      	ldr	r3, [r7, #4]
 800cb10:	601a      	str	r2, [r3, #0]
 800cb12:	687b      	ldr	r3, [r7, #4]
 800cb14:	4618      	mov	r0, r3
 800cb16:	3708      	adds	r7, #8
 800cb18:	46bd      	mov	sp, r7
 800cb1a:	bd80      	pop	{r7, pc}
 800cb1c:	08027d38 	.word	0x08027d38

0800cb20 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800cb20:	b590      	push	{r4, r7, lr}
 800cb22:	b08f      	sub	sp, #60	; 0x3c
 800cb24:	af00      	add	r7, sp, #0
 800cb26:	60f8      	str	r0, [r7, #12]
 800cb28:	60b9      	str	r1, [r7, #8]
 800cb2a:	607a      	str	r2, [r7, #4]
 800cb2c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800cb2e:	687b      	ldr	r3, [r7, #4]
 800cb30:	689a      	ldr	r2, [r3, #8]
 800cb32:	687b      	ldr	r3, [r7, #4]
 800cb34:	689b      	ldr	r3, [r3, #8]
 800cb36:	681b      	ldr	r3, [r3, #0]
 800cb38:	3320      	adds	r3, #32
 800cb3a:	681b      	ldr	r3, [r3, #0]
 800cb3c:	4610      	mov	r0, r2
 800cb3e:	4798      	blx	r3
 800cb40:	4603      	mov	r3, r0
 800cb42:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 800cb46:	d205      	bcs.n	800cb54 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800cb48:	4b7d      	ldr	r3, [pc, #500]	; (800cd40 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800cb4a:	4a7e      	ldr	r2, [pc, #504]	; (800cd44 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cb4c:	21a3      	movs	r1, #163	; 0xa3
 800cb4e:	487e      	ldr	r0, [pc, #504]	; (800cd48 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cb50:	f018 fef0 	bl	8025934 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	685a      	ldr	r2, [r3, #4]
 800cb58:	687b      	ldr	r3, [r7, #4]
 800cb5a:	685b      	ldr	r3, [r3, #4]
 800cb5c:	681b      	ldr	r3, [r3, #0]
 800cb5e:	3320      	adds	r3, #32
 800cb60:	681b      	ldr	r3, [r3, #0]
 800cb62:	4610      	mov	r0, r2
 800cb64:	4798      	blx	r3
 800cb66:	4603      	mov	r3, r0
 800cb68:	2b0f      	cmp	r3, #15
 800cb6a:	d805      	bhi.n	800cb78 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800cb6c:	4b77      	ldr	r3, [pc, #476]	; (800cd4c <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800cb6e:	4a75      	ldr	r2, [pc, #468]	; (800cd44 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cb70:	21a4      	movs	r1, #164	; 0xa4
 800cb72:	4875      	ldr	r0, [pc, #468]	; (800cd48 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cb74:	f018 fede 	bl	8025934 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800cb78:	687b      	ldr	r3, [r7, #4]
 800cb7a:	68da      	ldr	r2, [r3, #12]
 800cb7c:	687b      	ldr	r3, [r7, #4]
 800cb7e:	68db      	ldr	r3, [r3, #12]
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	3320      	adds	r3, #32
 800cb84:	681b      	ldr	r3, [r3, #0]
 800cb86:	4610      	mov	r0, r2
 800cb88:	4798      	blx	r3
 800cb8a:	4603      	mov	r3, r0
 800cb8c:	2b0b      	cmp	r3, #11
 800cb8e:	d805      	bhi.n	800cb9c <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800cb90:	4b6f      	ldr	r3, [pc, #444]	; (800cd50 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800cb92:	4a6c      	ldr	r2, [pc, #432]	; (800cd44 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cb94:	21a5      	movs	r1, #165	; 0xa5
 800cb96:	486c      	ldr	r0, [pc, #432]	; (800cd48 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cb98:	f018 fecc 	bl	8025934 <__assert_func>
 800cb9c:	68fb      	ldr	r3, [r7, #12]
 800cb9e:	62bb      	str	r3, [r7, #40]	; 0x28
 800cba0:	68bb      	ldr	r3, [r7, #8]
 800cba2:	627b      	str	r3, [r7, #36]	; 0x24
 800cba4:	683b      	ldr	r3, [r7, #0]
 800cba6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800cba8:	f008 fd72 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800cbac:	4603      	mov	r3, r0
 800cbae:	4618      	mov	r0, r3
 800cbb0:	f7ff fc5c 	bl	800c46c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800cbb4:	6a3b      	ldr	r3, [r7, #32]
 800cbb6:	681b      	ldr	r3, [r3, #0]
 800cbb8:	2b00      	cmp	r3, #0
 800cbba:	d008      	beq.n	800cbce <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800cbbc:	6a3b      	ldr	r3, [r7, #32]
 800cbbe:	681a      	ldr	r2, [r3, #0]
 800cbc0:	6a3b      	ldr	r3, [r7, #32]
 800cbc2:	681b      	ldr	r3, [r3, #0]
 800cbc4:	681b      	ldr	r3, [r3, #0]
 800cbc6:	330c      	adds	r3, #12
 800cbc8:	681b      	ldr	r3, [r3, #0]
 800cbca:	4610      	mov	r0, r2
 800cbcc:	4798      	blx	r3
    if (*currentTrans)
 800cbce:	6a3b      	ldr	r3, [r7, #32]
 800cbd0:	681b      	ldr	r3, [r3, #0]
 800cbd2:	2b00      	cmp	r3, #0
 800cbd4:	d007      	beq.n	800cbe6 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800cbd6:	6a3b      	ldr	r3, [r7, #32]
 800cbd8:	681a      	ldr	r2, [r3, #0]
 800cbda:	6a3b      	ldr	r3, [r7, #32]
 800cbdc:	681b      	ldr	r3, [r3, #0]
 800cbde:	681b      	ldr	r3, [r3, #0]
 800cbe0:	681b      	ldr	r3, [r3, #0]
 800cbe2:	4610      	mov	r0, r2
 800cbe4:	4798      	blx	r3
    if (*currentScreen)
 800cbe6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cbe8:	681b      	ldr	r3, [r3, #0]
 800cbea:	2b00      	cmp	r3, #0
 800cbec:	d008      	beq.n	800cc00 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800cbee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cbf0:	681a      	ldr	r2, [r3, #0]
 800cbf2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cbf4:	681b      	ldr	r3, [r3, #0]
 800cbf6:	681b      	ldr	r3, [r3, #0]
 800cbf8:	3314      	adds	r3, #20
 800cbfa:	681b      	ldr	r3, [r3, #0]
 800cbfc:	4610      	mov	r0, r2
 800cbfe:	4798      	blx	r3
    if (*currentPresenter)
 800cc00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc02:	681b      	ldr	r3, [r3, #0]
 800cc04:	2b00      	cmp	r3, #0
 800cc06:	d008      	beq.n	800cc1a <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800cc08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc0a:	681a      	ldr	r2, [r3, #0]
 800cc0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc0e:	681b      	ldr	r3, [r3, #0]
 800cc10:	681b      	ldr	r3, [r3, #0]
 800cc12:	3304      	adds	r3, #4
 800cc14:	681b      	ldr	r3, [r3, #0]
 800cc16:	4610      	mov	r0, r2
 800cc18:	4798      	blx	r3
    if (*currentScreen)
 800cc1a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cc1c:	681b      	ldr	r3, [r3, #0]
 800cc1e:	2b00      	cmp	r3, #0
 800cc20:	d007      	beq.n	800cc32 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800cc22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cc24:	681a      	ldr	r2, [r3, #0]
 800cc26:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cc28:	681b      	ldr	r3, [r3, #0]
 800cc2a:	681b      	ldr	r3, [r3, #0]
 800cc2c:	681b      	ldr	r3, [r3, #0]
 800cc2e:	4610      	mov	r0, r2
 800cc30:	4798      	blx	r3
    if (*currentPresenter)
 800cc32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc34:	681b      	ldr	r3, [r3, #0]
 800cc36:	2b00      	cmp	r3, #0
 800cc38:	d008      	beq.n	800cc4c <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800cc3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc3c:	681a      	ldr	r2, [r3, #0]
 800cc3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc40:	681b      	ldr	r3, [r3, #0]
 800cc42:	681b      	ldr	r3, [r3, #0]
 800cc44:	3308      	adds	r3, #8
 800cc46:	681b      	ldr	r3, [r3, #0]
 800cc48:	4610      	mov	r0, r2
 800cc4a:	4798      	blx	r3
}
 800cc4c:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800cc4e:	687b      	ldr	r3, [r7, #4]
 800cc50:	68db      	ldr	r3, [r3, #12]
 800cc52:	2100      	movs	r1, #0
 800cc54:	4618      	mov	r0, r3
 800cc56:	f000 fab1 	bl	800d1bc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800cc5a:	4603      	mov	r3, r0
 800cc5c:	4619      	mov	r1, r3
 800cc5e:	200c      	movs	r0, #12
 800cc60:	f7ff fb6e 	bl	800c340 <_ZnwjPv>
 800cc64:	4604      	mov	r4, r0
 800cc66:	4620      	mov	r0, r4
 800cc68:	f7ff ff48 	bl	800cafc <_ZN8touchgfx12NoTransitionC1Ev>
 800cc6c:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800cc6e:	687b      	ldr	r3, [r7, #4]
 800cc70:	689b      	ldr	r3, [r3, #8]
 800cc72:	2100      	movs	r1, #0
 800cc74:	4618      	mov	r0, r3
 800cc76:	f000 fab4 	bl	800d1e2 <_ZN8touchgfx17AbstractPartition2atI19screen_settingsViewEERT_t>
 800cc7a:	4603      	mov	r3, r0
 800cc7c:	4619      	mov	r1, r3
 800cc7e:	f44f 7016 	mov.w	r0, #600	; 0x258
 800cc82:	f7ff fb5d 	bl	800c340 <_ZnwjPv>
 800cc86:	4604      	mov	r4, r0
 800cc88:	4620      	mov	r0, r4
 800cc8a:	f003 f8f5 	bl	800fe78 <_ZN19screen_settingsViewC1Ev>
 800cc8e:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	685b      	ldr	r3, [r3, #4]
 800cc94:	2100      	movs	r1, #0
 800cc96:	4618      	mov	r0, r3
 800cc98:	f000 fab6 	bl	800d208 <_ZN8touchgfx17AbstractPartition2atI24screen_settingsPresenterEERT_t>
 800cc9c:	4603      	mov	r3, r0
 800cc9e:	4619      	mov	r1, r3
 800cca0:	2010      	movs	r0, #16
 800cca2:	f7ff fb4d 	bl	800c340 <_ZnwjPv>
 800cca6:	4604      	mov	r4, r0
 800cca8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800ccaa:	4620      	mov	r0, r4
 800ccac:	f003 f88c 	bl	800fdc8 <_ZN24screen_settingsPresenterC1ER19screen_settingsView>
 800ccb0:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800ccb2:	683b      	ldr	r3, [r7, #0]
 800ccb4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ccb6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800ccb8:	68bb      	ldr	r3, [r7, #8]
 800ccba:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ccbc:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800ccbe:	68fb      	ldr	r3, [r7, #12]
 800ccc0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ccc2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800ccc4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ccc6:	2b00      	cmp	r3, #0
 800ccc8:	d002      	beq.n	800ccd0 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800ccca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cccc:	3304      	adds	r3, #4
 800ccce:	e000      	b.n	800ccd2 <_ZN8touchgfx14makeTransitionI19screen_settingsView24screen_settingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800ccd0:	2300      	movs	r3, #0
 800ccd2:	4619      	mov	r1, r3
 800ccd4:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800ccd6:	f7ff fd0f 	bl	800c6f8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800ccda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ccdc:	3304      	adds	r3, #4
 800ccde:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800cce0:	4618      	mov	r0, r3
 800cce2:	f7ff fd7c 	bl	800c7de <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800cce6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800cce8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ccea:	4618      	mov	r0, r3
 800ccec:	f000 fa9f 	bl	800d22e <_ZN8touchgfx4ViewI24screen_settingsPresenterE4bindERS1_>
 800ccf0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ccf2:	61fb      	str	r3, [r7, #28]
 800ccf4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ccf6:	61bb      	str	r3, [r7, #24]
 800ccf8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ccfa:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800ccfc:	69fb      	ldr	r3, [r7, #28]
 800ccfe:	681b      	ldr	r3, [r3, #0]
 800cd00:	330c      	adds	r3, #12
 800cd02:	681b      	ldr	r3, [r3, #0]
 800cd04:	69f8      	ldr	r0, [r7, #28]
 800cd06:	4798      	blx	r3
    newPresenter->activate();
 800cd08:	69bb      	ldr	r3, [r7, #24]
 800cd0a:	681b      	ldr	r3, [r3, #0]
 800cd0c:	681b      	ldr	r3, [r3, #0]
 800cd0e:	69b8      	ldr	r0, [r7, #24]
 800cd10:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800cd12:	6979      	ldr	r1, [r7, #20]
 800cd14:	69f8      	ldr	r0, [r7, #28]
 800cd16:	f00a f97f 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800cd1a:	697b      	ldr	r3, [r7, #20]
 800cd1c:	681b      	ldr	r3, [r3, #0]
 800cd1e:	3310      	adds	r3, #16
 800cd20:	681b      	ldr	r3, [r3, #0]
 800cd22:	6978      	ldr	r0, [r7, #20]
 800cd24:	4798      	blx	r3
    newTransition->invalidate();
 800cd26:	697b      	ldr	r3, [r7, #20]
 800cd28:	681b      	ldr	r3, [r3, #0]
 800cd2a:	3314      	adds	r3, #20
 800cd2c:	681b      	ldr	r3, [r3, #0]
 800cd2e:	6978      	ldr	r0, [r7, #20]
 800cd30:	4798      	blx	r3
}
 800cd32:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800cd34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800cd36:	4618      	mov	r0, r3
 800cd38:	373c      	adds	r7, #60	; 0x3c
 800cd3a:	46bd      	mov	sp, r7
 800cd3c:	bd90      	pop	{r4, r7, pc}
 800cd3e:	bf00      	nop
 800cd40:	080269a0 	.word	0x080269a0
 800cd44:	08026a30 	.word	0x08026a30
 800cd48:	08026b44 	.word	0x08026b44
 800cd4c:	08026b88 	.word	0x08026b88
 800cd50:	08026c2c 	.word	0x08026c2c

0800cd54 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800cd54:	b590      	push	{r4, r7, lr}
 800cd56:	b08f      	sub	sp, #60	; 0x3c
 800cd58:	af00      	add	r7, sp, #0
 800cd5a:	60f8      	str	r0, [r7, #12]
 800cd5c:	60b9      	str	r1, [r7, #8]
 800cd5e:	607a      	str	r2, [r7, #4]
 800cd60:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800cd62:	687b      	ldr	r3, [r7, #4]
 800cd64:	689a      	ldr	r2, [r3, #8]
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	689b      	ldr	r3, [r3, #8]
 800cd6a:	681b      	ldr	r3, [r3, #0]
 800cd6c:	3320      	adds	r3, #32
 800cd6e:	681b      	ldr	r3, [r3, #0]
 800cd70:	4610      	mov	r0, r2
 800cd72:	4798      	blx	r3
 800cd74:	4603      	mov	r3, r0
 800cd76:	f5b3 7fc0 	cmp.w	r3, #384	; 0x180
 800cd7a:	d205      	bcs.n	800cd88 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800cd7c:	4b7d      	ldr	r3, [pc, #500]	; (800cf74 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800cd7e:	4a7e      	ldr	r2, [pc, #504]	; (800cf78 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cd80:	21a3      	movs	r1, #163	; 0xa3
 800cd82:	487e      	ldr	r0, [pc, #504]	; (800cf7c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cd84:	f018 fdd6 	bl	8025934 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800cd88:	687b      	ldr	r3, [r7, #4]
 800cd8a:	685a      	ldr	r2, [r3, #4]
 800cd8c:	687b      	ldr	r3, [r7, #4]
 800cd8e:	685b      	ldr	r3, [r3, #4]
 800cd90:	681b      	ldr	r3, [r3, #0]
 800cd92:	3320      	adds	r3, #32
 800cd94:	681b      	ldr	r3, [r3, #0]
 800cd96:	4610      	mov	r0, r2
 800cd98:	4798      	blx	r3
 800cd9a:	4603      	mov	r3, r0
 800cd9c:	2b0f      	cmp	r3, #15
 800cd9e:	d805      	bhi.n	800cdac <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800cda0:	4b77      	ldr	r3, [pc, #476]	; (800cf80 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800cda2:	4a75      	ldr	r2, [pc, #468]	; (800cf78 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cda4:	21a4      	movs	r1, #164	; 0xa4
 800cda6:	4875      	ldr	r0, [pc, #468]	; (800cf7c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cda8:	f018 fdc4 	bl	8025934 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	68da      	ldr	r2, [r3, #12]
 800cdb0:	687b      	ldr	r3, [r7, #4]
 800cdb2:	68db      	ldr	r3, [r3, #12]
 800cdb4:	681b      	ldr	r3, [r3, #0]
 800cdb6:	3320      	adds	r3, #32
 800cdb8:	681b      	ldr	r3, [r3, #0]
 800cdba:	4610      	mov	r0, r2
 800cdbc:	4798      	blx	r3
 800cdbe:	4603      	mov	r3, r0
 800cdc0:	2b0b      	cmp	r3, #11
 800cdc2:	d805      	bhi.n	800cdd0 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800cdc4:	4b6f      	ldr	r3, [pc, #444]	; (800cf84 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800cdc6:	4a6c      	ldr	r2, [pc, #432]	; (800cf78 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cdc8:	21a5      	movs	r1, #165	; 0xa5
 800cdca:	486c      	ldr	r0, [pc, #432]	; (800cf7c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cdcc:	f018 fdb2 	bl	8025934 <__assert_func>
 800cdd0:	68fb      	ldr	r3, [r7, #12]
 800cdd2:	62bb      	str	r3, [r7, #40]	; 0x28
 800cdd4:	68bb      	ldr	r3, [r7, #8]
 800cdd6:	627b      	str	r3, [r7, #36]	; 0x24
 800cdd8:	683b      	ldr	r3, [r7, #0]
 800cdda:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800cddc:	f008 fc58 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800cde0:	4603      	mov	r3, r0
 800cde2:	4618      	mov	r0, r3
 800cde4:	f7ff fb42 	bl	800c46c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800cde8:	6a3b      	ldr	r3, [r7, #32]
 800cdea:	681b      	ldr	r3, [r3, #0]
 800cdec:	2b00      	cmp	r3, #0
 800cdee:	d008      	beq.n	800ce02 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800cdf0:	6a3b      	ldr	r3, [r7, #32]
 800cdf2:	681a      	ldr	r2, [r3, #0]
 800cdf4:	6a3b      	ldr	r3, [r7, #32]
 800cdf6:	681b      	ldr	r3, [r3, #0]
 800cdf8:	681b      	ldr	r3, [r3, #0]
 800cdfa:	330c      	adds	r3, #12
 800cdfc:	681b      	ldr	r3, [r3, #0]
 800cdfe:	4610      	mov	r0, r2
 800ce00:	4798      	blx	r3
    if (*currentTrans)
 800ce02:	6a3b      	ldr	r3, [r7, #32]
 800ce04:	681b      	ldr	r3, [r3, #0]
 800ce06:	2b00      	cmp	r3, #0
 800ce08:	d007      	beq.n	800ce1a <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800ce0a:	6a3b      	ldr	r3, [r7, #32]
 800ce0c:	681a      	ldr	r2, [r3, #0]
 800ce0e:	6a3b      	ldr	r3, [r7, #32]
 800ce10:	681b      	ldr	r3, [r3, #0]
 800ce12:	681b      	ldr	r3, [r3, #0]
 800ce14:	681b      	ldr	r3, [r3, #0]
 800ce16:	4610      	mov	r0, r2
 800ce18:	4798      	blx	r3
    if (*currentScreen)
 800ce1a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce1c:	681b      	ldr	r3, [r3, #0]
 800ce1e:	2b00      	cmp	r3, #0
 800ce20:	d008      	beq.n	800ce34 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800ce22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce24:	681a      	ldr	r2, [r3, #0]
 800ce26:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce28:	681b      	ldr	r3, [r3, #0]
 800ce2a:	681b      	ldr	r3, [r3, #0]
 800ce2c:	3314      	adds	r3, #20
 800ce2e:	681b      	ldr	r3, [r3, #0]
 800ce30:	4610      	mov	r0, r2
 800ce32:	4798      	blx	r3
    if (*currentPresenter)
 800ce34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce36:	681b      	ldr	r3, [r3, #0]
 800ce38:	2b00      	cmp	r3, #0
 800ce3a:	d008      	beq.n	800ce4e <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800ce3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce3e:	681a      	ldr	r2, [r3, #0]
 800ce40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce42:	681b      	ldr	r3, [r3, #0]
 800ce44:	681b      	ldr	r3, [r3, #0]
 800ce46:	3304      	adds	r3, #4
 800ce48:	681b      	ldr	r3, [r3, #0]
 800ce4a:	4610      	mov	r0, r2
 800ce4c:	4798      	blx	r3
    if (*currentScreen)
 800ce4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce50:	681b      	ldr	r3, [r3, #0]
 800ce52:	2b00      	cmp	r3, #0
 800ce54:	d007      	beq.n	800ce66 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800ce56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce58:	681a      	ldr	r2, [r3, #0]
 800ce5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce5c:	681b      	ldr	r3, [r3, #0]
 800ce5e:	681b      	ldr	r3, [r3, #0]
 800ce60:	681b      	ldr	r3, [r3, #0]
 800ce62:	4610      	mov	r0, r2
 800ce64:	4798      	blx	r3
    if (*currentPresenter)
 800ce66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce68:	681b      	ldr	r3, [r3, #0]
 800ce6a:	2b00      	cmp	r3, #0
 800ce6c:	d008      	beq.n	800ce80 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800ce6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce70:	681a      	ldr	r2, [r3, #0]
 800ce72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce74:	681b      	ldr	r3, [r3, #0]
 800ce76:	681b      	ldr	r3, [r3, #0]
 800ce78:	3308      	adds	r3, #8
 800ce7a:	681b      	ldr	r3, [r3, #0]
 800ce7c:	4610      	mov	r0, r2
 800ce7e:	4798      	blx	r3
}
 800ce80:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800ce82:	687b      	ldr	r3, [r7, #4]
 800ce84:	68db      	ldr	r3, [r3, #12]
 800ce86:	2100      	movs	r1, #0
 800ce88:	4618      	mov	r0, r3
 800ce8a:	f000 f997 	bl	800d1bc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800ce8e:	4603      	mov	r3, r0
 800ce90:	4619      	mov	r1, r3
 800ce92:	200c      	movs	r0, #12
 800ce94:	f7ff fa54 	bl	800c340 <_ZnwjPv>
 800ce98:	4604      	mov	r4, r0
 800ce9a:	4620      	mov	r0, r4
 800ce9c:	f7ff fe2e 	bl	800cafc <_ZN8touchgfx12NoTransitionC1Ev>
 800cea0:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800cea2:	687b      	ldr	r3, [r7, #4]
 800cea4:	689b      	ldr	r3, [r3, #8]
 800cea6:	2100      	movs	r1, #0
 800cea8:	4618      	mov	r0, r3
 800ceaa:	f000 f9ce 	bl	800d24a <_ZN8touchgfx17AbstractPartition2atI20screen_perf_modeViewEERT_t>
 800ceae:	4603      	mov	r3, r0
 800ceb0:	4619      	mov	r1, r3
 800ceb2:	f44f 70c0 	mov.w	r0, #384	; 0x180
 800ceb6:	f7ff fa43 	bl	800c340 <_ZnwjPv>
 800ceba:	4604      	mov	r4, r0
 800cebc:	4620      	mov	r0, r4
 800cebe:	f002 ff25 	bl	800fd0c <_ZN20screen_perf_modeViewC1Ev>
 800cec2:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800cec4:	687b      	ldr	r3, [r7, #4]
 800cec6:	685b      	ldr	r3, [r3, #4]
 800cec8:	2100      	movs	r1, #0
 800ceca:	4618      	mov	r0, r3
 800cecc:	f000 f9d0 	bl	800d270 <_ZN8touchgfx17AbstractPartition2atI25screen_perf_modePresenterEERT_t>
 800ced0:	4603      	mov	r3, r0
 800ced2:	4619      	mov	r1, r3
 800ced4:	2010      	movs	r0, #16
 800ced6:	f7ff fa33 	bl	800c340 <_ZnwjPv>
 800ceda:	4604      	mov	r4, r0
 800cedc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800cede:	4620      	mov	r0, r4
 800cee0:	f002 febc 	bl	800fc5c <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView>
 800cee4:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800cee6:	683b      	ldr	r3, [r7, #0]
 800cee8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ceea:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800ceec:	68bb      	ldr	r3, [r7, #8]
 800ceee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800cef0:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800cef2:	68fb      	ldr	r3, [r7, #12]
 800cef4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800cef6:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800cef8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cefa:	2b00      	cmp	r3, #0
 800cefc:	d002      	beq.n	800cf04 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800cefe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cf00:	3304      	adds	r3, #4
 800cf02:	e000      	b.n	800cf06 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800cf04:	2300      	movs	r3, #0
 800cf06:	4619      	mov	r1, r3
 800cf08:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800cf0a:	f7ff fbf5 	bl	800c6f8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800cf0e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cf10:	3304      	adds	r3, #4
 800cf12:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800cf14:	4618      	mov	r0, r3
 800cf16:	f7ff fc62 	bl	800c7de <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800cf1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800cf1c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800cf1e:	4618      	mov	r0, r3
 800cf20:	f000 f9b9 	bl	800d296 <_ZN8touchgfx4ViewI25screen_perf_modePresenterE4bindERS1_>
 800cf24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800cf26:	61fb      	str	r3, [r7, #28]
 800cf28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cf2a:	61bb      	str	r3, [r7, #24]
 800cf2c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cf2e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800cf30:	69fb      	ldr	r3, [r7, #28]
 800cf32:	681b      	ldr	r3, [r3, #0]
 800cf34:	330c      	adds	r3, #12
 800cf36:	681b      	ldr	r3, [r3, #0]
 800cf38:	69f8      	ldr	r0, [r7, #28]
 800cf3a:	4798      	blx	r3
    newPresenter->activate();
 800cf3c:	69bb      	ldr	r3, [r7, #24]
 800cf3e:	681b      	ldr	r3, [r3, #0]
 800cf40:	681b      	ldr	r3, [r3, #0]
 800cf42:	69b8      	ldr	r0, [r7, #24]
 800cf44:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800cf46:	6979      	ldr	r1, [r7, #20]
 800cf48:	69f8      	ldr	r0, [r7, #28]
 800cf4a:	f00a f865 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800cf4e:	697b      	ldr	r3, [r7, #20]
 800cf50:	681b      	ldr	r3, [r3, #0]
 800cf52:	3310      	adds	r3, #16
 800cf54:	681b      	ldr	r3, [r3, #0]
 800cf56:	6978      	ldr	r0, [r7, #20]
 800cf58:	4798      	blx	r3
    newTransition->invalidate();
 800cf5a:	697b      	ldr	r3, [r7, #20]
 800cf5c:	681b      	ldr	r3, [r3, #0]
 800cf5e:	3314      	adds	r3, #20
 800cf60:	681b      	ldr	r3, [r3, #0]
 800cf62:	6978      	ldr	r0, [r7, #20]
 800cf64:	4798      	blx	r3
}
 800cf66:	bf00      	nop
    return newPresenter;
 800cf68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	373c      	adds	r7, #60	; 0x3c
 800cf6e:	46bd      	mov	sp, r7
 800cf70:	bd90      	pop	{r4, r7, pc}
 800cf72:	bf00      	nop
 800cf74:	080269a0 	.word	0x080269a0
 800cf78:	08026cd0 	.word	0x08026cd0
 800cf7c:	08026b44 	.word	0x08026b44
 800cf80:	08026b88 	.word	0x08026b88
 800cf84:	08026c2c 	.word	0x08026c2c

0800cf88 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800cf88:	b590      	push	{r4, r7, lr}
 800cf8a:	b08f      	sub	sp, #60	; 0x3c
 800cf8c:	af00      	add	r7, sp, #0
 800cf8e:	60f8      	str	r0, [r7, #12]
 800cf90:	60b9      	str	r1, [r7, #8]
 800cf92:	607a      	str	r2, [r7, #4]
 800cf94:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	689a      	ldr	r2, [r3, #8]
 800cf9a:	687b      	ldr	r3, [r7, #4]
 800cf9c:	689b      	ldr	r3, [r3, #8]
 800cf9e:	681b      	ldr	r3, [r3, #0]
 800cfa0:	3320      	adds	r3, #32
 800cfa2:	681b      	ldr	r3, [r3, #0]
 800cfa4:	4610      	mov	r0, r2
 800cfa6:	4798      	blx	r3
 800cfa8:	4603      	mov	r3, r0
 800cfaa:	f5b3 7f9c 	cmp.w	r3, #312	; 0x138
 800cfae:	d205      	bcs.n	800cfbc <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800cfb0:	4b7d      	ldr	r3, [pc, #500]	; (800d1a8 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800cfb2:	4a7e      	ldr	r2, [pc, #504]	; (800d1ac <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cfb4:	21a3      	movs	r1, #163	; 0xa3
 800cfb6:	487e      	ldr	r0, [pc, #504]	; (800d1b0 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cfb8:	f018 fcbc 	bl	8025934 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800cfbc:	687b      	ldr	r3, [r7, #4]
 800cfbe:	685a      	ldr	r2, [r3, #4]
 800cfc0:	687b      	ldr	r3, [r7, #4]
 800cfc2:	685b      	ldr	r3, [r3, #4]
 800cfc4:	681b      	ldr	r3, [r3, #0]
 800cfc6:	3320      	adds	r3, #32
 800cfc8:	681b      	ldr	r3, [r3, #0]
 800cfca:	4610      	mov	r0, r2
 800cfcc:	4798      	blx	r3
 800cfce:	4603      	mov	r3, r0
 800cfd0:	2b0f      	cmp	r3, #15
 800cfd2:	d805      	bhi.n	800cfe0 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800cfd4:	4b77      	ldr	r3, [pc, #476]	; (800d1b4 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800cfd6:	4a75      	ldr	r2, [pc, #468]	; (800d1ac <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cfd8:	21a4      	movs	r1, #164	; 0xa4
 800cfda:	4875      	ldr	r0, [pc, #468]	; (800d1b0 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800cfdc:	f018 fcaa 	bl	8025934 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800cfe0:	687b      	ldr	r3, [r7, #4]
 800cfe2:	68da      	ldr	r2, [r3, #12]
 800cfe4:	687b      	ldr	r3, [r7, #4]
 800cfe6:	68db      	ldr	r3, [r3, #12]
 800cfe8:	681b      	ldr	r3, [r3, #0]
 800cfea:	3320      	adds	r3, #32
 800cfec:	681b      	ldr	r3, [r3, #0]
 800cfee:	4610      	mov	r0, r2
 800cff0:	4798      	blx	r3
 800cff2:	4603      	mov	r3, r0
 800cff4:	2b0b      	cmp	r3, #11
 800cff6:	d805      	bhi.n	800d004 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800cff8:	4b6f      	ldr	r3, [pc, #444]	; (800d1b8 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800cffa:	4a6c      	ldr	r2, [pc, #432]	; (800d1ac <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800cffc:	21a5      	movs	r1, #165	; 0xa5
 800cffe:	486c      	ldr	r0, [pc, #432]	; (800d1b0 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800d000:	f018 fc98 	bl	8025934 <__assert_func>
 800d004:	68fb      	ldr	r3, [r7, #12]
 800d006:	62bb      	str	r3, [r7, #40]	; 0x28
 800d008:	68bb      	ldr	r3, [r7, #8]
 800d00a:	627b      	str	r3, [r7, #36]	; 0x24
 800d00c:	683b      	ldr	r3, [r7, #0]
 800d00e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800d010:	f008 fb3e 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800d014:	4603      	mov	r3, r0
 800d016:	4618      	mov	r0, r3
 800d018:	f7ff fa28 	bl	800c46c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800d01c:	6a3b      	ldr	r3, [r7, #32]
 800d01e:	681b      	ldr	r3, [r3, #0]
 800d020:	2b00      	cmp	r3, #0
 800d022:	d008      	beq.n	800d036 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800d024:	6a3b      	ldr	r3, [r7, #32]
 800d026:	681a      	ldr	r2, [r3, #0]
 800d028:	6a3b      	ldr	r3, [r7, #32]
 800d02a:	681b      	ldr	r3, [r3, #0]
 800d02c:	681b      	ldr	r3, [r3, #0]
 800d02e:	330c      	adds	r3, #12
 800d030:	681b      	ldr	r3, [r3, #0]
 800d032:	4610      	mov	r0, r2
 800d034:	4798      	blx	r3
    if (*currentTrans)
 800d036:	6a3b      	ldr	r3, [r7, #32]
 800d038:	681b      	ldr	r3, [r3, #0]
 800d03a:	2b00      	cmp	r3, #0
 800d03c:	d007      	beq.n	800d04e <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800d03e:	6a3b      	ldr	r3, [r7, #32]
 800d040:	681a      	ldr	r2, [r3, #0]
 800d042:	6a3b      	ldr	r3, [r7, #32]
 800d044:	681b      	ldr	r3, [r3, #0]
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	681b      	ldr	r3, [r3, #0]
 800d04a:	4610      	mov	r0, r2
 800d04c:	4798      	blx	r3
    if (*currentScreen)
 800d04e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d050:	681b      	ldr	r3, [r3, #0]
 800d052:	2b00      	cmp	r3, #0
 800d054:	d008      	beq.n	800d068 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800d056:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d058:	681a      	ldr	r2, [r3, #0]
 800d05a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d05c:	681b      	ldr	r3, [r3, #0]
 800d05e:	681b      	ldr	r3, [r3, #0]
 800d060:	3314      	adds	r3, #20
 800d062:	681b      	ldr	r3, [r3, #0]
 800d064:	4610      	mov	r0, r2
 800d066:	4798      	blx	r3
    if (*currentPresenter)
 800d068:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d06a:	681b      	ldr	r3, [r3, #0]
 800d06c:	2b00      	cmp	r3, #0
 800d06e:	d008      	beq.n	800d082 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800d070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d072:	681a      	ldr	r2, [r3, #0]
 800d074:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d076:	681b      	ldr	r3, [r3, #0]
 800d078:	681b      	ldr	r3, [r3, #0]
 800d07a:	3304      	adds	r3, #4
 800d07c:	681b      	ldr	r3, [r3, #0]
 800d07e:	4610      	mov	r0, r2
 800d080:	4798      	blx	r3
    if (*currentScreen)
 800d082:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d084:	681b      	ldr	r3, [r3, #0]
 800d086:	2b00      	cmp	r3, #0
 800d088:	d007      	beq.n	800d09a <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800d08a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d08c:	681a      	ldr	r2, [r3, #0]
 800d08e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d090:	681b      	ldr	r3, [r3, #0]
 800d092:	681b      	ldr	r3, [r3, #0]
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	4610      	mov	r0, r2
 800d098:	4798      	blx	r3
    if (*currentPresenter)
 800d09a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d09c:	681b      	ldr	r3, [r3, #0]
 800d09e:	2b00      	cmp	r3, #0
 800d0a0:	d008      	beq.n	800d0b4 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800d0a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d0a4:	681a      	ldr	r2, [r3, #0]
 800d0a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d0a8:	681b      	ldr	r3, [r3, #0]
 800d0aa:	681b      	ldr	r3, [r3, #0]
 800d0ac:	3308      	adds	r3, #8
 800d0ae:	681b      	ldr	r3, [r3, #0]
 800d0b0:	4610      	mov	r0, r2
 800d0b2:	4798      	blx	r3
}
 800d0b4:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800d0b6:	687b      	ldr	r3, [r7, #4]
 800d0b8:	68db      	ldr	r3, [r3, #12]
 800d0ba:	2100      	movs	r1, #0
 800d0bc:	4618      	mov	r0, r3
 800d0be:	f000 f87d 	bl	800d1bc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800d0c2:	4603      	mov	r3, r0
 800d0c4:	4619      	mov	r1, r3
 800d0c6:	200c      	movs	r0, #12
 800d0c8:	f7ff f93a 	bl	800c340 <_ZnwjPv>
 800d0cc:	4604      	mov	r4, r0
 800d0ce:	4620      	mov	r0, r4
 800d0d0:	f7ff fd14 	bl	800cafc <_ZN8touchgfx12NoTransitionC1Ev>
 800d0d4:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800d0d6:	687b      	ldr	r3, [r7, #4]
 800d0d8:	689b      	ldr	r3, [r3, #8]
 800d0da:	2100      	movs	r1, #0
 800d0dc:	4618      	mov	r0, r3
 800d0de:	f000 f8e8 	bl	800d2b2 <_ZN8touchgfx17AbstractPartition2atI15screen_infoViewEERT_t>
 800d0e2:	4603      	mov	r3, r0
 800d0e4:	4619      	mov	r1, r3
 800d0e6:	f44f 709c 	mov.w	r0, #312	; 0x138
 800d0ea:	f7ff f929 	bl	800c340 <_ZnwjPv>
 800d0ee:	4604      	mov	r4, r0
 800d0f0:	4620      	mov	r0, r4
 800d0f2:	f002 fd55 	bl	800fba0 <_ZN15screen_infoViewC1Ev>
 800d0f6:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800d0f8:	687b      	ldr	r3, [r7, #4]
 800d0fa:	685b      	ldr	r3, [r3, #4]
 800d0fc:	2100      	movs	r1, #0
 800d0fe:	4618      	mov	r0, r3
 800d100:	f000 f8ea 	bl	800d2d8 <_ZN8touchgfx17AbstractPartition2atI20screen_infoPresenterEERT_t>
 800d104:	4603      	mov	r3, r0
 800d106:	4619      	mov	r1, r3
 800d108:	2010      	movs	r0, #16
 800d10a:	f7ff f919 	bl	800c340 <_ZnwjPv>
 800d10e:	4604      	mov	r4, r0
 800d110:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d112:	4620      	mov	r0, r4
 800d114:	f002 fcec 	bl	800faf0 <_ZN20screen_infoPresenterC1ER15screen_infoView>
 800d118:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800d11a:	683b      	ldr	r3, [r7, #0]
 800d11c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800d11e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800d120:	68bb      	ldr	r3, [r7, #8]
 800d122:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d124:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800d126:	68fb      	ldr	r3, [r7, #12]
 800d128:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d12a:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800d12c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d12e:	2b00      	cmp	r3, #0
 800d130:	d002      	beq.n	800d138 <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800d132:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d134:	3304      	adds	r3, #4
 800d136:	e000      	b.n	800d13a <_ZN8touchgfx14makeTransitionI15screen_infoView20screen_infoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800d138:	2300      	movs	r3, #0
 800d13a:	4619      	mov	r1, r3
 800d13c:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800d13e:	f7ff fadb 	bl	800c6f8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800d142:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d144:	3304      	adds	r3, #4
 800d146:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800d148:	4618      	mov	r0, r3
 800d14a:	f7ff fb48 	bl	800c7de <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800d14e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d150:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d152:	4618      	mov	r0, r3
 800d154:	f000 f8d3 	bl	800d2fe <_ZN8touchgfx4ViewI20screen_infoPresenterE4bindERS1_>
 800d158:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d15a:	61fb      	str	r3, [r7, #28]
 800d15c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d15e:	61bb      	str	r3, [r7, #24]
 800d160:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d162:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800d164:	69fb      	ldr	r3, [r7, #28]
 800d166:	681b      	ldr	r3, [r3, #0]
 800d168:	330c      	adds	r3, #12
 800d16a:	681b      	ldr	r3, [r3, #0]
 800d16c:	69f8      	ldr	r0, [r7, #28]
 800d16e:	4798      	blx	r3
    newPresenter->activate();
 800d170:	69bb      	ldr	r3, [r7, #24]
 800d172:	681b      	ldr	r3, [r3, #0]
 800d174:	681b      	ldr	r3, [r3, #0]
 800d176:	69b8      	ldr	r0, [r7, #24]
 800d178:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800d17a:	6979      	ldr	r1, [r7, #20]
 800d17c:	69f8      	ldr	r0, [r7, #28]
 800d17e:	f009 ff4b 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800d182:	697b      	ldr	r3, [r7, #20]
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	3310      	adds	r3, #16
 800d188:	681b      	ldr	r3, [r3, #0]
 800d18a:	6978      	ldr	r0, [r7, #20]
 800d18c:	4798      	blx	r3
    newTransition->invalidate();
 800d18e:	697b      	ldr	r3, [r7, #20]
 800d190:	681b      	ldr	r3, [r3, #0]
 800d192:	3314      	adds	r3, #20
 800d194:	681b      	ldr	r3, [r3, #0]
 800d196:	6978      	ldr	r0, [r7, #20]
 800d198:	4798      	blx	r3
}
 800d19a:	bf00      	nop
    return newPresenter;
 800d19c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800d19e:	4618      	mov	r0, r3
 800d1a0:	373c      	adds	r7, #60	; 0x3c
 800d1a2:	46bd      	mov	sp, r7
 800d1a4:	bd90      	pop	{r4, r7, pc}
 800d1a6:	bf00      	nop
 800d1a8:	080269a0 	.word	0x080269a0
 800d1ac:	08026de8 	.word	0x08026de8
 800d1b0:	08026b44 	.word	0x08026b44
 800d1b4:	08026b88 	.word	0x08026b88
 800d1b8:	08026c2c 	.word	0x08026c2c

0800d1bc <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800d1bc:	b580      	push	{r7, lr}
 800d1be:	b082      	sub	sp, #8
 800d1c0:	af00      	add	r7, sp, #0
 800d1c2:	6078      	str	r0, [r7, #4]
 800d1c4:	460b      	mov	r3, r1
 800d1c6:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800d1c8:	687b      	ldr	r3, [r7, #4]
 800d1ca:	681b      	ldr	r3, [r3, #0]
 800d1cc:	3324      	adds	r3, #36	; 0x24
 800d1ce:	681b      	ldr	r3, [r3, #0]
 800d1d0:	887a      	ldrh	r2, [r7, #2]
 800d1d2:	4611      	mov	r1, r2
 800d1d4:	6878      	ldr	r0, [r7, #4]
 800d1d6:	4798      	blx	r3
 800d1d8:	4603      	mov	r3, r0
    }
 800d1da:	4618      	mov	r0, r3
 800d1dc:	3708      	adds	r7, #8
 800d1de:	46bd      	mov	sp, r7
 800d1e0:	bd80      	pop	{r7, pc}

0800d1e2 <_ZN8touchgfx17AbstractPartition2atI19screen_settingsViewEERT_t>:
    T& at(const uint16_t index)
 800d1e2:	b580      	push	{r7, lr}
 800d1e4:	b082      	sub	sp, #8
 800d1e6:	af00      	add	r7, sp, #0
 800d1e8:	6078      	str	r0, [r7, #4]
 800d1ea:	460b      	mov	r3, r1
 800d1ec:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	681b      	ldr	r3, [r3, #0]
 800d1f2:	3324      	adds	r3, #36	; 0x24
 800d1f4:	681b      	ldr	r3, [r3, #0]
 800d1f6:	887a      	ldrh	r2, [r7, #2]
 800d1f8:	4611      	mov	r1, r2
 800d1fa:	6878      	ldr	r0, [r7, #4]
 800d1fc:	4798      	blx	r3
 800d1fe:	4603      	mov	r3, r0
    }
 800d200:	4618      	mov	r0, r3
 800d202:	3708      	adds	r7, #8
 800d204:	46bd      	mov	sp, r7
 800d206:	bd80      	pop	{r7, pc}

0800d208 <_ZN8touchgfx17AbstractPartition2atI24screen_settingsPresenterEERT_t>:
    T& at(const uint16_t index)
 800d208:	b580      	push	{r7, lr}
 800d20a:	b082      	sub	sp, #8
 800d20c:	af00      	add	r7, sp, #0
 800d20e:	6078      	str	r0, [r7, #4]
 800d210:	460b      	mov	r3, r1
 800d212:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d214:	687b      	ldr	r3, [r7, #4]
 800d216:	681b      	ldr	r3, [r3, #0]
 800d218:	3324      	adds	r3, #36	; 0x24
 800d21a:	681b      	ldr	r3, [r3, #0]
 800d21c:	887a      	ldrh	r2, [r7, #2]
 800d21e:	4611      	mov	r1, r2
 800d220:	6878      	ldr	r0, [r7, #4]
 800d222:	4798      	blx	r3
 800d224:	4603      	mov	r3, r0
    }
 800d226:	4618      	mov	r0, r3
 800d228:	3708      	adds	r7, #8
 800d22a:	46bd      	mov	sp, r7
 800d22c:	bd80      	pop	{r7, pc}

0800d22e <_ZN8touchgfx4ViewI24screen_settingsPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800d22e:	b480      	push	{r7}
 800d230:	b083      	sub	sp, #12
 800d232:	af00      	add	r7, sp, #0
 800d234:	6078      	str	r0, [r7, #4]
 800d236:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800d238:	687b      	ldr	r3, [r7, #4]
 800d23a:	683a      	ldr	r2, [r7, #0]
 800d23c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d23e:	bf00      	nop
 800d240:	370c      	adds	r7, #12
 800d242:	46bd      	mov	sp, r7
 800d244:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d248:	4770      	bx	lr

0800d24a <_ZN8touchgfx17AbstractPartition2atI20screen_perf_modeViewEERT_t>:
    T& at(const uint16_t index)
 800d24a:	b580      	push	{r7, lr}
 800d24c:	b082      	sub	sp, #8
 800d24e:	af00      	add	r7, sp, #0
 800d250:	6078      	str	r0, [r7, #4]
 800d252:	460b      	mov	r3, r1
 800d254:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	681b      	ldr	r3, [r3, #0]
 800d25a:	3324      	adds	r3, #36	; 0x24
 800d25c:	681b      	ldr	r3, [r3, #0]
 800d25e:	887a      	ldrh	r2, [r7, #2]
 800d260:	4611      	mov	r1, r2
 800d262:	6878      	ldr	r0, [r7, #4]
 800d264:	4798      	blx	r3
 800d266:	4603      	mov	r3, r0
    }
 800d268:	4618      	mov	r0, r3
 800d26a:	3708      	adds	r7, #8
 800d26c:	46bd      	mov	sp, r7
 800d26e:	bd80      	pop	{r7, pc}

0800d270 <_ZN8touchgfx17AbstractPartition2atI25screen_perf_modePresenterEERT_t>:
    T& at(const uint16_t index)
 800d270:	b580      	push	{r7, lr}
 800d272:	b082      	sub	sp, #8
 800d274:	af00      	add	r7, sp, #0
 800d276:	6078      	str	r0, [r7, #4]
 800d278:	460b      	mov	r3, r1
 800d27a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d27c:	687b      	ldr	r3, [r7, #4]
 800d27e:	681b      	ldr	r3, [r3, #0]
 800d280:	3324      	adds	r3, #36	; 0x24
 800d282:	681b      	ldr	r3, [r3, #0]
 800d284:	887a      	ldrh	r2, [r7, #2]
 800d286:	4611      	mov	r1, r2
 800d288:	6878      	ldr	r0, [r7, #4]
 800d28a:	4798      	blx	r3
 800d28c:	4603      	mov	r3, r0
    }
 800d28e:	4618      	mov	r0, r3
 800d290:	3708      	adds	r7, #8
 800d292:	46bd      	mov	sp, r7
 800d294:	bd80      	pop	{r7, pc}

0800d296 <_ZN8touchgfx4ViewI25screen_perf_modePresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800d296:	b480      	push	{r7}
 800d298:	b083      	sub	sp, #12
 800d29a:	af00      	add	r7, sp, #0
 800d29c:	6078      	str	r0, [r7, #4]
 800d29e:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800d2a0:	687b      	ldr	r3, [r7, #4]
 800d2a2:	683a      	ldr	r2, [r7, #0]
 800d2a4:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d2a6:	bf00      	nop
 800d2a8:	370c      	adds	r7, #12
 800d2aa:	46bd      	mov	sp, r7
 800d2ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2b0:	4770      	bx	lr

0800d2b2 <_ZN8touchgfx17AbstractPartition2atI15screen_infoViewEERT_t>:
    T& at(const uint16_t index)
 800d2b2:	b580      	push	{r7, lr}
 800d2b4:	b082      	sub	sp, #8
 800d2b6:	af00      	add	r7, sp, #0
 800d2b8:	6078      	str	r0, [r7, #4]
 800d2ba:	460b      	mov	r3, r1
 800d2bc:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d2be:	687b      	ldr	r3, [r7, #4]
 800d2c0:	681b      	ldr	r3, [r3, #0]
 800d2c2:	3324      	adds	r3, #36	; 0x24
 800d2c4:	681b      	ldr	r3, [r3, #0]
 800d2c6:	887a      	ldrh	r2, [r7, #2]
 800d2c8:	4611      	mov	r1, r2
 800d2ca:	6878      	ldr	r0, [r7, #4]
 800d2cc:	4798      	blx	r3
 800d2ce:	4603      	mov	r3, r0
    }
 800d2d0:	4618      	mov	r0, r3
 800d2d2:	3708      	adds	r7, #8
 800d2d4:	46bd      	mov	sp, r7
 800d2d6:	bd80      	pop	{r7, pc}

0800d2d8 <_ZN8touchgfx17AbstractPartition2atI20screen_infoPresenterEERT_t>:
    T& at(const uint16_t index)
 800d2d8:	b580      	push	{r7, lr}
 800d2da:	b082      	sub	sp, #8
 800d2dc:	af00      	add	r7, sp, #0
 800d2de:	6078      	str	r0, [r7, #4]
 800d2e0:	460b      	mov	r3, r1
 800d2e2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d2e4:	687b      	ldr	r3, [r7, #4]
 800d2e6:	681b      	ldr	r3, [r3, #0]
 800d2e8:	3324      	adds	r3, #36	; 0x24
 800d2ea:	681b      	ldr	r3, [r3, #0]
 800d2ec:	887a      	ldrh	r2, [r7, #2]
 800d2ee:	4611      	mov	r1, r2
 800d2f0:	6878      	ldr	r0, [r7, #4]
 800d2f2:	4798      	blx	r3
 800d2f4:	4603      	mov	r3, r0
    }
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	3708      	adds	r7, #8
 800d2fa:	46bd      	mov	sp, r7
 800d2fc:	bd80      	pop	{r7, pc}

0800d2fe <_ZN8touchgfx4ViewI20screen_infoPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800d2fe:	b480      	push	{r7}
 800d300:	b083      	sub	sp, #12
 800d302:	af00      	add	r7, sp, #0
 800d304:	6078      	str	r0, [r7, #4]
 800d306:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	683a      	ldr	r2, [r7, #0]
 800d30c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d30e:	bf00      	nop
 800d310:	370c      	adds	r7, #12
 800d312:	46bd      	mov	sp, r7
 800d314:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d318:	4770      	bx	lr
	...

0800d31c <_ZN8touchgfx12NoTransitionD1Ev>:
 800d31c:	b580      	push	{r7, lr}
 800d31e:	b082      	sub	sp, #8
 800d320:	af00      	add	r7, sp, #0
 800d322:	6078      	str	r0, [r7, #4]
 800d324:	4a05      	ldr	r2, [pc, #20]	; (800d33c <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800d326:	687b      	ldr	r3, [r7, #4]
 800d328:	601a      	str	r2, [r3, #0]
 800d32a:	687b      	ldr	r3, [r7, #4]
 800d32c:	4618      	mov	r0, r3
 800d32e:	f7ff f909 	bl	800c544 <_ZN8touchgfx10TransitionD1Ev>
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	4618      	mov	r0, r3
 800d336:	3708      	adds	r7, #8
 800d338:	46bd      	mov	sp, r7
 800d33a:	bd80      	pop	{r7, pc}
 800d33c:	08027d38 	.word	0x08027d38

0800d340 <_ZN8touchgfx12NoTransitionD0Ev>:
 800d340:	b580      	push	{r7, lr}
 800d342:	b082      	sub	sp, #8
 800d344:	af00      	add	r7, sp, #0
 800d346:	6078      	str	r0, [r7, #4]
 800d348:	6878      	ldr	r0, [r7, #4]
 800d34a:	f7ff ffe7 	bl	800d31c <_ZN8touchgfx12NoTransitionD1Ev>
 800d34e:	210c      	movs	r1, #12
 800d350:	6878      	ldr	r0, [r7, #4]
 800d352:	f018 fac0 	bl	80258d6 <_ZdlPvj>
 800d356:	687b      	ldr	r3, [r7, #4]
 800d358:	4618      	mov	r0, r3
 800d35a:	3708      	adds	r7, #8
 800d35c:	46bd      	mov	sp, r7
 800d35e:	bd80      	pop	{r7, pc}

0800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800d360:	b580      	push	{r7, lr}
 800d362:	b082      	sub	sp, #8
 800d364:	af00      	add	r7, sp, #0
 800d366:	6078      	str	r0, [r7, #4]
 800d368:	4a05      	ldr	r2, [pc, #20]	; (800d380 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800d36a:	687b      	ldr	r3, [r7, #4]
 800d36c:	601a      	str	r2, [r3, #0]
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	4618      	mov	r0, r3
 800d372:	f7ff f889 	bl	800c488 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800d376:	687b      	ldr	r3, [r7, #4]
 800d378:	4618      	mov	r0, r3
 800d37a:	3708      	adds	r7, #8
 800d37c:	46bd      	mov	sp, r7
 800d37e:	bd80      	pop	{r7, pc}
 800d380:	08027db0 	.word	0x08027db0

0800d384 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800d384:	b580      	push	{r7, lr}
 800d386:	b082      	sub	sp, #8
 800d388:	af00      	add	r7, sp, #0
 800d38a:	6078      	str	r0, [r7, #4]
 800d38c:	6878      	ldr	r0, [r7, #4]
 800d38e:	f7ff ffe7 	bl	800d360 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800d392:	2110      	movs	r1, #16
 800d394:	6878      	ldr	r0, [r7, #4]
 800d396:	f018 fa9e 	bl	80258d6 <_ZdlPvj>
 800d39a:	687b      	ldr	r3, [r7, #4]
 800d39c:	4618      	mov	r0, r3
 800d39e:	3708      	adds	r7, #8
 800d3a0:	46bd      	mov	sp, r7
 800d3a2:	bd80      	pop	{r7, pc}

0800d3a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800d3a4:	b580      	push	{r7, lr}
 800d3a6:	b082      	sub	sp, #8
 800d3a8:	af00      	add	r7, sp, #0
 800d3aa:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800d3ac:	687b      	ldr	r3, [r7, #4]
 800d3ae:	685b      	ldr	r3, [r3, #4]
 800d3b0:	687a      	ldr	r2, [r7, #4]
 800d3b2:	68d2      	ldr	r2, [r2, #12]
 800d3b4:	1052      	asrs	r2, r2, #1
 800d3b6:	1899      	adds	r1, r3, r2
 800d3b8:	687b      	ldr	r3, [r7, #4]
 800d3ba:	68db      	ldr	r3, [r3, #12]
 800d3bc:	f003 0301 	and.w	r3, r3, #1
 800d3c0:	2b00      	cmp	r3, #0
 800d3c2:	d102      	bne.n	800d3ca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800d3c4:	687b      	ldr	r3, [r7, #4]
 800d3c6:	689b      	ldr	r3, [r3, #8]
 800d3c8:	e00a      	b.n	800d3e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800d3ca:	687b      	ldr	r3, [r7, #4]
 800d3cc:	685b      	ldr	r3, [r3, #4]
 800d3ce:	687a      	ldr	r2, [r7, #4]
 800d3d0:	68d2      	ldr	r2, [r2, #12]
 800d3d2:	1052      	asrs	r2, r2, #1
 800d3d4:	4413      	add	r3, r2
 800d3d6:	681b      	ldr	r3, [r3, #0]
 800d3d8:	687a      	ldr	r2, [r7, #4]
 800d3da:	6892      	ldr	r2, [r2, #8]
 800d3dc:	4413      	add	r3, r2
 800d3de:	681b      	ldr	r3, [r3, #0]
 800d3e0:	4608      	mov	r0, r1
 800d3e2:	4798      	blx	r3
    }
 800d3e4:	bf00      	nop
 800d3e6:	3708      	adds	r7, #8
 800d3e8:	46bd      	mov	sp, r7
 800d3ea:	bd80      	pop	{r7, pc}

0800d3ec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800d3ec:	b480      	push	{r7}
 800d3ee:	b083      	sub	sp, #12
 800d3f0:	af00      	add	r7, sp, #0
 800d3f2:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800d3f4:	687b      	ldr	r3, [r7, #4]
 800d3f6:	685b      	ldr	r3, [r3, #4]
 800d3f8:	2b00      	cmp	r3, #0
 800d3fa:	d010      	beq.n	800d41e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800d3fc:	687b      	ldr	r3, [r7, #4]
 800d3fe:	689b      	ldr	r3, [r3, #8]
 800d400:	2b00      	cmp	r3, #0
 800d402:	d107      	bne.n	800d414 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800d404:	687b      	ldr	r3, [r7, #4]
 800d406:	68db      	ldr	r3, [r3, #12]
 800d408:	f003 0301 	and.w	r3, r3, #1
 800d40c:	2b00      	cmp	r3, #0
 800d40e:	d101      	bne.n	800d414 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800d410:	2301      	movs	r3, #1
 800d412:	e000      	b.n	800d416 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800d414:	2300      	movs	r3, #0
 800d416:	2b01      	cmp	r3, #1
 800d418:	d001      	beq.n	800d41e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800d41a:	2301      	movs	r3, #1
 800d41c:	e000      	b.n	800d420 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800d41e:	2300      	movs	r3, #0
    }
 800d420:	4618      	mov	r0, r3
 800d422:	370c      	adds	r7, #12
 800d424:	46bd      	mov	sp, r7
 800d426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d42a:	4770      	bx	lr

0800d42c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800d42c:	b480      	push	{r7}
 800d42e:	b083      	sub	sp, #12
 800d430:	af00      	add	r7, sp, #0
 800d432:	6078      	str	r0, [r7, #4]
 800d434:	6039      	str	r1, [r7, #0]
        : color(col)
 800d436:	687b      	ldr	r3, [r7, #4]
 800d438:	683a      	ldr	r2, [r7, #0]
 800d43a:	601a      	str	r2, [r3, #0]
    {
    }
 800d43c:	687b      	ldr	r3, [r7, #4]
 800d43e:	4618      	mov	r0, r3
 800d440:	370c      	adds	r7, #12
 800d442:	46bd      	mov	sp, r7
 800d444:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d448:	4770      	bx	lr

0800d44a <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800d44a:	b480      	push	{r7}
 800d44c:	b083      	sub	sp, #12
 800d44e:	af00      	add	r7, sp, #0
 800d450:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800d452:	687b      	ldr	r3, [r7, #4]
 800d454:	2200      	movs	r2, #0
 800d456:	801a      	strh	r2, [r3, #0]
 800d458:	687b      	ldr	r3, [r7, #4]
 800d45a:	2200      	movs	r2, #0
 800d45c:	805a      	strh	r2, [r3, #2]
 800d45e:	687b      	ldr	r3, [r7, #4]
 800d460:	2200      	movs	r2, #0
 800d462:	809a      	strh	r2, [r3, #4]
 800d464:	687b      	ldr	r3, [r7, #4]
 800d466:	2200      	movs	r2, #0
 800d468:	80da      	strh	r2, [r3, #6]
    {
    }
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	4618      	mov	r0, r3
 800d46e:	370c      	adds	r7, #12
 800d470:	46bd      	mov	sp, r7
 800d472:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d476:	4770      	bx	lr

0800d478 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800d478:	b480      	push	{r7}
 800d47a:	b085      	sub	sp, #20
 800d47c:	af00      	add	r7, sp, #0
 800d47e:	60f8      	str	r0, [r7, #12]
 800d480:	4608      	mov	r0, r1
 800d482:	4611      	mov	r1, r2
 800d484:	461a      	mov	r2, r3
 800d486:	4603      	mov	r3, r0
 800d488:	817b      	strh	r3, [r7, #10]
 800d48a:	460b      	mov	r3, r1
 800d48c:	813b      	strh	r3, [r7, #8]
 800d48e:	4613      	mov	r3, r2
 800d490:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800d492:	68fb      	ldr	r3, [r7, #12]
 800d494:	897a      	ldrh	r2, [r7, #10]
 800d496:	801a      	strh	r2, [r3, #0]
 800d498:	68fb      	ldr	r3, [r7, #12]
 800d49a:	893a      	ldrh	r2, [r7, #8]
 800d49c:	805a      	strh	r2, [r3, #2]
 800d49e:	68fb      	ldr	r3, [r7, #12]
 800d4a0:	88fa      	ldrh	r2, [r7, #6]
 800d4a2:	809a      	strh	r2, [r3, #4]
 800d4a4:	68fb      	ldr	r3, [r7, #12]
 800d4a6:	8b3a      	ldrh	r2, [r7, #24]
 800d4a8:	80da      	strh	r2, [r3, #6]
    {
    }
 800d4aa:	68fb      	ldr	r3, [r7, #12]
 800d4ac:	4618      	mov	r0, r3
 800d4ae:	3714      	adds	r7, #20
 800d4b0:	46bd      	mov	sp, r7
 800d4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4b6:	4770      	bx	lr

0800d4b8 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800d4b8:	b480      	push	{r7}
 800d4ba:	b083      	sub	sp, #12
 800d4bc:	af00      	add	r7, sp, #0
 800d4be:	6078      	str	r0, [r7, #4]
 800d4c0:	460b      	mov	r3, r1
 800d4c2:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800d4c4:	687b      	ldr	r3, [r7, #4]
 800d4c6:	887a      	ldrh	r2, [r7, #2]
 800d4c8:	801a      	strh	r2, [r3, #0]
    {
    }
 800d4ca:	687b      	ldr	r3, [r7, #4]
 800d4cc:	4618      	mov	r0, r3
 800d4ce:	370c      	adds	r7, #12
 800d4d0:	46bd      	mov	sp, r7
 800d4d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4d6:	4770      	bx	lr

0800d4d8 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800d4d8:	b580      	push	{r7, lr}
 800d4da:	b082      	sub	sp, #8
 800d4dc:	af00      	add	r7, sp, #0
 800d4de:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800d4e0:	4a14      	ldr	r2, [pc, #80]	; (800d534 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800d4e2:	687b      	ldr	r3, [r7, #4]
 800d4e4:	601a      	str	r2, [r3, #0]
        : rect(),
 800d4e6:	687b      	ldr	r3, [r7, #4]
 800d4e8:	3304      	adds	r3, #4
 800d4ea:	4618      	mov	r0, r3
 800d4ec:	f7ff ffad 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800d4f0:	687b      	ldr	r3, [r7, #4]
 800d4f2:	330c      	adds	r3, #12
 800d4f4:	4618      	mov	r0, r3
 800d4f6:	f7ff ffa8 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	2200      	movs	r2, #0
 800d4fe:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800d500:	687b      	ldr	r3, [r7, #4]
 800d502:	2200      	movs	r2, #0
 800d504:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	2200      	movs	r2, #0
 800d50a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800d50c:	687b      	ldr	r3, [r7, #4]
 800d50e:	2200      	movs	r2, #0
 800d510:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800d512:	687b      	ldr	r3, [r7, #4]
 800d514:	2200      	movs	r2, #0
 800d516:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	2200      	movs	r2, #0
 800d51c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800d520:	687b      	ldr	r3, [r7, #4]
 800d522:	2201      	movs	r2, #1
 800d524:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800d528:	687b      	ldr	r3, [r7, #4]
 800d52a:	4618      	mov	r0, r3
 800d52c:	3708      	adds	r7, #8
 800d52e:	46bd      	mov	sp, r7
 800d530:	bd80      	pop	{r7, pc}
 800d532:	bf00      	nop
 800d534:	08028b54 	.word	0x08028b54

0800d538 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800d538:	b480      	push	{r7}
 800d53a:	b083      	sub	sp, #12
 800d53c:	af00      	add	r7, sp, #0
 800d53e:	6078      	str	r0, [r7, #4]
    {
 800d540:	4a04      	ldr	r2, [pc, #16]	; (800d554 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	601a      	str	r2, [r3, #0]
    }
 800d546:	687b      	ldr	r3, [r7, #4]
 800d548:	4618      	mov	r0, r3
 800d54a:	370c      	adds	r7, #12
 800d54c:	46bd      	mov	sp, r7
 800d54e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d552:	4770      	bx	lr
 800d554:	08028b54 	.word	0x08028b54

0800d558 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800d558:	b580      	push	{r7, lr}
 800d55a:	b082      	sub	sp, #8
 800d55c:	af00      	add	r7, sp, #0
 800d55e:	6078      	str	r0, [r7, #4]
    }
 800d560:	6878      	ldr	r0, [r7, #4]
 800d562:	f7ff ffe9 	bl	800d538 <_ZN8touchgfx8DrawableD1Ev>
 800d566:	2128      	movs	r1, #40	; 0x28
 800d568:	6878      	ldr	r0, [r7, #4]
 800d56a:	f018 f9b4 	bl	80258d6 <_ZdlPvj>
 800d56e:	687b      	ldr	r3, [r7, #4]
 800d570:	4618      	mov	r0, r3
 800d572:	3708      	adds	r7, #8
 800d574:	46bd      	mov	sp, r7
 800d576:	bd80      	pop	{r7, pc}

0800d578 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800d578:	b580      	push	{r7, lr}
 800d57a:	b082      	sub	sp, #8
 800d57c:	af00      	add	r7, sp, #0
 800d57e:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800d580:	687b      	ldr	r3, [r7, #4]
 800d582:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800d586:	2b00      	cmp	r3, #0
 800d588:	d005      	beq.n	800d596 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800d58a:	687b      	ldr	r3, [r7, #4]
 800d58c:	681b      	ldr	r3, [r3, #0]
 800d58e:	3314      	adds	r3, #20
 800d590:	681b      	ldr	r3, [r3, #0]
 800d592:	6878      	ldr	r0, [r7, #4]
 800d594:	4798      	blx	r3
        }
    }
 800d596:	bf00      	nop
 800d598:	3708      	adds	r7, #8
 800d59a:	46bd      	mov	sp, r7
 800d59c:	bd80      	pop	{r7, pc}

0800d59e <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800d59e:	b480      	push	{r7}
 800d5a0:	b083      	sub	sp, #12
 800d5a2:	af00      	add	r7, sp, #0
 800d5a4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d5a6:	2300      	movs	r3, #0
    }
 800d5a8:	4618      	mov	r0, r3
 800d5aa:	370c      	adds	r7, #12
 800d5ac:	46bd      	mov	sp, r7
 800d5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5b2:	4770      	bx	lr

0800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800d5b4:	b580      	push	{r7, lr}
 800d5b6:	b084      	sub	sp, #16
 800d5b8:	af00      	add	r7, sp, #0
 800d5ba:	60f8      	str	r0, [r7, #12]
 800d5bc:	4608      	mov	r0, r1
 800d5be:	4611      	mov	r1, r2
 800d5c0:	461a      	mov	r2, r3
 800d5c2:	4603      	mov	r3, r0
 800d5c4:	817b      	strh	r3, [r7, #10]
 800d5c6:	460b      	mov	r3, r1
 800d5c8:	813b      	strh	r3, [r7, #8]
 800d5ca:	4613      	mov	r3, r2
 800d5cc:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800d5ce:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800d5d2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800d5d6:	4619      	mov	r1, r3
 800d5d8:	68f8      	ldr	r0, [r7, #12]
 800d5da:	f000 f82a 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800d5de:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800d5e2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800d5e6:	4619      	mov	r1, r3
 800d5e8:	68f8      	ldr	r0, [r7, #12]
 800d5ea:	f000 f87e 	bl	800d6ea <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800d5ee:	bf00      	nop
 800d5f0:	3710      	adds	r7, #16
 800d5f2:	46bd      	mov	sp, r7
 800d5f4:	bd80      	pop	{r7, pc}

0800d5f6 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800d5f6:	b480      	push	{r7}
 800d5f8:	b083      	sub	sp, #12
 800d5fa:	af00      	add	r7, sp, #0
 800d5fc:	6078      	str	r0, [r7, #4]
 800d5fe:	460b      	mov	r3, r1
 800d600:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800d602:	687b      	ldr	r3, [r7, #4]
 800d604:	887a      	ldrh	r2, [r7, #2]
 800d606:	809a      	strh	r2, [r3, #4]
    }
 800d608:	bf00      	nop
 800d60a:	370c      	adds	r7, #12
 800d60c:	46bd      	mov	sp, r7
 800d60e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d612:	4770      	bx	lr

0800d614 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800d614:	b480      	push	{r7}
 800d616:	b083      	sub	sp, #12
 800d618:	af00      	add	r7, sp, #0
 800d61a:	6078      	str	r0, [r7, #4]
 800d61c:	460b      	mov	r3, r1
 800d61e:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800d620:	687b      	ldr	r3, [r7, #4]
 800d622:	887a      	ldrh	r2, [r7, #2]
 800d624:	80da      	strh	r2, [r3, #6]
    }
 800d626:	bf00      	nop
 800d628:	370c      	adds	r7, #12
 800d62a:	46bd      	mov	sp, r7
 800d62c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d630:	4770      	bx	lr

0800d632 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800d632:	b580      	push	{r7, lr}
 800d634:	b082      	sub	sp, #8
 800d636:	af00      	add	r7, sp, #0
 800d638:	6078      	str	r0, [r7, #4]
 800d63a:	460b      	mov	r3, r1
 800d63c:	807b      	strh	r3, [r7, #2]
 800d63e:	4613      	mov	r3, r2
 800d640:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800d642:	687b      	ldr	r3, [r7, #4]
 800d644:	681b      	ldr	r3, [r3, #0]
 800d646:	3330      	adds	r3, #48	; 0x30
 800d648:	681b      	ldr	r3, [r3, #0]
 800d64a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d64e:	4611      	mov	r1, r2
 800d650:	6878      	ldr	r0, [r7, #4]
 800d652:	4798      	blx	r3
        setY(y);
 800d654:	687b      	ldr	r3, [r7, #4]
 800d656:	681b      	ldr	r3, [r3, #0]
 800d658:	3334      	adds	r3, #52	; 0x34
 800d65a:	681b      	ldr	r3, [r3, #0]
 800d65c:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d660:	4611      	mov	r1, r2
 800d662:	6878      	ldr	r0, [r7, #4]
 800d664:	4798      	blx	r3
    }
 800d666:	bf00      	nop
 800d668:	3708      	adds	r7, #8
 800d66a:	46bd      	mov	sp, r7
 800d66c:	bd80      	pop	{r7, pc}

0800d66e <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800d66e:	b480      	push	{r7}
 800d670:	b083      	sub	sp, #12
 800d672:	af00      	add	r7, sp, #0
 800d674:	6078      	str	r0, [r7, #4]
 800d676:	460b      	mov	r3, r1
 800d678:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	887a      	ldrh	r2, [r7, #2]
 800d67e:	811a      	strh	r2, [r3, #8]
    }
 800d680:	bf00      	nop
 800d682:	370c      	adds	r7, #12
 800d684:	46bd      	mov	sp, r7
 800d686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d68a:	4770      	bx	lr

0800d68c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800d68c:	b480      	push	{r7}
 800d68e:	b083      	sub	sp, #12
 800d690:	af00      	add	r7, sp, #0
 800d692:	6078      	str	r0, [r7, #4]
 800d694:	460b      	mov	r3, r1
 800d696:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800d698:	687b      	ldr	r3, [r7, #4]
 800d69a:	887a      	ldrh	r2, [r7, #2]
 800d69c:	815a      	strh	r2, [r3, #10]
    }
 800d69e:	bf00      	nop
 800d6a0:	370c      	adds	r7, #12
 800d6a2:	46bd      	mov	sp, r7
 800d6a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6a8:	4770      	bx	lr

0800d6aa <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800d6aa:	b480      	push	{r7}
 800d6ac:	b083      	sub	sp, #12
 800d6ae:	af00      	add	r7, sp, #0
 800d6b0:	6078      	str	r0, [r7, #4]
    {
    }
 800d6b2:	bf00      	nop
 800d6b4:	370c      	adds	r7, #12
 800d6b6:	46bd      	mov	sp, r7
 800d6b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6bc:	4770      	bx	lr

0800d6be <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d6be:	b480      	push	{r7}
 800d6c0:	b083      	sub	sp, #12
 800d6c2:	af00      	add	r7, sp, #0
 800d6c4:	6078      	str	r0, [r7, #4]
 800d6c6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d6c8:	bf00      	nop
 800d6ca:	370c      	adds	r7, #12
 800d6cc:	46bd      	mov	sp, r7
 800d6ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6d2:	4770      	bx	lr

0800d6d4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800d6d4:	b480      	push	{r7}
 800d6d6:	b083      	sub	sp, #12
 800d6d8:	af00      	add	r7, sp, #0
 800d6da:	6078      	str	r0, [r7, #4]
 800d6dc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d6de:	bf00      	nop
 800d6e0:	370c      	adds	r7, #12
 800d6e2:	46bd      	mov	sp, r7
 800d6e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6e8:	4770      	bx	lr

0800d6ea <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800d6ea:	b580      	push	{r7, lr}
 800d6ec:	b082      	sub	sp, #8
 800d6ee:	af00      	add	r7, sp, #0
 800d6f0:	6078      	str	r0, [r7, #4]
 800d6f2:	460b      	mov	r3, r1
 800d6f4:	807b      	strh	r3, [r7, #2]
 800d6f6:	4613      	mov	r3, r2
 800d6f8:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800d6fa:	687b      	ldr	r3, [r7, #4]
 800d6fc:	681b      	ldr	r3, [r3, #0]
 800d6fe:	3338      	adds	r3, #56	; 0x38
 800d700:	681b      	ldr	r3, [r3, #0]
 800d702:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d706:	4611      	mov	r1, r2
 800d708:	6878      	ldr	r0, [r7, #4]
 800d70a:	4798      	blx	r3
        setHeight(height);
 800d70c:	687b      	ldr	r3, [r7, #4]
 800d70e:	681b      	ldr	r3, [r3, #0]
 800d710:	333c      	adds	r3, #60	; 0x3c
 800d712:	681b      	ldr	r3, [r3, #0]
 800d714:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d718:	4611      	mov	r1, r2
 800d71a:	6878      	ldr	r0, [r7, #4]
 800d71c:	4798      	blx	r3
    }
 800d71e:	bf00      	nop
 800d720:	3708      	adds	r7, #8
 800d722:	46bd      	mov	sp, r7
 800d724:	bd80      	pop	{r7, pc}

0800d726 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800d726:	b480      	push	{r7}
 800d728:	b083      	sub	sp, #12
 800d72a:	af00      	add	r7, sp, #0
 800d72c:	6078      	str	r0, [r7, #4]
 800d72e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d730:	bf00      	nop
 800d732:	370c      	adds	r7, #12
 800d734:	46bd      	mov	sp, r7
 800d736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d73a:	4770      	bx	lr

0800d73c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800d73c:	b480      	push	{r7}
 800d73e:	b083      	sub	sp, #12
 800d740:	af00      	add	r7, sp, #0
 800d742:	6078      	str	r0, [r7, #4]
    {
    }
 800d744:	bf00      	nop
 800d746:	370c      	adds	r7, #12
 800d748:	46bd      	mov	sp, r7
 800d74a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d74e:	4770      	bx	lr

0800d750 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800d750:	b480      	push	{r7}
 800d752:	b083      	sub	sp, #12
 800d754:	af00      	add	r7, sp, #0
 800d756:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800d75e:	4618      	mov	r0, r3
 800d760:	370c      	adds	r7, #12
 800d762:	46bd      	mov	sp, r7
 800d764:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d768:	4770      	bx	lr

0800d76a <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800d76a:	b480      	push	{r7}
 800d76c:	b083      	sub	sp, #12
 800d76e:	af00      	add	r7, sp, #0
 800d770:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800d772:	687b      	ldr	r3, [r7, #4]
 800d774:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800d778:	4618      	mov	r0, r3
 800d77a:	370c      	adds	r7, #12
 800d77c:	46bd      	mov	sp, r7
 800d77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d782:	4770      	bx	lr

0800d784 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800d784:	b580      	push	{r7, lr}
 800d786:	b082      	sub	sp, #8
 800d788:	af00      	add	r7, sp, #0
 800d78a:	6078      	str	r0, [r7, #4]
 800d78c:	460b      	mov	r3, r1
 800d78e:	807b      	strh	r3, [r7, #2]
 800d790:	4613      	mov	r3, r2
 800d792:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800d794:	687b      	ldr	r3, [r7, #4]
 800d796:	681b      	ldr	r3, [r3, #0]
 800d798:	3354      	adds	r3, #84	; 0x54
 800d79a:	681b      	ldr	r3, [r3, #0]
 800d79c:	8879      	ldrh	r1, [r7, #2]
 800d79e:	687a      	ldr	r2, [r7, #4]
 800d7a0:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800d7a4:	b292      	uxth	r2, r2
 800d7a6:	1a8a      	subs	r2, r1, r2
 800d7a8:	b292      	uxth	r2, r2
 800d7aa:	b210      	sxth	r0, r2
 800d7ac:	8839      	ldrh	r1, [r7, #0]
 800d7ae:	687a      	ldr	r2, [r7, #4]
 800d7b0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800d7b4:	b292      	uxth	r2, r2
 800d7b6:	1a8a      	subs	r2, r1, r2
 800d7b8:	b292      	uxth	r2, r2
 800d7ba:	b212      	sxth	r2, r2
 800d7bc:	4601      	mov	r1, r0
 800d7be:	6878      	ldr	r0, [r7, #4]
 800d7c0:	4798      	blx	r3
    }
 800d7c2:	bf00      	nop
 800d7c4:	3708      	adds	r7, #8
 800d7c6:	46bd      	mov	sp, r7
 800d7c8:	bd80      	pop	{r7, pc}

0800d7ca <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800d7ca:	b480      	push	{r7}
 800d7cc:	b083      	sub	sp, #12
 800d7ce:	af00      	add	r7, sp, #0
 800d7d0:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800d7d2:	687b      	ldr	r3, [r7, #4]
 800d7d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d7d8:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800d7da:	687b      	ldr	r3, [r7, #4]
 800d7dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d7e0:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800d7e2:	687b      	ldr	r3, [r7, #4]
 800d7e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d7e8:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800d7ea:	bf00      	nop
 800d7ec:	370c      	adds	r7, #12
 800d7ee:	46bd      	mov	sp, r7
 800d7f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7f4:	4770      	bx	lr

0800d7f6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800d7f6:	b580      	push	{r7, lr}
 800d7f8:	b084      	sub	sp, #16
 800d7fa:	af00      	add	r7, sp, #0
 800d7fc:	60f8      	str	r0, [r7, #12]
 800d7fe:	60b9      	str	r1, [r7, #8]
 800d800:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800d802:	68f8      	ldr	r0, [r7, #12]
 800d804:	f7ff ffe1 	bl	800d7ca <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800d808:	687b      	ldr	r3, [r7, #4]
 800d80a:	681a      	ldr	r2, [r3, #0]
 800d80c:	68fb      	ldr	r3, [r7, #12]
 800d80e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800d810:	687b      	ldr	r3, [r7, #4]
 800d812:	68fa      	ldr	r2, [r7, #12]
 800d814:	601a      	str	r2, [r3, #0]
    }
 800d816:	bf00      	nop
 800d818:	3710      	adds	r7, #16
 800d81a:	46bd      	mov	sp, r7
 800d81c:	bd80      	pop	{r7, pc}
	...

0800d820 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800d820:	b580      	push	{r7, lr}
 800d822:	b082      	sub	sp, #8
 800d824:	af00      	add	r7, sp, #0
 800d826:	6078      	str	r0, [r7, #4]
    {
 800d828:	4a06      	ldr	r2, [pc, #24]	; (800d844 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800d82a:	687b      	ldr	r3, [r7, #4]
 800d82c:	601a      	str	r2, [r3, #0]
 800d82e:	687b      	ldr	r3, [r7, #4]
 800d830:	3304      	adds	r3, #4
 800d832:	4618      	mov	r0, r3
 800d834:	f000 fd04 	bl	800e240 <_ZN8touchgfx9ContainerD1Ev>
    }
 800d838:	687b      	ldr	r3, [r7, #4]
 800d83a:	4618      	mov	r0, r3
 800d83c:	3708      	adds	r7, #8
 800d83e:	46bd      	mov	sp, r7
 800d840:	bd80      	pop	{r7, pc}
 800d842:	bf00      	nop
 800d844:	08028c58 	.word	0x08028c58

0800d848 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800d848:	b580      	push	{r7, lr}
 800d84a:	b082      	sub	sp, #8
 800d84c:	af00      	add	r7, sp, #0
 800d84e:	6078      	str	r0, [r7, #4]
    }
 800d850:	6878      	ldr	r0, [r7, #4]
 800d852:	f7ff ffe5 	bl	800d820 <_ZN8touchgfx6ScreenD1Ev>
 800d856:	213c      	movs	r1, #60	; 0x3c
 800d858:	6878      	ldr	r0, [r7, #4]
 800d85a:	f018 f83c 	bl	80258d6 <_ZdlPvj>
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	4618      	mov	r0, r3
 800d862:	3708      	adds	r7, #8
 800d864:	46bd      	mov	sp, r7
 800d866:	bd80      	pop	{r7, pc}

0800d868 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800d868:	b480      	push	{r7}
 800d86a:	b083      	sub	sp, #12
 800d86c:	af00      	add	r7, sp, #0
 800d86e:	6078      	str	r0, [r7, #4]
    {
    }
 800d870:	bf00      	nop
 800d872:	370c      	adds	r7, #12
 800d874:	46bd      	mov	sp, r7
 800d876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d87a:	4770      	bx	lr

0800d87c <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800d87c:	b480      	push	{r7}
 800d87e:	b083      	sub	sp, #12
 800d880:	af00      	add	r7, sp, #0
 800d882:	6078      	str	r0, [r7, #4]
    {
    }
 800d884:	bf00      	nop
 800d886:	370c      	adds	r7, #12
 800d888:	46bd      	mov	sp, r7
 800d88a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d88e:	4770      	bx	lr

0800d890 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800d890:	b480      	push	{r7}
 800d892:	b083      	sub	sp, #12
 800d894:	af00      	add	r7, sp, #0
 800d896:	6078      	str	r0, [r7, #4]
    {
    }
 800d898:	bf00      	nop
 800d89a:	370c      	adds	r7, #12
 800d89c:	46bd      	mov	sp, r7
 800d89e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8a2:	4770      	bx	lr

0800d8a4 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800d8a4:	b480      	push	{r7}
 800d8a6:	b083      	sub	sp, #12
 800d8a8:	af00      	add	r7, sp, #0
 800d8aa:	6078      	str	r0, [r7, #4]
    {
    }
 800d8ac:	bf00      	nop
 800d8ae:	370c      	adds	r7, #12
 800d8b0:	46bd      	mov	sp, r7
 800d8b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8b6:	4770      	bx	lr

0800d8b8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800d8b8:	b480      	push	{r7}
 800d8ba:	b083      	sub	sp, #12
 800d8bc:	af00      	add	r7, sp, #0
 800d8be:	6078      	str	r0, [r7, #4]
 800d8c0:	460b      	mov	r3, r1
 800d8c2:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800d8c4:	bf00      	nop
 800d8c6:	370c      	adds	r7, #12
 800d8c8:	46bd      	mov	sp, r7
 800d8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ce:	4770      	bx	lr

0800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800d8d0:	b580      	push	{r7, lr}
 800d8d2:	b082      	sub	sp, #8
 800d8d4:	af00      	add	r7, sp, #0
 800d8d6:	6078      	str	r0, [r7, #4]
 800d8d8:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800d8da:	687b      	ldr	r3, [r7, #4]
 800d8dc:	3304      	adds	r3, #4
 800d8de:	6839      	ldr	r1, [r7, #0]
 800d8e0:	4618      	mov	r0, r3
 800d8e2:	f004 faa7 	bl	8011e34 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800d8e6:	bf00      	nop
 800d8e8:	3708      	adds	r7, #8
 800d8ea:	46bd      	mov	sp, r7
 800d8ec:	bd80      	pop	{r7, pc}

0800d8ee <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800d8ee:	b580      	push	{r7, lr}
 800d8f0:	b084      	sub	sp, #16
 800d8f2:	af00      	add	r7, sp, #0
 800d8f4:	60f8      	str	r0, [r7, #12]
 800d8f6:	607b      	str	r3, [r7, #4]
 800d8f8:	460b      	mov	r3, r1
 800d8fa:	817b      	strh	r3, [r7, #10]
 800d8fc:	4613      	mov	r3, r2
 800d8fe:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800d900:	68fb      	ldr	r3, [r7, #12]
 800d902:	4618      	mov	r0, r3
 800d904:	f7ff ff24 	bl	800d750 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800d908:	4603      	mov	r3, r0
 800d90a:	2b00      	cmp	r3, #0
 800d90c:	d008      	beq.n	800d920 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800d90e:	68fb      	ldr	r3, [r7, #12]
 800d910:	4618      	mov	r0, r3
 800d912:	f7ff ff2a 	bl	800d76a <_ZNK8touchgfx8Drawable11isTouchableEv>
 800d916:	4603      	mov	r3, r0
 800d918:	2b00      	cmp	r3, #0
 800d91a:	d001      	beq.n	800d920 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800d91c:	2301      	movs	r3, #1
 800d91e:	e000      	b.n	800d922 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800d920:	2300      	movs	r3, #0
 800d922:	2b00      	cmp	r3, #0
 800d924:	d002      	beq.n	800d92c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800d926:	68fa      	ldr	r2, [r7, #12]
 800d928:	687b      	ldr	r3, [r7, #4]
 800d92a:	601a      	str	r2, [r3, #0]
        }
    }
 800d92c:	bf00      	nop
 800d92e:	3710      	adds	r7, #16
 800d930:	46bd      	mov	sp, r7
 800d932:	bd80      	pop	{r7, pc}

0800d934 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800d934:	b580      	push	{r7, lr}
 800d936:	b082      	sub	sp, #8
 800d938:	af00      	add	r7, sp, #0
 800d93a:	6078      	str	r0, [r7, #4]
 800d93c:	687b      	ldr	r3, [r7, #4]
 800d93e:	4618      	mov	r0, r3
 800d940:	f7ff fdca 	bl	800d4d8 <_ZN8touchgfx8DrawableC1Ev>
 800d944:	4a03      	ldr	r2, [pc, #12]	; (800d954 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800d946:	687b      	ldr	r3, [r7, #4]
 800d948:	601a      	str	r2, [r3, #0]
 800d94a:	687b      	ldr	r3, [r7, #4]
 800d94c:	4618      	mov	r0, r3
 800d94e:	3708      	adds	r7, #8
 800d950:	46bd      	mov	sp, r7
 800d952:	bd80      	pop	{r7, pc}
 800d954:	08027f18 	.word	0x08027f18

0800d958 <_ZN8touchgfx6WidgetD1Ev>:
 800d958:	b580      	push	{r7, lr}
 800d95a:	b082      	sub	sp, #8
 800d95c:	af00      	add	r7, sp, #0
 800d95e:	6078      	str	r0, [r7, #4]
 800d960:	4a05      	ldr	r2, [pc, #20]	; (800d978 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800d962:	687b      	ldr	r3, [r7, #4]
 800d964:	601a      	str	r2, [r3, #0]
 800d966:	687b      	ldr	r3, [r7, #4]
 800d968:	4618      	mov	r0, r3
 800d96a:	f7ff fde5 	bl	800d538 <_ZN8touchgfx8DrawableD1Ev>
 800d96e:	687b      	ldr	r3, [r7, #4]
 800d970:	4618      	mov	r0, r3
 800d972:	3708      	adds	r7, #8
 800d974:	46bd      	mov	sp, r7
 800d976:	bd80      	pop	{r7, pc}
 800d978:	08027f18 	.word	0x08027f18

0800d97c <_ZN8touchgfx6WidgetD0Ev>:
 800d97c:	b580      	push	{r7, lr}
 800d97e:	b082      	sub	sp, #8
 800d980:	af00      	add	r7, sp, #0
 800d982:	6078      	str	r0, [r7, #4]
 800d984:	6878      	ldr	r0, [r7, #4]
 800d986:	f7ff ffe7 	bl	800d958 <_ZN8touchgfx6WidgetD1Ev>
 800d98a:	2128      	movs	r1, #40	; 0x28
 800d98c:	6878      	ldr	r0, [r7, #4]
 800d98e:	f017 ffa2 	bl	80258d6 <_ZdlPvj>
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	4618      	mov	r0, r3
 800d996:	3708      	adds	r7, #8
 800d998:	46bd      	mov	sp, r7
 800d99a:	bd80      	pop	{r7, pc}

0800d99c <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800d99c:	b580      	push	{r7, lr}
 800d99e:	b082      	sub	sp, #8
 800d9a0:	af00      	add	r7, sp, #0
 800d9a2:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800d9a4:	687b      	ldr	r3, [r7, #4]
 800d9a6:	4618      	mov	r0, r3
 800d9a8:	2326      	movs	r3, #38	; 0x26
 800d9aa:	461a      	mov	r2, r3
 800d9ac:	2100      	movs	r1, #0
 800d9ae:	f018 f9c6 	bl	8025d3e <memset>
 800d9b2:	687b      	ldr	r3, [r7, #4]
 800d9b4:	4618      	mov	r0, r3
 800d9b6:	f7ff ffbd 	bl	800d934 <_ZN8touchgfx6WidgetC1Ev>
 800d9ba:	4a09      	ldr	r2, [pc, #36]	; (800d9e0 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800d9bc:	687b      	ldr	r3, [r7, #4]
 800d9be:	601a      	str	r2, [r3, #0]
 800d9c0:	687b      	ldr	r3, [r7, #4]
 800d9c2:	22ff      	movs	r2, #255	; 0xff
 800d9c4:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800d9c8:	687b      	ldr	r3, [r7, #4]
 800d9ca:	3328      	adds	r3, #40	; 0x28
 800d9cc:	2100      	movs	r1, #0
 800d9ce:	4618      	mov	r0, r3
 800d9d0:	f7ff fd2c 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800d9d4:	687b      	ldr	r3, [r7, #4]
 800d9d6:	4618      	mov	r0, r3
 800d9d8:	3708      	adds	r7, #8
 800d9da:	46bd      	mov	sp, r7
 800d9dc:	bd80      	pop	{r7, pc}
 800d9de:	bf00      	nop
 800d9e0:	08028958 	.word	0x08028958

0800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800d9e4:	b480      	push	{r7}
 800d9e6:	b083      	sub	sp, #12
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	6078      	str	r0, [r7, #4]
 800d9ec:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800d9ee:	687b      	ldr	r3, [r7, #4]
 800d9f0:	683a      	ldr	r2, [r7, #0]
 800d9f2:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800d9f4:	bf00      	nop
 800d9f6:	370c      	adds	r7, #12
 800d9f8:	46bd      	mov	sp, r7
 800d9fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9fe:	4770      	bx	lr

0800da00 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800da00:	b480      	push	{r7}
 800da02:	b083      	sub	sp, #12
 800da04:	af00      	add	r7, sp, #0
 800da06:	6078      	str	r0, [r7, #4]
 800da08:	460b      	mov	r3, r1
 800da0a:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800da0c:	4a06      	ldr	r2, [pc, #24]	; (800da28 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800da0e:	687b      	ldr	r3, [r7, #4]
 800da10:	601a      	str	r2, [r3, #0]
 800da12:	687b      	ldr	r3, [r7, #4]
 800da14:	887a      	ldrh	r2, [r7, #2]
 800da16:	809a      	strh	r2, [r3, #4]
    }
 800da18:	687b      	ldr	r3, [r7, #4]
 800da1a:	4618      	mov	r0, r3
 800da1c:	370c      	adds	r7, #12
 800da1e:	46bd      	mov	sp, r7
 800da20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da24:	4770      	bx	lr
 800da26:	bf00      	nop
 800da28:	08027cc8 	.word	0x08027cc8

0800da2c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800da2c:	b480      	push	{r7}
 800da2e:	b083      	sub	sp, #12
 800da30:	af00      	add	r7, sp, #0
 800da32:	6078      	str	r0, [r7, #4]
 800da34:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800da36:	687b      	ldr	r3, [r7, #4]
 800da38:	683a      	ldr	r2, [r7, #0]
 800da3a:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800da3c:	bf00      	nop
 800da3e:	370c      	adds	r7, #12
 800da40:	46bd      	mov	sp, r7
 800da42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da46:	4770      	bx	lr

0800da48 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800da48:	b580      	push	{r7, lr}
 800da4a:	b082      	sub	sp, #8
 800da4c:	af00      	add	r7, sp, #0
 800da4e:	6078      	str	r0, [r7, #4]
 800da50:	4a05      	ldr	r2, [pc, #20]	; (800da68 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800da52:	687b      	ldr	r3, [r7, #4]
 800da54:	601a      	str	r2, [r3, #0]
 800da56:	687b      	ldr	r3, [r7, #4]
 800da58:	4618      	mov	r0, r3
 800da5a:	f7ff ff7d 	bl	800d958 <_ZN8touchgfx6WidgetD1Ev>
 800da5e:	687b      	ldr	r3, [r7, #4]
 800da60:	4618      	mov	r0, r3
 800da62:	3708      	adds	r7, #8
 800da64:	46bd      	mov	sp, r7
 800da66:	bd80      	pop	{r7, pc}
 800da68:	08028858 	.word	0x08028858

0800da6c <_ZN8touchgfx14AbstractButtonD0Ev>:
 800da6c:	b580      	push	{r7, lr}
 800da6e:	b082      	sub	sp, #8
 800da70:	af00      	add	r7, sp, #0
 800da72:	6078      	str	r0, [r7, #4]
 800da74:	6878      	ldr	r0, [r7, #4]
 800da76:	f7ff ffe7 	bl	800da48 <_ZN8touchgfx14AbstractButtonD1Ev>
 800da7a:	2130      	movs	r1, #48	; 0x30
 800da7c:	6878      	ldr	r0, [r7, #4]
 800da7e:	f017 ff2a 	bl	80258d6 <_ZdlPvj>
 800da82:	687b      	ldr	r3, [r7, #4]
 800da84:	4618      	mov	r0, r3
 800da86:	3708      	adds	r7, #8
 800da88:	46bd      	mov	sp, r7
 800da8a:	bd80      	pop	{r7, pc}

0800da8c <_ZN8touchgfx9TypedTextaSERKS0_>:
class TypedText
 800da8c:	b480      	push	{r7}
 800da8e:	b083      	sub	sp, #12
 800da90:	af00      	add	r7, sp, #0
 800da92:	6078      	str	r0, [r7, #4]
 800da94:	6039      	str	r1, [r7, #0]
 800da96:	683b      	ldr	r3, [r7, #0]
 800da98:	889a      	ldrh	r2, [r3, #4]
 800da9a:	687b      	ldr	r3, [r7, #4]
 800da9c:	809a      	strh	r2, [r3, #4]
 800da9e:	687b      	ldr	r3, [r7, #4]
 800daa0:	4618      	mov	r0, r3
 800daa2:	370c      	adds	r7, #12
 800daa4:	46bd      	mov	sp, r7
 800daa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daaa:	4770      	bx	lr

0800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>:
     *
     * @param  t The text to display.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelText(TypedText t)
 800daac:	b580      	push	{r7, lr}
 800daae:	b082      	sub	sp, #8
 800dab0:	af00      	add	r7, sp, #0
 800dab2:	6078      	str	r0, [r7, #4]
 800dab4:	6039      	str	r1, [r7, #0]
    {
        typedText = t;
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	3334      	adds	r3, #52	; 0x34
 800daba:	6839      	ldr	r1, [r7, #0]
 800dabc:	4618      	mov	r0, r3
 800dabe:	f7ff ffe5 	bl	800da8c <_ZN8touchgfx9TypedTextaSERKS0_>
        updateTextPosition();
 800dac2:	6878      	ldr	r0, [r7, #4]
 800dac4:	f000 f820 	bl	800db08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    }
 800dac8:	bf00      	nop
 800daca:	3708      	adds	r7, #8
 800dacc:	46bd      	mov	sp, r7
 800dace:	bd80      	pop	{r7, pc}

0800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>:
     *
     * @note If the button is currently in the normal, released state, the button should be forced
     *       to redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColor(colortype col)
 800dad0:	b480      	push	{r7}
 800dad2:	b083      	sub	sp, #12
 800dad4:	af00      	add	r7, sp, #0
 800dad6:	6078      	str	r0, [r7, #4]
 800dad8:	6039      	str	r1, [r7, #0]
    {
        color = col;
 800dada:	687b      	ldr	r3, [r7, #4]
 800dadc:	683a      	ldr	r2, [r7, #0]
 800dade:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800dae0:	bf00      	nop
 800dae2:	370c      	adds	r7, #12
 800dae4:	46bd      	mov	sp, r7
 800dae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daea:	4770      	bx	lr

0800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>:
     *
     * @note If the button is currently in the pressed state, the button should be forced to
     *       redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColorPressed(colortype col)
 800daec:	b480      	push	{r7}
 800daee:	b083      	sub	sp, #12
 800daf0:	af00      	add	r7, sp, #0
 800daf2:	6078      	str	r0, [r7, #4]
 800daf4:	6039      	str	r1, [r7, #0]
    {
        colorPressed = col;
 800daf6:	687b      	ldr	r3, [r7, #4]
 800daf8:	683a      	ldr	r2, [r7, #0]
 800dafa:	641a      	str	r2, [r3, #64]	; 0x40
    }
 800dafc:	bf00      	nop
 800dafe:	370c      	adds	r7, #12
 800db00:	46bd      	mov	sp, r7
 800db02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db06:	4770      	bx	lr

0800db08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800db08:	b590      	push	{r4, r7, lr}
 800db0a:	b08b      	sub	sp, #44	; 0x2c
 800db0c:	af00      	add	r7, sp, #0
 800db0e:	6078      	str	r0, [r7, #4]
    {
        if (typedText.hasValidId())
 800db10:	687b      	ldr	r3, [r7, #4]
 800db12:	3334      	adds	r3, #52	; 0x34
 800db14:	61fb      	str	r3, [r7, #28]
     *
     * @return Is the id valid.
     */
    FORCE_INLINE_FUNCTION bool hasValidId() const
    {
        return typedTextId < numberOfTypedTexts;
 800db16:	69fb      	ldr	r3, [r7, #28]
 800db18:	889a      	ldrh	r2, [r3, #4]
 800db1a:	4b46      	ldr	r3, [pc, #280]	; (800dc34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800db1c:	881b      	ldrh	r3, [r3, #0]
 800db1e:	429a      	cmp	r2, r3
 800db20:	bf34      	ite	cc
 800db22:	2301      	movcc	r3, #1
 800db24:	2300      	movcs	r3, #0
 800db26:	b2db      	uxtb	r3, r3
 800db28:	2b00      	cmp	r3, #0
 800db2a:	d07a      	beq.n	800dc22 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11a>
        {
            const Font* f = typedText.getFont();
 800db2c:	687b      	ldr	r3, [r7, #4]
 800db2e:	3334      	adds	r3, #52	; 0x34
 800db30:	613b      	str	r3, [r7, #16]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800db32:	4b41      	ldr	r3, [pc, #260]	; (800dc38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800db34:	681b      	ldr	r3, [r3, #0]
 800db36:	2b00      	cmp	r3, #0
 800db38:	d105      	bne.n	800db46 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x3e>
 800db3a:	4b40      	ldr	r3, [pc, #256]	; (800dc3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800db3c:	4a40      	ldr	r2, [pc, #256]	; (800dc40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800db3e:	216c      	movs	r1, #108	; 0x6c
 800db40:	4840      	ldr	r0, [pc, #256]	; (800dc44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800db42:	f017 fef7 	bl	8025934 <__assert_func>
 800db46:	693b      	ldr	r3, [r7, #16]
 800db48:	60fb      	str	r3, [r7, #12]
        return typedTextId < numberOfTypedTexts;
 800db4a:	68fb      	ldr	r3, [r7, #12]
 800db4c:	889a      	ldrh	r2, [r3, #4]
 800db4e:	4b39      	ldr	r3, [pc, #228]	; (800dc34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800db50:	881b      	ldrh	r3, [r3, #0]
 800db52:	429a      	cmp	r2, r3
 800db54:	bf34      	ite	cc
 800db56:	2301      	movcc	r3, #1
 800db58:	2300      	movcs	r3, #0
 800db5a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800db5c:	2b00      	cmp	r3, #0
 800db5e:	d105      	bne.n	800db6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
 800db60:	4b39      	ldr	r3, [pc, #228]	; (800dc48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800db62:	4a37      	ldr	r2, [pc, #220]	; (800dc40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800db64:	216d      	movs	r1, #109	; 0x6d
 800db66:	4837      	ldr	r0, [pc, #220]	; (800dc44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800db68:	f017 fee4 	bl	8025934 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800db6c:	4b37      	ldr	r3, [pc, #220]	; (800dc4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x144>)
 800db6e:	681a      	ldr	r2, [r3, #0]
 800db70:	4b31      	ldr	r3, [pc, #196]	; (800dc38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800db72:	6819      	ldr	r1, [r3, #0]
 800db74:	693b      	ldr	r3, [r7, #16]
 800db76:	889b      	ldrh	r3, [r3, #4]
 800db78:	005b      	lsls	r3, r3, #1
 800db7a:	440b      	add	r3, r1
 800db7c:	781b      	ldrb	r3, [r3, #0]
 800db7e:	009b      	lsls	r3, r3, #2
 800db80:	4413      	add	r3, r2
 800db82:	681b      	ldr	r3, [r3, #0]
 800db84:	627b      	str	r3, [r7, #36]	; 0x24
            const Unicode::UnicodeChar* s = typedText.getText();
 800db86:	687b      	ldr	r3, [r7, #4]
 800db88:	3334      	adds	r3, #52	; 0x34
 800db8a:	61bb      	str	r3, [r7, #24]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800db8c:	4b2a      	ldr	r3, [pc, #168]	; (800dc38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800db8e:	681b      	ldr	r3, [r3, #0]
 800db90:	2b00      	cmp	r3, #0
 800db92:	d105      	bne.n	800dba0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>
 800db94:	4b29      	ldr	r3, [pc, #164]	; (800dc3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800db96:	4a2e      	ldr	r2, [pc, #184]	; (800dc50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800db98:	2160      	movs	r1, #96	; 0x60
 800db9a:	482a      	ldr	r0, [pc, #168]	; (800dc44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800db9c:	f017 feca 	bl	8025934 <__assert_func>
 800dba0:	69bb      	ldr	r3, [r7, #24]
 800dba2:	617b      	str	r3, [r7, #20]
        return typedTextId < numberOfTypedTexts;
 800dba4:	697b      	ldr	r3, [r7, #20]
 800dba6:	889a      	ldrh	r2, [r3, #4]
 800dba8:	4b22      	ldr	r3, [pc, #136]	; (800dc34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800dbaa:	881b      	ldrh	r3, [r3, #0]
 800dbac:	429a      	cmp	r2, r3
 800dbae:	bf34      	ite	cc
 800dbb0:	2301      	movcc	r3, #1
 800dbb2:	2300      	movcs	r3, #0
 800dbb4:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800dbb6:	2b00      	cmp	r3, #0
 800dbb8:	d105      	bne.n	800dbc6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xbe>
 800dbba:	4b23      	ldr	r3, [pc, #140]	; (800dc48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800dbbc:	4a24      	ldr	r2, [pc, #144]	; (800dc50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800dbbe:	2161      	movs	r1, #97	; 0x61
 800dbc0:	4820      	ldr	r0, [pc, #128]	; (800dc44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800dbc2:	f017 feb7 	bl	8025934 <__assert_func>
        return texts->getText(typedTextId);
 800dbc6:	4b23      	ldr	r3, [pc, #140]	; (800dc54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 800dbc8:	681a      	ldr	r2, [r3, #0]
 800dbca:	69bb      	ldr	r3, [r7, #24]
 800dbcc:	889b      	ldrh	r3, [r3, #4]
 800dbce:	4619      	mov	r1, r3
 800dbd0:	4610      	mov	r0, r2
 800dbd2:	f001 fe21 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 800dbd6:	4603      	mov	r3, r0
 800dbd8:	bf00      	nop
 800dbda:	623b      	str	r3, [r7, #32]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800dbdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dbde:	681b      	ldr	r3, [r3, #0]
 800dbe0:	3338      	adds	r3, #56	; 0x38
 800dbe2:	681b      	ldr	r3, [r3, #0]
 800dbe4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800dbe6:	4798      	blx	r3
 800dbe8:	4603      	mov	r3, r0
 800dbea:	461c      	mov	r4, r3
 800dbec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dbee:	681b      	ldr	r3, [r3, #0]
 800dbf0:	3348      	adds	r3, #72	; 0x48
 800dbf2:	681b      	ldr	r3, [r3, #0]
 800dbf4:	6a39      	ldr	r1, [r7, #32]
 800dbf6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800dbf8:	4798      	blx	r3
 800dbfa:	4603      	mov	r3, r0
 800dbfc:	fb14 f303 	smulbb	r3, r4, r3
 800dc00:	b29c      	uxth	r4, r3
 800dc02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dc04:	681b      	ldr	r3, [r3, #0]
 800dc06:	3324      	adds	r3, #36	; 0x24
 800dc08:	681b      	ldr	r3, [r3, #0]
 800dc0a:	6a39      	ldr	r1, [r7, #32]
 800dc0c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800dc0e:	4798      	blx	r3
 800dc10:	4603      	mov	r3, r0
 800dc12:	b29b      	uxth	r3, r3
 800dc14:	4423      	add	r3, r4
 800dc16:	b29b      	uxth	r3, r3
 800dc18:	b21a      	sxth	r2, r3
 800dc1a:	687b      	ldr	r3, [r7, #4]
 800dc1c:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800dc20:	e003      	b.n	800dc2a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x122>
            textHeightIncludingSpacing = 0;
 800dc22:	687b      	ldr	r3, [r7, #4]
 800dc24:	2200      	movs	r2, #0
 800dc26:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    }
 800dc2a:	bf00      	nop
 800dc2c:	372c      	adds	r7, #44	; 0x2c
 800dc2e:	46bd      	mov	sp, r7
 800dc30:	bd90      	pop	{r4, r7, pc}
 800dc32:	bf00      	nop
 800dc34:	24002ff8 	.word	0x24002ff8
 800dc38:	24002ff4 	.word	0x24002ff4
 800dc3c:	08026ef4 	.word	0x08026ef4
 800dc40:	08026f38 	.word	0x08026f38
 800dc44:	08026f74 	.word	0x08026f74
 800dc48:	08026fb8 	.word	0x08026fb8
 800dc4c:	24002ffc 	.word	0x24002ffc
 800dc50:	08026ff8 	.word	0x08026ff8
 800dc54:	24003000 	.word	0x24003000

0800dc58 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800dc58:	b580      	push	{r7, lr}
 800dc5a:	b082      	sub	sp, #8
 800dc5c:	af00      	add	r7, sp, #0
 800dc5e:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800dc60:	687b      	ldr	r3, [r7, #4]
 800dc62:	4618      	mov	r0, r3
 800dc64:	2326      	movs	r3, #38	; 0x26
 800dc66:	461a      	mov	r2, r3
 800dc68:	2100      	movs	r1, #0
 800dc6a:	f018 f868 	bl	8025d3e <memset>
 800dc6e:	687b      	ldr	r3, [r7, #4]
 800dc70:	4618      	mov	r0, r3
 800dc72:	f7ff fe5f 	bl	800d934 <_ZN8touchgfx6WidgetC1Ev>
 800dc76:	4a16      	ldr	r2, [pc, #88]	; (800dcd0 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800dc78:	687b      	ldr	r3, [r7, #4]
 800dc7a:	601a      	str	r2, [r3, #0]
 800dc7c:	687b      	ldr	r3, [r7, #4]
 800dc7e:	3328      	adds	r3, #40	; 0x28
 800dc80:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dc84:	4618      	mov	r0, r3
 800dc86:	f7ff febb 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800dc8a:	687b      	ldr	r3, [r7, #4]
 800dc8c:	3330      	adds	r3, #48	; 0x30
 800dc8e:	2100      	movs	r1, #0
 800dc90:	4618      	mov	r0, r3
 800dc92:	f7ff fbcb 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800dc96:	687b      	ldr	r3, [r7, #4]
 800dc98:	2200      	movs	r2, #0
 800dc9a:	869a      	strh	r2, [r3, #52]	; 0x34
 800dc9c:	687b      	ldr	r3, [r7, #4]
 800dc9e:	22ff      	movs	r2, #255	; 0xff
 800dca0:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800dca4:	687b      	ldr	r3, [r7, #4]
 800dca6:	2200      	movs	r2, #0
 800dca8:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800dcac:	687b      	ldr	r3, [r7, #4]
 800dcae:	2200      	movs	r2, #0
 800dcb0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800dcb4:	687b      	ldr	r3, [r7, #4]
 800dcb6:	2200      	movs	r2, #0
 800dcb8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800dcbc:	687b      	ldr	r3, [r7, #4]
 800dcbe:	333c      	adds	r3, #60	; 0x3c
 800dcc0:	4618      	mov	r0, r3
 800dcc2:	f000 f807 	bl	800dcd4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800dcc6:	687b      	ldr	r3, [r7, #4]
 800dcc8:	4618      	mov	r0, r3
 800dcca:	3708      	adds	r7, #8
 800dccc:	46bd      	mov	sp, r7
 800dcce:	bd80      	pop	{r7, pc}
 800dcd0:	080288c8 	.word	0x080288c8

0800dcd4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800dcd4:	b580      	push	{r7, lr}
 800dcd6:	b084      	sub	sp, #16
 800dcd8:	af02      	add	r7, sp, #8
 800dcda:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800dcdc:	6878      	ldr	r0, [r7, #4]
 800dcde:	f04f 33ff 	mov.w	r3, #4294967295
 800dce2:	9300      	str	r3, [sp, #0]
 800dce4:	f04f 33ff 	mov.w	r3, #4294967295
 800dce8:	2200      	movs	r2, #0
 800dcea:	2100      	movs	r1, #0
 800dcec:	f7ff fbc4 	bl	800d478 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800dcf0:	687b      	ldr	r3, [r7, #4]
 800dcf2:	2200      	movs	r2, #0
 800dcf4:	609a      	str	r2, [r3, #8]
        {
        }
 800dcf6:	687b      	ldr	r3, [r7, #4]
 800dcf8:	4618      	mov	r0, r3
 800dcfa:	3708      	adds	r7, #8
 800dcfc:	46bd      	mov	sp, r7
 800dcfe:	bd80      	pop	{r7, pc}

0800dd00 <_ZN19screen_infoViewBase11applicationEv>:
    screen_infoViewBase();
    virtual ~screen_infoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800dd00:	b580      	push	{r7, lr}
 800dd02:	b082      	sub	sp, #8
 800dd04:	af00      	add	r7, sp, #0
 800dd06:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800dd08:	f007 fcc2 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800dd0c:	4603      	mov	r3, r0
    }
 800dd0e:	4618      	mov	r0, r3
 800dd10:	3708      	adds	r7, #8
 800dd12:	46bd      	mov	sp, r7
 800dd14:	bd80      	pop	{r7, pc}
	...

0800dd18 <_ZN8touchgfx4ViewI20screen_infoPresenterED1Ev>:
class View : public Screen
 800dd18:	b580      	push	{r7, lr}
 800dd1a:	b082      	sub	sp, #8
 800dd1c:	af00      	add	r7, sp, #0
 800dd1e:	6078      	str	r0, [r7, #4]
 800dd20:	4a05      	ldr	r2, [pc, #20]	; (800dd38 <_ZN8touchgfx4ViewI20screen_infoPresenterED1Ev+0x20>)
 800dd22:	687b      	ldr	r3, [r7, #4]
 800dd24:	601a      	str	r2, [r3, #0]
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	4618      	mov	r0, r3
 800dd2a:	f7ff fd79 	bl	800d820 <_ZN8touchgfx6ScreenD1Ev>
 800dd2e:	687b      	ldr	r3, [r7, #4]
 800dd30:	4618      	mov	r0, r3
 800dd32:	3708      	adds	r7, #8
 800dd34:	46bd      	mov	sp, r7
 800dd36:	bd80      	pop	{r7, pc}
 800dd38:	08027ecc 	.word	0x08027ecc

0800dd3c <_ZN8touchgfx4ViewI20screen_infoPresenterED0Ev>:
 800dd3c:	b580      	push	{r7, lr}
 800dd3e:	b082      	sub	sp, #8
 800dd40:	af00      	add	r7, sp, #0
 800dd42:	6078      	str	r0, [r7, #4]
 800dd44:	6878      	ldr	r0, [r7, #4]
 800dd46:	f7ff ffe7 	bl	800dd18 <_ZN8touchgfx4ViewI20screen_infoPresenterED1Ev>
 800dd4a:	2140      	movs	r1, #64	; 0x40
 800dd4c:	6878      	ldr	r0, [r7, #4]
 800dd4e:	f017 fdc2 	bl	80258d6 <_ZdlPvj>
 800dd52:	687b      	ldr	r3, [r7, #4]
 800dd54:	4618      	mov	r0, r3
 800dd56:	3708      	adds	r7, #8
 800dd58:	46bd      	mov	sp, r7
 800dd5a:	bd80      	pop	{r7, pc}

0800dd5c <_ZN19screen_infoViewBaseC1Ev>:
#include <gui_generated/screen_info_screen/screen_infoViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_infoViewBase::screen_infoViewBase() :
 800dd5c:	b590      	push	{r4, r7, lr}
 800dd5e:	b09f      	sub	sp, #124	; 0x7c
 800dd60:	af02      	add	r7, sp, #8
 800dd62:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &screen_infoViewBase::buttonCallbackHandler)
 800dd64:	697b      	ldr	r3, [r7, #20]
 800dd66:	4618      	mov	r0, r3
 800dd68:	f000 f9e2 	bl	800e130 <_ZN8touchgfx4ViewI20screen_infoPresenterEC1Ev>
 800dd6c:	4ac0      	ldr	r2, [pc, #768]	; (800e070 <_ZN19screen_infoViewBaseC1Ev+0x314>)
 800dd6e:	697b      	ldr	r3, [r7, #20]
 800dd70:	601a      	str	r2, [r3, #0]
 800dd72:	697b      	ldr	r3, [r7, #20]
 800dd74:	3340      	adds	r3, #64	; 0x40
 800dd76:	4618      	mov	r0, r3
 800dd78:	f7ff fe10 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800dd7c:	697b      	ldr	r3, [r7, #20]
 800dd7e:	336c      	adds	r3, #108	; 0x6c
 800dd80:	4618      	mov	r0, r3
 800dd82:	f7ff fe0b 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800dd86:	697b      	ldr	r3, [r7, #20]
 800dd88:	3398      	adds	r3, #152	; 0x98
 800dd8a:	4618      	mov	r0, r3
 800dd8c:	f005 ff8c 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800dd90:	697b      	ldr	r3, [r7, #20]
 800dd92:	33e0      	adds	r3, #224	; 0xe0
 800dd94:	4618      	mov	r0, r3
 800dd96:	f7ff ff5f 	bl	800dc58 <_ZN8touchgfx8TextAreaC1Ev>
 800dd9a:	697b      	ldr	r3, [r7, #20]
 800dd9c:	f503 7094 	add.w	r0, r3, #296	; 0x128
 800dda0:	4bb4      	ldr	r3, [pc, #720]	; (800e074 <_ZN19screen_infoViewBaseC1Ev+0x318>)
 800dda2:	623b      	str	r3, [r7, #32]
 800dda4:	2300      	movs	r3, #0
 800dda6:	627b      	str	r3, [r7, #36]	; 0x24
 800dda8:	f107 0320 	add.w	r3, r7, #32
 800ddac:	cb0c      	ldmia	r3, {r2, r3}
 800ddae:	6979      	ldr	r1, [r7, #20]
 800ddb0:	f000 f9e4 	bl	800e17c <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800ddb4:	697b      	ldr	r3, [r7, #20]
 800ddb6:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800ddba:	23f0      	movs	r3, #240	; 0xf0
 800ddbc:	9300      	str	r3, [sp, #0]
 800ddbe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ddc2:	2200      	movs	r2, #0
 800ddc4:	2100      	movs	r1, #0
 800ddc6:	f7ff fbf5 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ddca:	697b      	ldr	r3, [r7, #20]
 800ddcc:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ddd0:	2300      	movs	r3, #0
 800ddd2:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 800ddd6:	2300      	movs	r3, #0
 800ddd8:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800dddc:	2300      	movs	r3, #0
 800ddde:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800dde2:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800dde6:	041b      	lsls	r3, r3, #16
 800dde8:	461a      	mov	r2, r3
 800ddea:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 800ddee:	021b      	lsls	r3, r3, #8
 800ddf0:	431a      	orrs	r2, r3
 800ddf2:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 800ddf6:	4313      	orrs	r3, r2
 800ddf8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ddfc:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800de00:	4611      	mov	r1, r2
 800de02:	4618      	mov	r0, r3
 800de04:	f7ff fb12 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800de08:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800de0a:	4619      	mov	r1, r3
 800de0c:	4620      	mov	r0, r4
 800de0e:	f7ff fde9 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800de12:	697a      	ldr	r2, [r7, #20]
 800de14:	697b      	ldr	r3, [r7, #20]
 800de16:	3340      	adds	r3, #64	; 0x40
 800de18:	4619      	mov	r1, r3
 800de1a:	4610      	mov	r0, r2
 800de1c:	f7ff fd58 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
 800de20:	697b      	ldr	r3, [r7, #20]
 800de22:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800de26:	23f0      	movs	r3, #240	; 0xf0
 800de28:	9300      	str	r3, [sp, #0]
 800de2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800de2e:	2200      	movs	r2, #0
 800de30:	2100      	movs	r1, #0
 800de32:	f7ff fbbf 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 98, 255));
 800de36:	697b      	ldr	r3, [r7, #20]
 800de38:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800de3c:	2300      	movs	r3, #0
 800de3e:	f887 305a 	strb.w	r3, [r7, #90]	; 0x5a
 800de42:	2362      	movs	r3, #98	; 0x62
 800de44:	f887 3059 	strb.w	r3, [r7, #89]	; 0x59
 800de48:	23ff      	movs	r3, #255	; 0xff
 800de4a:	f887 3058 	strb.w	r3, [r7, #88]	; 0x58
 800de4e:	f897 305a 	ldrb.w	r3, [r7, #90]	; 0x5a
 800de52:	041b      	lsls	r3, r3, #16
 800de54:	461a      	mov	r2, r3
 800de56:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 800de5a:	021b      	lsls	r3, r3, #8
 800de5c:	431a      	orrs	r2, r3
 800de5e:	f897 3058 	ldrb.w	r3, [r7, #88]	; 0x58
 800de62:	4313      	orrs	r3, r2
 800de64:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de68:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800de6c:	4611      	mov	r1, r2
 800de6e:	4618      	mov	r0, r3
 800de70:	f7ff fadc 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800de74:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800de76:	4619      	mov	r1, r3
 800de78:	4620      	mov	r0, r4
 800de7a:	f7ff fdb3 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(MAIN_BACKGROUND);
 800de7e:	697a      	ldr	r2, [r7, #20]
 800de80:	697b      	ldr	r3, [r7, #20]
 800de82:	336c      	adds	r3, #108	; 0x6c
 800de84:	4619      	mov	r1, r3
 800de86:	4610      	mov	r0, r2
 800de88:	f7ff fd22 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_back.setXY(46, 158);
 800de8c:	697b      	ldr	r3, [r7, #20]
 800de8e:	3398      	adds	r3, #152	; 0x98
 800de90:	229e      	movs	r2, #158	; 0x9e
 800de92:	212e      	movs	r1, #46	; 0x2e
 800de94:	4618      	mov	r0, r3
 800de96:	f7ff fbcc 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_NORMAL_ID));
 800de9a:	697b      	ldr	r3, [r7, #20]
 800de9c:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800dea0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800dea4:	2102      	movs	r1, #2
 800dea6:	4618      	mov	r0, r3
 800dea8:	f7ff fb06 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800deac:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800deb0:	2102      	movs	r1, #2
 800deb2:	4618      	mov	r0, r3
 800deb4:	f7ff fb00 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800deb8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800debc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800dec0:	4619      	mov	r1, r3
 800dec2:	4620      	mov	r0, r4
 800dec4:	f005 fd80 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_back.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QX0V));
 800dec8:	697b      	ldr	r3, [r7, #20]
 800deca:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800dece:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ded2:	2100      	movs	r1, #0
 800ded4:	4618      	mov	r0, r3
 800ded6:	f7ff fd93 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800deda:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800dede:	4619      	mov	r1, r3
 800dee0:	4620      	mov	r0, r4
 800dee2:	f7ff fde3 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800dee6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800deea:	4618      	mov	r0, r3
 800deec:	f7fd ffe6 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_back.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800def0:	697b      	ldr	r3, [r7, #20]
 800def2:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800def6:	23ff      	movs	r3, #255	; 0xff
 800def8:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
 800defc:	23ff      	movs	r3, #255	; 0xff
 800defe:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 800df02:	23ff      	movs	r3, #255	; 0xff
 800df04:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
 800df08:	f897 305d 	ldrb.w	r3, [r7, #93]	; 0x5d
 800df0c:	041b      	lsls	r3, r3, #16
 800df0e:	461a      	mov	r2, r3
 800df10:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 800df14:	021b      	lsls	r3, r3, #8
 800df16:	431a      	orrs	r2, r3
 800df18:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800df1c:	4313      	orrs	r3, r2
 800df1e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800df22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800df26:	4611      	mov	r1, r2
 800df28:	4618      	mov	r0, r3
 800df2a:	f7ff fa7f 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800df2e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800df30:	4619      	mov	r1, r3
 800df32:	4620      	mov	r0, r4
 800df34:	f7ff fdcc 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_back.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800df38:	697b      	ldr	r3, [r7, #20]
 800df3a:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800df3e:	23ff      	movs	r3, #255	; 0xff
 800df40:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 800df44:	23ff      	movs	r3, #255	; 0xff
 800df46:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 800df4a:	23ff      	movs	r3, #255	; 0xff
 800df4c:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 800df50:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 800df54:	041b      	lsls	r3, r3, #16
 800df56:	461a      	mov	r2, r3
 800df58:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800df5c:	021b      	lsls	r3, r3, #8
 800df5e:	431a      	orrs	r2, r3
 800df60:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 800df64:	4313      	orrs	r3, r2
 800df66:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800df6a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800df6e:	4611      	mov	r1, r2
 800df70:	4618      	mov	r0, r3
 800df72:	f7ff fa5b 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800df76:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800df78:	4619      	mov	r1, r3
 800df7a:	4620      	mov	r0, r4
 800df7c:	f7ff fdb6 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    btn_back.setAction(buttonCallback);
 800df80:	697b      	ldr	r3, [r7, #20]
 800df82:	f103 0298 	add.w	r2, r3, #152	; 0x98
 800df86:	697b      	ldr	r3, [r7, #20]
 800df88:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800df8c:	4619      	mov	r1, r3
 800df8e:	4610      	mov	r0, r2
 800df90:	f7ff fd4c 	bl	800da2c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(btn_back);
 800df94:	697a      	ldr	r2, [r7, #20]
 800df96:	697b      	ldr	r3, [r7, #20]
 800df98:	3398      	adds	r3, #152	; 0x98
 800df9a:	4619      	mov	r1, r3
 800df9c:	4610      	mov	r0, r2
 800df9e:	f7ff fc97 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    debug_top_text.setXY(89, 9);
 800dfa2:	697b      	ldr	r3, [r7, #20]
 800dfa4:	33e0      	adds	r3, #224	; 0xe0
 800dfa6:	2209      	movs	r2, #9
 800dfa8:	2159      	movs	r1, #89	; 0x59
 800dfaa:	4618      	mov	r0, r3
 800dfac:	f7ff fb41 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    debug_top_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800dfb0:	697b      	ldr	r3, [r7, #20]
 800dfb2:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800dfb6:	23ff      	movs	r3, #255	; 0xff
 800dfb8:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800dfbc:	23ff      	movs	r3, #255	; 0xff
 800dfbe:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800dfc2:	23ff      	movs	r3, #255	; 0xff
 800dfc4:	f887 3061 	strb.w	r3, [r7, #97]	; 0x61
 800dfc8:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800dfcc:	041b      	lsls	r3, r3, #16
 800dfce:	461a      	mov	r2, r3
 800dfd0:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800dfd4:	021b      	lsls	r3, r3, #8
 800dfd6:	431a      	orrs	r2, r3
 800dfd8:	f897 3061 	ldrb.w	r3, [r7, #97]	; 0x61
 800dfdc:	4313      	orrs	r3, r2
 800dfde:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dfe2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dfe6:	4611      	mov	r1, r2
 800dfe8:	4618      	mov	r0, r3
 800dfea:	f7ff fa1f 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800dfee:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800dff0:	667c      	str	r4, [r7, #100]	; 0x64
 800dff2:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800dff4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800dff6:	69fa      	ldr	r2, [r7, #28]
 800dff8:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800dffa:	bf00      	nop
    debug_top_text.setLinespacing(0);
 800dffc:	697b      	ldr	r3, [r7, #20]
 800dffe:	33e0      	adds	r3, #224	; 0xe0
 800e000:	66fb      	str	r3, [r7, #108]	; 0x6c
 800e002:	2300      	movs	r3, #0
 800e004:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
        linespace = space;
 800e008:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e00a:	f8b7 206a 	ldrh.w	r2, [r7, #106]	; 0x6a
 800e00e:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e010:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e012:	681b      	ldr	r3, [r3, #0]
 800e014:	3384      	adds	r3, #132	; 0x84
 800e016:	681b      	ldr	r3, [r3, #0]
 800e018:	6efc      	ldr	r4, [r7, #108]	; 0x6c
 800e01a:	463a      	mov	r2, r7
 800e01c:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800e01e:	4610      	mov	r0, r2
 800e020:	4798      	blx	r3
 800e022:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e026:	463a      	mov	r2, r7
 800e028:	ca07      	ldmia	r2, {r0, r1, r2}
 800e02a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e02e:	bf00      	nop
    debug_top_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AS0H));
 800e030:	697b      	ldr	r3, [r7, #20]
 800e032:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800e036:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800e03a:	2101      	movs	r1, #1
 800e03c:	4618      	mov	r0, r3
 800e03e:	f7ff fcdf 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800e042:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800e046:	4619      	mov	r1, r3
 800e048:	4620      	mov	r0, r4
 800e04a:	f005 fc6b 	bl	8013924 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e04e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800e052:	4618      	mov	r0, r3
 800e054:	f7fd ff32 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    add(debug_top_text);
 800e058:	697a      	ldr	r2, [r7, #20]
 800e05a:	697b      	ldr	r3, [r7, #20]
 800e05c:	33e0      	adds	r3, #224	; 0xe0
 800e05e:	4619      	mov	r1, r3
 800e060:	4610      	mov	r0, r2
 800e062:	f7ff fc35 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e066:	697b      	ldr	r3, [r7, #20]
 800e068:	4618      	mov	r0, r3
 800e06a:	3774      	adds	r7, #116	; 0x74
 800e06c:	46bd      	mov	sp, r7
 800e06e:	bd90      	pop	{r4, r7, pc}
 800e070:	08027e80 	.word	0x08027e80
 800e074:	0800e107 	.word	0x0800e107

0800e078 <_ZN19screen_infoViewBaseD1Ev>:

screen_infoViewBase::~screen_infoViewBase()
 800e078:	b580      	push	{r7, lr}
 800e07a:	b082      	sub	sp, #8
 800e07c:	af00      	add	r7, sp, #0
 800e07e:	6078      	str	r0, [r7, #4]
 800e080:	4a12      	ldr	r2, [pc, #72]	; (800e0cc <_ZN19screen_infoViewBaseD1Ev+0x54>)
 800e082:	687b      	ldr	r3, [r7, #4]
 800e084:	601a      	str	r2, [r3, #0]
 800e086:	687b      	ldr	r3, [r7, #4]
 800e088:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e08c:	4618      	mov	r0, r3
 800e08e:	f000 f8b5 	bl	800e1fc <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e092:	687b      	ldr	r3, [r7, #4]
 800e094:	33e0      	adds	r3, #224	; 0xe0
 800e096:	4618      	mov	r0, r3
 800e098:	f000 f960 	bl	800e35c <_ZN8touchgfx8TextAreaD1Ev>
 800e09c:	687b      	ldr	r3, [r7, #4]
 800e09e:	3398      	adds	r3, #152	; 0x98
 800e0a0:	4618      	mov	r0, r3
 800e0a2:	f000 f933 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800e0a6:	687b      	ldr	r3, [r7, #4]
 800e0a8:	336c      	adds	r3, #108	; 0x6c
 800e0aa:	4618      	mov	r0, r3
 800e0ac:	f000 f8ea 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800e0b0:	687b      	ldr	r3, [r7, #4]
 800e0b2:	3340      	adds	r3, #64	; 0x40
 800e0b4:	4618      	mov	r0, r3
 800e0b6:	f000 f8e5 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800e0ba:	687b      	ldr	r3, [r7, #4]
 800e0bc:	4618      	mov	r0, r3
 800e0be:	f7ff fe2b 	bl	800dd18 <_ZN8touchgfx4ViewI20screen_infoPresenterED1Ev>
{

}
 800e0c2:	687b      	ldr	r3, [r7, #4]
 800e0c4:	4618      	mov	r0, r3
 800e0c6:	3708      	adds	r7, #8
 800e0c8:	46bd      	mov	sp, r7
 800e0ca:	bd80      	pop	{r7, pc}
 800e0cc:	08027e80 	.word	0x08027e80

0800e0d0 <_ZN19screen_infoViewBaseD0Ev>:
screen_infoViewBase::~screen_infoViewBase()
 800e0d0:	b580      	push	{r7, lr}
 800e0d2:	b082      	sub	sp, #8
 800e0d4:	af00      	add	r7, sp, #0
 800e0d6:	6078      	str	r0, [r7, #4]
}
 800e0d8:	6878      	ldr	r0, [r7, #4]
 800e0da:	f7ff ffcd 	bl	800e078 <_ZN19screen_infoViewBaseD1Ev>
 800e0de:	f44f 719c 	mov.w	r1, #312	; 0x138
 800e0e2:	6878      	ldr	r0, [r7, #4]
 800e0e4:	f017 fbf7 	bl	80258d6 <_ZdlPvj>
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	4618      	mov	r0, r3
 800e0ec:	3708      	adds	r7, #8
 800e0ee:	46bd      	mov	sp, r7
 800e0f0:	bd80      	pop	{r7, pc}

0800e0f2 <_ZN19screen_infoViewBase11setupScreenEv>:

void screen_infoViewBase::setupScreen()
{
 800e0f2:	b480      	push	{r7}
 800e0f4:	b083      	sub	sp, #12
 800e0f6:	af00      	add	r7, sp, #0
 800e0f8:	6078      	str	r0, [r7, #4]

}
 800e0fa:	bf00      	nop
 800e0fc:	370c      	adds	r7, #12
 800e0fe:	46bd      	mov	sp, r7
 800e100:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e104:	4770      	bx	lr

0800e106 <_ZN19screen_infoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_infoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800e106:	b580      	push	{r7, lr}
 800e108:	b082      	sub	sp, #8
 800e10a:	af00      	add	r7, sp, #0
 800e10c:	6078      	str	r0, [r7, #4]
 800e10e:	6039      	str	r1, [r7, #0]
    if (&src == &btn_back)
 800e110:	687b      	ldr	r3, [r7, #4]
 800e112:	3398      	adds	r3, #152	; 0x98
 800e114:	683a      	ldr	r2, [r7, #0]
 800e116:	429a      	cmp	r2, r3
 800e118:	d106      	bne.n	800e128 <_ZN19screen_infoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //back_to_settings
        //When btn_back clicked change screen to screen_settings
        //Go to screen_settings with no screen transition
        application().gotoscreen_settingsScreenNoTransition();
 800e11a:	6878      	ldr	r0, [r7, #4]
 800e11c:	f7ff fdf0 	bl	800dd00 <_ZN19screen_infoViewBase11applicationEv>
 800e120:	4603      	mov	r3, r0
 800e122:	4618      	mov	r0, r3
 800e124:	f7fe fbcc 	bl	800c8c0 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv>
    }
}
 800e128:	bf00      	nop
 800e12a:	3708      	adds	r7, #8
 800e12c:	46bd      	mov	sp, r7
 800e12e:	bd80      	pop	{r7, pc}

0800e130 <_ZN8touchgfx4ViewI20screen_infoPresenterEC1Ev>:
    View()
 800e130:	b580      	push	{r7, lr}
 800e132:	b082      	sub	sp, #8
 800e134:	af00      	add	r7, sp, #0
 800e136:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e138:	687b      	ldr	r3, [r7, #4]
 800e13a:	4618      	mov	r0, r3
 800e13c:	f008 fdc0 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 800e140:	4a05      	ldr	r2, [pc, #20]	; (800e158 <_ZN8touchgfx4ViewI20screen_infoPresenterEC1Ev+0x28>)
 800e142:	687b      	ldr	r3, [r7, #4]
 800e144:	601a      	str	r2, [r3, #0]
 800e146:	687b      	ldr	r3, [r7, #4]
 800e148:	2200      	movs	r2, #0
 800e14a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800e14c:	687b      	ldr	r3, [r7, #4]
 800e14e:	4618      	mov	r0, r3
 800e150:	3708      	adds	r7, #8
 800e152:	46bd      	mov	sp, r7
 800e154:	bd80      	pop	{r7, pc}
 800e156:	bf00      	nop
 800e158:	08027ecc 	.word	0x08027ecc

0800e15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800e15c:	b480      	push	{r7}
 800e15e:	b083      	sub	sp, #12
 800e160:	af00      	add	r7, sp, #0
 800e162:	6078      	str	r0, [r7, #4]
 800e164:	4a04      	ldr	r2, [pc, #16]	; (800e178 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800e166:	687b      	ldr	r3, [r7, #4]
 800e168:	601a      	str	r2, [r3, #0]
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	370c      	adds	r7, #12
 800e170:	46bd      	mov	sp, r7
 800e172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e176:	4770      	bx	lr
 800e178:	08027f00 	.word	0x08027f00

0800e17c <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800e17c:	b580      	push	{r7, lr}
 800e17e:	b084      	sub	sp, #16
 800e180:	af00      	add	r7, sp, #0
 800e182:	60f8      	str	r0, [r7, #12]
 800e184:	60b9      	str	r1, [r7, #8]
 800e186:	4639      	mov	r1, r7
 800e188:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800e18c:	68fb      	ldr	r3, [r7, #12]
 800e18e:	4618      	mov	r0, r3
 800e190:	f7ff ffe4 	bl	800e15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800e194:	4a08      	ldr	r2, [pc, #32]	; (800e1b8 <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800e196:	68fb      	ldr	r3, [r7, #12]
 800e198:	601a      	str	r2, [r3, #0]
 800e19a:	68fb      	ldr	r3, [r7, #12]
 800e19c:	68ba      	ldr	r2, [r7, #8]
 800e19e:	605a      	str	r2, [r3, #4]
 800e1a0:	68fb      	ldr	r3, [r7, #12]
 800e1a2:	3308      	adds	r3, #8
 800e1a4:	463a      	mov	r2, r7
 800e1a6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e1aa:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800e1ae:	68fb      	ldr	r3, [r7, #12]
 800e1b0:	4618      	mov	r0, r3
 800e1b2:	3710      	adds	r7, #16
 800e1b4:	46bd      	mov	sp, r7
 800e1b6:	bd80      	pop	{r7, pc}
 800e1b8:	08027eb4 	.word	0x08027eb4

0800e1bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800e1bc:	b480      	push	{r7}
 800e1be:	b083      	sub	sp, #12
 800e1c0:	af00      	add	r7, sp, #0
 800e1c2:	6078      	str	r0, [r7, #4]
    }
 800e1c4:	4a04      	ldr	r2, [pc, #16]	; (800e1d8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800e1c6:	687b      	ldr	r3, [r7, #4]
 800e1c8:	601a      	str	r2, [r3, #0]
 800e1ca:	687b      	ldr	r3, [r7, #4]
 800e1cc:	4618      	mov	r0, r3
 800e1ce:	370c      	adds	r7, #12
 800e1d0:	46bd      	mov	sp, r7
 800e1d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1d6:	4770      	bx	lr
 800e1d8:	08027f00 	.word	0x08027f00

0800e1dc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800e1dc:	b580      	push	{r7, lr}
 800e1de:	b082      	sub	sp, #8
 800e1e0:	af00      	add	r7, sp, #0
 800e1e2:	6078      	str	r0, [r7, #4]
    }
 800e1e4:	6878      	ldr	r0, [r7, #4]
 800e1e6:	f7ff ffe9 	bl	800e1bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e1ea:	2104      	movs	r1, #4
 800e1ec:	6878      	ldr	r0, [r7, #4]
 800e1ee:	f017 fb72 	bl	80258d6 <_ZdlPvj>
 800e1f2:	687b      	ldr	r3, [r7, #4]
 800e1f4:	4618      	mov	r0, r3
 800e1f6:	3708      	adds	r7, #8
 800e1f8:	46bd      	mov	sp, r7
 800e1fa:	bd80      	pop	{r7, pc}

0800e1fc <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e1fc:	b580      	push	{r7, lr}
 800e1fe:	b082      	sub	sp, #8
 800e200:	af00      	add	r7, sp, #0
 800e202:	6078      	str	r0, [r7, #4]
 800e204:	4a05      	ldr	r2, [pc, #20]	; (800e21c <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800e206:	687b      	ldr	r3, [r7, #4]
 800e208:	601a      	str	r2, [r3, #0]
 800e20a:	687b      	ldr	r3, [r7, #4]
 800e20c:	4618      	mov	r0, r3
 800e20e:	f7ff ffd5 	bl	800e1bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e212:	687b      	ldr	r3, [r7, #4]
 800e214:	4618      	mov	r0, r3
 800e216:	3708      	adds	r7, #8
 800e218:	46bd      	mov	sp, r7
 800e21a:	bd80      	pop	{r7, pc}
 800e21c:	08027eb4 	.word	0x08027eb4

0800e220 <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800e220:	b580      	push	{r7, lr}
 800e222:	b082      	sub	sp, #8
 800e224:	af00      	add	r7, sp, #0
 800e226:	6078      	str	r0, [r7, #4]
 800e228:	6878      	ldr	r0, [r7, #4]
 800e22a:	f7ff ffe7 	bl	800e1fc <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e22e:	2110      	movs	r1, #16
 800e230:	6878      	ldr	r0, [r7, #4]
 800e232:	f017 fb50 	bl	80258d6 <_ZdlPvj>
 800e236:	687b      	ldr	r3, [r7, #4]
 800e238:	4618      	mov	r0, r3
 800e23a:	3708      	adds	r7, #8
 800e23c:	46bd      	mov	sp, r7
 800e23e:	bd80      	pop	{r7, pc}

0800e240 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800e240:	b580      	push	{r7, lr}
 800e242:	b082      	sub	sp, #8
 800e244:	af00      	add	r7, sp, #0
 800e246:	6078      	str	r0, [r7, #4]
 800e248:	4a05      	ldr	r2, [pc, #20]	; (800e260 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800e24a:	687b      	ldr	r3, [r7, #4]
 800e24c:	601a      	str	r2, [r3, #0]
 800e24e:	687b      	ldr	r3, [r7, #4]
 800e250:	4618      	mov	r0, r3
 800e252:	f7ff f971 	bl	800d538 <_ZN8touchgfx8DrawableD1Ev>
 800e256:	687b      	ldr	r3, [r7, #4]
 800e258:	4618      	mov	r0, r3
 800e25a:	3708      	adds	r7, #8
 800e25c:	46bd      	mov	sp, r7
 800e25e:	bd80      	pop	{r7, pc}
 800e260:	08028670 	.word	0x08028670

0800e264 <_ZN8touchgfx9ContainerD0Ev>:
 800e264:	b580      	push	{r7, lr}
 800e266:	b082      	sub	sp, #8
 800e268:	af00      	add	r7, sp, #0
 800e26a:	6078      	str	r0, [r7, #4]
 800e26c:	6878      	ldr	r0, [r7, #4]
 800e26e:	f7ff ffe7 	bl	800e240 <_ZN8touchgfx9ContainerD1Ev>
 800e272:	212c      	movs	r1, #44	; 0x2c
 800e274:	6878      	ldr	r0, [r7, #4]
 800e276:	f017 fb2e 	bl	80258d6 <_ZdlPvj>
 800e27a:	687b      	ldr	r3, [r7, #4]
 800e27c:	4618      	mov	r0, r3
 800e27e:	3708      	adds	r7, #8
 800e280:	46bd      	mov	sp, r7
 800e282:	bd80      	pop	{r7, pc}

0800e284 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800e284:	b580      	push	{r7, lr}
 800e286:	b082      	sub	sp, #8
 800e288:	af00      	add	r7, sp, #0
 800e28a:	6078      	str	r0, [r7, #4]
 800e28c:	4a05      	ldr	r2, [pc, #20]	; (800e2a4 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800e28e:	687b      	ldr	r3, [r7, #4]
 800e290:	601a      	str	r2, [r3, #0]
 800e292:	687b      	ldr	r3, [r7, #4]
 800e294:	4618      	mov	r0, r3
 800e296:	f7ff fb5f 	bl	800d958 <_ZN8touchgfx6WidgetD1Ev>
 800e29a:	687b      	ldr	r3, [r7, #4]
 800e29c:	4618      	mov	r0, r3
 800e29e:	3708      	adds	r7, #8
 800e2a0:	46bd      	mov	sp, r7
 800e2a2:	bd80      	pop	{r7, pc}
 800e2a4:	08028958 	.word	0x08028958

0800e2a8 <_ZN8touchgfx3BoxD0Ev>:
 800e2a8:	b580      	push	{r7, lr}
 800e2aa:	b082      	sub	sp, #8
 800e2ac:	af00      	add	r7, sp, #0
 800e2ae:	6078      	str	r0, [r7, #4]
 800e2b0:	6878      	ldr	r0, [r7, #4]
 800e2b2:	f7ff ffe7 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800e2b6:	212c      	movs	r1, #44	; 0x2c
 800e2b8:	6878      	ldr	r0, [r7, #4]
 800e2ba:	f017 fb0c 	bl	80258d6 <_ZdlPvj>
 800e2be:	687b      	ldr	r3, [r7, #4]
 800e2c0:	4618      	mov	r0, r3
 800e2c2:	3708      	adds	r7, #8
 800e2c4:	46bd      	mov	sp, r7
 800e2c6:	bd80      	pop	{r7, pc}

0800e2c8 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800e2c8:	b580      	push	{r7, lr}
 800e2ca:	b082      	sub	sp, #8
 800e2cc:	af00      	add	r7, sp, #0
 800e2ce:	6078      	str	r0, [r7, #4]
 800e2d0:	4a05      	ldr	r2, [pc, #20]	; (800e2e8 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800e2d2:	687b      	ldr	r3, [r7, #4]
 800e2d4:	601a      	str	r2, [r3, #0]
 800e2d6:	687b      	ldr	r3, [r7, #4]
 800e2d8:	4618      	mov	r0, r3
 800e2da:	f7ff fbb5 	bl	800da48 <_ZN8touchgfx14AbstractButtonD1Ev>
 800e2de:	687b      	ldr	r3, [r7, #4]
 800e2e0:	4618      	mov	r0, r3
 800e2e2:	3708      	adds	r7, #8
 800e2e4:	46bd      	mov	sp, r7
 800e2e6:	bd80      	pop	{r7, pc}
 800e2e8:	080289c0 	.word	0x080289c0

0800e2ec <_ZN8touchgfx6ButtonD0Ev>:
 800e2ec:	b580      	push	{r7, lr}
 800e2ee:	b082      	sub	sp, #8
 800e2f0:	af00      	add	r7, sp, #0
 800e2f2:	6078      	str	r0, [r7, #4]
 800e2f4:	6878      	ldr	r0, [r7, #4]
 800e2f6:	f7ff ffe7 	bl	800e2c8 <_ZN8touchgfx6ButtonD1Ev>
 800e2fa:	2134      	movs	r1, #52	; 0x34
 800e2fc:	6878      	ldr	r0, [r7, #4]
 800e2fe:	f017 faea 	bl	80258d6 <_ZdlPvj>
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	4618      	mov	r0, r3
 800e306:	3708      	adds	r7, #8
 800e308:	46bd      	mov	sp, r7
 800e30a:	bd80      	pop	{r7, pc}

0800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
class ButtonWithLabel : public Button
 800e30c:	b580      	push	{r7, lr}
 800e30e:	b082      	sub	sp, #8
 800e310:	af00      	add	r7, sp, #0
 800e312:	6078      	str	r0, [r7, #4]
 800e314:	4a08      	ldr	r2, [pc, #32]	; (800e338 <_ZN8touchgfx15ButtonWithLabelD1Ev+0x2c>)
 800e316:	687b      	ldr	r3, [r7, #4]
 800e318:	601a      	str	r2, [r3, #0]
 800e31a:	687b      	ldr	r3, [r7, #4]
 800e31c:	3334      	adds	r3, #52	; 0x34
 800e31e:	4618      	mov	r0, r3
 800e320:	f7fd fdcc 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
 800e324:	687b      	ldr	r3, [r7, #4]
 800e326:	4618      	mov	r0, r3
 800e328:	f7ff ffce 	bl	800e2c8 <_ZN8touchgfx6ButtonD1Ev>
 800e32c:	687b      	ldr	r3, [r7, #4]
 800e32e:	4618      	mov	r0, r3
 800e330:	3708      	adds	r7, #8
 800e332:	46bd      	mov	sp, r7
 800e334:	bd80      	pop	{r7, pc}
 800e336:	bf00      	nop
 800e338:	08028a34 	.word	0x08028a34

0800e33c <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e33c:	b580      	push	{r7, lr}
 800e33e:	b082      	sub	sp, #8
 800e340:	af00      	add	r7, sp, #0
 800e342:	6078      	str	r0, [r7, #4]
 800e344:	6878      	ldr	r0, [r7, #4]
 800e346:	f7ff ffe1 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800e34a:	2148      	movs	r1, #72	; 0x48
 800e34c:	6878      	ldr	r0, [r7, #4]
 800e34e:	f017 fac2 	bl	80258d6 <_ZdlPvj>
 800e352:	687b      	ldr	r3, [r7, #4]
 800e354:	4618      	mov	r0, r3
 800e356:	3708      	adds	r7, #8
 800e358:	46bd      	mov	sp, r7
 800e35a:	bd80      	pop	{r7, pc}

0800e35c <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800e35c:	b580      	push	{r7, lr}
 800e35e:	b082      	sub	sp, #8
 800e360:	af00      	add	r7, sp, #0
 800e362:	6078      	str	r0, [r7, #4]
 800e364:	4a08      	ldr	r2, [pc, #32]	; (800e388 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800e366:	687b      	ldr	r3, [r7, #4]
 800e368:	601a      	str	r2, [r3, #0]
 800e36a:	687b      	ldr	r3, [r7, #4]
 800e36c:	3328      	adds	r3, #40	; 0x28
 800e36e:	4618      	mov	r0, r3
 800e370:	f7fd fda4 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
 800e374:	687b      	ldr	r3, [r7, #4]
 800e376:	4618      	mov	r0, r3
 800e378:	f7ff faee 	bl	800d958 <_ZN8touchgfx6WidgetD1Ev>
 800e37c:	687b      	ldr	r3, [r7, #4]
 800e37e:	4618      	mov	r0, r3
 800e380:	3708      	adds	r7, #8
 800e382:	46bd      	mov	sp, r7
 800e384:	bd80      	pop	{r7, pc}
 800e386:	bf00      	nop
 800e388:	080288c8 	.word	0x080288c8

0800e38c <_ZN8touchgfx8TextAreaD0Ev>:
 800e38c:	b580      	push	{r7, lr}
 800e38e:	b082      	sub	sp, #8
 800e390:	af00      	add	r7, sp, #0
 800e392:	6078      	str	r0, [r7, #4]
 800e394:	6878      	ldr	r0, [r7, #4]
 800e396:	f7ff ffe1 	bl	800e35c <_ZN8touchgfx8TextAreaD1Ev>
 800e39a:	2148      	movs	r1, #72	; 0x48
 800e39c:	6878      	ldr	r0, [r7, #4]
 800e39e:	f017 fa9a 	bl	80258d6 <_ZdlPvj>
 800e3a2:	687b      	ldr	r3, [r7, #4]
 800e3a4:	4618      	mov	r0, r3
 800e3a6:	3708      	adds	r7, #8
 800e3a8:	46bd      	mov	sp, r7
 800e3aa:	bd80      	pop	{r7, pc}

0800e3ac <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800e3ac:	b580      	push	{r7, lr}
 800e3ae:	b082      	sub	sp, #8
 800e3b0:	af00      	add	r7, sp, #0
 800e3b2:	6078      	str	r0, [r7, #4]
 800e3b4:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800e3b6:	687b      	ldr	r3, [r7, #4]
 800e3b8:	685b      	ldr	r3, [r3, #4]
 800e3ba:	687a      	ldr	r2, [r7, #4]
 800e3bc:	68d2      	ldr	r2, [r2, #12]
 800e3be:	1052      	asrs	r2, r2, #1
 800e3c0:	1898      	adds	r0, r3, r2
 800e3c2:	687b      	ldr	r3, [r7, #4]
 800e3c4:	68db      	ldr	r3, [r3, #12]
 800e3c6:	f003 0301 	and.w	r3, r3, #1
 800e3ca:	2b00      	cmp	r3, #0
 800e3cc:	d102      	bne.n	800e3d4 <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800e3ce:	687b      	ldr	r3, [r7, #4]
 800e3d0:	689b      	ldr	r3, [r3, #8]
 800e3d2:	e00a      	b.n	800e3ea <_ZN8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800e3d4:	687b      	ldr	r3, [r7, #4]
 800e3d6:	685b      	ldr	r3, [r3, #4]
 800e3d8:	687a      	ldr	r2, [r7, #4]
 800e3da:	68d2      	ldr	r2, [r2, #12]
 800e3dc:	1052      	asrs	r2, r2, #1
 800e3de:	4413      	add	r3, r2
 800e3e0:	681b      	ldr	r3, [r3, #0]
 800e3e2:	687a      	ldr	r2, [r7, #4]
 800e3e4:	6892      	ldr	r2, [r2, #8]
 800e3e6:	4413      	add	r3, r2
 800e3e8:	681b      	ldr	r3, [r3, #0]
 800e3ea:	6839      	ldr	r1, [r7, #0]
 800e3ec:	4798      	blx	r3
    }
 800e3ee:	bf00      	nop
 800e3f0:	3708      	adds	r7, #8
 800e3f2:	46bd      	mov	sp, r7
 800e3f4:	bd80      	pop	{r7, pc}

0800e3f6 <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800e3f6:	b480      	push	{r7}
 800e3f8:	b083      	sub	sp, #12
 800e3fa:	af00      	add	r7, sp, #0
 800e3fc:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800e3fe:	687b      	ldr	r3, [r7, #4]
 800e400:	685b      	ldr	r3, [r3, #4]
 800e402:	2b00      	cmp	r3, #0
 800e404:	d010      	beq.n	800e428 <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	689b      	ldr	r3, [r3, #8]
 800e40a:	2b00      	cmp	r3, #0
 800e40c:	d107      	bne.n	800e41e <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800e40e:	687b      	ldr	r3, [r7, #4]
 800e410:	68db      	ldr	r3, [r3, #12]
 800e412:	f003 0301 	and.w	r3, r3, #1
 800e416:	2b00      	cmp	r3, #0
 800e418:	d101      	bne.n	800e41e <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800e41a:	2301      	movs	r3, #1
 800e41c:	e000      	b.n	800e420 <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800e41e:	2300      	movs	r3, #0
 800e420:	2b01      	cmp	r3, #1
 800e422:	d001      	beq.n	800e428 <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800e424:	2301      	movs	r3, #1
 800e426:	e000      	b.n	800e42a <_ZNK8touchgfx8CallbackI19screen_infoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800e428:	2300      	movs	r3, #0
    }
 800e42a:	4618      	mov	r0, r3
 800e42c:	370c      	adds	r7, #12
 800e42e:	46bd      	mov	sp, r7
 800e430:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e434:	4770      	bx	lr

0800e436 <_ZN24screen_perf_modeViewBase11applicationEv>:
    screen_perf_modeViewBase();
    virtual ~screen_perf_modeViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800e436:	b580      	push	{r7, lr}
 800e438:	b082      	sub	sp, #8
 800e43a:	af00      	add	r7, sp, #0
 800e43c:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800e43e:	f007 f927 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800e442:	4603      	mov	r3, r0
    }
 800e444:	4618      	mov	r0, r3
 800e446:	3708      	adds	r7, #8
 800e448:	46bd      	mov	sp, r7
 800e44a:	bd80      	pop	{r7, pc}

0800e44c <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>:
class View : public Screen
 800e44c:	b580      	push	{r7, lr}
 800e44e:	b082      	sub	sp, #8
 800e450:	af00      	add	r7, sp, #0
 800e452:	6078      	str	r0, [r7, #4]
 800e454:	4a05      	ldr	r2, [pc, #20]	; (800e46c <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev+0x20>)
 800e456:	687b      	ldr	r3, [r7, #4]
 800e458:	601a      	str	r2, [r3, #0]
 800e45a:	687b      	ldr	r3, [r7, #4]
 800e45c:	4618      	mov	r0, r3
 800e45e:	f7ff f9df 	bl	800d820 <_ZN8touchgfx6ScreenD1Ev>
 800e462:	687b      	ldr	r3, [r7, #4]
 800e464:	4618      	mov	r0, r3
 800e466:	3708      	adds	r7, #8
 800e468:	46bd      	mov	sp, r7
 800e46a:	bd80      	pop	{r7, pc}
 800e46c:	08027fcc 	.word	0x08027fcc

0800e470 <_ZN8touchgfx4ViewI25screen_perf_modePresenterED0Ev>:
 800e470:	b580      	push	{r7, lr}
 800e472:	b082      	sub	sp, #8
 800e474:	af00      	add	r7, sp, #0
 800e476:	6078      	str	r0, [r7, #4]
 800e478:	6878      	ldr	r0, [r7, #4]
 800e47a:	f7ff ffe7 	bl	800e44c <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>
 800e47e:	2140      	movs	r1, #64	; 0x40
 800e480:	6878      	ldr	r0, [r7, #4]
 800e482:	f017 fa28 	bl	80258d6 <_ZdlPvj>
 800e486:	687b      	ldr	r3, [r7, #4]
 800e488:	4618      	mov	r0, r3
 800e48a:	3708      	adds	r7, #8
 800e48c:	46bd      	mov	sp, r7
 800e48e:	bd80      	pop	{r7, pc}

0800e490 <_ZN24screen_perf_modeViewBaseC1Ev>:
#include <gui_generated/screen_perf_mode_screen/screen_perf_modeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

screen_perf_modeViewBase::screen_perf_modeViewBase() :
 800e490:	b590      	push	{r4, r7, lr}
 800e492:	b0a7      	sub	sp, #156	; 0x9c
 800e494:	af02      	add	r7, sp, #8
 800e496:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &screen_perf_modeViewBase::buttonCallbackHandler)
 800e498:	697b      	ldr	r3, [r7, #20]
 800e49a:	4618      	mov	r0, r3
 800e49c:	f000 fa5c 	bl	800e958 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev>
 800e4a0:	4adb      	ldr	r2, [pc, #876]	; (800e810 <_ZN24screen_perf_modeViewBaseC1Ev+0x380>)
 800e4a2:	697b      	ldr	r3, [r7, #20]
 800e4a4:	601a      	str	r2, [r3, #0]
 800e4a6:	697b      	ldr	r3, [r7, #20]
 800e4a8:	3340      	adds	r3, #64	; 0x40
 800e4aa:	4618      	mov	r0, r3
 800e4ac:	f7ff fa76 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800e4b0:	697b      	ldr	r3, [r7, #20]
 800e4b2:	336c      	adds	r3, #108	; 0x6c
 800e4b4:	4618      	mov	r0, r3
 800e4b6:	f7ff fa71 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800e4ba:	697b      	ldr	r3, [r7, #20]
 800e4bc:	3398      	adds	r3, #152	; 0x98
 800e4be:	4618      	mov	r0, r3
 800e4c0:	f7ff fbca 	bl	800dc58 <_ZN8touchgfx8TextAreaC1Ev>
 800e4c4:	697b      	ldr	r3, [r7, #20]
 800e4c6:	33e0      	adds	r3, #224	; 0xe0
 800e4c8:	4618      	mov	r0, r3
 800e4ca:	f7ff fbc5 	bl	800dc58 <_ZN8touchgfx8TextAreaC1Ev>
 800e4ce:	697b      	ldr	r3, [r7, #20]
 800e4d0:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e4d4:	4618      	mov	r0, r3
 800e4d6:	f005 fbe7 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800e4da:	697b      	ldr	r3, [r7, #20]
 800e4dc:	f503 70b8 	add.w	r0, r3, #368	; 0x170
 800e4e0:	4bcc      	ldr	r3, [pc, #816]	; (800e814 <_ZN24screen_perf_modeViewBaseC1Ev+0x384>)
 800e4e2:	623b      	str	r3, [r7, #32]
 800e4e4:	2300      	movs	r3, #0
 800e4e6:	627b      	str	r3, [r7, #36]	; 0x24
 800e4e8:	f107 0320 	add.w	r3, r7, #32
 800e4ec:	cb0c      	ldmia	r3, {r2, r3}
 800e4ee:	6979      	ldr	r1, [r7, #20]
 800e4f0:	f000 fa48 	bl	800e984 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800e4f4:	697b      	ldr	r3, [r7, #20]
 800e4f6:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800e4fa:	23f0      	movs	r3, #240	; 0xf0
 800e4fc:	9300      	str	r3, [sp, #0]
 800e4fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800e502:	2200      	movs	r2, #0
 800e504:	2100      	movs	r1, #0
 800e506:	f7ff f855 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e50a:	697b      	ldr	r3, [r7, #20]
 800e50c:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800e510:	2300      	movs	r3, #0
 800e512:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800e516:	2300      	movs	r3, #0
 800e518:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800e51c:	2300      	movs	r3, #0
 800e51e:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800e522:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800e526:	041b      	lsls	r3, r3, #16
 800e528:	461a      	mov	r2, r3
 800e52a:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800e52e:	021b      	lsls	r3, r3, #8
 800e530:	431a      	orrs	r2, r3
 800e532:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800e536:	4313      	orrs	r3, r2
 800e538:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e53c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800e540:	4611      	mov	r1, r2
 800e542:	4618      	mov	r0, r3
 800e544:	f7fe ff72 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e548:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800e54a:	4619      	mov	r1, r3
 800e54c:	4620      	mov	r0, r4
 800e54e:	f7ff fa49 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800e552:	697a      	ldr	r2, [r7, #20]
 800e554:	697b      	ldr	r3, [r7, #20]
 800e556:	3340      	adds	r3, #64	; 0x40
 800e558:	4619      	mov	r1, r3
 800e55a:	4610      	mov	r0, r2
 800e55c:	f7ff f9b8 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
 800e560:	697b      	ldr	r3, [r7, #20]
 800e562:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800e566:	23f0      	movs	r3, #240	; 0xf0
 800e568:	9300      	str	r3, [sp, #0]
 800e56a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800e56e:	2200      	movs	r2, #0
 800e570:	2100      	movs	r1, #0
 800e572:	f7ff f81f 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 98, 255));
 800e576:	697b      	ldr	r3, [r7, #20]
 800e578:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800e57c:	2300      	movs	r3, #0
 800e57e:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 800e582:	2362      	movs	r3, #98	; 0x62
 800e584:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800e588:	23ff      	movs	r3, #255	; 0xff
 800e58a:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800e58e:	f897 3068 	ldrb.w	r3, [r7, #104]	; 0x68
 800e592:	041b      	lsls	r3, r3, #16
 800e594:	461a      	mov	r2, r3
 800e596:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800e59a:	021b      	lsls	r3, r3, #8
 800e59c:	431a      	orrs	r2, r3
 800e59e:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800e5a2:	4313      	orrs	r3, r2
 800e5a4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e5a8:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e5ac:	4611      	mov	r1, r2
 800e5ae:	4618      	mov	r0, r3
 800e5b0:	f7fe ff3c 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e5b4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e5b6:	4619      	mov	r1, r3
 800e5b8:	4620      	mov	r0, r4
 800e5ba:	f7ff fa13 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(MAIN_BACKGROUND);
 800e5be:	697a      	ldr	r2, [r7, #20]
 800e5c0:	697b      	ldr	r3, [r7, #20]
 800e5c2:	336c      	adds	r3, #108	; 0x6c
 800e5c4:	4619      	mov	r1, r3
 800e5c6:	4610      	mov	r0, r2
 800e5c8:	f7ff f982 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text_preset_num_main.setXY(30, 19);
 800e5cc:	697b      	ldr	r3, [r7, #20]
 800e5ce:	3398      	adds	r3, #152	; 0x98
 800e5d0:	2213      	movs	r2, #19
 800e5d2:	211e      	movs	r1, #30
 800e5d4:	4618      	mov	r0, r3
 800e5d6:	f7ff f82c 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    text_preset_num_main.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e5da:	697b      	ldr	r3, [r7, #20]
 800e5dc:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800e5e0:	23ff      	movs	r3, #255	; 0xff
 800e5e2:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
 800e5e6:	23ff      	movs	r3, #255	; 0xff
 800e5e8:	f887 306a 	strb.w	r3, [r7, #106]	; 0x6a
 800e5ec:	23ff      	movs	r3, #255	; 0xff
 800e5ee:	f887 3069 	strb.w	r3, [r7, #105]	; 0x69
 800e5f2:	f897 306b 	ldrb.w	r3, [r7, #107]	; 0x6b
 800e5f6:	041b      	lsls	r3, r3, #16
 800e5f8:	461a      	mov	r2, r3
 800e5fa:	f897 306a 	ldrb.w	r3, [r7, #106]	; 0x6a
 800e5fe:	021b      	lsls	r3, r3, #8
 800e600:	431a      	orrs	r2, r3
 800e602:	f897 3069 	ldrb.w	r3, [r7, #105]	; 0x69
 800e606:	4313      	orrs	r3, r2
 800e608:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e60c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800e610:	4611      	mov	r1, r2
 800e612:	4618      	mov	r0, r3
 800e614:	f7fe ff0a 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e618:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e61a:	66fc      	str	r4, [r7, #108]	; 0x6c
 800e61c:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800e61e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e620:	69fa      	ldr	r2, [r7, #28]
 800e622:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e624:	bf00      	nop
    text_preset_num_main.setLinespacing(0);
 800e626:	697b      	ldr	r3, [r7, #20]
 800e628:	3398      	adds	r3, #152	; 0x98
 800e62a:	677b      	str	r3, [r7, #116]	; 0x74
 800e62c:	2300      	movs	r3, #0
 800e62e:	f8a7 3072 	strh.w	r3, [r7, #114]	; 0x72
        linespace = space;
 800e632:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e634:	f8b7 2072 	ldrh.w	r2, [r7, #114]	; 0x72
 800e638:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e63a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e63c:	681b      	ldr	r3, [r3, #0]
 800e63e:	3384      	adds	r3, #132	; 0x84
 800e640:	681b      	ldr	r3, [r3, #0]
 800e642:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 800e644:	463a      	mov	r2, r7
 800e646:	6f79      	ldr	r1, [r7, #116]	; 0x74
 800e648:	4610      	mov	r0, r2
 800e64a:	4798      	blx	r3
 800e64c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e650:	463a      	mov	r2, r7
 800e652:	ca07      	ldmia	r2, {r0, r1, r2}
 800e654:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e658:	bf00      	nop
    text_preset_num_main.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Z2S));
 800e65a:	697b      	ldr	r3, [r7, #20]
 800e65c:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800e660:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e664:	210a      	movs	r1, #10
 800e666:	4618      	mov	r0, r3
 800e668:	f7ff f9ca 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800e66c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e670:	4619      	mov	r1, r3
 800e672:	4620      	mov	r0, r4
 800e674:	f005 f956 	bl	8013924 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e678:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e67c:	4618      	mov	r0, r3
 800e67e:	f7fd fc1d 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    add(text_preset_num_main);
 800e682:	697a      	ldr	r2, [r7, #20]
 800e684:	697b      	ldr	r3, [r7, #20]
 800e686:	3398      	adds	r3, #152	; 0x98
 800e688:	4619      	mov	r1, r3
 800e68a:	4610      	mov	r0, r2
 800e68c:	f7ff f920 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text_preset_num_queue.setXY(174, 19);
 800e690:	697b      	ldr	r3, [r7, #20]
 800e692:	33e0      	adds	r3, #224	; 0xe0
 800e694:	2213      	movs	r2, #19
 800e696:	21ae      	movs	r1, #174	; 0xae
 800e698:	4618      	mov	r0, r3
 800e69a:	f7fe ffca 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    text_preset_num_queue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e69e:	697b      	ldr	r3, [r7, #20]
 800e6a0:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800e6a4:	23ff      	movs	r3, #255	; 0xff
 800e6a6:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800e6aa:	23ff      	movs	r3, #255	; 0xff
 800e6ac:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800e6b0:	23ff      	movs	r3, #255	; 0xff
 800e6b2:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800e6b6:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800e6ba:	041b      	lsls	r3, r3, #16
 800e6bc:	461a      	mov	r2, r3
 800e6be:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800e6c2:	021b      	lsls	r3, r3, #8
 800e6c4:	431a      	orrs	r2, r3
 800e6c6:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800e6ca:	4313      	orrs	r3, r2
 800e6cc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e6d0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e6d4:	4611      	mov	r1, r2
 800e6d6:	4618      	mov	r0, r3
 800e6d8:	f7fe fea8 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e6dc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e6de:	67fc      	str	r4, [r7, #124]	; 0x7c
 800e6e0:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800e6e2:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800e6e4:	69ba      	ldr	r2, [r7, #24]
 800e6e6:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e6e8:	bf00      	nop
    text_preset_num_queue.setLinespacing(0);
 800e6ea:	697b      	ldr	r3, [r7, #20]
 800e6ec:	33e0      	adds	r3, #224	; 0xe0
 800e6ee:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800e6f2:	2300      	movs	r3, #0
 800e6f4:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800e6f8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e6fc:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800e700:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e702:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e706:	681b      	ldr	r3, [r3, #0]
 800e708:	3384      	adds	r3, #132	; 0x84
 800e70a:	681b      	ldr	r3, [r3, #0]
 800e70c:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800e710:	463a      	mov	r2, r7
 800e712:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800e716:	4610      	mov	r0, r2
 800e718:	4798      	blx	r3
 800e71a:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e71e:	463a      	mov	r2, r7
 800e720:	ca07      	ldmia	r2, {r0, r1, r2}
 800e722:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e726:	bf00      	nop
    text_preset_num_queue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1IH8));
 800e728:	697b      	ldr	r3, [r7, #20]
 800e72a:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800e72e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800e732:	2109      	movs	r1, #9
 800e734:	4618      	mov	r0, r3
 800e736:	f7ff f963 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800e73a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800e73e:	4619      	mov	r1, r3
 800e740:	4620      	mov	r0, r4
 800e742:	f005 f8ef 	bl	8013924 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e746:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800e74a:	4618      	mov	r0, r3
 800e74c:	f7fd fbb6 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    add(text_preset_num_queue);
 800e750:	697a      	ldr	r2, [r7, #20]
 800e752:	697b      	ldr	r3, [r7, #20]
 800e754:	33e0      	adds	r3, #224	; 0xe0
 800e756:	4619      	mov	r1, r3
 800e758:	4610      	mov	r0, r2
 800e75a:	f7ff f8b9 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_opt.setXY(0, 0);
 800e75e:	697b      	ldr	r3, [r7, #20]
 800e760:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e764:	2200      	movs	r2, #0
 800e766:	2100      	movs	r1, #0
 800e768:	4618      	mov	r0, r3
 800e76a:	f7fe ff62 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_opt.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
 800e76e:	697b      	ldr	r3, [r7, #20]
 800e770:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800e774:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800e778:	2101      	movs	r1, #1
 800e77a:	4618      	mov	r0, r3
 800e77c:	f7fe fe9c 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800e780:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800e784:	2100      	movs	r1, #0
 800e786:	4618      	mov	r0, r3
 800e788:	f7fe fe96 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800e78c:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800e790:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800e794:	4619      	mov	r1, r3
 800e796:	4620      	mov	r0, r4
 800e798:	f005 f916 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_opt.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4F5J));
 800e79c:	697b      	ldr	r3, [r7, #20]
 800e79e:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800e7a2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e7a6:	2102      	movs	r1, #2
 800e7a8:	4618      	mov	r0, r3
 800e7aa:	f7ff f929 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800e7ae:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e7b2:	4619      	mov	r1, r3
 800e7b4:	4620      	mov	r0, r4
 800e7b6:	f7ff f979 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800e7ba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e7be:	4618      	mov	r0, r3
 800e7c0:	f7fd fb7c 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_opt.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e7c4:	697b      	ldr	r3, [r7, #20]
 800e7c6:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800e7ca:	23ff      	movs	r3, #255	; 0xff
 800e7cc:	f887 308c 	strb.w	r3, [r7, #140]	; 0x8c
 800e7d0:	23ff      	movs	r3, #255	; 0xff
 800e7d2:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b
 800e7d6:	23ff      	movs	r3, #255	; 0xff
 800e7d8:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
 800e7dc:	f897 308c 	ldrb.w	r3, [r7, #140]	; 0x8c
 800e7e0:	041b      	lsls	r3, r3, #16
 800e7e2:	461a      	mov	r2, r3
 800e7e4:	f897 308b 	ldrb.w	r3, [r7, #139]	; 0x8b
 800e7e8:	021b      	lsls	r3, r3, #8
 800e7ea:	431a      	orrs	r2, r3
 800e7ec:	f897 308a 	ldrb.w	r3, [r7, #138]	; 0x8a
 800e7f0:	4313      	orrs	r3, r2
 800e7f2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e7f6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800e7fa:	4611      	mov	r1, r2
 800e7fc:	4618      	mov	r0, r3
 800e7fe:	f7fe fe15 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e802:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e804:	4619      	mov	r1, r3
 800e806:	4620      	mov	r0, r4
 800e808:	f7ff f962 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
 800e80c:	e004      	b.n	800e818 <_ZN24screen_perf_modeViewBaseC1Ev+0x388>
 800e80e:	bf00      	nop
 800e810:	08027f80 	.word	0x08027f80
 800e814:	0800e92b 	.word	0x0800e92b
    btn_opt.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e818:	697b      	ldr	r3, [r7, #20]
 800e81a:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800e81e:	23ff      	movs	r3, #255	; 0xff
 800e820:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 800e824:	23ff      	movs	r3, #255	; 0xff
 800e826:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 800e82a:	23ff      	movs	r3, #255	; 0xff
 800e82c:	f887 308d 	strb.w	r3, [r7, #141]	; 0x8d
 800e830:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 800e834:	041b      	lsls	r3, r3, #16
 800e836:	461a      	mov	r2, r3
 800e838:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 800e83c:	021b      	lsls	r3, r3, #8
 800e83e:	431a      	orrs	r2, r3
 800e840:	f897 308d 	ldrb.w	r3, [r7, #141]	; 0x8d
 800e844:	4313      	orrs	r3, r2
 800e846:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e84a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e84e:	4611      	mov	r1, r2
 800e850:	4618      	mov	r0, r3
 800e852:	f7fe fdeb 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800e856:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800e858:	4619      	mov	r1, r3
 800e85a:	4620      	mov	r0, r4
 800e85c:	f7ff f946 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    btn_opt.setAction(buttonCallback);
 800e860:	697b      	ldr	r3, [r7, #20]
 800e862:	f503 7294 	add.w	r2, r3, #296	; 0x128
 800e866:	697b      	ldr	r3, [r7, #20]
 800e868:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800e86c:	4619      	mov	r1, r3
 800e86e:	4610      	mov	r0, r2
 800e870:	f7ff f8dc 	bl	800da2c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(btn_opt);
 800e874:	697a      	ldr	r2, [r7, #20]
 800e876:	697b      	ldr	r3, [r7, #20]
 800e878:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e87c:	4619      	mov	r1, r3
 800e87e:	4610      	mov	r0, r2
 800e880:	f7ff f826 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e884:	697b      	ldr	r3, [r7, #20]
 800e886:	4618      	mov	r0, r3
 800e888:	3794      	adds	r7, #148	; 0x94
 800e88a:	46bd      	mov	sp, r7
 800e88c:	bd90      	pop	{r4, r7, pc}
 800e88e:	bf00      	nop

0800e890 <_ZN24screen_perf_modeViewBaseD1Ev>:

screen_perf_modeViewBase::~screen_perf_modeViewBase()
 800e890:	b580      	push	{r7, lr}
 800e892:	b082      	sub	sp, #8
 800e894:	af00      	add	r7, sp, #0
 800e896:	6078      	str	r0, [r7, #4]
 800e898:	4a15      	ldr	r2, [pc, #84]	; (800e8f0 <_ZN24screen_perf_modeViewBaseD1Ev+0x60>)
 800e89a:	687b      	ldr	r3, [r7, #4]
 800e89c:	601a      	str	r2, [r3, #0]
 800e89e:	687b      	ldr	r3, [r7, #4]
 800e8a0:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800e8a4:	4618      	mov	r0, r3
 800e8a6:	f000 f88d 	bl	800e9c4 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e8aa:	687b      	ldr	r3, [r7, #4]
 800e8ac:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e8b0:	4618      	mov	r0, r3
 800e8b2:	f7ff fd2b 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800e8b6:	687b      	ldr	r3, [r7, #4]
 800e8b8:	33e0      	adds	r3, #224	; 0xe0
 800e8ba:	4618      	mov	r0, r3
 800e8bc:	f7ff fd4e 	bl	800e35c <_ZN8touchgfx8TextAreaD1Ev>
 800e8c0:	687b      	ldr	r3, [r7, #4]
 800e8c2:	3398      	adds	r3, #152	; 0x98
 800e8c4:	4618      	mov	r0, r3
 800e8c6:	f7ff fd49 	bl	800e35c <_ZN8touchgfx8TextAreaD1Ev>
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	336c      	adds	r3, #108	; 0x6c
 800e8ce:	4618      	mov	r0, r3
 800e8d0:	f7ff fcd8 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800e8d4:	687b      	ldr	r3, [r7, #4]
 800e8d6:	3340      	adds	r3, #64	; 0x40
 800e8d8:	4618      	mov	r0, r3
 800e8da:	f7ff fcd3 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800e8de:	687b      	ldr	r3, [r7, #4]
 800e8e0:	4618      	mov	r0, r3
 800e8e2:	f7ff fdb3 	bl	800e44c <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>
{

}
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	4618      	mov	r0, r3
 800e8ea:	3708      	adds	r7, #8
 800e8ec:	46bd      	mov	sp, r7
 800e8ee:	bd80      	pop	{r7, pc}
 800e8f0:	08027f80 	.word	0x08027f80

0800e8f4 <_ZN24screen_perf_modeViewBaseD0Ev>:
screen_perf_modeViewBase::~screen_perf_modeViewBase()
 800e8f4:	b580      	push	{r7, lr}
 800e8f6:	b082      	sub	sp, #8
 800e8f8:	af00      	add	r7, sp, #0
 800e8fa:	6078      	str	r0, [r7, #4]
}
 800e8fc:	6878      	ldr	r0, [r7, #4]
 800e8fe:	f7ff ffc7 	bl	800e890 <_ZN24screen_perf_modeViewBaseD1Ev>
 800e902:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800e906:	6878      	ldr	r0, [r7, #4]
 800e908:	f016 ffe5 	bl	80258d6 <_ZdlPvj>
 800e90c:	687b      	ldr	r3, [r7, #4]
 800e90e:	4618      	mov	r0, r3
 800e910:	3708      	adds	r7, #8
 800e912:	46bd      	mov	sp, r7
 800e914:	bd80      	pop	{r7, pc}

0800e916 <_ZN24screen_perf_modeViewBase11setupScreenEv>:

void screen_perf_modeViewBase::setupScreen()
{
 800e916:	b480      	push	{r7}
 800e918:	b083      	sub	sp, #12
 800e91a:	af00      	add	r7, sp, #0
 800e91c:	6078      	str	r0, [r7, #4]

}
 800e91e:	bf00      	nop
 800e920:	370c      	adds	r7, #12
 800e922:	46bd      	mov	sp, r7
 800e924:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e928:	4770      	bx	lr

0800e92a <_ZN24screen_perf_modeViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_perf_modeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800e92a:	b580      	push	{r7, lr}
 800e92c:	b082      	sub	sp, #8
 800e92e:	af00      	add	r7, sp, #0
 800e930:	6078      	str	r0, [r7, #4]
 800e932:	6039      	str	r1, [r7, #0]
    if (&src == &btn_opt)
 800e934:	687b      	ldr	r3, [r7, #4]
 800e936:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e93a:	683a      	ldr	r2, [r7, #0]
 800e93c:	429a      	cmp	r2, r3
 800e93e:	d106      	bne.n	800e94e <_ZN24screen_perf_modeViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //ToSettings
        //When btn_opt clicked change screen to screen_settings
        //Go to screen_settings with no screen transition
        application().gotoscreen_settingsScreenNoTransition();
 800e940:	6878      	ldr	r0, [r7, #4]
 800e942:	f7ff fd78 	bl	800e436 <_ZN24screen_perf_modeViewBase11applicationEv>
 800e946:	4603      	mov	r3, r0
 800e948:	4618      	mov	r0, r3
 800e94a:	f7fd ffb9 	bl	800c8c0 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv>
    }
}
 800e94e:	bf00      	nop
 800e950:	3708      	adds	r7, #8
 800e952:	46bd      	mov	sp, r7
 800e954:	bd80      	pop	{r7, pc}
	...

0800e958 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev>:
    View()
 800e958:	b580      	push	{r7, lr}
 800e95a:	b082      	sub	sp, #8
 800e95c:	af00      	add	r7, sp, #0
 800e95e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e960:	687b      	ldr	r3, [r7, #4]
 800e962:	4618      	mov	r0, r3
 800e964:	f008 f9ac 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 800e968:	4a05      	ldr	r2, [pc, #20]	; (800e980 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev+0x28>)
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	601a      	str	r2, [r3, #0]
 800e96e:	687b      	ldr	r3, [r7, #4]
 800e970:	2200      	movs	r2, #0
 800e972:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800e974:	687b      	ldr	r3, [r7, #4]
 800e976:	4618      	mov	r0, r3
 800e978:	3708      	adds	r7, #8
 800e97a:	46bd      	mov	sp, r7
 800e97c:	bd80      	pop	{r7, pc}
 800e97e:	bf00      	nop
 800e980:	08027fcc 	.word	0x08027fcc

0800e984 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800e984:	b580      	push	{r7, lr}
 800e986:	b084      	sub	sp, #16
 800e988:	af00      	add	r7, sp, #0
 800e98a:	60f8      	str	r0, [r7, #12]
 800e98c:	60b9      	str	r1, [r7, #8]
 800e98e:	4639      	mov	r1, r7
 800e990:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800e994:	68fb      	ldr	r3, [r7, #12]
 800e996:	4618      	mov	r0, r3
 800e998:	f7ff fbe0 	bl	800e15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800e99c:	4a08      	ldr	r2, [pc, #32]	; (800e9c0 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800e99e:	68fb      	ldr	r3, [r7, #12]
 800e9a0:	601a      	str	r2, [r3, #0]
 800e9a2:	68fb      	ldr	r3, [r7, #12]
 800e9a4:	68ba      	ldr	r2, [r7, #8]
 800e9a6:	605a      	str	r2, [r3, #4]
 800e9a8:	68fb      	ldr	r3, [r7, #12]
 800e9aa:	3308      	adds	r3, #8
 800e9ac:	463a      	mov	r2, r7
 800e9ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e9b2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800e9b6:	68fb      	ldr	r3, [r7, #12]
 800e9b8:	4618      	mov	r0, r3
 800e9ba:	3710      	adds	r7, #16
 800e9bc:	46bd      	mov	sp, r7
 800e9be:	bd80      	pop	{r7, pc}
 800e9c0:	08027fb4 	.word	0x08027fb4

0800e9c4 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e9c4:	b580      	push	{r7, lr}
 800e9c6:	b082      	sub	sp, #8
 800e9c8:	af00      	add	r7, sp, #0
 800e9ca:	6078      	str	r0, [r7, #4]
 800e9cc:	4a05      	ldr	r2, [pc, #20]	; (800e9e4 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	601a      	str	r2, [r3, #0]
 800e9d2:	687b      	ldr	r3, [r7, #4]
 800e9d4:	4618      	mov	r0, r3
 800e9d6:	f7ff fbf1 	bl	800e1bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e9da:	687b      	ldr	r3, [r7, #4]
 800e9dc:	4618      	mov	r0, r3
 800e9de:	3708      	adds	r7, #8
 800e9e0:	46bd      	mov	sp, r7
 800e9e2:	bd80      	pop	{r7, pc}
 800e9e4:	08027fb4 	.word	0x08027fb4

0800e9e8 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800e9e8:	b580      	push	{r7, lr}
 800e9ea:	b082      	sub	sp, #8
 800e9ec:	af00      	add	r7, sp, #0
 800e9ee:	6078      	str	r0, [r7, #4]
 800e9f0:	6878      	ldr	r0, [r7, #4]
 800e9f2:	f7ff ffe7 	bl	800e9c4 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e9f6:	2110      	movs	r1, #16
 800e9f8:	6878      	ldr	r0, [r7, #4]
 800e9fa:	f016 ff6c 	bl	80258d6 <_ZdlPvj>
 800e9fe:	687b      	ldr	r3, [r7, #4]
 800ea00:	4618      	mov	r0, r3
 800ea02:	3708      	adds	r7, #8
 800ea04:	46bd      	mov	sp, r7
 800ea06:	bd80      	pop	{r7, pc}

0800ea08 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800ea08:	b580      	push	{r7, lr}
 800ea0a:	b082      	sub	sp, #8
 800ea0c:	af00      	add	r7, sp, #0
 800ea0e:	6078      	str	r0, [r7, #4]
 800ea10:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800ea12:	687b      	ldr	r3, [r7, #4]
 800ea14:	685b      	ldr	r3, [r3, #4]
 800ea16:	687a      	ldr	r2, [r7, #4]
 800ea18:	68d2      	ldr	r2, [r2, #12]
 800ea1a:	1052      	asrs	r2, r2, #1
 800ea1c:	1898      	adds	r0, r3, r2
 800ea1e:	687b      	ldr	r3, [r7, #4]
 800ea20:	68db      	ldr	r3, [r3, #12]
 800ea22:	f003 0301 	and.w	r3, r3, #1
 800ea26:	2b00      	cmp	r3, #0
 800ea28:	d102      	bne.n	800ea30 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800ea2a:	687b      	ldr	r3, [r7, #4]
 800ea2c:	689b      	ldr	r3, [r3, #8]
 800ea2e:	e00a      	b.n	800ea46 <_ZN8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800ea30:	687b      	ldr	r3, [r7, #4]
 800ea32:	685b      	ldr	r3, [r3, #4]
 800ea34:	687a      	ldr	r2, [r7, #4]
 800ea36:	68d2      	ldr	r2, [r2, #12]
 800ea38:	1052      	asrs	r2, r2, #1
 800ea3a:	4413      	add	r3, r2
 800ea3c:	681b      	ldr	r3, [r3, #0]
 800ea3e:	687a      	ldr	r2, [r7, #4]
 800ea40:	6892      	ldr	r2, [r2, #8]
 800ea42:	4413      	add	r3, r2
 800ea44:	681b      	ldr	r3, [r3, #0]
 800ea46:	6839      	ldr	r1, [r7, #0]
 800ea48:	4798      	blx	r3
    }
 800ea4a:	bf00      	nop
 800ea4c:	3708      	adds	r7, #8
 800ea4e:	46bd      	mov	sp, r7
 800ea50:	bd80      	pop	{r7, pc}

0800ea52 <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800ea52:	b480      	push	{r7}
 800ea54:	b083      	sub	sp, #12
 800ea56:	af00      	add	r7, sp, #0
 800ea58:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ea5a:	687b      	ldr	r3, [r7, #4]
 800ea5c:	685b      	ldr	r3, [r3, #4]
 800ea5e:	2b00      	cmp	r3, #0
 800ea60:	d010      	beq.n	800ea84 <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ea62:	687b      	ldr	r3, [r7, #4]
 800ea64:	689b      	ldr	r3, [r3, #8]
 800ea66:	2b00      	cmp	r3, #0
 800ea68:	d107      	bne.n	800ea7a <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ea6a:	687b      	ldr	r3, [r7, #4]
 800ea6c:	68db      	ldr	r3, [r3, #12]
 800ea6e:	f003 0301 	and.w	r3, r3, #1
 800ea72:	2b00      	cmp	r3, #0
 800ea74:	d101      	bne.n	800ea7a <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ea76:	2301      	movs	r3, #1
 800ea78:	e000      	b.n	800ea7c <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800ea7a:	2300      	movs	r3, #0
 800ea7c:	2b01      	cmp	r3, #1
 800ea7e:	d001      	beq.n	800ea84 <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ea80:	2301      	movs	r3, #1
 800ea82:	e000      	b.n	800ea86 <_ZNK8touchgfx8CallbackI24screen_perf_modeViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800ea84:	2300      	movs	r3, #0
    }
 800ea86:	4618      	mov	r0, r3
 800ea88:	370c      	adds	r7, #12
 800ea8a:	46bd      	mov	sp, r7
 800ea8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea90:	4770      	bx	lr

0800ea92 <_ZN23screen_settingsViewBase11applicationEv>:
    screen_settingsViewBase();
    virtual ~screen_settingsViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800ea92:	b580      	push	{r7, lr}
 800ea94:	b082      	sub	sp, #8
 800ea96:	af00      	add	r7, sp, #0
 800ea98:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ea9a:	f006 fdf9 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 800ea9e:	4603      	mov	r3, r0
    }
 800eaa0:	4618      	mov	r0, r3
 800eaa2:	3708      	adds	r7, #8
 800eaa4:	46bd      	mov	sp, r7
 800eaa6:	bd80      	pop	{r7, pc}

0800eaa8 <_ZN8touchgfx4ViewI24screen_settingsPresenterED1Ev>:
class View : public Screen
 800eaa8:	b580      	push	{r7, lr}
 800eaaa:	b082      	sub	sp, #8
 800eaac:	af00      	add	r7, sp, #0
 800eaae:	6078      	str	r0, [r7, #4]
 800eab0:	4a05      	ldr	r2, [pc, #20]	; (800eac8 <_ZN8touchgfx4ViewI24screen_settingsPresenterED1Ev+0x20>)
 800eab2:	687b      	ldr	r3, [r7, #4]
 800eab4:	601a      	str	r2, [r3, #0]
 800eab6:	687b      	ldr	r3, [r7, #4]
 800eab8:	4618      	mov	r0, r3
 800eaba:	f7fe feb1 	bl	800d820 <_ZN8touchgfx6ScreenD1Ev>
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	4618      	mov	r0, r3
 800eac2:	3708      	adds	r7, #8
 800eac4:	46bd      	mov	sp, r7
 800eac6:	bd80      	pop	{r7, pc}
 800eac8:	0802804c 	.word	0x0802804c

0800eacc <_ZN8touchgfx4ViewI24screen_settingsPresenterED0Ev>:
 800eacc:	b580      	push	{r7, lr}
 800eace:	b082      	sub	sp, #8
 800ead0:	af00      	add	r7, sp, #0
 800ead2:	6078      	str	r0, [r7, #4]
 800ead4:	6878      	ldr	r0, [r7, #4]
 800ead6:	f7ff ffe7 	bl	800eaa8 <_ZN8touchgfx4ViewI24screen_settingsPresenterED1Ev>
 800eada:	2140      	movs	r1, #64	; 0x40
 800eadc:	6878      	ldr	r0, [r7, #4]
 800eade:	f016 fefa 	bl	80258d6 <_ZdlPvj>
 800eae2:	687b      	ldr	r3, [r7, #4]
 800eae4:	4618      	mov	r0, r3
 800eae6:	3708      	adds	r7, #8
 800eae8:	46bd      	mov	sp, r7
 800eaea:	bd80      	pop	{r7, pc}

0800eaec <_ZN23screen_settingsViewBaseC1Ev>:
#include <gui_generated/screen_settings_screen/screen_settingsViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_settingsViewBase::screen_settingsViewBase() :
 800eaec:	b590      	push	{r4, r7, lr}
 800eaee:	b0bd      	sub	sp, #244	; 0xf4
 800eaf0:	af02      	add	r7, sp, #8
 800eaf2:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &screen_settingsViewBase::buttonCallbackHandler)
 800eaf4:	697b      	ldr	r3, [r7, #20]
 800eaf6:	4618      	mov	r0, r3
 800eaf8:	f000 fc4c 	bl	800f394 <_ZN8touchgfx4ViewI24screen_settingsPresenterEC1Ev>
 800eafc:	4ae7      	ldr	r2, [pc, #924]	; (800ee9c <_ZN23screen_settingsViewBaseC1Ev+0x3b0>)
 800eafe:	697b      	ldr	r3, [r7, #20]
 800eb00:	601a      	str	r2, [r3, #0]
 800eb02:	697b      	ldr	r3, [r7, #20]
 800eb04:	3340      	adds	r3, #64	; 0x40
 800eb06:	4618      	mov	r0, r3
 800eb08:	f7fe ff48 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800eb0c:	697b      	ldr	r3, [r7, #20]
 800eb0e:	336c      	adds	r3, #108	; 0x6c
 800eb10:	4618      	mov	r0, r3
 800eb12:	f7fe ff43 	bl	800d99c <_ZN8touchgfx3BoxC1Ev>
 800eb16:	697b      	ldr	r3, [r7, #20]
 800eb18:	3398      	adds	r3, #152	; 0x98
 800eb1a:	4618      	mov	r0, r3
 800eb1c:	f005 f8c4 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800eb20:	697b      	ldr	r3, [r7, #20]
 800eb22:	33e0      	adds	r3, #224	; 0xe0
 800eb24:	4618      	mov	r0, r3
 800eb26:	f005 f8bf 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800eb2a:	697b      	ldr	r3, [r7, #20]
 800eb2c:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800eb30:	4618      	mov	r0, r3
 800eb32:	f005 f8b9 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800eb36:	697b      	ldr	r3, [r7, #20]
 800eb38:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800eb3c:	4618      	mov	r0, r3
 800eb3e:	f005 f8b3 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800eb42:	697b      	ldr	r3, [r7, #20]
 800eb44:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800eb48:	4618      	mov	r0, r3
 800eb4a:	f005 f8ad 	bl	8013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800eb4e:	697b      	ldr	r3, [r7, #20]
 800eb50:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800eb54:	4618      	mov	r0, r3
 800eb56:	f7ff f87f 	bl	800dc58 <_ZN8touchgfx8TextAreaC1Ev>
 800eb5a:	697b      	ldr	r3, [r7, #20]
 800eb5c:	f503 7012 	add.w	r0, r3, #584	; 0x248
 800eb60:	4bcf      	ldr	r3, [pc, #828]	; (800eea0 <_ZN23screen_settingsViewBaseC1Ev+0x3b4>)
 800eb62:	623b      	str	r3, [r7, #32]
 800eb64:	2300      	movs	r3, #0
 800eb66:	627b      	str	r3, [r7, #36]	; 0x24
 800eb68:	f107 0320 	add.w	r3, r7, #32
 800eb6c:	cb0c      	ldmia	r3, {r2, r3}
 800eb6e:	6979      	ldr	r1, [r7, #20]
 800eb70:	f000 fc26 	bl	800f3c0 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800eb74:	697b      	ldr	r3, [r7, #20]
 800eb76:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800eb7a:	23f0      	movs	r3, #240	; 0xf0
 800eb7c:	9300      	str	r3, [sp, #0]
 800eb7e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800eb82:	2200      	movs	r2, #0
 800eb84:	2100      	movs	r1, #0
 800eb86:	f7fe fd15 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800eb8a:	697b      	ldr	r3, [r7, #20]
 800eb8c:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800eb90:	2300      	movs	r3, #0
 800eb92:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 800eb96:	2300      	movs	r3, #0
 800eb98:	f887 30b6 	strb.w	r3, [r7, #182]	; 0xb6
 800eb9c:	2300      	movs	r3, #0
 800eb9e:	f887 30b5 	strb.w	r3, [r7, #181]	; 0xb5
 800eba2:	f897 30b7 	ldrb.w	r3, [r7, #183]	; 0xb7
 800eba6:	041b      	lsls	r3, r3, #16
 800eba8:	461a      	mov	r2, r3
 800ebaa:	f897 30b6 	ldrb.w	r3, [r7, #182]	; 0xb6
 800ebae:	021b      	lsls	r3, r3, #8
 800ebb0:	431a      	orrs	r2, r3
 800ebb2:	f897 30b5 	ldrb.w	r3, [r7, #181]	; 0xb5
 800ebb6:	4313      	orrs	r3, r2
 800ebb8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ebbc:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800ebc0:	4611      	mov	r1, r2
 800ebc2:	4618      	mov	r0, r3
 800ebc4:	f7fe fc32 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ebc8:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800ebcc:	4619      	mov	r1, r3
 800ebce:	4620      	mov	r0, r4
 800ebd0:	f7fe ff08 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ebd4:	697a      	ldr	r2, [r7, #20]
 800ebd6:	697b      	ldr	r3, [r7, #20]
 800ebd8:	3340      	adds	r3, #64	; 0x40
 800ebda:	4619      	mov	r1, r3
 800ebdc:	4610      	mov	r0, r2
 800ebde:	f7fe fe77 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
 800ebe2:	697b      	ldr	r3, [r7, #20]
 800ebe4:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800ebe8:	23f0      	movs	r3, #240	; 0xf0
 800ebea:	9300      	str	r3, [sp, #0]
 800ebec:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ebf0:	2200      	movs	r2, #0
 800ebf2:	2100      	movs	r1, #0
 800ebf4:	f7fe fcde 	bl	800d5b4 <_ZN8touchgfx8Drawable11setPositionEssss>
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ebf8:	697b      	ldr	r3, [r7, #20]
 800ebfa:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800ebfe:	2300      	movs	r3, #0
 800ec00:	f887 30ba 	strb.w	r3, [r7, #186]	; 0xba
 800ec04:	2300      	movs	r3, #0
 800ec06:	f887 30b9 	strb.w	r3, [r7, #185]	; 0xb9
 800ec0a:	2300      	movs	r3, #0
 800ec0c:	f887 30b8 	strb.w	r3, [r7, #184]	; 0xb8
 800ec10:	f897 30ba 	ldrb.w	r3, [r7, #186]	; 0xba
 800ec14:	041b      	lsls	r3, r3, #16
 800ec16:	461a      	mov	r2, r3
 800ec18:	f897 30b9 	ldrb.w	r3, [r7, #185]	; 0xb9
 800ec1c:	021b      	lsls	r3, r3, #8
 800ec1e:	431a      	orrs	r2, r3
 800ec20:	f897 30b8 	ldrb.w	r3, [r7, #184]	; 0xb8
 800ec24:	4313      	orrs	r3, r2
 800ec26:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ec2a:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800ec2e:	4611      	mov	r1, r2
 800ec30:	4618      	mov	r0, r3
 800ec32:	f7fe fbfb 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ec36:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800ec3a:	4619      	mov	r1, r3
 800ec3c:	4620      	mov	r0, r4
 800ec3e:	f7fe fed1 	bl	800d9e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(MAIN_BACKGROUND);
 800ec42:	697a      	ldr	r2, [r7, #20]
 800ec44:	697b      	ldr	r3, [r7, #20]
 800ec46:	336c      	adds	r3, #108	; 0x6c
 800ec48:	4619      	mov	r1, r3
 800ec4a:	4610      	mov	r0, r2
 800ec4c:	f7fe fe40 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_performance_mode.setXY(10, 32);
 800ec50:	697b      	ldr	r3, [r7, #20]
 800ec52:	3398      	adds	r3, #152	; 0x98
 800ec54:	2220      	movs	r2, #32
 800ec56:	210a      	movs	r1, #10
 800ec58:	4618      	mov	r0, r3
 800ec5a:	f7fe fcea 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_performance_mode.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID));
 800ec5e:	697b      	ldr	r3, [r7, #20]
 800ec60:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800ec64:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800ec68:	2103      	movs	r1, #3
 800ec6a:	4618      	mov	r0, r3
 800ec6c:	f7fe fc24 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800ec70:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800ec74:	2103      	movs	r1, #3
 800ec76:	4618      	mov	r0, r3
 800ec78:	f7fe fc1e 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800ec7c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800ec80:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800ec84:	4619      	mov	r1, r3
 800ec86:	4620      	mov	r0, r4
 800ec88:	f004 fe9e 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_performance_mode.setLabelText(touchgfx::TypedText(T___SINGLEUSE_3ICT));
 800ec8c:	697b      	ldr	r3, [r7, #20]
 800ec8e:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800ec92:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ec96:	2108      	movs	r1, #8
 800ec98:	4618      	mov	r0, r3
 800ec9a:	f7fe feb1 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800ec9e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800eca2:	4619      	mov	r1, r3
 800eca4:	4620      	mov	r0, r4
 800eca6:	f7fe ff01 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800ecaa:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ecae:	4618      	mov	r0, r3
 800ecb0:	f7fd f904 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_performance_mode.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ecb4:	697b      	ldr	r3, [r7, #20]
 800ecb6:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800ecba:	23ff      	movs	r3, #255	; 0xff
 800ecbc:	f887 30bd 	strb.w	r3, [r7, #189]	; 0xbd
 800ecc0:	23ff      	movs	r3, #255	; 0xff
 800ecc2:	f887 30bc 	strb.w	r3, [r7, #188]	; 0xbc
 800ecc6:	23ff      	movs	r3, #255	; 0xff
 800ecc8:	f887 30bb 	strb.w	r3, [r7, #187]	; 0xbb
 800eccc:	f897 30bd 	ldrb.w	r3, [r7, #189]	; 0xbd
 800ecd0:	041b      	lsls	r3, r3, #16
 800ecd2:	461a      	mov	r2, r3
 800ecd4:	f897 30bc 	ldrb.w	r3, [r7, #188]	; 0xbc
 800ecd8:	021b      	lsls	r3, r3, #8
 800ecda:	431a      	orrs	r2, r3
 800ecdc:	f897 30bb 	ldrb.w	r3, [r7, #187]	; 0xbb
 800ece0:	4313      	orrs	r3, r2
 800ece2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ece6:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800ecea:	4611      	mov	r1, r2
 800ecec:	4618      	mov	r0, r3
 800ecee:	f7fe fb9d 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ecf2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800ecf6:	4619      	mov	r1, r3
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	f7fe fee9 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_performance_mode.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ecfe:	697b      	ldr	r3, [r7, #20]
 800ed00:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800ed04:	23ff      	movs	r3, #255	; 0xff
 800ed06:	f887 30c0 	strb.w	r3, [r7, #192]	; 0xc0
 800ed0a:	23ff      	movs	r3, #255	; 0xff
 800ed0c:	f887 30bf 	strb.w	r3, [r7, #191]	; 0xbf
 800ed10:	23ff      	movs	r3, #255	; 0xff
 800ed12:	f887 30be 	strb.w	r3, [r7, #190]	; 0xbe
 800ed16:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
 800ed1a:	041b      	lsls	r3, r3, #16
 800ed1c:	461a      	mov	r2, r3
 800ed1e:	f897 30bf 	ldrb.w	r3, [r7, #191]	; 0xbf
 800ed22:	021b      	lsls	r3, r3, #8
 800ed24:	431a      	orrs	r2, r3
 800ed26:	f897 30be 	ldrb.w	r3, [r7, #190]	; 0xbe
 800ed2a:	4313      	orrs	r3, r2
 800ed2c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ed30:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800ed34:	4611      	mov	r1, r2
 800ed36:	4618      	mov	r0, r3
 800ed38:	f7fe fb78 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ed3c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800ed40:	4619      	mov	r1, r3
 800ed42:	4620      	mov	r0, r4
 800ed44:	f7fe fed2 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    btn_performance_mode.setAction(buttonCallback);
 800ed48:	697b      	ldr	r3, [r7, #20]
 800ed4a:	f103 0298 	add.w	r2, r3, #152	; 0x98
 800ed4e:	697b      	ldr	r3, [r7, #20]
 800ed50:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ed54:	4619      	mov	r1, r3
 800ed56:	4610      	mov	r0, r2
 800ed58:	f7fe fe68 	bl	800da2c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(btn_performance_mode);
 800ed5c:	697a      	ldr	r2, [r7, #20]
 800ed5e:	697b      	ldr	r3, [r7, #20]
 800ed60:	3398      	adds	r3, #152	; 0x98
 800ed62:	4619      	mov	r1, r3
 800ed64:	4610      	mov	r0, r2
 800ed66:	f7fe fdb3 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_editor_mode.setXY(168, 32);
 800ed6a:	697b      	ldr	r3, [r7, #20]
 800ed6c:	33e0      	adds	r3, #224	; 0xe0
 800ed6e:	2220      	movs	r2, #32
 800ed70:	21a8      	movs	r1, #168	; 0xa8
 800ed72:	4618      	mov	r0, r3
 800ed74:	f7fe fc5d 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_editor_mode.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID));
 800ed78:	697b      	ldr	r3, [r7, #20]
 800ed7a:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800ed7e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ed82:	2103      	movs	r1, #3
 800ed84:	4618      	mov	r0, r3
 800ed86:	f7fe fb97 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800ed8a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ed8e:	2103      	movs	r1, #3
 800ed90:	4618      	mov	r0, r3
 800ed92:	f7fe fb91 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800ed96:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800ed9a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ed9e:	4619      	mov	r1, r3
 800eda0:	4620      	mov	r0, r4
 800eda2:	f004 fe11 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_editor_mode.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RDR0));
 800eda6:	697b      	ldr	r3, [r7, #20]
 800eda8:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800edac:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800edb0:	2106      	movs	r1, #6
 800edb2:	4618      	mov	r0, r3
 800edb4:	f7fe fe24 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800edb8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800edbc:	4619      	mov	r1, r3
 800edbe:	4620      	mov	r0, r4
 800edc0:	f7fe fe74 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800edc4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800edc8:	4618      	mov	r0, r3
 800edca:	f7fd f877 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_editor_mode.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800edce:	697b      	ldr	r3, [r7, #20]
 800edd0:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800edd4:	23ff      	movs	r3, #255	; 0xff
 800edd6:	f887 30c3 	strb.w	r3, [r7, #195]	; 0xc3
 800edda:	23ff      	movs	r3, #255	; 0xff
 800eddc:	f887 30c2 	strb.w	r3, [r7, #194]	; 0xc2
 800ede0:	23ff      	movs	r3, #255	; 0xff
 800ede2:	f887 30c1 	strb.w	r3, [r7, #193]	; 0xc1
 800ede6:	f897 30c3 	ldrb.w	r3, [r7, #195]	; 0xc3
 800edea:	041b      	lsls	r3, r3, #16
 800edec:	461a      	mov	r2, r3
 800edee:	f897 30c2 	ldrb.w	r3, [r7, #194]	; 0xc2
 800edf2:	021b      	lsls	r3, r3, #8
 800edf4:	431a      	orrs	r2, r3
 800edf6:	f897 30c1 	ldrb.w	r3, [r7, #193]	; 0xc1
 800edfa:	4313      	orrs	r3, r2
 800edfc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ee00:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800ee04:	4611      	mov	r1, r2
 800ee06:	4618      	mov	r0, r3
 800ee08:	f7fe fb10 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ee0c:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800ee10:	4619      	mov	r1, r3
 800ee12:	4620      	mov	r0, r4
 800ee14:	f7fe fe5c 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_editor_mode.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ee18:	697b      	ldr	r3, [r7, #20]
 800ee1a:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800ee1e:	23ff      	movs	r3, #255	; 0xff
 800ee20:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800ee24:	23ff      	movs	r3, #255	; 0xff
 800ee26:	f887 30c5 	strb.w	r3, [r7, #197]	; 0xc5
 800ee2a:	23ff      	movs	r3, #255	; 0xff
 800ee2c:	f887 30c4 	strb.w	r3, [r7, #196]	; 0xc4
 800ee30:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800ee34:	041b      	lsls	r3, r3, #16
 800ee36:	461a      	mov	r2, r3
 800ee38:	f897 30c5 	ldrb.w	r3, [r7, #197]	; 0xc5
 800ee3c:	021b      	lsls	r3, r3, #8
 800ee3e:	431a      	orrs	r2, r3
 800ee40:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 800ee44:	4313      	orrs	r3, r2
 800ee46:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ee4a:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800ee4e:	4611      	mov	r1, r2
 800ee50:	4618      	mov	r0, r3
 800ee52:	f7fe faeb 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ee56:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800ee5a:	4619      	mov	r1, r3
 800ee5c:	4620      	mov	r0, r4
 800ee5e:	f7fe fe45 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    add(btn_editor_mode);
 800ee62:	697a      	ldr	r2, [r7, #20]
 800ee64:	697b      	ldr	r3, [r7, #20]
 800ee66:	33e0      	adds	r3, #224	; 0xe0
 800ee68:	4619      	mov	r1, r3
 800ee6a:	4610      	mov	r0, r2
 800ee6c:	f7fe fd30 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_info.setXY(168, 107);
 800ee70:	697b      	ldr	r3, [r7, #20]
 800ee72:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800ee76:	226b      	movs	r2, #107	; 0x6b
 800ee78:	21a8      	movs	r1, #168	; 0xa8
 800ee7a:	4618      	mov	r0, r3
 800ee7c:	f7fe fbd9 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_info.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID));
 800ee80:	697b      	ldr	r3, [r7, #20]
 800ee82:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800ee86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ee8a:	2103      	movs	r1, #3
 800ee8c:	4618      	mov	r0, r3
 800ee8e:	f7fe fb13 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800ee92:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ee96:	2103      	movs	r1, #3
 800ee98:	4618      	mov	r0, r3
 800ee9a:	e003      	b.n	800eea4 <_ZN23screen_settingsViewBaseC1Ev+0x3b8>
 800ee9c:	08028000 	.word	0x08028000
 800eea0:	0800f34f 	.word	0x0800f34f
 800eea4:	f7fe fb08 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800eea8:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800eeac:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eeb0:	4619      	mov	r1, r3
 800eeb2:	4620      	mov	r0, r4
 800eeb4:	f004 fd88 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_info.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2SB5));
 800eeb8:	697b      	ldr	r3, [r7, #20]
 800eeba:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800eebe:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800eec2:	2105      	movs	r1, #5
 800eec4:	4618      	mov	r0, r3
 800eec6:	f7fe fd9b 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800eeca:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800eece:	4619      	mov	r1, r3
 800eed0:	4620      	mov	r0, r4
 800eed2:	f7fe fdeb 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800eed6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800eeda:	4618      	mov	r0, r3
 800eedc:	f7fc ffee 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_info.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800eee0:	697b      	ldr	r3, [r7, #20]
 800eee2:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800eee6:	23ff      	movs	r3, #255	; 0xff
 800eee8:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800eeec:	23ff      	movs	r3, #255	; 0xff
 800eeee:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800eef2:	23ff      	movs	r3, #255	; 0xff
 800eef4:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800eef8:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800eefc:	041b      	lsls	r3, r3, #16
 800eefe:	461a      	mov	r2, r3
 800ef00:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800ef04:	021b      	lsls	r3, r3, #8
 800ef06:	431a      	orrs	r2, r3
 800ef08:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800ef0c:	4313      	orrs	r3, r2
 800ef0e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ef12:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800ef16:	4611      	mov	r1, r2
 800ef18:	4618      	mov	r0, r3
 800ef1a:	f7fe fa87 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ef1e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800ef22:	4619      	mov	r1, r3
 800ef24:	4620      	mov	r0, r4
 800ef26:	f7fe fdd3 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_info.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ef2a:	697b      	ldr	r3, [r7, #20]
 800ef2c:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800ef30:	23ff      	movs	r3, #255	; 0xff
 800ef32:	f887 30cc 	strb.w	r3, [r7, #204]	; 0xcc
 800ef36:	23ff      	movs	r3, #255	; 0xff
 800ef38:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800ef3c:	23ff      	movs	r3, #255	; 0xff
 800ef3e:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800ef42:	f897 30cc 	ldrb.w	r3, [r7, #204]	; 0xcc
 800ef46:	041b      	lsls	r3, r3, #16
 800ef48:	461a      	mov	r2, r3
 800ef4a:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800ef4e:	021b      	lsls	r3, r3, #8
 800ef50:	431a      	orrs	r2, r3
 800ef52:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800ef56:	4313      	orrs	r3, r2
 800ef58:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ef5c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800ef60:	4611      	mov	r1, r2
 800ef62:	4618      	mov	r0, r3
 800ef64:	f7fe fa62 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800ef68:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ef6c:	4619      	mov	r1, r3
 800ef6e:	4620      	mov	r0, r4
 800ef70:	f7fe fdbc 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    btn_info.setAction(buttonCallback);
 800ef74:	697b      	ldr	r3, [r7, #20]
 800ef76:	f503 7294 	add.w	r2, r3, #296	; 0x128
 800ef7a:	697b      	ldr	r3, [r7, #20]
 800ef7c:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800ef80:	4619      	mov	r1, r3
 800ef82:	4610      	mov	r0, r2
 800ef84:	f7fe fd52 	bl	800da2c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(btn_info);
 800ef88:	697a      	ldr	r2, [r7, #20]
 800ef8a:	697b      	ldr	r3, [r7, #20]
 800ef8c:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800ef90:	4619      	mov	r1, r3
 800ef92:	4610      	mov	r0, r2
 800ef94:	f7fe fc9c 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_save.setXY(10, 107);
 800ef98:	697b      	ldr	r3, [r7, #20]
 800ef9a:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800ef9e:	226b      	movs	r2, #107	; 0x6b
 800efa0:	210a      	movs	r1, #10
 800efa2:	4618      	mov	r0, r3
 800efa4:	f7fe fb45 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_save.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_PRESSED_ID));
 800efa8:	697b      	ldr	r3, [r7, #20]
 800efaa:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800efae:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800efb2:	2103      	movs	r1, #3
 800efb4:	4618      	mov	r0, r3
 800efb6:	f7fe fa7f 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800efba:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800efbe:	2103      	movs	r1, #3
 800efc0:	4618      	mov	r0, r3
 800efc2:	f7fe fa79 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800efc6:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 800efca:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800efce:	4619      	mov	r1, r3
 800efd0:	4620      	mov	r0, r4
 800efd2:	f004 fcf9 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_save.setLabelText(touchgfx::TypedText(T___SINGLEUSE_MVZP));
 800efd6:	697b      	ldr	r3, [r7, #20]
 800efd8:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800efdc:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800efe0:	2104      	movs	r1, #4
 800efe2:	4618      	mov	r0, r3
 800efe4:	f7fe fd0c 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800efe8:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800efec:	4619      	mov	r1, r3
 800efee:	4620      	mov	r0, r4
 800eff0:	f7fe fd5c 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800eff4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800eff8:	4618      	mov	r0, r3
 800effa:	f7fc ff5f 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_save.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800effe:	697b      	ldr	r3, [r7, #20]
 800f000:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800f004:	23ff      	movs	r3, #255	; 0xff
 800f006:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 800f00a:	23ff      	movs	r3, #255	; 0xff
 800f00c:	f887 30ce 	strb.w	r3, [r7, #206]	; 0xce
 800f010:	23ff      	movs	r3, #255	; 0xff
 800f012:	f887 30cd 	strb.w	r3, [r7, #205]	; 0xcd
 800f016:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 800f01a:	041b      	lsls	r3, r3, #16
 800f01c:	461a      	mov	r2, r3
 800f01e:	f897 30ce 	ldrb.w	r3, [r7, #206]	; 0xce
 800f022:	021b      	lsls	r3, r3, #8
 800f024:	431a      	orrs	r2, r3
 800f026:	f897 30cd 	ldrb.w	r3, [r7, #205]	; 0xcd
 800f02a:	4313      	orrs	r3, r2
 800f02c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f030:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800f034:	4611      	mov	r1, r2
 800f036:	4618      	mov	r0, r3
 800f038:	f7fe f9f8 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800f03c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800f040:	4619      	mov	r1, r3
 800f042:	4620      	mov	r0, r4
 800f044:	f7fe fd44 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_save.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800f048:	697b      	ldr	r3, [r7, #20]
 800f04a:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800f04e:	23ff      	movs	r3, #255	; 0xff
 800f050:	f887 30d2 	strb.w	r3, [r7, #210]	; 0xd2
 800f054:	23ff      	movs	r3, #255	; 0xff
 800f056:	f887 30d1 	strb.w	r3, [r7, #209]	; 0xd1
 800f05a:	23ff      	movs	r3, #255	; 0xff
 800f05c:	f887 30d0 	strb.w	r3, [r7, #208]	; 0xd0
 800f060:	f897 30d2 	ldrb.w	r3, [r7, #210]	; 0xd2
 800f064:	041b      	lsls	r3, r3, #16
 800f066:	461a      	mov	r2, r3
 800f068:	f897 30d1 	ldrb.w	r3, [r7, #209]	; 0xd1
 800f06c:	021b      	lsls	r3, r3, #8
 800f06e:	431a      	orrs	r2, r3
 800f070:	f897 30d0 	ldrb.w	r3, [r7, #208]	; 0xd0
 800f074:	4313      	orrs	r3, r2
 800f076:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f07a:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800f07e:	4611      	mov	r1, r2
 800f080:	4618      	mov	r0, r3
 800f082:	f7fe f9d3 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800f086:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800f08a:	4619      	mov	r1, r3
 800f08c:	4620      	mov	r0, r4
 800f08e:	f7fe fd2d 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    add(btn_save);
 800f092:	697a      	ldr	r2, [r7, #20]
 800f094:	697b      	ldr	r3, [r7, #20]
 800f096:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800f09a:	4619      	mov	r1, r3
 800f09c:	4610      	mov	r0, r2
 800f09e:	f7fe fc17 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_back.setXY(46, 180);
 800f0a2:	697b      	ldr	r3, [r7, #20]
 800f0a4:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800f0a8:	22b4      	movs	r2, #180	; 0xb4
 800f0aa:	212e      	movs	r1, #46	; 0x2e
 800f0ac:	4618      	mov	r0, r3
 800f0ae:	f7fe fac0 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_NORMAL_ID));
 800f0b2:	697b      	ldr	r3, [r7, #20]
 800f0b4:	f503 74dc 	add.w	r4, r3, #440	; 0x1b8
 800f0b8:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800f0bc:	2102      	movs	r1, #2
 800f0be:	4618      	mov	r0, r3
 800f0c0:	f7fe f9fa 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800f0c4:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800f0c8:	2102      	movs	r1, #2
 800f0ca:	4618      	mov	r0, r3
 800f0cc:	f7fe f9f4 	bl	800d4b8 <_ZN8touchgfx6BitmapC1Et>
 800f0d0:	f107 026c 	add.w	r2, r7, #108	; 0x6c
 800f0d4:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800f0d8:	4619      	mov	r1, r3
 800f0da:	4620      	mov	r0, r4
 800f0dc:	f004 fc74 	bl	80139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_back.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FJ9N));
 800f0e0:	697b      	ldr	r3, [r7, #20]
 800f0e2:	f503 74dc 	add.w	r4, r3, #440	; 0x1b8
 800f0e6:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800f0ea:	2103      	movs	r1, #3
 800f0ec:	4618      	mov	r0, r3
 800f0ee:	f7fe fc87 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800f0f2:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800f0f6:	4619      	mov	r1, r3
 800f0f8:	4620      	mov	r0, r4
 800f0fa:	f7fe fcd7 	bl	800daac <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800f0fe:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800f102:	4618      	mov	r0, r3
 800f104:	f7fc feda 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    btn_back.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800f108:	697b      	ldr	r3, [r7, #20]
 800f10a:	f503 74dc 	add.w	r4, r3, #440	; 0x1b8
 800f10e:	23ff      	movs	r3, #255	; 0xff
 800f110:	f887 30d5 	strb.w	r3, [r7, #213]	; 0xd5
 800f114:	23ff      	movs	r3, #255	; 0xff
 800f116:	f887 30d4 	strb.w	r3, [r7, #212]	; 0xd4
 800f11a:	23ff      	movs	r3, #255	; 0xff
 800f11c:	f887 30d3 	strb.w	r3, [r7, #211]	; 0xd3
 800f120:	f897 30d5 	ldrb.w	r3, [r7, #213]	; 0xd5
 800f124:	041b      	lsls	r3, r3, #16
 800f126:	461a      	mov	r2, r3
 800f128:	f897 30d4 	ldrb.w	r3, [r7, #212]	; 0xd4
 800f12c:	021b      	lsls	r3, r3, #8
 800f12e:	431a      	orrs	r2, r3
 800f130:	f897 30d3 	ldrb.w	r3, [r7, #211]	; 0xd3
 800f134:	4313      	orrs	r3, r2
 800f136:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f13a:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800f13e:	4611      	mov	r1, r2
 800f140:	4618      	mov	r0, r3
 800f142:	f7fe f973 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800f146:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800f14a:	4619      	mov	r1, r3
 800f14c:	4620      	mov	r0, r4
 800f14e:	f7fe fcbf 	bl	800dad0 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_back.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800f152:	697b      	ldr	r3, [r7, #20]
 800f154:	f503 74dc 	add.w	r4, r3, #440	; 0x1b8
 800f158:	23ff      	movs	r3, #255	; 0xff
 800f15a:	f887 30d8 	strb.w	r3, [r7, #216]	; 0xd8
 800f15e:	23ff      	movs	r3, #255	; 0xff
 800f160:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 800f164:	23ff      	movs	r3, #255	; 0xff
 800f166:	f887 30d6 	strb.w	r3, [r7, #214]	; 0xd6
 800f16a:	f897 30d8 	ldrb.w	r3, [r7, #216]	; 0xd8
 800f16e:	041b      	lsls	r3, r3, #16
 800f170:	461a      	mov	r2, r3
 800f172:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 800f176:	021b      	lsls	r3, r3, #8
 800f178:	431a      	orrs	r2, r3
 800f17a:	f897 30d6 	ldrb.w	r3, [r7, #214]	; 0xd6
 800f17e:	4313      	orrs	r3, r2
 800f180:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f184:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800f188:	4611      	mov	r1, r2
 800f18a:	4618      	mov	r0, r3
 800f18c:	f7fe f94e 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800f190:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f194:	4619      	mov	r1, r3
 800f196:	4620      	mov	r0, r4
 800f198:	f7fe fca8 	bl	800daec <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    add(btn_back);
 800f19c:	697a      	ldr	r2, [r7, #20]
 800f19e:	697b      	ldr	r3, [r7, #20]
 800f1a0:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800f1a4:	4619      	mov	r1, r3
 800f1a6:	4610      	mov	r0, r2
 800f1a8:	f7fe fb92 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text_option.setXY(122, 0);
 800f1ac:	697b      	ldr	r3, [r7, #20]
 800f1ae:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800f1b2:	2200      	movs	r2, #0
 800f1b4:	217a      	movs	r1, #122	; 0x7a
 800f1b6:	4618      	mov	r0, r3
 800f1b8:	f7fe fa3b 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
    text_option.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800f1bc:	697b      	ldr	r3, [r7, #20]
 800f1be:	f503 7400 	add.w	r4, r3, #512	; 0x200
 800f1c2:	23ff      	movs	r3, #255	; 0xff
 800f1c4:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800f1c8:	23ff      	movs	r3, #255	; 0xff
 800f1ca:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800f1ce:	23ff      	movs	r3, #255	; 0xff
 800f1d0:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800f1d4:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800f1d8:	041b      	lsls	r3, r3, #16
 800f1da:	461a      	mov	r2, r3
 800f1dc:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800f1e0:	021b      	lsls	r3, r3, #8
 800f1e2:	431a      	orrs	r2, r3
 800f1e4:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800f1e8:	4313      	orrs	r3, r2
 800f1ea:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f1ee:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800f1f2:	4611      	mov	r1, r2
 800f1f4:	4618      	mov	r0, r3
 800f1f6:	f7fe f919 	bl	800d42c <_ZN8touchgfx9colortypeC1Em>
 800f1fa:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800f1fe:	f8c7 40dc 	str.w	r4, [r7, #220]	; 0xdc
 800f202:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f204:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800f208:	69fa      	ldr	r2, [r7, #28]
 800f20a:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f20c:	bf00      	nop
    text_option.setLinespacing(0);
 800f20e:	697b      	ldr	r3, [r7, #20]
 800f210:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800f214:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800f218:	2300      	movs	r3, #0
 800f21a:	f8a7 30e2 	strh.w	r3, [r7, #226]	; 0xe2
        linespace = space;
 800f21e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800f222:	f8b7 20e2 	ldrh.w	r2, [r7, #226]	; 0xe2
 800f226:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f228:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800f22c:	681b      	ldr	r3, [r3, #0]
 800f22e:	3384      	adds	r3, #132	; 0x84
 800f230:	681b      	ldr	r3, [r3, #0]
 800f232:	f8d7 40e4 	ldr.w	r4, [r7, #228]	; 0xe4
 800f236:	463a      	mov	r2, r7
 800f238:	f8d7 10e4 	ldr.w	r1, [r7, #228]	; 0xe4
 800f23c:	4610      	mov	r0, r2
 800f23e:	4798      	blx	r3
 800f240:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f244:	463a      	mov	r2, r7
 800f246:	ca07      	ldmia	r2, {r0, r1, r2}
 800f248:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f24c:	bf00      	nop
    text_option.setTypedText(touchgfx::TypedText(T___SINGLEUSE_52X1));
 800f24e:	697b      	ldr	r3, [r7, #20]
 800f250:	f503 7400 	add.w	r4, r3, #512	; 0x200
 800f254:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800f258:	2107      	movs	r1, #7
 800f25a:	4618      	mov	r0, r3
 800f25c:	f7fe fbd0 	bl	800da00 <_ZN8touchgfx9TypedTextC1Et>
 800f260:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800f264:	4619      	mov	r1, r3
 800f266:	4620      	mov	r0, r4
 800f268:	f004 fb5c 	bl	8013924 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f26c:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800f270:	4618      	mov	r0, r3
 800f272:	f7fc fe23 	bl	800bebc <_ZN8touchgfx9TypedTextD1Ev>
    add(text_option);
 800f276:	697a      	ldr	r2, [r7, #20]
 800f278:	697b      	ldr	r3, [r7, #20]
 800f27a:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800f27e:	4619      	mov	r1, r3
 800f280:	4610      	mov	r0, r2
 800f282:	f7fe fb25 	bl	800d8d0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800f286:	697b      	ldr	r3, [r7, #20]
 800f288:	4618      	mov	r0, r3
 800f28a:	37ec      	adds	r7, #236	; 0xec
 800f28c:	46bd      	mov	sp, r7
 800f28e:	bd90      	pop	{r4, r7, pc}

0800f290 <_ZN23screen_settingsViewBaseD1Ev>:

screen_settingsViewBase::~screen_settingsViewBase()
 800f290:	b580      	push	{r7, lr}
 800f292:	b082      	sub	sp, #8
 800f294:	af00      	add	r7, sp, #0
 800f296:	6078      	str	r0, [r7, #4]
 800f298:	4a1e      	ldr	r2, [pc, #120]	; (800f314 <_ZN23screen_settingsViewBaseD1Ev+0x84>)
 800f29a:	687b      	ldr	r3, [r7, #4]
 800f29c:	601a      	str	r2, [r3, #0]
 800f29e:	687b      	ldr	r3, [r7, #4]
 800f2a0:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f2a4:	4618      	mov	r0, r3
 800f2a6:	f000 f8ab 	bl	800f400 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f2aa:	687b      	ldr	r3, [r7, #4]
 800f2ac:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800f2b0:	4618      	mov	r0, r3
 800f2b2:	f7ff f853 	bl	800e35c <_ZN8touchgfx8TextAreaD1Ev>
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800f2bc:	4618      	mov	r0, r3
 800f2be:	f7ff f825 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800f2c2:	687b      	ldr	r3, [r7, #4]
 800f2c4:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800f2c8:	4618      	mov	r0, r3
 800f2ca:	f7ff f81f 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800f2ce:	687b      	ldr	r3, [r7, #4]
 800f2d0:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800f2d4:	4618      	mov	r0, r3
 800f2d6:	f7ff f819 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800f2da:	687b      	ldr	r3, [r7, #4]
 800f2dc:	33e0      	adds	r3, #224	; 0xe0
 800f2de:	4618      	mov	r0, r3
 800f2e0:	f7ff f814 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800f2e4:	687b      	ldr	r3, [r7, #4]
 800f2e6:	3398      	adds	r3, #152	; 0x98
 800f2e8:	4618      	mov	r0, r3
 800f2ea:	f7ff f80f 	bl	800e30c <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	336c      	adds	r3, #108	; 0x6c
 800f2f2:	4618      	mov	r0, r3
 800f2f4:	f7fe ffc6 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	3340      	adds	r3, #64	; 0x40
 800f2fc:	4618      	mov	r0, r3
 800f2fe:	f7fe ffc1 	bl	800e284 <_ZN8touchgfx3BoxD1Ev>
 800f302:	687b      	ldr	r3, [r7, #4]
 800f304:	4618      	mov	r0, r3
 800f306:	f7ff fbcf 	bl	800eaa8 <_ZN8touchgfx4ViewI24screen_settingsPresenterED1Ev>
{

}
 800f30a:	687b      	ldr	r3, [r7, #4]
 800f30c:	4618      	mov	r0, r3
 800f30e:	3708      	adds	r7, #8
 800f310:	46bd      	mov	sp, r7
 800f312:	bd80      	pop	{r7, pc}
 800f314:	08028000 	.word	0x08028000

0800f318 <_ZN23screen_settingsViewBaseD0Ev>:
screen_settingsViewBase::~screen_settingsViewBase()
 800f318:	b580      	push	{r7, lr}
 800f31a:	b082      	sub	sp, #8
 800f31c:	af00      	add	r7, sp, #0
 800f31e:	6078      	str	r0, [r7, #4]
}
 800f320:	6878      	ldr	r0, [r7, #4]
 800f322:	f7ff ffb5 	bl	800f290 <_ZN23screen_settingsViewBaseD1Ev>
 800f326:	f44f 7116 	mov.w	r1, #600	; 0x258
 800f32a:	6878      	ldr	r0, [r7, #4]
 800f32c:	f016 fad3 	bl	80258d6 <_ZdlPvj>
 800f330:	687b      	ldr	r3, [r7, #4]
 800f332:	4618      	mov	r0, r3
 800f334:	3708      	adds	r7, #8
 800f336:	46bd      	mov	sp, r7
 800f338:	bd80      	pop	{r7, pc}

0800f33a <_ZN23screen_settingsViewBase11setupScreenEv>:

void screen_settingsViewBase::setupScreen()
{
 800f33a:	b480      	push	{r7}
 800f33c:	b083      	sub	sp, #12
 800f33e:	af00      	add	r7, sp, #0
 800f340:	6078      	str	r0, [r7, #4]

}
 800f342:	bf00      	nop
 800f344:	370c      	adds	r7, #12
 800f346:	46bd      	mov	sp, r7
 800f348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f34c:	4770      	bx	lr

0800f34e <_ZN23screen_settingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_settingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800f34e:	b580      	push	{r7, lr}
 800f350:	b082      	sub	sp, #8
 800f352:	af00      	add	r7, sp, #0
 800f354:	6078      	str	r0, [r7, #4]
 800f356:	6039      	str	r1, [r7, #0]
    if (&src == &btn_performance_mode)
 800f358:	687b      	ldr	r3, [r7, #4]
 800f35a:	3398      	adds	r3, #152	; 0x98
 800f35c:	683a      	ldr	r2, [r7, #0]
 800f35e:	429a      	cmp	r2, r3
 800f360:	d106      	bne.n	800f370 <_ZN23screen_settingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //To_perf_mode_screen
        //When btn_performance_mode clicked change screen to screen_perf_mode
        //Go to screen_perf_mode with no screen transition
        application().gotoscreen_perf_modeScreenNoTransition();
 800f362:	6878      	ldr	r0, [r7, #4]
 800f364:	f7ff fb95 	bl	800ea92 <_ZN23screen_settingsViewBase11applicationEv>
 800f368:	4603      	mov	r3, r0
 800f36a:	4618      	mov	r0, r3
 800f36c:	f7fd faee 	bl	800c94c <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv>
    }
    if (&src == &btn_info)
 800f370:	687b      	ldr	r3, [r7, #4]
 800f372:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800f376:	683a      	ldr	r2, [r7, #0]
 800f378:	429a      	cmp	r2, r3
 800f37a:	d106      	bne.n	800f38a <_ZN23screen_settingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
    {
        //To_info_screen
        //When btn_info clicked change screen to screen_info
        //Go to screen_info with no screen transition
        application().gotoscreen_infoScreenNoTransition();
 800f37c:	6878      	ldr	r0, [r7, #4]
 800f37e:	f7ff fb88 	bl	800ea92 <_ZN23screen_settingsViewBase11applicationEv>
 800f382:	4603      	mov	r3, r0
 800f384:	4618      	mov	r0, r3
 800f386:	f7fd fb27 	bl	800c9d8 <_ZN23FrontendApplicationBase33gotoscreen_infoScreenNoTransitionEv>
    }
}
 800f38a:	bf00      	nop
 800f38c:	3708      	adds	r7, #8
 800f38e:	46bd      	mov	sp, r7
 800f390:	bd80      	pop	{r7, pc}
	...

0800f394 <_ZN8touchgfx4ViewI24screen_settingsPresenterEC1Ev>:
    View()
 800f394:	b580      	push	{r7, lr}
 800f396:	b082      	sub	sp, #8
 800f398:	af00      	add	r7, sp, #0
 800f39a:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800f39c:	687b      	ldr	r3, [r7, #4]
 800f39e:	4618      	mov	r0, r3
 800f3a0:	f007 fc8e 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 800f3a4:	4a05      	ldr	r2, [pc, #20]	; (800f3bc <_ZN8touchgfx4ViewI24screen_settingsPresenterEC1Ev+0x28>)
 800f3a6:	687b      	ldr	r3, [r7, #4]
 800f3a8:	601a      	str	r2, [r3, #0]
 800f3aa:	687b      	ldr	r3, [r7, #4]
 800f3ac:	2200      	movs	r2, #0
 800f3ae:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800f3b0:	687b      	ldr	r3, [r7, #4]
 800f3b2:	4618      	mov	r0, r3
 800f3b4:	3708      	adds	r7, #8
 800f3b6:	46bd      	mov	sp, r7
 800f3b8:	bd80      	pop	{r7, pc}
 800f3ba:	bf00      	nop
 800f3bc:	0802804c 	.word	0x0802804c

0800f3c0 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800f3c0:	b580      	push	{r7, lr}
 800f3c2:	b084      	sub	sp, #16
 800f3c4:	af00      	add	r7, sp, #0
 800f3c6:	60f8      	str	r0, [r7, #12]
 800f3c8:	60b9      	str	r1, [r7, #8]
 800f3ca:	4639      	mov	r1, r7
 800f3cc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800f3d0:	68fb      	ldr	r3, [r7, #12]
 800f3d2:	4618      	mov	r0, r3
 800f3d4:	f7fe fec2 	bl	800e15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800f3d8:	4a08      	ldr	r2, [pc, #32]	; (800f3fc <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800f3da:	68fb      	ldr	r3, [r7, #12]
 800f3dc:	601a      	str	r2, [r3, #0]
 800f3de:	68fb      	ldr	r3, [r7, #12]
 800f3e0:	68ba      	ldr	r2, [r7, #8]
 800f3e2:	605a      	str	r2, [r3, #4]
 800f3e4:	68fb      	ldr	r3, [r7, #12]
 800f3e6:	3308      	adds	r3, #8
 800f3e8:	463a      	mov	r2, r7
 800f3ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f3ee:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800f3f2:	68fb      	ldr	r3, [r7, #12]
 800f3f4:	4618      	mov	r0, r3
 800f3f6:	3710      	adds	r7, #16
 800f3f8:	46bd      	mov	sp, r7
 800f3fa:	bd80      	pop	{r7, pc}
 800f3fc:	08028034 	.word	0x08028034

0800f400 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f400:	b580      	push	{r7, lr}
 800f402:	b082      	sub	sp, #8
 800f404:	af00      	add	r7, sp, #0
 800f406:	6078      	str	r0, [r7, #4]
 800f408:	4a05      	ldr	r2, [pc, #20]	; (800f420 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	601a      	str	r2, [r3, #0]
 800f40e:	687b      	ldr	r3, [r7, #4]
 800f410:	4618      	mov	r0, r3
 800f412:	f7fe fed3 	bl	800e1bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800f416:	687b      	ldr	r3, [r7, #4]
 800f418:	4618      	mov	r0, r3
 800f41a:	3708      	adds	r7, #8
 800f41c:	46bd      	mov	sp, r7
 800f41e:	bd80      	pop	{r7, pc}
 800f420:	08028034 	.word	0x08028034

0800f424 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800f424:	b580      	push	{r7, lr}
 800f426:	b082      	sub	sp, #8
 800f428:	af00      	add	r7, sp, #0
 800f42a:	6078      	str	r0, [r7, #4]
 800f42c:	6878      	ldr	r0, [r7, #4]
 800f42e:	f7ff ffe7 	bl	800f400 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f432:	2110      	movs	r1, #16
 800f434:	6878      	ldr	r0, [r7, #4]
 800f436:	f016 fa4e 	bl	80258d6 <_ZdlPvj>
 800f43a:	687b      	ldr	r3, [r7, #4]
 800f43c:	4618      	mov	r0, r3
 800f43e:	3708      	adds	r7, #8
 800f440:	46bd      	mov	sp, r7
 800f442:	bd80      	pop	{r7, pc}

0800f444 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f444:	b580      	push	{r7, lr}
 800f446:	b082      	sub	sp, #8
 800f448:	af00      	add	r7, sp, #0
 800f44a:	6078      	str	r0, [r7, #4]
 800f44c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f44e:	687b      	ldr	r3, [r7, #4]
 800f450:	685b      	ldr	r3, [r3, #4]
 800f452:	687a      	ldr	r2, [r7, #4]
 800f454:	68d2      	ldr	r2, [r2, #12]
 800f456:	1052      	asrs	r2, r2, #1
 800f458:	1898      	adds	r0, r3, r2
 800f45a:	687b      	ldr	r3, [r7, #4]
 800f45c:	68db      	ldr	r3, [r3, #12]
 800f45e:	f003 0301 	and.w	r3, r3, #1
 800f462:	2b00      	cmp	r3, #0
 800f464:	d102      	bne.n	800f46c <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	689b      	ldr	r3, [r3, #8]
 800f46a:	e00a      	b.n	800f482 <_ZN8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f46c:	687b      	ldr	r3, [r7, #4]
 800f46e:	685b      	ldr	r3, [r3, #4]
 800f470:	687a      	ldr	r2, [r7, #4]
 800f472:	68d2      	ldr	r2, [r2, #12]
 800f474:	1052      	asrs	r2, r2, #1
 800f476:	4413      	add	r3, r2
 800f478:	681b      	ldr	r3, [r3, #0]
 800f47a:	687a      	ldr	r2, [r7, #4]
 800f47c:	6892      	ldr	r2, [r2, #8]
 800f47e:	4413      	add	r3, r2
 800f480:	681b      	ldr	r3, [r3, #0]
 800f482:	6839      	ldr	r1, [r7, #0]
 800f484:	4798      	blx	r3
    }
 800f486:	bf00      	nop
 800f488:	3708      	adds	r7, #8
 800f48a:	46bd      	mov	sp, r7
 800f48c:	bd80      	pop	{r7, pc}

0800f48e <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f48e:	b480      	push	{r7}
 800f490:	b083      	sub	sp, #12
 800f492:	af00      	add	r7, sp, #0
 800f494:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f496:	687b      	ldr	r3, [r7, #4]
 800f498:	685b      	ldr	r3, [r3, #4]
 800f49a:	2b00      	cmp	r3, #0
 800f49c:	d010      	beq.n	800f4c0 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f49e:	687b      	ldr	r3, [r7, #4]
 800f4a0:	689b      	ldr	r3, [r3, #8]
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	d107      	bne.n	800f4b6 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f4a6:	687b      	ldr	r3, [r7, #4]
 800f4a8:	68db      	ldr	r3, [r3, #12]
 800f4aa:	f003 0301 	and.w	r3, r3, #1
 800f4ae:	2b00      	cmp	r3, #0
 800f4b0:	d101      	bne.n	800f4b6 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f4b2:	2301      	movs	r3, #1
 800f4b4:	e000      	b.n	800f4b8 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f4b6:	2300      	movs	r3, #0
 800f4b8:	2b01      	cmp	r3, #1
 800f4ba:	d001      	beq.n	800f4c0 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f4bc:	2301      	movs	r3, #1
 800f4be:	e000      	b.n	800f4c2 <_ZNK8touchgfx8CallbackI23screen_settingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f4c0:	2300      	movs	r3, #0
    }
 800f4c2:	4618      	mov	r0, r3
 800f4c4:	370c      	adds	r7, #12
 800f4c6:	46bd      	mov	sp, r7
 800f4c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4cc:	4770      	bx	lr
	...

0800f4d0 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800f4d0:	b480      	push	{r7}
 800f4d2:	af00      	add	r7, sp, #0
    return bitmap_database;
 800f4d4:	4b02      	ldr	r3, [pc, #8]	; (800f4e0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800f4d6:	4618      	mov	r0, r3
 800f4d8:	46bd      	mov	sp, r7
 800f4da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4de:	4770      	bx	lr
 800f4e0:	08028078 	.word	0x08028078

0800f4e4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800f4e4:	b480      	push	{r7}
 800f4e6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800f4e8:	2304      	movs	r3, #4
}
 800f4ea:	4618      	mov	r0, r3
 800f4ec:	46bd      	mov	sp, r7
 800f4ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4f2:	4770      	bx	lr

0800f4f4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800f4f4:	b480      	push	{r7}
 800f4f6:	b085      	sub	sp, #20
 800f4f8:	af00      	add	r7, sp, #0
 800f4fa:	60f8      	str	r0, [r7, #12]
 800f4fc:	460b      	mov	r3, r1
 800f4fe:	607a      	str	r2, [r7, #4]
 800f500:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800f502:	2300      	movs	r3, #0
    }
 800f504:	4618      	mov	r0, r3
 800f506:	3714      	adds	r7, #20
 800f508:	46bd      	mov	sp, r7
 800f50a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f50e:	4770      	bx	lr

0800f510 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800f510:	b480      	push	{r7}
 800f512:	b083      	sub	sp, #12
 800f514:	af00      	add	r7, sp, #0
 800f516:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f518:	2300      	movs	r3, #0
    }
 800f51a:	4618      	mov	r0, r3
 800f51c:	370c      	adds	r7, #12
 800f51e:	46bd      	mov	sp, r7
 800f520:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f524:	4770      	bx	lr

0800f526 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800f526:	b480      	push	{r7}
 800f528:	b083      	sub	sp, #12
 800f52a:	af00      	add	r7, sp, #0
 800f52c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f52e:	2300      	movs	r3, #0
    }
 800f530:	4618      	mov	r0, r3
 800f532:	370c      	adds	r7, #12
 800f534:	46bd      	mov	sp, r7
 800f536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f53a:	4770      	bx	lr

0800f53c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800f53c:	b480      	push	{r7}
 800f53e:	b085      	sub	sp, #20
 800f540:	af00      	add	r7, sp, #0
 800f542:	60f8      	str	r0, [r7, #12]
 800f544:	60b9      	str	r1, [r7, #8]
 800f546:	4613      	mov	r3, r2
 800f548:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800f54a:	4a07      	ldr	r2, [pc, #28]	; (800f568 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800f54c:	68fb      	ldr	r3, [r7, #12]
 800f54e:	6013      	str	r3, [r2, #0]
        fonts = f;
 800f550:	4a06      	ldr	r2, [pc, #24]	; (800f56c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800f552:	68bb      	ldr	r3, [r7, #8]
 800f554:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800f556:	4a06      	ldr	r2, [pc, #24]	; (800f570 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800f558:	88fb      	ldrh	r3, [r7, #6]
 800f55a:	8013      	strh	r3, [r2, #0]
    }
 800f55c:	bf00      	nop
 800f55e:	3714      	adds	r7, #20
 800f560:	46bd      	mov	sp, r7
 800f562:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f566:	4770      	bx	lr
 800f568:	24002ff4 	.word	0x24002ff4
 800f56c:	24002ffc 	.word	0x24002ffc
 800f570:	24002ff8 	.word	0x24002ff8

0800f574 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f574:	b40e      	push	{r1, r2, r3}
 800f576:	b580      	push	{r7, lr}
 800f578:	b085      	sub	sp, #20
 800f57a:	af00      	add	r7, sp, #0
 800f57c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800f57e:	f107 0320 	add.w	r3, r7, #32
 800f582:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800f584:	68bb      	ldr	r3, [r7, #8]
 800f586:	69fa      	ldr	r2, [r7, #28]
 800f588:	2100      	movs	r1, #0
 800f58a:	6878      	ldr	r0, [r7, #4]
 800f58c:	f006 ffce 	bl	801652c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f590:	4603      	mov	r3, r0
 800f592:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f594:	89fb      	ldrh	r3, [r7, #14]
}
 800f596:	4618      	mov	r0, r3
 800f598:	3714      	adds	r7, #20
 800f59a:	46bd      	mov	sp, r7
 800f59c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f5a0:	b003      	add	sp, #12
 800f5a2:	4770      	bx	lr

0800f5a4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f5a4:	b40c      	push	{r2, r3}
 800f5a6:	b580      	push	{r7, lr}
 800f5a8:	b084      	sub	sp, #16
 800f5aa:	af00      	add	r7, sp, #0
 800f5ac:	6078      	str	r0, [r7, #4]
 800f5ae:	460b      	mov	r3, r1
 800f5b0:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800f5b2:	f107 031c 	add.w	r3, r7, #28
 800f5b6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800f5b8:	78f9      	ldrb	r1, [r7, #3]
 800f5ba:	68bb      	ldr	r3, [r7, #8]
 800f5bc:	69ba      	ldr	r2, [r7, #24]
 800f5be:	6878      	ldr	r0, [r7, #4]
 800f5c0:	f006 ffb4 	bl	801652c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f5c4:	4603      	mov	r3, r0
 800f5c6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f5c8:	89fb      	ldrh	r3, [r7, #14]
}
 800f5ca:	4618      	mov	r0, r3
 800f5cc:	3710      	adds	r7, #16
 800f5ce:	46bd      	mov	sp, r7
 800f5d0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f5d4:	b002      	add	sp, #8
 800f5d6:	4770      	bx	lr

0800f5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800f5d8:	b580      	push	{r7, lr}
 800f5da:	b08a      	sub	sp, #40	; 0x28
 800f5dc:	af00      	add	r7, sp, #0
 800f5de:	6078      	str	r0, [r7, #4]
 800f5e0:	460b      	mov	r3, r1
 800f5e2:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800f5e4:	687b      	ldr	r3, [r7, #4]
 800f5e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f5e8:	2b00      	cmp	r3, #0
 800f5ea:	d016      	beq.n	800f61a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f5ec:	687b      	ldr	r3, [r7, #4]
 800f5ee:	3322      	adds	r3, #34	; 0x22
 800f5f0:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800f5f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5f4:	8adb      	ldrh	r3, [r3, #22]
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	d105      	bne.n	800f606 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800f5fa:	4b43      	ldr	r3, [pc, #268]	; (800f708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f5fc:	4a43      	ldr	r2, [pc, #268]	; (800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f5fe:	21c5      	movs	r1, #197	; 0xc5
 800f600:	4843      	ldr	r0, [pc, #268]	; (800f710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f602:	f016 f997 	bl	8025934 <__assert_func>
            return buffer[pos];
 800f606:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f608:	8a9b      	ldrh	r3, [r3, #20]
 800f60a:	461a      	mov	r2, r3
 800f60c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f60e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800f612:	2b00      	cmp	r3, #0
 800f614:	d001      	beq.n	800f61a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f616:	2301      	movs	r3, #1
 800f618:	e000      	b.n	800f61c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800f61a:	2300      	movs	r3, #0
 800f61c:	2b00      	cmp	r3, #0
 800f61e:	d06a      	beq.n	800f6f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800f620:	6878      	ldr	r0, [r7, #4]
 800f622:	f008 fa29 	bl	8017a78 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	3322      	adds	r3, #34	; 0x22
 800f62a:	623b      	str	r3, [r7, #32]
 800f62c:	2301      	movs	r3, #1
 800f62e:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800f630:	6a3b      	ldr	r3, [r7, #32]
 800f632:	8adb      	ldrh	r3, [r3, #22]
 800f634:	8bfa      	ldrh	r2, [r7, #30]
 800f636:	429a      	cmp	r2, r3
 800f638:	d305      	bcc.n	800f646 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800f63a:	4b36      	ldr	r3, [pc, #216]	; (800f714 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800f63c:	4a36      	ldr	r2, [pc, #216]	; (800f718 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800f63e:	21cb      	movs	r1, #203	; 0xcb
 800f640:	4833      	ldr	r0, [pc, #204]	; (800f710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f642:	f016 f977 	bl	8025934 <__assert_func>
            const uint16_t index = pos + offset;
 800f646:	6a3b      	ldr	r3, [r7, #32]
 800f648:	8a9a      	ldrh	r2, [r3, #20]
 800f64a:	8bfb      	ldrh	r3, [r7, #30]
 800f64c:	4413      	add	r3, r2
 800f64e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800f650:	8bbb      	ldrh	r3, [r7, #28]
 800f652:	2b09      	cmp	r3, #9
 800f654:	d801      	bhi.n	800f65a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800f656:	8bbb      	ldrh	r3, [r7, #28]
 800f658:	e001      	b.n	800f65e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800f65a:	8bbb      	ldrh	r3, [r7, #28]
 800f65c:	3b0a      	subs	r3, #10
 800f65e:	6a3a      	ldr	r2, [r7, #32]
 800f660:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800f664:	f640 123f 	movw	r2, #2367	; 0x93f
 800f668:	4293      	cmp	r3, r2
 800f66a:	bf0c      	ite	eq
 800f66c:	2301      	moveq	r3, #1
 800f66e:	2300      	movne	r3, #0
 800f670:	b2db      	uxtb	r3, r3
 800f672:	2b00      	cmp	r3, #0
 800f674:	d03f      	beq.n	800f6f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	3322      	adds	r3, #34	; 0x22
 800f67a:	687a      	ldr	r2, [r7, #4]
 800f67c:	3222      	adds	r2, #34	; 0x22
 800f67e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800f680:	68ba      	ldr	r2, [r7, #8]
 800f682:	8ad2      	ldrh	r2, [r2, #22]
 800f684:	2a00      	cmp	r2, #0
 800f686:	d105      	bne.n	800f694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800f688:	4b1f      	ldr	r3, [pc, #124]	; (800f708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f68a:	4a20      	ldr	r2, [pc, #128]	; (800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f68c:	21c5      	movs	r1, #197	; 0xc5
 800f68e:	4820      	ldr	r0, [pc, #128]	; (800f710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f690:	f016 f950 	bl	8025934 <__assert_func>
            return buffer[pos];
 800f694:	68ba      	ldr	r2, [r7, #8]
 800f696:	8a92      	ldrh	r2, [r2, #20]
 800f698:	4611      	mov	r1, r2
 800f69a:	68ba      	ldr	r2, [r7, #8]
 800f69c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800f6a0:	613b      	str	r3, [r7, #16]
 800f6a2:	4613      	mov	r3, r2
 800f6a4:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800f6a6:	693b      	ldr	r3, [r7, #16]
 800f6a8:	8adb      	ldrh	r3, [r3, #22]
 800f6aa:	2b01      	cmp	r3, #1
 800f6ac:	d806      	bhi.n	800f6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800f6ae:	4b1b      	ldr	r3, [pc, #108]	; (800f71c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800f6b0:	4a1b      	ldr	r2, [pc, #108]	; (800f720 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800f6b2:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800f6b6:	4816      	ldr	r0, [pc, #88]	; (800f710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f6b8:	f016 f93c 	bl	8025934 <__assert_func>
            const uint16_t index = pos + 1;
 800f6bc:	693b      	ldr	r3, [r7, #16]
 800f6be:	8a9b      	ldrh	r3, [r3, #20]
 800f6c0:	3301      	adds	r3, #1
 800f6c2:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800f6c4:	89bb      	ldrh	r3, [r7, #12]
 800f6c6:	2b09      	cmp	r3, #9
 800f6c8:	d801      	bhi.n	800f6ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800f6ca:	89bb      	ldrh	r3, [r7, #12]
 800f6cc:	e000      	b.n	800f6d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800f6ce:	2300      	movs	r3, #0
 800f6d0:	693a      	ldr	r2, [r7, #16]
 800f6d2:	89f9      	ldrh	r1, [r7, #14]
 800f6d4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800f6d8:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800f6da:	687b      	ldr	r3, [r7, #4]
 800f6dc:	3322      	adds	r3, #34	; 0x22
 800f6de:	61bb      	str	r3, [r7, #24]
 800f6e0:	f640 133f 	movw	r3, #2367	; 0x93f
 800f6e4:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800f6e6:	69bb      	ldr	r3, [r7, #24]
 800f6e8:	8a9b      	ldrh	r3, [r3, #20]
 800f6ea:	4619      	mov	r1, r3
 800f6ec:	69bb      	ldr	r3, [r7, #24]
 800f6ee:	8afa      	ldrh	r2, [r7, #22]
 800f6f0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800f6f4:	bf00      	nop
        }
    }
    return getNextChar();
 800f6f6:	6878      	ldr	r0, [r7, #4]
 800f6f8:	f008 f8c0 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f6fc:	4603      	mov	r3, r0
}
 800f6fe:	4618      	mov	r0, r3
 800f700:	3728      	adds	r7, #40	; 0x28
 800f702:	46bd      	mov	sp, r7
 800f704:	bd80      	pop	{r7, pc}
 800f706:	bf00      	nop
 800f708:	08027030 	.word	0x08027030
 800f70c:	0802703c 	.word	0x0802703c
 800f710:	080270e8 	.word	0x080270e8
 800f714:	08027130 	.word	0x08027130
 800f718:	08027140 	.word	0x08027140
 800f71c:	08027214 	.word	0x08027214
 800f720:	08027220 	.word	0x08027220

0800f724 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800f724:	b580      	push	{r7, lr}
 800f726:	b082      	sub	sp, #8
 800f728:	af00      	add	r7, sp, #0
 800f72a:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800f72c:	6878      	ldr	r0, [r7, #4]
 800f72e:	f008 f86e 	bl	801780e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800f732:	bf00      	nop
 800f734:	3708      	adds	r7, #8
 800f736:	46bd      	mov	sp, r7
 800f738:	bd80      	pop	{r7, pc}

0800f73a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800f73a:	b580      	push	{r7, lr}
 800f73c:	b088      	sub	sp, #32
 800f73e:	af02      	add	r7, sp, #8
 800f740:	60f8      	str	r0, [r7, #12]
 800f742:	1d38      	adds	r0, r7, #4
 800f744:	e880 0006 	stmia.w	r0, {r1, r2}
 800f748:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800f74a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f74e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800f750:	1d39      	adds	r1, r7, #4
 800f752:	697b      	ldr	r3, [r7, #20]
 800f754:	9301      	str	r3, [sp, #4]
 800f756:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f758:	9300      	str	r3, [sp, #0]
 800f75a:	6a3b      	ldr	r3, [r7, #32]
 800f75c:	683a      	ldr	r2, [r7, #0]
 800f75e:	68f8      	ldr	r0, [r7, #12]
 800f760:	f005 fb3e 	bl	8014de0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800f764:	bf00      	nop
 800f766:	3718      	adds	r7, #24
 800f768:	46bd      	mov	sp, r7
 800f76a:	bd80      	pop	{r7, pc}

0800f76c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800f76c:	b590      	push	{r4, r7, lr}
 800f76e:	b085      	sub	sp, #20
 800f770:	af00      	add	r7, sp, #0
 800f772:	4603      	mov	r3, r0
 800f774:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800f776:	2300      	movs	r3, #0
 800f778:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800f77a:	88fb      	ldrh	r3, [r7, #6]
 800f77c:	2b00      	cmp	r3, #0
 800f77e:	d127      	bne.n	800f7d0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800f780:	88fb      	ldrh	r3, [r7, #6]
 800f782:	4a1e      	ldr	r2, [pc, #120]	; (800f7fc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f784:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f788:	2b00      	cmp	r3, #0
 800f78a:	d016      	beq.n	800f7ba <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800f78c:	88fb      	ldrh	r3, [r7, #6]
 800f78e:	4a1b      	ldr	r2, [pc, #108]	; (800f7fc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f790:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f794:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800f796:	68bb      	ldr	r3, [r7, #8]
 800f798:	681b      	ldr	r3, [r3, #0]
 800f79a:	68ba      	ldr	r2, [r7, #8]
 800f79c:	4413      	add	r3, r2
 800f79e:	4a18      	ldr	r2, [pc, #96]	; (800f800 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f7a0:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800f7a2:	68bb      	ldr	r3, [r7, #8]
 800f7a4:	685b      	ldr	r3, [r3, #4]
 800f7a6:	68ba      	ldr	r2, [r7, #8]
 800f7a8:	4413      	add	r3, r2
 800f7aa:	4a16      	ldr	r2, [pc, #88]	; (800f804 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f7ac:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800f7ae:	68bb      	ldr	r3, [r7, #8]
 800f7b0:	689b      	ldr	r3, [r3, #8]
 800f7b2:	68ba      	ldr	r2, [r7, #8]
 800f7b4:	4413      	add	r3, r2
 800f7b6:	60fb      	str	r3, [r7, #12]
 800f7b8:	e00a      	b.n	800f7d0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800f7ba:	4b11      	ldr	r3, [pc, #68]	; (800f800 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f7bc:	4a12      	ldr	r2, [pc, #72]	; (800f808 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800f7be:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800f7c0:	4a12      	ldr	r2, [pc, #72]	; (800f80c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800f7c2:	4b10      	ldr	r3, [pc, #64]	; (800f804 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f7c4:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800f7c6:	88fb      	ldrh	r3, [r7, #6]
 800f7c8:	4a11      	ldr	r2, [pc, #68]	; (800f810 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800f7ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f7ce:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800f7d0:	68fb      	ldr	r3, [r7, #12]
 800f7d2:	2b00      	cmp	r3, #0
 800f7d4:	d00d      	beq.n	800f7f2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800f7d6:	4a0f      	ldr	r2, [pc, #60]	; (800f814 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800f7d8:	88fb      	ldrh	r3, [r7, #6]
 800f7da:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800f7dc:	f000 f83e 	bl	800f85c <_ZN17TypedTextDatabase8getFontsEv>
 800f7e0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800f7e2:	f000 f833 	bl	800f84c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800f7e6:	4603      	mov	r3, r0
 800f7e8:	461a      	mov	r2, r3
 800f7ea:	4621      	mov	r1, r4
 800f7ec:	68f8      	ldr	r0, [r7, #12]
 800f7ee:	f7ff fea5 	bl	800f53c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800f7f2:	bf00      	nop
 800f7f4:	3714      	adds	r7, #20
 800f7f6:	46bd      	mov	sp, r7
 800f7f8:	bd90      	pop	{r4, r7, pc}
 800f7fa:	bf00      	nop
 800f7fc:	24000460 	.word	0x24000460
 800f800:	24000468 	.word	0x24000468
 800f804:	2400046c 	.word	0x2400046c
 800f808:	0804c7d8 	.word	0x0804c7d8
 800f80c:	0804c7ac 	.word	0x0804c7ac
 800f810:	0804c860 	.word	0x0804c860
 800f814:	24000464 	.word	0x24000464

0800f818 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800f818:	b480      	push	{r7}
 800f81a:	b083      	sub	sp, #12
 800f81c:	af00      	add	r7, sp, #0
 800f81e:	6078      	str	r0, [r7, #4]
 800f820:	460b      	mov	r3, r1
 800f822:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800f824:	4b07      	ldr	r3, [pc, #28]	; (800f844 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800f826:	681a      	ldr	r2, [r3, #0]
 800f828:	4b07      	ldr	r3, [pc, #28]	; (800f848 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800f82a:	6819      	ldr	r1, [r3, #0]
 800f82c:	887b      	ldrh	r3, [r7, #2]
 800f82e:	009b      	lsls	r3, r3, #2
 800f830:	440b      	add	r3, r1
 800f832:	681b      	ldr	r3, [r3, #0]
 800f834:	005b      	lsls	r3, r3, #1
 800f836:	4413      	add	r3, r2
}
 800f838:	4618      	mov	r0, r3
 800f83a:	370c      	adds	r7, #12
 800f83c:	46bd      	mov	sp, r7
 800f83e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f842:	4770      	bx	lr
 800f844:	24000468 	.word	0x24000468
 800f848:	2400046c 	.word	0x2400046c

0800f84c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800f84c:	b480      	push	{r7}
 800f84e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800f850:	230b      	movs	r3, #11
}
 800f852:	4618      	mov	r0, r3
 800f854:	46bd      	mov	sp, r7
 800f856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f85a:	4770      	bx	lr

0800f85c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800f85c:	b480      	push	{r7}
 800f85e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800f860:	4b02      	ldr	r3, [pc, #8]	; (800f86c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800f862:	4618      	mov	r0, r3
 800f864:	46bd      	mov	sp, r7
 800f866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f86a:	4770      	bx	lr
 800f86c:	24000470 	.word	0x24000470

0800f870 <_Z41__static_initialization_and_destruction_0ii>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_200_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800f870:	b580      	push	{r7, lr}
 800f872:	b082      	sub	sp, #8
 800f874:	af00      	add	r7, sp, #0
 800f876:	6078      	str	r0, [r7, #4]
 800f878:	6039      	str	r1, [r7, #0]
 800f87a:	687b      	ldr	r3, [r7, #4]
 800f87c:	2b01      	cmp	r3, #1
 800f87e:	d118      	bne.n	800f8b2 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800f880:	683b      	ldr	r3, [r7, #0]
 800f882:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f886:	4293      	cmp	r3, r2
 800f888:	d113      	bne.n	800f8b2 <_Z41__static_initialization_and_destruction_0ii+0x42>
    &(getFont_verdana_20_4bpp()),
 800f88a:	f7fc fcad 	bl	800c1e8 <_Z23getFont_verdana_20_4bppv>
 800f88e:	4603      	mov	r3, r0
};
 800f890:	4a0a      	ldr	r2, [pc, #40]	; (800f8bc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800f892:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800f894:	f7fc fd02 	bl	800c29c <_Z23getFont_verdana_40_4bppv>
 800f898:	4603      	mov	r3, r0
};
 800f89a:	4a08      	ldr	r2, [pc, #32]	; (800f8bc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800f89c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp()),
 800f89e:	f7fc fbef 	bl	800c080 <_Z23getFont_verdana_10_4bppv>
 800f8a2:	4603      	mov	r3, r0
};
 800f8a4:	4a05      	ldr	r2, [pc, #20]	; (800f8bc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800f8a6:	6093      	str	r3, [r2, #8]
    &(getFont_verdana_200_4bpp())
 800f8a8:	f7fc fc44 	bl	800c134 <_Z24getFont_verdana_200_4bppv>
 800f8ac:	4603      	mov	r3, r0
};
 800f8ae:	4a03      	ldr	r2, [pc, #12]	; (800f8bc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800f8b0:	60d3      	str	r3, [r2, #12]
} // namespace TypedTextDatabase
 800f8b2:	bf00      	nop
 800f8b4:	3708      	adds	r7, #8
 800f8b6:	46bd      	mov	sp, r7
 800f8b8:	bd80      	pop	{r7, pc}
 800f8ba:	bf00      	nop
 800f8bc:	24000470 	.word	0x24000470

0800f8c0 <_GLOBAL__sub_I_touchgfx_fonts>:
 800f8c0:	b580      	push	{r7, lr}
 800f8c2:	af00      	add	r7, sp, #0
 800f8c4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f8c8:	2001      	movs	r0, #1
 800f8ca:	f7ff ffd1 	bl	800f870 <_Z41__static_initialization_and_destruction_0ii>
 800f8ce:	bd80      	pop	{r7, pc}

0800f8d0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800f8d0:	b580      	push	{r7, lr}
 800f8d2:	b082      	sub	sp, #8
 800f8d4:	af00      	add	r7, sp, #0
 800f8d6:	6078      	str	r0, [r7, #4]
 800f8d8:	4a05      	ldr	r2, [pc, #20]	; (800f8f0 <_ZN19FrontendApplicationD1Ev+0x20>)
 800f8da:	687b      	ldr	r3, [r7, #4]
 800f8dc:	601a      	str	r2, [r3, #0]
 800f8de:	687b      	ldr	r3, [r7, #4]
 800f8e0:	4618      	mov	r0, r3
 800f8e2:	f7fc ff3b 	bl	800c75c <_ZN23FrontendApplicationBaseD1Ev>
 800f8e6:	687b      	ldr	r3, [r7, #4]
 800f8e8:	4618      	mov	r0, r3
 800f8ea:	3708      	adds	r7, #8
 800f8ec:	46bd      	mov	sp, r7
 800f8ee:	bd80      	pop	{r7, pc}
 800f8f0:	0802812c 	.word	0x0802812c

0800f8f4 <_ZN19FrontendApplicationD0Ev>:
 800f8f4:	b580      	push	{r7, lr}
 800f8f6:	b082      	sub	sp, #8
 800f8f8:	af00      	add	r7, sp, #0
 800f8fa:	6078      	str	r0, [r7, #4]
 800f8fc:	6878      	ldr	r0, [r7, #4]
 800f8fe:	f7ff ffe7 	bl	800f8d0 <_ZN19FrontendApplicationD1Ev>
 800f902:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800f906:	6878      	ldr	r0, [r7, #4]
 800f908:	f015 ffe5 	bl	80258d6 <_ZdlPvj>
 800f90c:	687b      	ldr	r3, [r7, #4]
 800f90e:	4618      	mov	r0, r3
 800f910:	3708      	adds	r7, #8
 800f912:	46bd      	mov	sp, r7
 800f914:	bd80      	pop	{r7, pc}

0800f916 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800f916:	b580      	push	{r7, lr}
 800f918:	b082      	sub	sp, #8
 800f91a:	af00      	add	r7, sp, #0
 800f91c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800f924:	4618      	mov	r0, r3
 800f926:	f000 f82d 	bl	800f984 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800f92a:	687b      	ldr	r3, [r7, #4]
 800f92c:	4618      	mov	r0, r3
 800f92e:	f005 ff31 	bl	8015794 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800f932:	bf00      	nop
 800f934:	3708      	adds	r7, #8
 800f936:	46bd      	mov	sp, r7
 800f938:	bd80      	pop	{r7, pc}
	...

0800f93c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800f93c:	b580      	push	{r7, lr}
 800f93e:	b084      	sub	sp, #16
 800f940:	af00      	add	r7, sp, #0
 800f942:	60f8      	str	r0, [r7, #12]
 800f944:	60b9      	str	r1, [r7, #8]
 800f946:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800f948:	68fb      	ldr	r3, [r7, #12]
 800f94a:	687a      	ldr	r2, [r7, #4]
 800f94c:	68b9      	ldr	r1, [r7, #8]
 800f94e:	4618      	mov	r0, r3
 800f950:	f7fc ff54 	bl	800c7fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800f954:	4a03      	ldr	r2, [pc, #12]	; (800f964 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800f956:	68fb      	ldr	r3, [r7, #12]
 800f958:	601a      	str	r2, [r3, #0]
{

}
 800f95a:	68fb      	ldr	r3, [r7, #12]
 800f95c:	4618      	mov	r0, r3
 800f95e:	3710      	adds	r7, #16
 800f960:	46bd      	mov	sp, r7
 800f962:	bd80      	pop	{r7, pc}
 800f964:	0802812c 	.word	0x0802812c

0800f968 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800f968:	b480      	push	{r7}
 800f96a:	b083      	sub	sp, #12
 800f96c:	af00      	add	r7, sp, #0
 800f96e:	6078      	str	r0, [r7, #4]
 800f970:	687b      	ldr	r3, [r7, #4]
 800f972:	2200      	movs	r2, #0
 800f974:	601a      	str	r2, [r3, #0]
{

}
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	4618      	mov	r0, r3
 800f97a:	370c      	adds	r7, #12
 800f97c:	46bd      	mov	sp, r7
 800f97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f982:	4770      	bx	lr

0800f984 <_ZN5Model4tickEv>:

void Model::tick()
{
 800f984:	b480      	push	{r7}
 800f986:	b083      	sub	sp, #12
 800f988:	af00      	add	r7, sp, #0
 800f98a:	6078      	str	r0, [r7, #4]

}
 800f98c:	bf00      	nop
 800f98e:	370c      	adds	r7, #12
 800f990:	46bd      	mov	sp, r7
 800f992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f996:	4770      	bx	lr

0800f998 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800f998:	b480      	push	{r7}
 800f99a:	b083      	sub	sp, #12
 800f99c:	af00      	add	r7, sp, #0
 800f99e:	6078      	str	r0, [r7, #4]
    {
    }
 800f9a0:	bf00      	nop
 800f9a2:	370c      	adds	r7, #12
 800f9a4:	46bd      	mov	sp, r7
 800f9a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9aa:	4770      	bx	lr

0800f9ac <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800f9ac:	b480      	push	{r7}
 800f9ae:	b083      	sub	sp, #12
 800f9b0:	af00      	add	r7, sp, #0
 800f9b2:	6078      	str	r0, [r7, #4]
    {
    }
 800f9b4:	bf00      	nop
 800f9b6:	370c      	adds	r7, #12
 800f9b8:	46bd      	mov	sp, r7
 800f9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9be:	4770      	bx	lr

0800f9c0 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800f9c0:	b480      	push	{r7}
 800f9c2:	b083      	sub	sp, #12
 800f9c4:	af00      	add	r7, sp, #0
 800f9c6:	6078      	str	r0, [r7, #4]
    {
 800f9c8:	4a04      	ldr	r2, [pc, #16]	; (800f9dc <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800f9ca:	687b      	ldr	r3, [r7, #4]
 800f9cc:	601a      	str	r2, [r3, #0]
    }
 800f9ce:	687b      	ldr	r3, [r7, #4]
 800f9d0:	4618      	mov	r0, r3
 800f9d2:	370c      	adds	r7, #12
 800f9d4:	46bd      	mov	sp, r7
 800f9d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9da:	4770      	bx	lr
 800f9dc:	080281b8 	.word	0x080281b8

0800f9e0 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800f9e0:	b580      	push	{r7, lr}
 800f9e2:	b082      	sub	sp, #8
 800f9e4:	af00      	add	r7, sp, #0
 800f9e6:	6078      	str	r0, [r7, #4]
    }
 800f9e8:	6878      	ldr	r0, [r7, #4]
 800f9ea:	f7ff ffe9 	bl	800f9c0 <_ZN8touchgfx9PresenterD1Ev>
 800f9ee:	2104      	movs	r1, #4
 800f9f0:	6878      	ldr	r0, [r7, #4]
 800f9f2:	f015 ff70 	bl	80258d6 <_ZdlPvj>
 800f9f6:	687b      	ldr	r3, [r7, #4]
 800f9f8:	4618      	mov	r0, r3
 800f9fa:	3708      	adds	r7, #8
 800f9fc:	46bd      	mov	sp, r7
 800f9fe:	bd80      	pop	{r7, pc}

0800fa00 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800fa00:	b480      	push	{r7}
 800fa02:	b083      	sub	sp, #12
 800fa04:	af00      	add	r7, sp, #0
 800fa06:	6078      	str	r0, [r7, #4]
    {
 800fa08:	4a04      	ldr	r2, [pc, #16]	; (800fa1c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800fa0a:	687b      	ldr	r3, [r7, #4]
 800fa0c:	601a      	str	r2, [r3, #0]
    }
 800fa0e:	687b      	ldr	r3, [r7, #4]
 800fa10:	4618      	mov	r0, r3
 800fa12:	370c      	adds	r7, #12
 800fa14:	46bd      	mov	sp, r7
 800fa16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa1a:	4770      	bx	lr
 800fa1c:	080281b8 	.word	0x080281b8

0800fa20 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800fa20:	b480      	push	{r7}
 800fa22:	b083      	sub	sp, #12
 800fa24:	af00      	add	r7, sp, #0
 800fa26:	6078      	str	r0, [r7, #4]
 800fa28:	4a06      	ldr	r2, [pc, #24]	; (800fa44 <_ZN13ModelListenerC1Ev+0x24>)
 800fa2a:	687b      	ldr	r3, [r7, #4]
 800fa2c:	601a      	str	r2, [r3, #0]
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	2200      	movs	r2, #0
 800fa32:	605a      	str	r2, [r3, #4]
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	4618      	mov	r0, r3
 800fa38:	370c      	adds	r7, #12
 800fa3a:	46bd      	mov	sp, r7
 800fa3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa40:	4770      	bx	lr
 800fa42:	bf00      	nop
 800fa44:	080281a8 	.word	0x080281a8

0800fa48 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800fa48:	b480      	push	{r7}
 800fa4a:	b083      	sub	sp, #12
 800fa4c:	af00      	add	r7, sp, #0
 800fa4e:	6078      	str	r0, [r7, #4]
 800fa50:	4a04      	ldr	r2, [pc, #16]	; (800fa64 <_ZN13ModelListenerD1Ev+0x1c>)
 800fa52:	687b      	ldr	r3, [r7, #4]
 800fa54:	601a      	str	r2, [r3, #0]
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	4618      	mov	r0, r3
 800fa5a:	370c      	adds	r7, #12
 800fa5c:	46bd      	mov	sp, r7
 800fa5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa62:	4770      	bx	lr
 800fa64:	080281a8 	.word	0x080281a8

0800fa68 <_ZN13ModelListenerD0Ev>:
 800fa68:	b580      	push	{r7, lr}
 800fa6a:	b082      	sub	sp, #8
 800fa6c:	af00      	add	r7, sp, #0
 800fa6e:	6078      	str	r0, [r7, #4]
 800fa70:	6878      	ldr	r0, [r7, #4]
 800fa72:	f7ff ffe9 	bl	800fa48 <_ZN13ModelListenerD1Ev>
 800fa76:	2108      	movs	r1, #8
 800fa78:	6878      	ldr	r0, [r7, #4]
 800fa7a:	f015 ff2c 	bl	80258d6 <_ZdlPvj>
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	4618      	mov	r0, r3
 800fa82:	3708      	adds	r7, #8
 800fa84:	46bd      	mov	sp, r7
 800fa86:	bd80      	pop	{r7, pc}

0800fa88 <_ZN20screen_infoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_infoPresenter() {}
 800fa88:	b580      	push	{r7, lr}
 800fa8a:	b082      	sub	sp, #8
 800fa8c:	af00      	add	r7, sp, #0
 800fa8e:	6078      	str	r0, [r7, #4]
 800fa90:	4a09      	ldr	r2, [pc, #36]	; (800fab8 <_ZN20screen_infoPresenterD1Ev+0x30>)
 800fa92:	687b      	ldr	r3, [r7, #4]
 800fa94:	601a      	str	r2, [r3, #0]
 800fa96:	4a09      	ldr	r2, [pc, #36]	; (800fabc <_ZN20screen_infoPresenterD1Ev+0x34>)
 800fa98:	687b      	ldr	r3, [r7, #4]
 800fa9a:	605a      	str	r2, [r3, #4]
 800fa9c:	687b      	ldr	r3, [r7, #4]
 800fa9e:	3304      	adds	r3, #4
 800faa0:	4618      	mov	r0, r3
 800faa2:	f7ff ffd1 	bl	800fa48 <_ZN13ModelListenerD1Ev>
 800faa6:	687b      	ldr	r3, [r7, #4]
 800faa8:	4618      	mov	r0, r3
 800faaa:	f7ff ff89 	bl	800f9c0 <_ZN8touchgfx9PresenterD1Ev>
 800faae:	687b      	ldr	r3, [r7, #4]
 800fab0:	4618      	mov	r0, r3
 800fab2:	3708      	adds	r7, #8
 800fab4:	46bd      	mov	sp, r7
 800fab6:	bd80      	pop	{r7, pc}
 800fab8:	08028180 	.word	0x08028180
 800fabc:	08028198 	.word	0x08028198

0800fac0 <_ZThn4_N20screen_infoPresenterD1Ev>:
 800fac0:	f1a0 0004 	sub.w	r0, r0, #4
 800fac4:	e7e0      	b.n	800fa88 <_ZN20screen_infoPresenterD1Ev>
 800fac6:	bf00      	nop

0800fac8 <_ZN20screen_infoPresenterD0Ev>:
 800fac8:	b580      	push	{r7, lr}
 800faca:	b082      	sub	sp, #8
 800facc:	af00      	add	r7, sp, #0
 800face:	6078      	str	r0, [r7, #4]
 800fad0:	6878      	ldr	r0, [r7, #4]
 800fad2:	f7ff ffd9 	bl	800fa88 <_ZN20screen_infoPresenterD1Ev>
 800fad6:	2110      	movs	r1, #16
 800fad8:	6878      	ldr	r0, [r7, #4]
 800fada:	f015 fefc 	bl	80258d6 <_ZdlPvj>
 800fade:	687b      	ldr	r3, [r7, #4]
 800fae0:	4618      	mov	r0, r3
 800fae2:	3708      	adds	r7, #8
 800fae4:	46bd      	mov	sp, r7
 800fae6:	bd80      	pop	{r7, pc}

0800fae8 <_ZThn4_N20screen_infoPresenterD0Ev>:
 800fae8:	f1a0 0004 	sub.w	r0, r0, #4
 800faec:	e7ec      	b.n	800fac8 <_ZN20screen_infoPresenterD0Ev>
	...

0800faf0 <_ZN20screen_infoPresenterC1ER15screen_infoView>:
#include <gui/screen_info_screen/screen_infoView.hpp>
#include <gui/screen_info_screen/screen_infoPresenter.hpp>

screen_infoPresenter::screen_infoPresenter(screen_infoView& v)
 800faf0:	b580      	push	{r7, lr}
 800faf2:	b082      	sub	sp, #8
 800faf4:	af00      	add	r7, sp, #0
 800faf6:	6078      	str	r0, [r7, #4]
 800faf8:	6039      	str	r1, [r7, #0]
    : view(v)
 800fafa:	687b      	ldr	r3, [r7, #4]
 800fafc:	4618      	mov	r0, r3
 800fafe:	f7ff ff7f 	bl	800fa00 <_ZN8touchgfx9PresenterC1Ev>
 800fb02:	687b      	ldr	r3, [r7, #4]
 800fb04:	3304      	adds	r3, #4
 800fb06:	4618      	mov	r0, r3
 800fb08:	f7ff ff8a 	bl	800fa20 <_ZN13ModelListenerC1Ev>
 800fb0c:	4a06      	ldr	r2, [pc, #24]	; (800fb28 <_ZN20screen_infoPresenterC1ER15screen_infoView+0x38>)
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	601a      	str	r2, [r3, #0]
 800fb12:	4a06      	ldr	r2, [pc, #24]	; (800fb2c <_ZN20screen_infoPresenterC1ER15screen_infoView+0x3c>)
 800fb14:	687b      	ldr	r3, [r7, #4]
 800fb16:	605a      	str	r2, [r3, #4]
 800fb18:	687b      	ldr	r3, [r7, #4]
 800fb1a:	683a      	ldr	r2, [r7, #0]
 800fb1c:	60da      	str	r2, [r3, #12]
{

}
 800fb1e:	687b      	ldr	r3, [r7, #4]
 800fb20:	4618      	mov	r0, r3
 800fb22:	3708      	adds	r7, #8
 800fb24:	46bd      	mov	sp, r7
 800fb26:	bd80      	pop	{r7, pc}
 800fb28:	08028180 	.word	0x08028180
 800fb2c:	08028198 	.word	0x08028198

0800fb30 <_ZN20screen_infoPresenter8activateEv>:

void screen_infoPresenter::activate()
{
 800fb30:	b480      	push	{r7}
 800fb32:	b083      	sub	sp, #12
 800fb34:	af00      	add	r7, sp, #0
 800fb36:	6078      	str	r0, [r7, #4]

}
 800fb38:	bf00      	nop
 800fb3a:	370c      	adds	r7, #12
 800fb3c:	46bd      	mov	sp, r7
 800fb3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb42:	4770      	bx	lr

0800fb44 <_ZN20screen_infoPresenter10deactivateEv>:

void screen_infoPresenter::deactivate()
{
 800fb44:	b480      	push	{r7}
 800fb46:	b083      	sub	sp, #12
 800fb48:	af00      	add	r7, sp, #0
 800fb4a:	6078      	str	r0, [r7, #4]

}
 800fb4c:	bf00      	nop
 800fb4e:	370c      	adds	r7, #12
 800fb50:	46bd      	mov	sp, r7
 800fb52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb56:	4770      	bx	lr

0800fb58 <_ZN15screen_infoViewD1Ev>:

class screen_infoView : public screen_infoViewBase
{
public:
    screen_infoView();
    virtual ~screen_infoView() {}
 800fb58:	b580      	push	{r7, lr}
 800fb5a:	b082      	sub	sp, #8
 800fb5c:	af00      	add	r7, sp, #0
 800fb5e:	6078      	str	r0, [r7, #4]
 800fb60:	4a05      	ldr	r2, [pc, #20]	; (800fb78 <_ZN15screen_infoViewD1Ev+0x20>)
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	601a      	str	r2, [r3, #0]
 800fb66:	687b      	ldr	r3, [r7, #4]
 800fb68:	4618      	mov	r0, r3
 800fb6a:	f7fe fa85 	bl	800e078 <_ZN19screen_infoViewBaseD1Ev>
 800fb6e:	687b      	ldr	r3, [r7, #4]
 800fb70:	4618      	mov	r0, r3
 800fb72:	3708      	adds	r7, #8
 800fb74:	46bd      	mov	sp, r7
 800fb76:	bd80      	pop	{r7, pc}
 800fb78:	080281d0 	.word	0x080281d0

0800fb7c <_ZN15screen_infoViewD0Ev>:
 800fb7c:	b580      	push	{r7, lr}
 800fb7e:	b082      	sub	sp, #8
 800fb80:	af00      	add	r7, sp, #0
 800fb82:	6078      	str	r0, [r7, #4]
 800fb84:	6878      	ldr	r0, [r7, #4]
 800fb86:	f7ff ffe7 	bl	800fb58 <_ZN15screen_infoViewD1Ev>
 800fb8a:	f44f 719c 	mov.w	r1, #312	; 0x138
 800fb8e:	6878      	ldr	r0, [r7, #4]
 800fb90:	f015 fea1 	bl	80258d6 <_ZdlPvj>
 800fb94:	687b      	ldr	r3, [r7, #4]
 800fb96:	4618      	mov	r0, r3
 800fb98:	3708      	adds	r7, #8
 800fb9a:	46bd      	mov	sp, r7
 800fb9c:	bd80      	pop	{r7, pc}
	...

0800fba0 <_ZN15screen_infoViewC1Ev>:
#include <gui/screen_info_screen/screen_infoView.hpp>

screen_infoView::screen_infoView()
 800fba0:	b580      	push	{r7, lr}
 800fba2:	b082      	sub	sp, #8
 800fba4:	af00      	add	r7, sp, #0
 800fba6:	6078      	str	r0, [r7, #4]
 800fba8:	687b      	ldr	r3, [r7, #4]
 800fbaa:	4618      	mov	r0, r3
 800fbac:	f7fe f8d6 	bl	800dd5c <_ZN19screen_infoViewBaseC1Ev>
 800fbb0:	4a03      	ldr	r2, [pc, #12]	; (800fbc0 <_ZN15screen_infoViewC1Ev+0x20>)
 800fbb2:	687b      	ldr	r3, [r7, #4]
 800fbb4:	601a      	str	r2, [r3, #0]
{

}
 800fbb6:	687b      	ldr	r3, [r7, #4]
 800fbb8:	4618      	mov	r0, r3
 800fbba:	3708      	adds	r7, #8
 800fbbc:	46bd      	mov	sp, r7
 800fbbe:	bd80      	pop	{r7, pc}
 800fbc0:	080281d0 	.word	0x080281d0

0800fbc4 <_ZN15screen_infoView11setupScreenEv>:

void screen_infoView::setupScreen()
{
 800fbc4:	b580      	push	{r7, lr}
 800fbc6:	b082      	sub	sp, #8
 800fbc8:	af00      	add	r7, sp, #0
 800fbca:	6078      	str	r0, [r7, #4]
    screen_infoViewBase::setupScreen();
 800fbcc:	687b      	ldr	r3, [r7, #4]
 800fbce:	4618      	mov	r0, r3
 800fbd0:	f7fe fa8f 	bl	800e0f2 <_ZN19screen_infoViewBase11setupScreenEv>
}
 800fbd4:	bf00      	nop
 800fbd6:	3708      	adds	r7, #8
 800fbd8:	46bd      	mov	sp, r7
 800fbda:	bd80      	pop	{r7, pc}

0800fbdc <_ZN15screen_infoView14tearDownScreenEv>:

void screen_infoView::tearDownScreen()
{
 800fbdc:	b580      	push	{r7, lr}
 800fbde:	b082      	sub	sp, #8
 800fbe0:	af00      	add	r7, sp, #0
 800fbe2:	6078      	str	r0, [r7, #4]
    screen_infoViewBase::tearDownScreen();
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	4618      	mov	r0, r3
 800fbe8:	f7fd fe52 	bl	800d890 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800fbec:	bf00      	nop
 800fbee:	3708      	adds	r7, #8
 800fbf0:	46bd      	mov	sp, r7
 800fbf2:	bd80      	pop	{r7, pc}

0800fbf4 <_ZN25screen_perf_modePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_perf_modePresenter() {}
 800fbf4:	b580      	push	{r7, lr}
 800fbf6:	b082      	sub	sp, #8
 800fbf8:	af00      	add	r7, sp, #0
 800fbfa:	6078      	str	r0, [r7, #4]
 800fbfc:	4a09      	ldr	r2, [pc, #36]	; (800fc24 <_ZN25screen_perf_modePresenterD1Ev+0x30>)
 800fbfe:	687b      	ldr	r3, [r7, #4]
 800fc00:	601a      	str	r2, [r3, #0]
 800fc02:	4a09      	ldr	r2, [pc, #36]	; (800fc28 <_ZN25screen_perf_modePresenterD1Ev+0x34>)
 800fc04:	687b      	ldr	r3, [r7, #4]
 800fc06:	605a      	str	r2, [r3, #4]
 800fc08:	687b      	ldr	r3, [r7, #4]
 800fc0a:	3304      	adds	r3, #4
 800fc0c:	4618      	mov	r0, r3
 800fc0e:	f7ff ff1b 	bl	800fa48 <_ZN13ModelListenerD1Ev>
 800fc12:	687b      	ldr	r3, [r7, #4]
 800fc14:	4618      	mov	r0, r3
 800fc16:	f7ff fed3 	bl	800f9c0 <_ZN8touchgfx9PresenterD1Ev>
 800fc1a:	687b      	ldr	r3, [r7, #4]
 800fc1c:	4618      	mov	r0, r3
 800fc1e:	3708      	adds	r7, #8
 800fc20:	46bd      	mov	sp, r7
 800fc22:	bd80      	pop	{r7, pc}
 800fc24:	08028204 	.word	0x08028204
 800fc28:	0802821c 	.word	0x0802821c

0800fc2c <_ZThn4_N25screen_perf_modePresenterD1Ev>:
 800fc2c:	f1a0 0004 	sub.w	r0, r0, #4
 800fc30:	e7e0      	b.n	800fbf4 <_ZN25screen_perf_modePresenterD1Ev>
 800fc32:	bf00      	nop

0800fc34 <_ZN25screen_perf_modePresenterD0Ev>:
 800fc34:	b580      	push	{r7, lr}
 800fc36:	b082      	sub	sp, #8
 800fc38:	af00      	add	r7, sp, #0
 800fc3a:	6078      	str	r0, [r7, #4]
 800fc3c:	6878      	ldr	r0, [r7, #4]
 800fc3e:	f7ff ffd9 	bl	800fbf4 <_ZN25screen_perf_modePresenterD1Ev>
 800fc42:	2110      	movs	r1, #16
 800fc44:	6878      	ldr	r0, [r7, #4]
 800fc46:	f015 fe46 	bl	80258d6 <_ZdlPvj>
 800fc4a:	687b      	ldr	r3, [r7, #4]
 800fc4c:	4618      	mov	r0, r3
 800fc4e:	3708      	adds	r7, #8
 800fc50:	46bd      	mov	sp, r7
 800fc52:	bd80      	pop	{r7, pc}

0800fc54 <_ZThn4_N25screen_perf_modePresenterD0Ev>:
 800fc54:	f1a0 0004 	sub.w	r0, r0, #4
 800fc58:	e7ec      	b.n	800fc34 <_ZN25screen_perf_modePresenterD0Ev>
	...

0800fc5c <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView>:
#include <gui/screen_perf_mode_screen/screen_perf_modeView.hpp>
#include <gui/screen_perf_mode_screen/screen_perf_modePresenter.hpp>

screen_perf_modePresenter::screen_perf_modePresenter(screen_perf_modeView& v)
 800fc5c:	b580      	push	{r7, lr}
 800fc5e:	b082      	sub	sp, #8
 800fc60:	af00      	add	r7, sp, #0
 800fc62:	6078      	str	r0, [r7, #4]
 800fc64:	6039      	str	r1, [r7, #0]
    : view(v)
 800fc66:	687b      	ldr	r3, [r7, #4]
 800fc68:	4618      	mov	r0, r3
 800fc6a:	f7ff fec9 	bl	800fa00 <_ZN8touchgfx9PresenterC1Ev>
 800fc6e:	687b      	ldr	r3, [r7, #4]
 800fc70:	3304      	adds	r3, #4
 800fc72:	4618      	mov	r0, r3
 800fc74:	f7ff fed4 	bl	800fa20 <_ZN13ModelListenerC1Ev>
 800fc78:	4a06      	ldr	r2, [pc, #24]	; (800fc94 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView+0x38>)
 800fc7a:	687b      	ldr	r3, [r7, #4]
 800fc7c:	601a      	str	r2, [r3, #0]
 800fc7e:	4a06      	ldr	r2, [pc, #24]	; (800fc98 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView+0x3c>)
 800fc80:	687b      	ldr	r3, [r7, #4]
 800fc82:	605a      	str	r2, [r3, #4]
 800fc84:	687b      	ldr	r3, [r7, #4]
 800fc86:	683a      	ldr	r2, [r7, #0]
 800fc88:	60da      	str	r2, [r3, #12]
{

}
 800fc8a:	687b      	ldr	r3, [r7, #4]
 800fc8c:	4618      	mov	r0, r3
 800fc8e:	3708      	adds	r7, #8
 800fc90:	46bd      	mov	sp, r7
 800fc92:	bd80      	pop	{r7, pc}
 800fc94:	08028204 	.word	0x08028204
 800fc98:	0802821c 	.word	0x0802821c

0800fc9c <_ZN25screen_perf_modePresenter8activateEv>:

void screen_perf_modePresenter::activate()
{
 800fc9c:	b480      	push	{r7}
 800fc9e:	b083      	sub	sp, #12
 800fca0:	af00      	add	r7, sp, #0
 800fca2:	6078      	str	r0, [r7, #4]

}
 800fca4:	bf00      	nop
 800fca6:	370c      	adds	r7, #12
 800fca8:	46bd      	mov	sp, r7
 800fcaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcae:	4770      	bx	lr

0800fcb0 <_ZN25screen_perf_modePresenter10deactivateEv>:

void screen_perf_modePresenter::deactivate()
{
 800fcb0:	b480      	push	{r7}
 800fcb2:	b083      	sub	sp, #12
 800fcb4:	af00      	add	r7, sp, #0
 800fcb6:	6078      	str	r0, [r7, #4]

}
 800fcb8:	bf00      	nop
 800fcba:	370c      	adds	r7, #12
 800fcbc:	46bd      	mov	sp, r7
 800fcbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcc2:	4770      	bx	lr

0800fcc4 <_ZN20screen_perf_modeViewD1Ev>:

class screen_perf_modeView : public screen_perf_modeViewBase
{
public:
    screen_perf_modeView();
    virtual ~screen_perf_modeView() {}
 800fcc4:	b580      	push	{r7, lr}
 800fcc6:	b082      	sub	sp, #8
 800fcc8:	af00      	add	r7, sp, #0
 800fcca:	6078      	str	r0, [r7, #4]
 800fccc:	4a05      	ldr	r2, [pc, #20]	; (800fce4 <_ZN20screen_perf_modeViewD1Ev+0x20>)
 800fcce:	687b      	ldr	r3, [r7, #4]
 800fcd0:	601a      	str	r2, [r3, #0]
 800fcd2:	687b      	ldr	r3, [r7, #4]
 800fcd4:	4618      	mov	r0, r3
 800fcd6:	f7fe fddb 	bl	800e890 <_ZN24screen_perf_modeViewBaseD1Ev>
 800fcda:	687b      	ldr	r3, [r7, #4]
 800fcdc:	4618      	mov	r0, r3
 800fcde:	3708      	adds	r7, #8
 800fce0:	46bd      	mov	sp, r7
 800fce2:	bd80      	pop	{r7, pc}
 800fce4:	0802822c 	.word	0x0802822c

0800fce8 <_ZN20screen_perf_modeViewD0Ev>:
 800fce8:	b580      	push	{r7, lr}
 800fcea:	b082      	sub	sp, #8
 800fcec:	af00      	add	r7, sp, #0
 800fcee:	6078      	str	r0, [r7, #4]
 800fcf0:	6878      	ldr	r0, [r7, #4]
 800fcf2:	f7ff ffe7 	bl	800fcc4 <_ZN20screen_perf_modeViewD1Ev>
 800fcf6:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800fcfa:	6878      	ldr	r0, [r7, #4]
 800fcfc:	f015 fdeb 	bl	80258d6 <_ZdlPvj>
 800fd00:	687b      	ldr	r3, [r7, #4]
 800fd02:	4618      	mov	r0, r3
 800fd04:	3708      	adds	r7, #8
 800fd06:	46bd      	mov	sp, r7
 800fd08:	bd80      	pop	{r7, pc}
	...

0800fd0c <_ZN20screen_perf_modeViewC1Ev>:
#include <gui/screen_perf_mode_screen/screen_perf_modeView.hpp>

screen_perf_modeView::screen_perf_modeView()
 800fd0c:	b580      	push	{r7, lr}
 800fd0e:	b082      	sub	sp, #8
 800fd10:	af00      	add	r7, sp, #0
 800fd12:	6078      	str	r0, [r7, #4]
 800fd14:	687b      	ldr	r3, [r7, #4]
 800fd16:	4618      	mov	r0, r3
 800fd18:	f7fe fbba 	bl	800e490 <_ZN24screen_perf_modeViewBaseC1Ev>
 800fd1c:	4a03      	ldr	r2, [pc, #12]	; (800fd2c <_ZN20screen_perf_modeViewC1Ev+0x20>)
 800fd1e:	687b      	ldr	r3, [r7, #4]
 800fd20:	601a      	str	r2, [r3, #0]
{

}
 800fd22:	687b      	ldr	r3, [r7, #4]
 800fd24:	4618      	mov	r0, r3
 800fd26:	3708      	adds	r7, #8
 800fd28:	46bd      	mov	sp, r7
 800fd2a:	bd80      	pop	{r7, pc}
 800fd2c:	0802822c 	.word	0x0802822c

0800fd30 <_ZN20screen_perf_modeView11setupScreenEv>:

void screen_perf_modeView::setupScreen()
{
 800fd30:	b580      	push	{r7, lr}
 800fd32:	b082      	sub	sp, #8
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
    screen_perf_modeViewBase::setupScreen();
 800fd38:	687b      	ldr	r3, [r7, #4]
 800fd3a:	4618      	mov	r0, r3
 800fd3c:	f7fe fdeb 	bl	800e916 <_ZN24screen_perf_modeViewBase11setupScreenEv>
}
 800fd40:	bf00      	nop
 800fd42:	3708      	adds	r7, #8
 800fd44:	46bd      	mov	sp, r7
 800fd46:	bd80      	pop	{r7, pc}

0800fd48 <_ZN20screen_perf_modeView14tearDownScreenEv>:

void screen_perf_modeView::tearDownScreen()
{
 800fd48:	b580      	push	{r7, lr}
 800fd4a:	b082      	sub	sp, #8
 800fd4c:	af00      	add	r7, sp, #0
 800fd4e:	6078      	str	r0, [r7, #4]
    screen_perf_modeViewBase::tearDownScreen();
 800fd50:	687b      	ldr	r3, [r7, #4]
 800fd52:	4618      	mov	r0, r3
 800fd54:	f7fd fd9c 	bl	800d890 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800fd58:	bf00      	nop
 800fd5a:	3708      	adds	r7, #8
 800fd5c:	46bd      	mov	sp, r7
 800fd5e:	bd80      	pop	{r7, pc}

0800fd60 <_ZN24screen_settingsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_settingsPresenter() {}
 800fd60:	b580      	push	{r7, lr}
 800fd62:	b082      	sub	sp, #8
 800fd64:	af00      	add	r7, sp, #0
 800fd66:	6078      	str	r0, [r7, #4]
 800fd68:	4a09      	ldr	r2, [pc, #36]	; (800fd90 <_ZN24screen_settingsPresenterD1Ev+0x30>)
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	601a      	str	r2, [r3, #0]
 800fd6e:	4a09      	ldr	r2, [pc, #36]	; (800fd94 <_ZN24screen_settingsPresenterD1Ev+0x34>)
 800fd70:	687b      	ldr	r3, [r7, #4]
 800fd72:	605a      	str	r2, [r3, #4]
 800fd74:	687b      	ldr	r3, [r7, #4]
 800fd76:	3304      	adds	r3, #4
 800fd78:	4618      	mov	r0, r3
 800fd7a:	f7ff fe65 	bl	800fa48 <_ZN13ModelListenerD1Ev>
 800fd7e:	687b      	ldr	r3, [r7, #4]
 800fd80:	4618      	mov	r0, r3
 800fd82:	f7ff fe1d 	bl	800f9c0 <_ZN8touchgfx9PresenterD1Ev>
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	4618      	mov	r0, r3
 800fd8a:	3708      	adds	r7, #8
 800fd8c:	46bd      	mov	sp, r7
 800fd8e:	bd80      	pop	{r7, pc}
 800fd90:	08028260 	.word	0x08028260
 800fd94:	08028278 	.word	0x08028278

0800fd98 <_ZThn4_N24screen_settingsPresenterD1Ev>:
 800fd98:	f1a0 0004 	sub.w	r0, r0, #4
 800fd9c:	e7e0      	b.n	800fd60 <_ZN24screen_settingsPresenterD1Ev>
 800fd9e:	bf00      	nop

0800fda0 <_ZN24screen_settingsPresenterD0Ev>:
 800fda0:	b580      	push	{r7, lr}
 800fda2:	b082      	sub	sp, #8
 800fda4:	af00      	add	r7, sp, #0
 800fda6:	6078      	str	r0, [r7, #4]
 800fda8:	6878      	ldr	r0, [r7, #4]
 800fdaa:	f7ff ffd9 	bl	800fd60 <_ZN24screen_settingsPresenterD1Ev>
 800fdae:	2110      	movs	r1, #16
 800fdb0:	6878      	ldr	r0, [r7, #4]
 800fdb2:	f015 fd90 	bl	80258d6 <_ZdlPvj>
 800fdb6:	687b      	ldr	r3, [r7, #4]
 800fdb8:	4618      	mov	r0, r3
 800fdba:	3708      	adds	r7, #8
 800fdbc:	46bd      	mov	sp, r7
 800fdbe:	bd80      	pop	{r7, pc}

0800fdc0 <_ZThn4_N24screen_settingsPresenterD0Ev>:
 800fdc0:	f1a0 0004 	sub.w	r0, r0, #4
 800fdc4:	e7ec      	b.n	800fda0 <_ZN24screen_settingsPresenterD0Ev>
	...

0800fdc8 <_ZN24screen_settingsPresenterC1ER19screen_settingsView>:
#include <gui/screen_settings_screen/screen_settingsView.hpp>
#include <gui/screen_settings_screen/screen_settingsPresenter.hpp>

screen_settingsPresenter::screen_settingsPresenter(screen_settingsView& v)
 800fdc8:	b580      	push	{r7, lr}
 800fdca:	b082      	sub	sp, #8
 800fdcc:	af00      	add	r7, sp, #0
 800fdce:	6078      	str	r0, [r7, #4]
 800fdd0:	6039      	str	r1, [r7, #0]
    : view(v)
 800fdd2:	687b      	ldr	r3, [r7, #4]
 800fdd4:	4618      	mov	r0, r3
 800fdd6:	f7ff fe13 	bl	800fa00 <_ZN8touchgfx9PresenterC1Ev>
 800fdda:	687b      	ldr	r3, [r7, #4]
 800fddc:	3304      	adds	r3, #4
 800fdde:	4618      	mov	r0, r3
 800fde0:	f7ff fe1e 	bl	800fa20 <_ZN13ModelListenerC1Ev>
 800fde4:	4a06      	ldr	r2, [pc, #24]	; (800fe00 <_ZN24screen_settingsPresenterC1ER19screen_settingsView+0x38>)
 800fde6:	687b      	ldr	r3, [r7, #4]
 800fde8:	601a      	str	r2, [r3, #0]
 800fdea:	4a06      	ldr	r2, [pc, #24]	; (800fe04 <_ZN24screen_settingsPresenterC1ER19screen_settingsView+0x3c>)
 800fdec:	687b      	ldr	r3, [r7, #4]
 800fdee:	605a      	str	r2, [r3, #4]
 800fdf0:	687b      	ldr	r3, [r7, #4]
 800fdf2:	683a      	ldr	r2, [r7, #0]
 800fdf4:	60da      	str	r2, [r3, #12]
{

}
 800fdf6:	687b      	ldr	r3, [r7, #4]
 800fdf8:	4618      	mov	r0, r3
 800fdfa:	3708      	adds	r7, #8
 800fdfc:	46bd      	mov	sp, r7
 800fdfe:	bd80      	pop	{r7, pc}
 800fe00:	08028260 	.word	0x08028260
 800fe04:	08028278 	.word	0x08028278

0800fe08 <_ZN24screen_settingsPresenter8activateEv>:

void screen_settingsPresenter::activate()
{
 800fe08:	b480      	push	{r7}
 800fe0a:	b083      	sub	sp, #12
 800fe0c:	af00      	add	r7, sp, #0
 800fe0e:	6078      	str	r0, [r7, #4]

}
 800fe10:	bf00      	nop
 800fe12:	370c      	adds	r7, #12
 800fe14:	46bd      	mov	sp, r7
 800fe16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe1a:	4770      	bx	lr

0800fe1c <_ZN24screen_settingsPresenter10deactivateEv>:

void screen_settingsPresenter::deactivate()
{
 800fe1c:	b480      	push	{r7}
 800fe1e:	b083      	sub	sp, #12
 800fe20:	af00      	add	r7, sp, #0
 800fe22:	6078      	str	r0, [r7, #4]

}
 800fe24:	bf00      	nop
 800fe26:	370c      	adds	r7, #12
 800fe28:	46bd      	mov	sp, r7
 800fe2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe2e:	4770      	bx	lr

0800fe30 <_ZN19screen_settingsViewD1Ev>:

class screen_settingsView : public screen_settingsViewBase
{
public:
    screen_settingsView();
    virtual ~screen_settingsView() {}
 800fe30:	b580      	push	{r7, lr}
 800fe32:	b082      	sub	sp, #8
 800fe34:	af00      	add	r7, sp, #0
 800fe36:	6078      	str	r0, [r7, #4]
 800fe38:	4a05      	ldr	r2, [pc, #20]	; (800fe50 <_ZN19screen_settingsViewD1Ev+0x20>)
 800fe3a:	687b      	ldr	r3, [r7, #4]
 800fe3c:	601a      	str	r2, [r3, #0]
 800fe3e:	687b      	ldr	r3, [r7, #4]
 800fe40:	4618      	mov	r0, r3
 800fe42:	f7ff fa25 	bl	800f290 <_ZN23screen_settingsViewBaseD1Ev>
 800fe46:	687b      	ldr	r3, [r7, #4]
 800fe48:	4618      	mov	r0, r3
 800fe4a:	3708      	adds	r7, #8
 800fe4c:	46bd      	mov	sp, r7
 800fe4e:	bd80      	pop	{r7, pc}
 800fe50:	08028288 	.word	0x08028288

0800fe54 <_ZN19screen_settingsViewD0Ev>:
 800fe54:	b580      	push	{r7, lr}
 800fe56:	b082      	sub	sp, #8
 800fe58:	af00      	add	r7, sp, #0
 800fe5a:	6078      	str	r0, [r7, #4]
 800fe5c:	6878      	ldr	r0, [r7, #4]
 800fe5e:	f7ff ffe7 	bl	800fe30 <_ZN19screen_settingsViewD1Ev>
 800fe62:	f44f 7116 	mov.w	r1, #600	; 0x258
 800fe66:	6878      	ldr	r0, [r7, #4]
 800fe68:	f015 fd35 	bl	80258d6 <_ZdlPvj>
 800fe6c:	687b      	ldr	r3, [r7, #4]
 800fe6e:	4618      	mov	r0, r3
 800fe70:	3708      	adds	r7, #8
 800fe72:	46bd      	mov	sp, r7
 800fe74:	bd80      	pop	{r7, pc}
	...

0800fe78 <_ZN19screen_settingsViewC1Ev>:
#include <gui/screen_settings_screen/screen_settingsView.hpp>

screen_settingsView::screen_settingsView()
 800fe78:	b580      	push	{r7, lr}
 800fe7a:	b082      	sub	sp, #8
 800fe7c:	af00      	add	r7, sp, #0
 800fe7e:	6078      	str	r0, [r7, #4]
 800fe80:	687b      	ldr	r3, [r7, #4]
 800fe82:	4618      	mov	r0, r3
 800fe84:	f7fe fe32 	bl	800eaec <_ZN23screen_settingsViewBaseC1Ev>
 800fe88:	4a03      	ldr	r2, [pc, #12]	; (800fe98 <_ZN19screen_settingsViewC1Ev+0x20>)
 800fe8a:	687b      	ldr	r3, [r7, #4]
 800fe8c:	601a      	str	r2, [r3, #0]
{

}
 800fe8e:	687b      	ldr	r3, [r7, #4]
 800fe90:	4618      	mov	r0, r3
 800fe92:	3708      	adds	r7, #8
 800fe94:	46bd      	mov	sp, r7
 800fe96:	bd80      	pop	{r7, pc}
 800fe98:	08028288 	.word	0x08028288

0800fe9c <_ZN19screen_settingsView11setupScreenEv>:

void screen_settingsView::setupScreen()
{
 800fe9c:	b580      	push	{r7, lr}
 800fe9e:	b082      	sub	sp, #8
 800fea0:	af00      	add	r7, sp, #0
 800fea2:	6078      	str	r0, [r7, #4]
    screen_settingsViewBase::setupScreen();
 800fea4:	687b      	ldr	r3, [r7, #4]
 800fea6:	4618      	mov	r0, r3
 800fea8:	f7ff fa47 	bl	800f33a <_ZN23screen_settingsViewBase11setupScreenEv>
}
 800feac:	bf00      	nop
 800feae:	3708      	adds	r7, #8
 800feb0:	46bd      	mov	sp, r7
 800feb2:	bd80      	pop	{r7, pc}

0800feb4 <_ZN19screen_settingsView14tearDownScreenEv>:

void screen_settingsView::tearDownScreen()
{
 800feb4:	b580      	push	{r7, lr}
 800feb6:	b082      	sub	sp, #8
 800feb8:	af00      	add	r7, sp, #0
 800feba:	6078      	str	r0, [r7, #4]
    screen_settingsViewBase::tearDownScreen();
 800febc:	687b      	ldr	r3, [r7, #4]
 800febe:	4618      	mov	r0, r3
 800fec0:	f7fd fce6 	bl	800d890 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800fec4:	bf00      	nop
 800fec6:	3708      	adds	r7, #8
 800fec8:	46bd      	mov	sp, r7
 800feca:	bd80      	pop	{r7, pc}

0800fecc <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800fecc:	b480      	push	{r7}
 800fece:	b083      	sub	sp, #12
 800fed0:	af00      	add	r7, sp, #0
 800fed2:	6078      	str	r0, [r7, #4]
    {
 800fed4:	4a04      	ldr	r2, [pc, #16]	; (800fee8 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800fed6:	687b      	ldr	r3, [r7, #4]
 800fed8:	601a      	str	r2, [r3, #0]
    }
 800feda:	687b      	ldr	r3, [r7, #4]
 800fedc:	4618      	mov	r0, r3
 800fede:	370c      	adds	r7, #12
 800fee0:	46bd      	mov	sp, r7
 800fee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fee6:	4770      	bx	lr
 800fee8:	080282d4 	.word	0x080282d4

0800feec <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800feec:	b580      	push	{r7, lr}
 800feee:	b082      	sub	sp, #8
 800fef0:	af00      	add	r7, sp, #0
 800fef2:	6078      	str	r0, [r7, #4]
    }
 800fef4:	6878      	ldr	r0, [r7, #4]
 800fef6:	f7ff ffe9 	bl	800fecc <_ZN8touchgfx15TouchControllerD1Ev>
 800fefa:	2104      	movs	r1, #4
 800fefc:	6878      	ldr	r0, [r7, #4]
 800fefe:	f015 fcea 	bl	80258d6 <_ZdlPvj>
 800ff02:	687b      	ldr	r3, [r7, #4]
 800ff04:	4618      	mov	r0, r3
 800ff06:	3708      	adds	r7, #8
 800ff08:	46bd      	mov	sp, r7
 800ff0a:	bd80      	pop	{r7, pc}

0800ff0c <ConvXPTtoILI>:
#include "ili9341.h"
#include "xpt2046.h"

extern "C" {
static void ConvXPTtoILI(uint16_t *x, uint16_t *y)
{
 800ff0c:	b480      	push	{r7}
 800ff0e:	b085      	sub	sp, #20
 800ff10:	af00      	add	r7, sp, #0
 800ff12:	6078      	str	r0, [r7, #4]
 800ff14:	6039      	str	r1, [r7, #0]
//	ty = (ty >= GUI_HEIGHT) ? GUI_HEIGHT-1 : ty;
//	*x = tx;
//	*y = ty;
//
    // Invert x-coordinate for 180-degree rotation
    tx = (int16_t)(((int32_t)*x - XPT_XMIN) * GUI_WIDTH / XPT_WIDTH);
 800ff16:	687b      	ldr	r3, [r7, #4]
 800ff18:	881b      	ldrh	r3, [r3, #0]
 800ff1a:	f5a3 72af 	sub.w	r2, r3, #350	; 0x15e
 800ff1e:	4613      	mov	r3, r2
 800ff20:	009b      	lsls	r3, r3, #2
 800ff22:	4413      	add	r3, r2
 800ff24:	019b      	lsls	r3, r3, #6
 800ff26:	4a23      	ldr	r2, [pc, #140]	; (800ffb4 <ConvXPTtoILI+0xa8>)
 800ff28:	fb82 1203 	smull	r1, r2, r2, r3
 800ff2c:	441a      	add	r2, r3
 800ff2e:	12d2      	asrs	r2, r2, #11
 800ff30:	17db      	asrs	r3, r3, #31
 800ff32:	1ad3      	subs	r3, r2, r3
 800ff34:	81fb      	strh	r3, [r7, #14]
    tx = GUI_WIDTH - 1 - tx; // Invert the x-coordinate
 800ff36:	89fa      	ldrh	r2, [r7, #14]
 800ff38:	f240 133f 	movw	r3, #319	; 0x13f
 800ff3c:	1a9b      	subs	r3, r3, r2
 800ff3e:	b29b      	uxth	r3, r3
 800ff40:	81fb      	strh	r3, [r7, #14]
    tx = (tx < 0) ? 0 : tx;
 800ff42:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ff46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff4a:	81fb      	strh	r3, [r7, #14]
    tx = (tx >= GUI_WIDTH) ? GUI_WIDTH - 1 : tx;
 800ff4c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ff50:	f240 123f 	movw	r2, #319	; 0x13f
 800ff54:	4293      	cmp	r3, r2
 800ff56:	bfa8      	it	ge
 800ff58:	4613      	movge	r3, r2
 800ff5a:	81fb      	strh	r3, [r7, #14]

    // Invert y-coordinate for 180-degree rotation
    ty = (int16_t)(((int32_t)*y - XPT_YMIN) * GUI_HEIGHT / XPT_HEIGHT);
 800ff5c:	683b      	ldr	r3, [r7, #0]
 800ff5e:	881b      	ldrh	r3, [r3, #0]
 800ff60:	f5a3 72af 	sub.w	r2, r3, #350	; 0x15e
 800ff64:	4613      	mov	r3, r2
 800ff66:	011b      	lsls	r3, r3, #4
 800ff68:	1a9b      	subs	r3, r3, r2
 800ff6a:	011b      	lsls	r3, r3, #4
 800ff6c:	4a12      	ldr	r2, [pc, #72]	; (800ffb8 <ConvXPTtoILI+0xac>)
 800ff6e:	fb82 1203 	smull	r1, r2, r2, r3
 800ff72:	441a      	add	r2, r3
 800ff74:	12d2      	asrs	r2, r2, #11
 800ff76:	17db      	asrs	r3, r3, #31
 800ff78:	1ad3      	subs	r3, r2, r3
 800ff7a:	81bb      	strh	r3, [r7, #12]
    ty = GUI_HEIGHT - 1 - ty; // Invert the y-coordinate
 800ff7c:	89bb      	ldrh	r3, [r7, #12]
 800ff7e:	f1c3 03ef 	rsb	r3, r3, #239	; 0xef
 800ff82:	b29b      	uxth	r3, r3
 800ff84:	81bb      	strh	r3, [r7, #12]
    ty = (ty < 0) ? 0 : ty;
 800ff86:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ff8a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff8e:	81bb      	strh	r3, [r7, #12]
    ty = (ty >= GUI_HEIGHT) ? GUI_HEIGHT - 1 : ty;
 800ff90:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ff94:	2bef      	cmp	r3, #239	; 0xef
 800ff96:	bfa8      	it	ge
 800ff98:	23ef      	movge	r3, #239	; 0xef
 800ff9a:	81bb      	strh	r3, [r7, #12]

    *x = tx;
 800ff9c:	89fa      	ldrh	r2, [r7, #14]
 800ff9e:	687b      	ldr	r3, [r7, #4]
 800ffa0:	801a      	strh	r2, [r3, #0]
    *y = ty;
 800ffa2:	89ba      	ldrh	r2, [r7, #12]
 800ffa4:	683b      	ldr	r3, [r7, #0]
 800ffa6:	801a      	strh	r2, [r3, #0]
}
 800ffa8:	bf00      	nop
 800ffaa:	3714      	adds	r7, #20
 800ffac:	46bd      	mov	sp, r7
 800ffae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffb2:	4770      	bx	lr
 800ffb4:	97f7b075 	.word	0x97f7b075
 800ffb8:	a151c331 	.word	0xa151c331

0800ffbc <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
 800ffbc:	b480      	push	{r7}
 800ffbe:	b083      	sub	sp, #12
 800ffc0:	af00      	add	r7, sp, #0
 800ffc2:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800ffc4:	bf00      	nop
 800ffc6:	370c      	adds	r7, #12
 800ffc8:	46bd      	mov	sp, r7
 800ffca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffce:	4770      	bx	lr

0800ffd0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800ffd0:	b580      	push	{r7, lr}
 800ffd2:	b086      	sub	sp, #24
 800ffd4:	af00      	add	r7, sp, #0
 800ffd6:	60f8      	str	r0, [r7, #12]
 800ffd8:	60b9      	str	r1, [r7, #8]
 800ffda:	607a      	str	r2, [r7, #4]
     */
	
		static uint16_t prevx = GUI_WIDTH;
	static uint16_t prevy = GUI_HEIGHT;
	uint16_t intx, inty;
	XPT2046_Update(&intx, &inty);
 800ffdc:	f107 0214 	add.w	r2, r7, #20
 800ffe0:	f107 0316 	add.w	r3, r7, #22
 800ffe4:	4611      	mov	r1, r2
 800ffe6:	4618      	mov	r0, r3
 800ffe8:	f7f1 fdd0 	bl	8001b8c <XPT2046_Update>
	if (XPT2046_IsReasonable(intx, inty)) {
 800ffec:	8afb      	ldrh	r3, [r7, #22]
 800ffee:	8aba      	ldrh	r2, [r7, #20]
 800fff0:	4611      	mov	r1, r2
 800fff2:	4618      	mov	r0, r3
 800fff4:	f7f1 fe5a 	bl	8001cac <XPT2046_IsReasonable>
 800fff8:	4603      	mov	r3, r0
 800fffa:	2b00      	cmp	r3, #0
 800fffc:	bf14      	ite	ne
 800fffe:	2301      	movne	r3, #1
 8010000:	2300      	moveq	r3, #0
 8010002:	b2db      	uxtb	r3, r3
 8010004:	2b00      	cmp	r3, #0
 8010006:	d021      	beq.n	801004c <_ZN20STM32TouchController11sampleTouchERlS0_+0x7c>
		ConvXPTtoILI(&intx, &inty);
 8010008:	f107 0214 	add.w	r2, r7, #20
 801000c:	f107 0316 	add.w	r3, r7, #22
 8010010:	4611      	mov	r1, r2
 8010012:	4618      	mov	r0, r3
 8010014:	f7ff ff7a 	bl	800ff0c <ConvXPTtoILI>
		if (intx != prevx || inty != prevy) {
 8010018:	8afa      	ldrh	r2, [r7, #22]
 801001a:	4b0f      	ldr	r3, [pc, #60]	; (8010058 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>)
 801001c:	881b      	ldrh	r3, [r3, #0]
 801001e:	429a      	cmp	r2, r3
 8010020:	d104      	bne.n	801002c <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>
 8010022:	8aba      	ldrh	r2, [r7, #20]
 8010024:	4b0d      	ldr	r3, [pc, #52]	; (801005c <_ZN20STM32TouchController11sampleTouchERlS0_+0x8c>)
 8010026:	881b      	ldrh	r3, [r3, #0]
 8010028:	429a      	cmp	r2, r3
 801002a:	d00f      	beq.n	801004c <_ZN20STM32TouchController11sampleTouchERlS0_+0x7c>
			prevx = intx;
 801002c:	8afa      	ldrh	r2, [r7, #22]
 801002e:	4b0a      	ldr	r3, [pc, #40]	; (8010058 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>)
 8010030:	801a      	strh	r2, [r3, #0]
			prevy = inty;
 8010032:	8aba      	ldrh	r2, [r7, #20]
 8010034:	4b09      	ldr	r3, [pc, #36]	; (801005c <_ZN20STM32TouchController11sampleTouchERlS0_+0x8c>)
 8010036:	801a      	strh	r2, [r3, #0]
			x = (int32_t)intx;
 8010038:	8afb      	ldrh	r3, [r7, #22]
 801003a:	461a      	mov	r2, r3
 801003c:	68bb      	ldr	r3, [r7, #8]
 801003e:	601a      	str	r2, [r3, #0]
			y = (int32_t)inty;
 8010040:	8abb      	ldrh	r3, [r7, #20]
 8010042:	461a      	mov	r2, r3
 8010044:	687b      	ldr	r3, [r7, #4]
 8010046:	601a      	str	r2, [r3, #0]
			return true;
 8010048:	2301      	movs	r3, #1
 801004a:	e000      	b.n	801004e <_ZN20STM32TouchController11sampleTouchERlS0_+0x7e>
		}
	}
    return false;
 801004c:	2300      	movs	r3, #0
}
 801004e:	4618      	mov	r0, r3
 8010050:	3718      	adds	r7, #24
 8010052:	46bd      	mov	sp, r7
 8010054:	bd80      	pop	{r7, pc}
 8010056:	bf00      	nop
 8010058:	24000012 	.word	0x24000012
 801005c:	24000014 	.word	0x24000014

08010060 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8010060:	b580      	push	{r7, lr}
 8010062:	b082      	sub	sp, #8
 8010064:	af00      	add	r7, sp, #0
 8010066:	6078      	str	r0, [r7, #4]
 8010068:	4a05      	ldr	r2, [pc, #20]	; (8010080 <_ZN20STM32TouchControllerD1Ev+0x20>)
 801006a:	687b      	ldr	r3, [r7, #4]
 801006c:	601a      	str	r2, [r3, #0]
 801006e:	687b      	ldr	r3, [r7, #4]
 8010070:	4618      	mov	r0, r3
 8010072:	f7ff ff2b 	bl	800fecc <_ZN8touchgfx15TouchControllerD1Ev>
 8010076:	687b      	ldr	r3, [r7, #4]
 8010078:	4618      	mov	r0, r3
 801007a:	3708      	adds	r7, #8
 801007c:	46bd      	mov	sp, r7
 801007e:	bd80      	pop	{r7, pc}
 8010080:	080282bc 	.word	0x080282bc

08010084 <_ZN20STM32TouchControllerD0Ev>:
 8010084:	b580      	push	{r7, lr}
 8010086:	b082      	sub	sp, #8
 8010088:	af00      	add	r7, sp, #0
 801008a:	6078      	str	r0, [r7, #4]
 801008c:	6878      	ldr	r0, [r7, #4]
 801008e:	f7ff ffe7 	bl	8010060 <_ZN20STM32TouchControllerD1Ev>
 8010092:	2104      	movs	r1, #4
 8010094:	6878      	ldr	r0, [r7, #4]
 8010096:	f015 fc1e 	bl	80258d6 <_ZdlPvj>
 801009a:	687b      	ldr	r3, [r7, #4]
 801009c:	4618      	mov	r0, r3
 801009e:	3708      	adds	r7, #8
 80100a0:	46bd      	mov	sp, r7
 80100a2:	bd80      	pop	{r7, pc}

080100a4 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 80100a4:	b480      	push	{r7}
 80100a6:	af00      	add	r7, sp, #0

}
 80100a8:	bf00      	nop
 80100aa:	46bd      	mov	sp, r7
 80100ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100b0:	4770      	bx	lr
	...

080100b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 80100b4:	b480      	push	{r7}
 80100b6:	b083      	sub	sp, #12
 80100b8:	af00      	add	r7, sp, #0
 80100ba:	4603      	mov	r3, r0
 80100bc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80100be:	79fb      	ldrb	r3, [r7, #7]
 80100c0:	2b03      	cmp	r3, #3
 80100c2:	d80c      	bhi.n	80100de <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 80100c4:	a201      	add	r2, pc, #4	; (adr r2, 80100cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 80100c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80100ca:	bf00      	nop
 80100cc:	080100dd 	.word	0x080100dd
 80100d0:	080100dd 	.word	0x080100dd
 80100d4:	080100dd 	.word	0x080100dd
 80100d8:	080100dd 	.word	0x080100dd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 80100dc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 80100de:	bf00      	nop
 80100e0:	370c      	adds	r7, #12
 80100e2:	46bd      	mov	sp, r7
 80100e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100e8:	4770      	bx	lr
 80100ea:	bf00      	nop

080100ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 80100ec:	b480      	push	{r7}
 80100ee:	b083      	sub	sp, #12
 80100f0:	af00      	add	r7, sp, #0
 80100f2:	4603      	mov	r3, r0
 80100f4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80100f6:	79fb      	ldrb	r3, [r7, #7]
 80100f8:	2b03      	cmp	r3, #3
 80100fa:	d80c      	bhi.n	8010116 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80100fc:	a201      	add	r2, pc, #4	; (adr r2, 8010104 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 80100fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010102:	bf00      	nop
 8010104:	08010115 	.word	0x08010115
 8010108:	08010115 	.word	0x08010115
 801010c:	08010115 	.word	0x08010115
 8010110:	08010115 	.word	0x08010115
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 8010114:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 8010116:	bf00      	nop
 8010118:	370c      	adds	r7, #12
 801011a:	46bd      	mov	sp, r7
 801011c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010120:	4770      	bx	lr
 8010122:	bf00      	nop

08010124 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8010124:	b480      	push	{r7}
 8010126:	b083      	sub	sp, #12
 8010128:	af00      	add	r7, sp, #0
 801012a:	4603      	mov	r3, r0
 801012c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 801012e:	79fb      	ldrb	r3, [r7, #7]
 8010130:	2b03      	cmp	r3, #3
 8010132:	d80c      	bhi.n	801014e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 8010134:	a201      	add	r2, pc, #4	; (adr r2, 801013c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 8010136:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801013a:	bf00      	nop
 801013c:	0801014d 	.word	0x0801014d
 8010140:	0801014d 	.word	0x0801014d
 8010144:	0801014d 	.word	0x0801014d
 8010148:	0801014d 	.word	0x0801014d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 801014c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 801014e:	bf00      	nop
 8010150:	370c      	adds	r7, #12
 8010152:	46bd      	mov	sp, r7
 8010154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010158:	4770      	bx	lr
 801015a:	bf00      	nop

0801015c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 801015c:	b480      	push	{r7}
 801015e:	b083      	sub	sp, #12
 8010160:	af00      	add	r7, sp, #0
 8010162:	6078      	str	r0, [r7, #4]
    {
 8010164:	4a04      	ldr	r2, [pc, #16]	; (8010178 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	601a      	str	r2, [r3, #0]
    }
 801016a:	687b      	ldr	r3, [r7, #4]
 801016c:	4618      	mov	r0, r3
 801016e:	370c      	adds	r7, #12
 8010170:	46bd      	mov	sp, r7
 8010172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010176:	4770      	bx	lr
 8010178:	0802870c 	.word	0x0802870c

0801017c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 801017c:	b580      	push	{r7, lr}
 801017e:	b082      	sub	sp, #8
 8010180:	af00      	add	r7, sp, #0
 8010182:	6078      	str	r0, [r7, #4]
    }
 8010184:	6878      	ldr	r0, [r7, #4]
 8010186:	f7ff ffe9 	bl	801015c <_ZN8touchgfx3HALD1Ev>
 801018a:	217c      	movs	r1, #124	; 0x7c
 801018c:	6878      	ldr	r0, [r7, #4]
 801018e:	f015 fba2 	bl	80258d6 <_ZdlPvj>
 8010192:	687b      	ldr	r3, [r7, #4]
 8010194:	4618      	mov	r0, r3
 8010196:	3708      	adds	r7, #8
 8010198:	46bd      	mov	sp, r7
 801019a:	bd80      	pop	{r7, pc}

0801019c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 801019c:	b480      	push	{r7}
 801019e:	b083      	sub	sp, #12
 80101a0:	af00      	add	r7, sp, #0
 80101a2:	6078      	str	r0, [r7, #4]
 80101a4:	460b      	mov	r3, r1
 80101a6:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 80101a8:	687b      	ldr	r3, [r7, #4]
 80101aa:	78fa      	ldrb	r2, [r7, #3]
 80101ac:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80101b0:	687b      	ldr	r3, [r7, #4]
 80101b2:	2201      	movs	r2, #1
 80101b4:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 80101b8:	bf00      	nop
 80101ba:	370c      	adds	r7, #12
 80101bc:	46bd      	mov	sp, r7
 80101be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101c2:	4770      	bx	lr

080101c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80101c4:	b580      	push	{r7, lr}
 80101c6:	b082      	sub	sp, #8
 80101c8:	af00      	add	r7, sp, #0
 80101ca:	6078      	str	r0, [r7, #4]
 80101cc:	460b      	mov	r3, r1
 80101ce:	807b      	strh	r3, [r7, #2]
 80101d0:	4613      	mov	r3, r2
 80101d2:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80101d4:	4b0c      	ldr	r3, [pc, #48]	; (8010208 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 80101d6:	881b      	ldrh	r3, [r3, #0]
 80101d8:	887a      	ldrh	r2, [r7, #2]
 80101da:	429a      	cmp	r2, r3
 80101dc:	d304      	bcc.n	80101e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 80101de:	4b0b      	ldr	r3, [pc, #44]	; (801020c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 80101e0:	881b      	ldrh	r3, [r3, #0]
 80101e2:	883a      	ldrh	r2, [r7, #0]
 80101e4:	429a      	cmp	r2, r3
 80101e6:	d205      	bcs.n	80101f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 80101e8:	4b09      	ldr	r3, [pc, #36]	; (8010210 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 80101ea:	4a0a      	ldr	r2, [pc, #40]	; (8010214 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 80101ec:	219e      	movs	r1, #158	; 0x9e
 80101ee:	480a      	ldr	r0, [pc, #40]	; (8010218 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 80101f0:	f015 fba0 	bl	8025934 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80101f4:	4a09      	ldr	r2, [pc, #36]	; (801021c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 80101f6:	887b      	ldrh	r3, [r7, #2]
 80101f8:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 80101fa:	4a09      	ldr	r2, [pc, #36]	; (8010220 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 80101fc:	883b      	ldrh	r3, [r7, #0]
 80101fe:	8013      	strh	r3, [r2, #0]
    }
 8010200:	bf00      	nop
 8010202:	3708      	adds	r7, #8
 8010204:	46bd      	mov	sp, r7
 8010206:	bd80      	pop	{r7, pc}
 8010208:	24002f98 	.word	0x24002f98
 801020c:	24002f9a 	.word	0x24002f9a
 8010210:	080272d4 	.word	0x080272d4
 8010214:	08027338 	.word	0x08027338
 8010218:	0802737c 	.word	0x0802737c
 801021c:	24002f9e 	.word	0x24002f9e
 8010220:	24002fa0 	.word	0x24002fa0

08010224 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 8010224:	b580      	push	{r7, lr}
 8010226:	b082      	sub	sp, #8
 8010228:	af00      	add	r7, sp, #0
 801022a:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 801022c:	687b      	ldr	r3, [r7, #4]
 801022e:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 8010232:	2b00      	cmp	r3, #0
 8010234:	d009      	beq.n	801024a <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 8010236:	687b      	ldr	r3, [r7, #4]
 8010238:	685a      	ldr	r2, [r3, #4]
 801023a:	687b      	ldr	r3, [r7, #4]
 801023c:	685b      	ldr	r3, [r3, #4]
 801023e:	681b      	ldr	r3, [r3, #0]
 8010240:	681b      	ldr	r3, [r3, #0]
 8010242:	4610      	mov	r0, r2
 8010244:	4798      	blx	r3
 8010246:	4603      	mov	r3, r0
 8010248:	e000      	b.n	801024c <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 801024a:	2300      	movs	r3, #0
    }
 801024c:	4618      	mov	r0, r3
 801024e:	3708      	adds	r7, #8
 8010250:	46bd      	mov	sp, r7
 8010252:	bd80      	pop	{r7, pc}

08010254 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 8010254:	b580      	push	{r7, lr}
 8010256:	b082      	sub	sp, #8
 8010258:	af00      	add	r7, sp, #0
 801025a:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 801025c:	6878      	ldr	r0, [r7, #4]
 801025e:	f002 fe19 	bl	8012e94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8010262:	687b      	ldr	r3, [r7, #4]
 8010264:	681b      	ldr	r3, [r3, #0]
 8010266:	33ac      	adds	r3, #172	; 0xac
 8010268:	681b      	ldr	r3, [r3, #0]
 801026a:	6878      	ldr	r0, [r7, #4]
 801026c:	4798      	blx	r3
    }
 801026e:	bf00      	nop
 8010270:	3708      	adds	r7, #8
 8010272:	46bd      	mov	sp, r7
 8010274:	bd80      	pop	{r7, pc}

08010276 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8010276:	b480      	push	{r7}
 8010278:	b083      	sub	sp, #12
 801027a:	af00      	add	r7, sp, #0
 801027c:	6078      	str	r0, [r7, #4]
 801027e:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 8010280:	2300      	movs	r3, #0
    }
 8010282:	4618      	mov	r0, r3
 8010284:	370c      	adds	r7, #12
 8010286:	46bd      	mov	sp, r7
 8010288:	f85d 7b04 	ldr.w	r7, [sp], #4
 801028c:	4770      	bx	lr
	...

08010290 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8010290:	b580      	push	{r7, lr}
 8010292:	b084      	sub	sp, #16
 8010294:	af00      	add	r7, sp, #0
 8010296:	60f8      	str	r0, [r7, #12]
 8010298:	60b9      	str	r1, [r7, #8]
 801029a:	607a      	str	r2, [r7, #4]
 801029c:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 801029e:	68bb      	ldr	r3, [r7, #8]
 80102a0:	2b00      	cmp	r3, #0
 80102a2:	d106      	bne.n	80102b2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 80102a4:	4b0f      	ldr	r3, [pc, #60]	; (80102e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 80102a6:	4a10      	ldr	r2, [pc, #64]	; (80102e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 80102a8:	f240 21d2 	movw	r1, #722	; 0x2d2
 80102ac:	480f      	ldr	r0, [pc, #60]	; (80102ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 80102ae:	f015 fb41 	bl	8025934 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 80102b2:	68fb      	ldr	r3, [r7, #12]
 80102b4:	68ba      	ldr	r2, [r7, #8]
 80102b6:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80102b8:	68fb      	ldr	r3, [r7, #12]
 80102ba:	687a      	ldr	r2, [r7, #4]
 80102bc:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80102be:	687b      	ldr	r3, [r7, #4]
 80102c0:	2b00      	cmp	r3, #0
 80102c2:	bf14      	ite	ne
 80102c4:	2301      	movne	r3, #1
 80102c6:	2300      	moveq	r3, #0
 80102c8:	b2da      	uxtb	r2, r3
 80102ca:	4b09      	ldr	r3, [pc, #36]	; (80102f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 80102cc:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80102ce:	68fb      	ldr	r3, [r7, #12]
 80102d0:	681b      	ldr	r3, [r3, #0]
 80102d2:	338c      	adds	r3, #140	; 0x8c
 80102d4:	681b      	ldr	r3, [r3, #0]
 80102d6:	6839      	ldr	r1, [r7, #0]
 80102d8:	68f8      	ldr	r0, [r7, #12]
 80102da:	4798      	blx	r3
    }
 80102dc:	bf00      	nop
 80102de:	3710      	adds	r7, #16
 80102e0:	46bd      	mov	sp, r7
 80102e2:	bd80      	pop	{r7, pc}
 80102e4:	080273c0 	.word	0x080273c0
 80102e8:	080273f8 	.word	0x080273f8
 80102ec:	0802737c 	.word	0x0802737c
 80102f0:	24002fa2 	.word	0x24002fa2

080102f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 80102f4:	b480      	push	{r7}
 80102f6:	b083      	sub	sp, #12
 80102f8:	af00      	add	r7, sp, #0
 80102fa:	6078      	str	r0, [r7, #4]
 80102fc:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80102fe:	687b      	ldr	r3, [r7, #4]
 8010300:	683a      	ldr	r2, [r7, #0]
 8010302:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8010304:	683b      	ldr	r3, [r7, #0]
 8010306:	2b00      	cmp	r3, #0
 8010308:	bf14      	ite	ne
 801030a:	2301      	movne	r3, #1
 801030c:	2300      	moveq	r3, #0
 801030e:	b2da      	uxtb	r2, r3
 8010310:	4b03      	ldr	r3, [pc, #12]	; (8010320 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 8010312:	701a      	strb	r2, [r3, #0]
    }
 8010314:	bf00      	nop
 8010316:	370c      	adds	r7, #12
 8010318:	46bd      	mov	sp, r7
 801031a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801031e:	4770      	bx	lr
 8010320:	24002fa3 	.word	0x24002fa3

08010324 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 8010324:	b480      	push	{r7}
 8010326:	b083      	sub	sp, #12
 8010328:	af00      	add	r7, sp, #0
 801032a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 801032c:	2300      	movs	r3, #0
    }
 801032e:	4618      	mov	r0, r3
 8010330:	370c      	adds	r7, #12
 8010332:	46bd      	mov	sp, r7
 8010334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010338:	4770      	bx	lr

0801033a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 801033a:	b580      	push	{r7, lr}
 801033c:	b082      	sub	sp, #8
 801033e:	af00      	add	r7, sp, #0
 8010340:	6078      	str	r0, [r7, #4]
 8010342:	460b      	mov	r3, r1
 8010344:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8010346:	687b      	ldr	r3, [r7, #4]
 8010348:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801034a:	2b00      	cmp	r3, #0
 801034c:	d004      	beq.n	8010358 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 801034e:	687b      	ldr	r3, [r7, #4]
 8010350:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010352:	887a      	ldrh	r2, [r7, #2]
 8010354:	4610      	mov	r0, r2
 8010356:	4798      	blx	r3
        }
    }
 8010358:	bf00      	nop
 801035a:	3708      	adds	r7, #8
 801035c:	46bd      	mov	sp, r7
 801035e:	bd80      	pop	{r7, pc}

08010360 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 8010360:	b480      	push	{r7}
 8010362:	b083      	sub	sp, #12
 8010364:	af00      	add	r7, sp, #0
 8010366:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 8010368:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 801036c:	4618      	mov	r0, r3
 801036e:	370c      	adds	r7, #12
 8010370:	46bd      	mov	sp, r7
 8010372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010376:	4770      	bx	lr

08010378 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8010378:	b580      	push	{r7, lr}
 801037a:	b082      	sub	sp, #8
 801037c:	af00      	add	r7, sp, #0
 801037e:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8010380:	687b      	ldr	r3, [r7, #4]
 8010382:	685a      	ldr	r2, [r3, #4]
 8010384:	687b      	ldr	r3, [r7, #4]
 8010386:	685b      	ldr	r3, [r3, #4]
 8010388:	681b      	ldr	r3, [r3, #0]
 801038a:	3318      	adds	r3, #24
 801038c:	681b      	ldr	r3, [r3, #0]
 801038e:	4610      	mov	r0, r2
 8010390:	4798      	blx	r3
 8010392:	4603      	mov	r3, r0
    }
 8010394:	4618      	mov	r0, r3
 8010396:	3708      	adds	r7, #8
 8010398:	46bd      	mov	sp, r7
 801039a:	bd80      	pop	{r7, pc}

0801039c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 801039c:	b480      	push	{r7}
 801039e:	b085      	sub	sp, #20
 80103a0:	af00      	add	r7, sp, #0
 80103a2:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80103a4:	687b      	ldr	r3, [r7, #4]
 80103a6:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 80103aa:	687b      	ldr	r3, [r7, #4]
 80103ac:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80103b0:	429a      	cmp	r2, r3
 80103b2:	d011      	beq.n	80103d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 80103b4:	4b14      	ldr	r3, [pc, #80]	; (8010408 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80103b6:	781b      	ldrb	r3, [r3, #0]
 80103b8:	2b00      	cmp	r3, #0
 80103ba:	d11e      	bne.n	80103fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80103bc:	4b13      	ldr	r3, [pc, #76]	; (801040c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80103be:	881b      	ldrh	r3, [r3, #0]
 80103c0:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80103c2:	4b13      	ldr	r3, [pc, #76]	; (8010410 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80103c4:	881a      	ldrh	r2, [r3, #0]
 80103c6:	4b11      	ldr	r3, [pc, #68]	; (801040c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80103c8:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 80103ca:	4a11      	ldr	r2, [pc, #68]	; (8010410 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80103cc:	89bb      	ldrh	r3, [r7, #12]
 80103ce:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80103d0:	4b0d      	ldr	r3, [pc, #52]	; (8010408 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80103d2:	2201      	movs	r2, #1
 80103d4:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 80103d6:	e010      	b.n	80103fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 80103d8:	4b0b      	ldr	r3, [pc, #44]	; (8010408 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80103da:	781b      	ldrb	r3, [r3, #0]
 80103dc:	2b00      	cmp	r3, #0
 80103de:	d00c      	beq.n	80103fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 80103e0:	4b0a      	ldr	r3, [pc, #40]	; (801040c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80103e2:	881b      	ldrh	r3, [r3, #0]
 80103e4:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80103e6:	4b0a      	ldr	r3, [pc, #40]	; (8010410 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80103e8:	881a      	ldrh	r2, [r3, #0]
 80103ea:	4b08      	ldr	r3, [pc, #32]	; (801040c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80103ec:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 80103ee:	4a08      	ldr	r2, [pc, #32]	; (8010410 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80103f0:	89fb      	ldrh	r3, [r7, #14]
 80103f2:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80103f4:	4b04      	ldr	r3, [pc, #16]	; (8010408 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80103f6:	2200      	movs	r2, #0
 80103f8:	701a      	strb	r2, [r3, #0]
    }
 80103fa:	bf00      	nop
 80103fc:	3714      	adds	r7, #20
 80103fe:	46bd      	mov	sp, r7
 8010400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010404:	4770      	bx	lr
 8010406:	bf00      	nop
 8010408:	24002f9c 	.word	0x24002f9c
 801040c:	24002f9a 	.word	0x24002f9a
 8010410:	24002f98 	.word	0x24002f98

08010414 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8010414:	b580      	push	{r7, lr}
 8010416:	b082      	sub	sp, #8
 8010418:	af00      	add	r7, sp, #0
 801041a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 801041c:	687b      	ldr	r3, [r7, #4]
 801041e:	4618      	mov	r0, r3
 8010420:	f001 ff96 	bl	8012350 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8010424:	bf00      	nop
 8010426:	3708      	adds	r7, #8
 8010428:	46bd      	mov	sp, r7
 801042a:	bd80      	pop	{r7, pc}

0801042c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 801042c:	b580      	push	{r7, lr}
 801042e:	b082      	sub	sp, #8
 8010430:	af00      	add	r7, sp, #0
 8010432:	6078      	str	r0, [r7, #4]
 8010434:	4a05      	ldr	r2, [pc, #20]	; (801044c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 8010436:	687b      	ldr	r3, [r7, #4]
 8010438:	601a      	str	r2, [r3, #0]
 801043a:	687b      	ldr	r3, [r7, #4]
 801043c:	4618      	mov	r0, r3
 801043e:	f7ff fe8d 	bl	801015c <_ZN8touchgfx3HALD1Ev>
 8010442:	687b      	ldr	r3, [r7, #4]
 8010444:	4618      	mov	r0, r3
 8010446:	3708      	adds	r7, #8
 8010448:	46bd      	mov	sp, r7
 801044a:	bd80      	pop	{r7, pc}
 801044c:	08028538 	.word	0x08028538

08010450 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8010450:	b580      	push	{r7, lr}
 8010452:	b082      	sub	sp, #8
 8010454:	af00      	add	r7, sp, #0
 8010456:	6078      	str	r0, [r7, #4]
 8010458:	6878      	ldr	r0, [r7, #4]
 801045a:	f7ff ffe7 	bl	801042c <_ZN20TouchGFXGeneratedHALD1Ev>
 801045e:	217c      	movs	r1, #124	; 0x7c
 8010460:	6878      	ldr	r0, [r7, #4]
 8010462:	f015 fa38 	bl	80258d6 <_ZdlPvj>
 8010466:	687b      	ldr	r3, [r7, #4]
 8010468:	4618      	mov	r0, r3
 801046a:	3708      	adds	r7, #8
 801046c:	46bd      	mov	sp, r7
 801046e:	bd80      	pop	{r7, pc}

08010470 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8010470:	b580      	push	{r7, lr}
 8010472:	b082      	sub	sp, #8
 8010474:	af00      	add	r7, sp, #0
 8010476:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 8010478:	687b      	ldr	r3, [r7, #4]
 801047a:	4618      	mov	r0, r3
 801047c:	f7ff ffca 	bl	8010414 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8010480:	bf00      	nop
 8010482:	3708      	adds	r7, #8
 8010484:	46bd      	mov	sp, r7
 8010486:	bd80      	pop	{r7, pc}

08010488 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 8010488:	b580      	push	{r7, lr}
 801048a:	b082      	sub	sp, #8
 801048c:	af00      	add	r7, sp, #0
 801048e:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8010490:	687b      	ldr	r3, [r7, #4]
 8010492:	4618      	mov	r0, r3
 8010494:	f001 f820 	bl	80114d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 8010498:	bf00      	nop
 801049a:	3708      	adds	r7, #8
 801049c:	46bd      	mov	sp, r7
 801049e:	bd80      	pop	{r7, pc}

080104a0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 80104a0:	b580      	push	{r7, lr}
 80104a2:	b082      	sub	sp, #8
 80104a4:	af00      	add	r7, sp, #0
 80104a6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80104a8:	687b      	ldr	r3, [r7, #4]
 80104aa:	4618      	mov	r0, r3
 80104ac:	f001 f892 	bl	80115d4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 80104b0:	4603      	mov	r3, r0
}
 80104b2:	4618      	mov	r0, r3
 80104b4:	3708      	adds	r7, #8
 80104b6:	46bd      	mov	sp, r7
 80104b8:	bd80      	pop	{r7, pc}

080104ba <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 80104ba:	b580      	push	{r7, lr}
 80104bc:	b082      	sub	sp, #8
 80104be:	af00      	add	r7, sp, #0
 80104c0:	6078      	str	r0, [r7, #4]
 80104c2:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80104c4:	687b      	ldr	r3, [r7, #4]
 80104c6:	6839      	ldr	r1, [r7, #0]
 80104c8:	4618      	mov	r0, r3
 80104ca:	f001 f88e 	bl	80115ea <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 80104ce:	bf00      	nop
 80104d0:	3708      	adds	r7, #8
 80104d2:	46bd      	mov	sp, r7
 80104d4:	bd80      	pop	{r7, pc}

080104d6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80104d6:	b580      	push	{r7, lr}
 80104d8:	b082      	sub	sp, #8
 80104da:	af00      	add	r7, sp, #0
 80104dc:	6078      	str	r0, [r7, #4]
 80104de:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80104e0:	687b      	ldr	r3, [r7, #4]
 80104e2:	6839      	ldr	r1, [r7, #0]
 80104e4:	4618      	mov	r0, r3
 80104e6:	f001 f88b 	bl	8011600 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 80104ea:	bf00      	nop
 80104ec:	3708      	adds	r7, #8
 80104ee:	46bd      	mov	sp, r7
 80104f0:	bd80      	pop	{r7, pc}

080104f2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80104f2:	b580      	push	{r7, lr}
 80104f4:	b084      	sub	sp, #16
 80104f6:	af00      	add	r7, sp, #0
 80104f8:	60f8      	str	r0, [r7, #12]
 80104fa:	60b9      	str	r1, [r7, #8]
 80104fc:	607a      	str	r2, [r7, #4]
 80104fe:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8010500:	68f8      	ldr	r0, [r7, #12]
 8010502:	683b      	ldr	r3, [r7, #0]
 8010504:	687a      	ldr	r2, [r7, #4]
 8010506:	68b9      	ldr	r1, [r7, #8]
 8010508:	f001 f8bd 	bl	8011686 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 801050c:	4603      	mov	r3, r0
}
 801050e:	4618      	mov	r0, r3
 8010510:	3710      	adds	r7, #16
 8010512:	46bd      	mov	sp, r7
 8010514:	bd80      	pop	{r7, pc}

08010516 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8010516:	b580      	push	{r7, lr}
 8010518:	b082      	sub	sp, #8
 801051a:	af00      	add	r7, sp, #0
 801051c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 801051e:	687b      	ldr	r3, [r7, #4]
 8010520:	4618      	mov	r0, r3
 8010522:	f001 f809 	bl	8011538 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8010526:	bf00      	nop
 8010528:	3708      	adds	r7, #8
 801052a:	46bd      	mov	sp, r7
 801052c:	bd80      	pop	{r7, pc}

0801052e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 801052e:	b580      	push	{r7, lr}
 8010530:	b082      	sub	sp, #8
 8010532:	af00      	add	r7, sp, #0
 8010534:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8010536:	687b      	ldr	r3, [r7, #4]
 8010538:	4618      	mov	r0, r3
 801053a:	f001 f807 	bl	801154c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 801053e:	bf00      	nop
 8010540:	3708      	adds	r7, #8
 8010542:	46bd      	mov	sp, r7
 8010544:	bd80      	pop	{r7, pc}

08010546 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8010546:	b580      	push	{r7, lr}
 8010548:	b082      	sub	sp, #8
 801054a:	af00      	add	r7, sp, #0
 801054c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 801054e:	687b      	ldr	r3, [r7, #4]
 8010550:	4618      	mov	r0, r3
 8010552:	f001 f805 	bl	8011560 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8010556:	bf00      	nop
 8010558:	3708      	adds	r7, #8
 801055a:	46bd      	mov	sp, r7
 801055c:	bd80      	pop	{r7, pc}

0801055e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 801055e:	b580      	push	{r7, lr}
 8010560:	b082      	sub	sp, #8
 8010562:	af00      	add	r7, sp, #0
 8010564:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8010566:	687b      	ldr	r3, [r7, #4]
 8010568:	4618      	mov	r0, r3
 801056a:	f001 f803 	bl	8011574 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 801056e:	bf00      	nop
 8010570:	3708      	adds	r7, #8
 8010572:	46bd      	mov	sp, r7
 8010574:	bd80      	pop	{r7, pc}

08010576 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 8010576:	b580      	push	{r7, lr}
 8010578:	b082      	sub	sp, #8
 801057a:	af00      	add	r7, sp, #0
 801057c:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 801057e:	687b      	ldr	r3, [r7, #4]
 8010580:	4618      	mov	r0, r3
 8010582:	f001 f801 	bl	8011588 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 8010586:	4603      	mov	r3, r0
}
 8010588:	4618      	mov	r0, r3
 801058a:	3708      	adds	r7, #8
 801058c:	46bd      	mov	sp, r7
 801058e:	bd80      	pop	{r7, pc}

08010590 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8010590:	b580      	push	{r7, lr}
 8010592:	b082      	sub	sp, #8
 8010594:	af00      	add	r7, sp, #0
 8010596:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 8010598:	687b      	ldr	r3, [r7, #4]
 801059a:	4618      	mov	r0, r3
 801059c:	f001 f801 	bl	80115a2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 80105a0:	bf00      	nop
 80105a2:	3708      	adds	r7, #8
 80105a4:	46bd      	mov	sp, r7
 80105a6:	bd80      	pop	{r7, pc}

080105a8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80105a8:	b580      	push	{r7, lr}
 80105aa:	b082      	sub	sp, #8
 80105ac:	af00      	add	r7, sp, #0
 80105ae:	6078      	str	r0, [r7, #4]
 80105b0:	4a05      	ldr	r2, [pc, #20]	; (80105c8 <_ZN11TouchGFXHALD1Ev+0x20>)
 80105b2:	687b      	ldr	r3, [r7, #4]
 80105b4:	601a      	str	r2, [r3, #0]
 80105b6:	687b      	ldr	r3, [r7, #4]
 80105b8:	4618      	mov	r0, r3
 80105ba:	f7ff ff37 	bl	801042c <_ZN20TouchGFXGeneratedHALD1Ev>
 80105be:	687b      	ldr	r3, [r7, #4]
 80105c0:	4618      	mov	r0, r3
 80105c2:	3708      	adds	r7, #8
 80105c4:	46bd      	mov	sp, r7
 80105c6:	bd80      	pop	{r7, pc}
 80105c8:	080282ec 	.word	0x080282ec

080105cc <_ZN11TouchGFXHALD0Ev>:
 80105cc:	b580      	push	{r7, lr}
 80105ce:	b082      	sub	sp, #8
 80105d0:	af00      	add	r7, sp, #0
 80105d2:	6078      	str	r0, [r7, #4]
 80105d4:	6878      	ldr	r0, [r7, #4]
 80105d6:	f7ff ffe7 	bl	80105a8 <_ZN11TouchGFXHALD1Ev>
 80105da:	217c      	movs	r1, #124	; 0x7c
 80105dc:	6878      	ldr	r0, [r7, #4]
 80105de:	f015 f97a 	bl	80258d6 <_ZdlPvj>
 80105e2:	687b      	ldr	r3, [r7, #4]
 80105e4:	4618      	mov	r0, r3
 80105e6:	3708      	adds	r7, #8
 80105e8:	46bd      	mov	sp, r7
 80105ea:	bd80      	pop	{r7, pc}

080105ec <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 80105ec:	b480      	push	{r7}
 80105ee:	af00      	add	r7, sp, #0
	return isTransmittingData;
 80105f0:	4b03      	ldr	r3, [pc, #12]	; (8010600 <touchgfxDisplayDriverTransmitActive+0x14>)
 80105f2:	781b      	ldrb	r3, [r3, #0]
}
 80105f4:	4618      	mov	r0, r3
 80105f6:	46bd      	mov	sp, r7
 80105f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105fc:	4770      	bx	lr
 80105fe:	bf00      	nop
 8010600:	24000480 	.word	0x24000480

08010604 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 8010604:	b590      	push	{r4, r7, lr}
 8010606:	b085      	sub	sp, #20
 8010608:	af00      	add	r7, sp, #0
 801060a:	60f8      	str	r0, [r7, #12]
 801060c:	4608      	mov	r0, r1
 801060e:	4611      	mov	r1, r2
 8010610:	461a      	mov	r2, r3
 8010612:	4603      	mov	r3, r0
 8010614:	817b      	strh	r3, [r7, #10]
 8010616:	460b      	mov	r3, r1
 8010618:	813b      	strh	r3, [r7, #8]
 801061a:	4613      	mov	r3, r2
 801061c:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 801061e:	4b0f      	ldr	r3, [pc, #60]	; (801065c <touchgfxDisplayDriverTransmitBlock+0x58>)
 8010620:	2201      	movs	r2, #1
 8010622:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 8010624:	897a      	ldrh	r2, [r7, #10]
 8010626:	88fb      	ldrh	r3, [r7, #6]
 8010628:	4413      	add	r3, r2
 801062a:	b29b      	uxth	r3, r3
 801062c:	3b01      	subs	r3, #1
 801062e:	b29c      	uxth	r4, r3
 8010630:	893a      	ldrh	r2, [r7, #8]
 8010632:	8c3b      	ldrh	r3, [r7, #32]
 8010634:	4413      	add	r3, r2
 8010636:	b29b      	uxth	r3, r3
 8010638:	3b01      	subs	r3, #1
 801063a:	b29b      	uxth	r3, r3
 801063c:	8939      	ldrh	r1, [r7, #8]
 801063e:	8978      	ldrh	r0, [r7, #10]
 8010640:	4622      	mov	r2, r4
 8010642:	f7ef ffbc 	bl	80005be <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 8010646:	8c39      	ldrh	r1, [r7, #32]
 8010648:	88fb      	ldrh	r3, [r7, #6]
 801064a:	68fa      	ldr	r2, [r7, #12]
 801064c:	4618      	mov	r0, r3
 801064e:	f7f0 f821 	bl	8000694 <ILI9341_DrawBitmap>
}
 8010652:	bf00      	nop
 8010654:	3714      	adds	r7, #20
 8010656:	46bd      	mov	sp, r7
 8010658:	bd90      	pop	{r4, r7, pc}
 801065a:	bf00      	nop
 801065c:	24000480 	.word	0x24000480

08010660 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 8010660:	b580      	push	{r7, lr}
 8010662:	b082      	sub	sp, #8
 8010664:	af00      	add	r7, sp, #0
 8010666:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI5) {
 8010668:	687b      	ldr	r3, [r7, #4]
 801066a:	681b      	ldr	r3, [r3, #0]
 801066c:	4a06      	ldr	r2, [pc, #24]	; (8010688 <HAL_SPI_TxCpltCallback+0x28>)
 801066e:	4293      	cmp	r3, r2
 8010670:	d106      	bne.n	8010680 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 8010672:	f7f0 f837 	bl	80006e4 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 8010676:	4b05      	ldr	r3, [pc, #20]	; (801068c <HAL_SPI_TxCpltCallback+0x2c>)
 8010678:	2200      	movs	r2, #0
 801067a:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 801067c:	f001 f903 	bl	8011886 <DisplayDriver_TransferCompleteCallback>
	}
}
 8010680:	bf00      	nop
 8010682:	3708      	adds	r7, #8
 8010684:	46bd      	mov	sp, r7
 8010686:	bd80      	pop	{r7, pc}
 8010688:	40015000 	.word	0x40015000
 801068c:	24000480 	.word	0x24000480

08010690 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8010690:	b480      	push	{r7}
 8010692:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010694:	4b05      	ldr	r3, [pc, #20]	; (80106ac <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8010696:	2200      	movs	r2, #0
 8010698:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 801069a:	4b05      	ldr	r3, [pc, #20]	; (80106b0 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 801069c:	2200      	movs	r2, #0
 801069e:	601a      	str	r2, [r3, #0]
}
 80106a0:	bf00      	nop
 80106a2:	46bd      	mov	sp, r7
 80106a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106a8:	4770      	bx	lr
 80106aa:	bf00      	nop
 80106ac:	24000484 	.word	0x24000484
 80106b0:	24000488 	.word	0x24000488

080106b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 80106b4:	b480      	push	{r7}
 80106b6:	af00      	add	r7, sp, #0
    while (fb_sem);
 80106b8:	bf00      	nop
 80106ba:	4b08      	ldr	r3, [pc, #32]	; (80106dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80106bc:	681b      	ldr	r3, [r3, #0]
 80106be:	2b00      	cmp	r3, #0
 80106c0:	bf14      	ite	ne
 80106c2:	2301      	movne	r3, #1
 80106c4:	2300      	moveq	r3, #0
 80106c6:	b2db      	uxtb	r3, r3
 80106c8:	2b00      	cmp	r3, #0
 80106ca:	d1f6      	bne.n	80106ba <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 80106cc:	4b03      	ldr	r3, [pc, #12]	; (80106dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80106ce:	2201      	movs	r2, #1
 80106d0:	601a      	str	r2, [r3, #0]
}
 80106d2:	bf00      	nop
 80106d4:	46bd      	mov	sp, r7
 80106d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106da:	4770      	bx	lr
 80106dc:	24000484 	.word	0x24000484

080106e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 80106e0:	b480      	push	{r7}
 80106e2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80106e4:	4b03      	ldr	r3, [pc, #12]	; (80106f4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 80106e6:	2200      	movs	r2, #0
 80106e8:	601a      	str	r2, [r3, #0]
}
 80106ea:	bf00      	nop
 80106ec:	46bd      	mov	sp, r7
 80106ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106f2:	4770      	bx	lr
 80106f4:	24000484 	.word	0x24000484

080106f8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80106f8:	b480      	push	{r7}
 80106fa:	af00      	add	r7, sp, #0
    fb_sem = 1;
 80106fc:	4b03      	ldr	r3, [pc, #12]	; (801070c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80106fe:	2201      	movs	r2, #1
 8010700:	601a      	str	r2, [r3, #0]
}
 8010702:	bf00      	nop
 8010704:	46bd      	mov	sp, r7
 8010706:	f85d 7b04 	ldr.w	r7, [sp], #4
 801070a:	4770      	bx	lr
 801070c:	24000484 	.word	0x24000484

08010710 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 8010710:	b480      	push	{r7}
 8010712:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8010714:	4b03      	ldr	r3, [pc, #12]	; (8010724 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 8010716:	2200      	movs	r2, #0
 8010718:	601a      	str	r2, [r3, #0]
}
 801071a:	bf00      	nop
 801071c:	46bd      	mov	sp, r7
 801071e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010722:	4770      	bx	lr
 8010724:	24000484 	.word	0x24000484

08010728 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8010728:	b480      	push	{r7}
 801072a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 801072c:	4b03      	ldr	r3, [pc, #12]	; (801073c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 801072e:	2201      	movs	r2, #1
 8010730:	601a      	str	r2, [r3, #0]
}
 8010732:	bf00      	nop
 8010734:	46bd      	mov	sp, r7
 8010736:	f85d 7b04 	ldr.w	r7, [sp], #4
 801073a:	4770      	bx	lr
 801073c:	24000488 	.word	0x24000488

08010740 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 8010740:	b480      	push	{r7}
 8010742:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8010744:	4b03      	ldr	r3, [pc, #12]	; (8010754 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 8010746:	2200      	movs	r2, #0
 8010748:	601a      	str	r2, [r3, #0]
}
 801074a:	bf00      	nop
 801074c:	46bd      	mov	sp, r7
 801074e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010752:	4770      	bx	lr
 8010754:	24000488 	.word	0x24000488

08010758 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 8010758:	b480      	push	{r7}
 801075a:	af00      	add	r7, sp, #0
    return vsync_sem;
 801075c:	4b05      	ldr	r3, [pc, #20]	; (8010774 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 801075e:	681b      	ldr	r3, [r3, #0]
 8010760:	2b00      	cmp	r3, #0
 8010762:	bf14      	ite	ne
 8010764:	2301      	movne	r3, #1
 8010766:	2300      	moveq	r3, #0
 8010768:	b2db      	uxtb	r3, r3
}
 801076a:	4618      	mov	r0, r3
 801076c:	46bd      	mov	sp, r7
 801076e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010772:	4770      	bx	lr
 8010774:	24000488 	.word	0x24000488

08010778 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8010778:	b580      	push	{r7, lr}
 801077a:	af00      	add	r7, sp, #0
    if (vsync_sem)
 801077c:	4b0a      	ldr	r3, [pc, #40]	; (80107a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 801077e:	681b      	ldr	r3, [r3, #0]
 8010780:	2b00      	cmp	r3, #0
 8010782:	bf14      	ite	ne
 8010784:	2301      	movne	r3, #1
 8010786:	2300      	moveq	r3, #0
 8010788:	b2db      	uxtb	r3, r3
 801078a:	2b00      	cmp	r3, #0
 801078c:	d00a      	beq.n	80107a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 801078e:	4b06      	ldr	r3, [pc, #24]	; (80107a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010790:	2200      	movs	r2, #0
 8010792:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 8010794:	f7fb fe98 	bl	800c4c8 <_ZN8touchgfx3HAL11getInstanceEv>
 8010798:	4603      	mov	r3, r0
 801079a:	681a      	ldr	r2, [r3, #0]
 801079c:	3270      	adds	r2, #112	; 0x70
 801079e:	6812      	ldr	r2, [r2, #0]
 80107a0:	4618      	mov	r0, r3
 80107a2:	4790      	blx	r2
    }
}
 80107a4:	bf00      	nop
 80107a6:	bd80      	pop	{r7, pc}
 80107a8:	24000488 	.word	0x24000488

080107ac <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 80107ac:	b480      	push	{r7}
 80107ae:	b083      	sub	sp, #12
 80107b0:	af00      	add	r7, sp, #0
 80107b2:	6078      	str	r0, [r7, #4]
        : color(0)
 80107b4:	687b      	ldr	r3, [r7, #4]
 80107b6:	2200      	movs	r2, #0
 80107b8:	601a      	str	r2, [r3, #0]
    }
 80107ba:	687b      	ldr	r3, [r7, #4]
 80107bc:	4618      	mov	r0, r3
 80107be:	370c      	adds	r7, #12
 80107c0:	46bd      	mov	sp, r7
 80107c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107c6:	4770      	bx	lr

080107c8 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 80107c8:	b480      	push	{r7}
 80107ca:	b083      	sub	sp, #12
 80107cc:	af00      	add	r7, sp, #0
 80107ce:	6078      	str	r0, [r7, #4]
    {
 80107d0:	4a04      	ldr	r2, [pc, #16]	; (80107e4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 80107d2:	687b      	ldr	r3, [r7, #4]
 80107d4:	601a      	str	r2, [r3, #0]
    }
 80107d6:	687b      	ldr	r3, [r7, #4]
 80107d8:	4618      	mov	r0, r3
 80107da:	370c      	adds	r7, #12
 80107dc:	46bd      	mov	sp, r7
 80107de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107e2:	4770      	bx	lr
 80107e4:	08028414 	.word	0x08028414

080107e8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 80107e8:	b580      	push	{r7, lr}
 80107ea:	b082      	sub	sp, #8
 80107ec:	af00      	add	r7, sp, #0
 80107ee:	6078      	str	r0, [r7, #4]
    }
 80107f0:	6878      	ldr	r0, [r7, #4]
 80107f2:	f7ff ffe9 	bl	80107c8 <_ZN8touchgfx9DMA_QueueD1Ev>
 80107f6:	2104      	movs	r1, #4
 80107f8:	6878      	ldr	r0, [r7, #4]
 80107fa:	f015 f86c 	bl	80258d6 <_ZdlPvj>
 80107fe:	687b      	ldr	r3, [r7, #4]
 8010800:	4618      	mov	r0, r3
 8010802:	3708      	adds	r7, #8
 8010804:	46bd      	mov	sp, r7
 8010806:	bd80      	pop	{r7, pc}

08010808 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 8010808:	b480      	push	{r7}
 801080a:	b083      	sub	sp, #12
 801080c:	af00      	add	r7, sp, #0
 801080e:	6078      	str	r0, [r7, #4]
    {
    }
 8010810:	bf00      	nop
 8010812:	370c      	adds	r7, #12
 8010814:	46bd      	mov	sp, r7
 8010816:	f85d 7b04 	ldr.w	r7, [sp], #4
 801081a:	4770      	bx	lr

0801081c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 801081c:	b480      	push	{r7}
 801081e:	b083      	sub	sp, #12
 8010820:	af00      	add	r7, sp, #0
 8010822:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8010824:	2300      	movs	r3, #0
    }
 8010826:	4618      	mov	r0, r3
 8010828:	370c      	adds	r7, #12
 801082a:	46bd      	mov	sp, r7
 801082c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010830:	4770      	bx	lr
	...

08010834 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 8010834:	b480      	push	{r7}
 8010836:	b083      	sub	sp, #12
 8010838:	af00      	add	r7, sp, #0
 801083a:	6078      	str	r0, [r7, #4]
    {
 801083c:	4a04      	ldr	r2, [pc, #16]	; (8010850 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 801083e:	687b      	ldr	r3, [r7, #4]
 8010840:	601a      	str	r2, [r3, #0]
    }
 8010842:	687b      	ldr	r3, [r7, #4]
 8010844:	4618      	mov	r0, r3
 8010846:	370c      	adds	r7, #12
 8010848:	46bd      	mov	sp, r7
 801084a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801084e:	4770      	bx	lr
 8010850:	080287e4 	.word	0x080287e4

08010854 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8010854:	b580      	push	{r7, lr}
 8010856:	b082      	sub	sp, #8
 8010858:	af00      	add	r7, sp, #0
 801085a:	6078      	str	r0, [r7, #4]
    }
 801085c:	6878      	ldr	r0, [r7, #4]
 801085e:	f7ff ffe9 	bl	8010834 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010862:	210c      	movs	r1, #12
 8010864:	6878      	ldr	r0, [r7, #4]
 8010866:	f015 f836 	bl	80258d6 <_ZdlPvj>
 801086a:	687b      	ldr	r3, [r7, #4]
 801086c:	4618      	mov	r0, r3
 801086e:	3708      	adds	r7, #8
 8010870:	46bd      	mov	sp, r7
 8010872:	bd80      	pop	{r7, pc}

08010874 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8010874:	b480      	push	{r7}
 8010876:	b083      	sub	sp, #12
 8010878:	af00      	add	r7, sp, #0
 801087a:	6078      	str	r0, [r7, #4]
 801087c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 801087e:	4a09      	ldr	r2, [pc, #36]	; (80108a4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8010880:	687b      	ldr	r3, [r7, #4]
 8010882:	601a      	str	r2, [r3, #0]
 8010884:	687b      	ldr	r3, [r7, #4]
 8010886:	683a      	ldr	r2, [r7, #0]
 8010888:	605a      	str	r2, [r3, #4]
 801088a:	687b      	ldr	r3, [r7, #4]
 801088c:	2200      	movs	r2, #0
 801088e:	721a      	strb	r2, [r3, #8]
 8010890:	687b      	ldr	r3, [r7, #4]
 8010892:	2200      	movs	r2, #0
 8010894:	725a      	strb	r2, [r3, #9]
    {
    }
 8010896:	687b      	ldr	r3, [r7, #4]
 8010898:	4618      	mov	r0, r3
 801089a:	370c      	adds	r7, #12
 801089c:	46bd      	mov	sp, r7
 801089e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108a2:	4770      	bx	lr
 80108a4:	080287e4 	.word	0x080287e4

080108a8 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 80108a8:	b480      	push	{r7}
 80108aa:	b083      	sub	sp, #12
 80108ac:	af00      	add	r7, sp, #0
 80108ae:	6078      	str	r0, [r7, #4]
    {
    }
 80108b0:	bf00      	nop
 80108b2:	370c      	adds	r7, #12
 80108b4:	46bd      	mov	sp, r7
 80108b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ba:	4770      	bx	lr

080108bc <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 80108bc:	b480      	push	{r7}
 80108be:	b083      	sub	sp, #12
 80108c0:	af00      	add	r7, sp, #0
 80108c2:	6078      	str	r0, [r7, #4]
    {
    }
 80108c4:	bf00      	nop
 80108c6:	370c      	adds	r7, #12
 80108c8:	46bd      	mov	sp, r7
 80108ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ce:	4770      	bx	lr

080108d0 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 80108d0:	b580      	push	{r7, lr}
 80108d2:	b082      	sub	sp, #8
 80108d4:	af00      	add	r7, sp, #0
 80108d6:	6078      	str	r0, [r7, #4]
 80108d8:	687b      	ldr	r3, [r7, #4]
 80108da:	330c      	adds	r3, #12
 80108dc:	4618      	mov	r0, r3
 80108de:	f7ff ff65 	bl	80107ac <_ZN8touchgfx9colortypeC1Ev>
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	4618      	mov	r0, r3
 80108e6:	3708      	adds	r7, #8
 80108e8:	46bd      	mov	sp, r7
 80108ea:	bd80      	pop	{r7, pc}

080108ec <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 80108ec:	b580      	push	{r7, lr}
 80108ee:	b082      	sub	sp, #8
 80108f0:	af00      	add	r7, sp, #0
 80108f2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 80108f4:	687a      	ldr	r2, [r7, #4]
 80108f6:	687b      	ldr	r3, [r7, #4]
 80108f8:	330c      	adds	r3, #12
 80108fa:	4619      	mov	r1, r3
 80108fc:	4610      	mov	r0, r2
 80108fe:	f7ff ffb9 	bl	8010874 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8010902:	4a0b      	ldr	r2, [pc, #44]	; (8010930 <_ZN8STM32DMAC1Ev+0x44>)
 8010904:	687b      	ldr	r3, [r7, #4]
 8010906:	601a      	str	r2, [r3, #0]
 8010908:	687b      	ldr	r3, [r7, #4]
 801090a:	f103 000c 	add.w	r0, r3, #12
 801090e:	687b      	ldr	r3, [r7, #4]
 8010910:	3320      	adds	r3, #32
 8010912:	2201      	movs	r2, #1
 8010914:	4619      	mov	r1, r3
 8010916:	f002 fbf7 	bl	8013108 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 801091a:	687b      	ldr	r3, [r7, #4]
 801091c:	3320      	adds	r3, #32
 801091e:	4618      	mov	r0, r3
 8010920:	f7ff ffd6 	bl	80108d0 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 8010924:	687b      	ldr	r3, [r7, #4]
 8010926:	4618      	mov	r0, r3
 8010928:	3708      	adds	r7, #8
 801092a:	46bd      	mov	sp, r7
 801092c:	bd80      	pop	{r7, pc}
 801092e:	bf00      	nop
 8010930:	080283c4 	.word	0x080283c4

08010934 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 8010934:	b480      	push	{r7}
 8010936:	b083      	sub	sp, #12
 8010938:	af00      	add	r7, sp, #0
 801093a:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 801093c:	2300      	movs	r3, #0
}
 801093e:	4618      	mov	r0, r3
 8010940:	370c      	adds	r7, #12
 8010942:	46bd      	mov	sp, r7
 8010944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010948:	4770      	bx	lr
	...

0801094c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 801094c:	b580      	push	{r7, lr}
 801094e:	b082      	sub	sp, #8
 8010950:	af00      	add	r7, sp, #0
 8010952:	6078      	str	r0, [r7, #4]
 8010954:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8010956:	4b03      	ldr	r3, [pc, #12]	; (8010964 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8010958:	4a03      	ldr	r2, [pc, #12]	; (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801095a:	2122      	movs	r1, #34	; 0x22
 801095c:	4803      	ldr	r0, [pc, #12]	; (801096c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 801095e:	f014 ffe9 	bl	8025934 <__assert_func>
 8010962:	bf00      	nop
 8010964:	08027448 	.word	0x08027448
 8010968:	0802746c 	.word	0x0802746c
 801096c:	080274ac 	.word	0x080274ac

08010970 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8010970:	b580      	push	{r7, lr}
 8010972:	b082      	sub	sp, #8
 8010974:	af00      	add	r7, sp, #0
 8010976:	6078      	str	r0, [r7, #4]
 8010978:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801097a:	4b03      	ldr	r3, [pc, #12]	; (8010988 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 801097c:	4a03      	ldr	r2, [pc, #12]	; (801098c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 801097e:	2127      	movs	r1, #39	; 0x27
 8010980:	4803      	ldr	r0, [pc, #12]	; (8010990 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 8010982:	f014 ffd7 	bl	8025934 <__assert_func>
 8010986:	bf00      	nop
 8010988:	08027448 	.word	0x08027448
 801098c:	080274d8 	.word	0x080274d8
 8010990:	080274ac 	.word	0x080274ac

08010994 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8010994:	b580      	push	{r7, lr}
 8010996:	b082      	sub	sp, #8
 8010998:	af00      	add	r7, sp, #0
 801099a:	6078      	str	r0, [r7, #4]
 801099c:	4a08      	ldr	r2, [pc, #32]	; (80109c0 <_ZN8STM32DMAD1Ev+0x2c>)
 801099e:	687b      	ldr	r3, [r7, #4]
 80109a0:	601a      	str	r2, [r3, #0]
 80109a2:	687b      	ldr	r3, [r7, #4]
 80109a4:	330c      	adds	r3, #12
 80109a6:	4618      	mov	r0, r3
 80109a8:	f000 f81c 	bl	80109e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80109ac:	687b      	ldr	r3, [r7, #4]
 80109ae:	4618      	mov	r0, r3
 80109b0:	f7ff ff40 	bl	8010834 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 80109b4:	687b      	ldr	r3, [r7, #4]
 80109b6:	4618      	mov	r0, r3
 80109b8:	3708      	adds	r7, #8
 80109ba:	46bd      	mov	sp, r7
 80109bc:	bd80      	pop	{r7, pc}
 80109be:	bf00      	nop
 80109c0:	080283c4 	.word	0x080283c4

080109c4 <_ZN8STM32DMAD0Ev>:
 80109c4:	b580      	push	{r7, lr}
 80109c6:	b082      	sub	sp, #8
 80109c8:	af00      	add	r7, sp, #0
 80109ca:	6078      	str	r0, [r7, #4]
 80109cc:	6878      	ldr	r0, [r7, #4]
 80109ce:	f7ff ffe1 	bl	8010994 <_ZN8STM32DMAD1Ev>
 80109d2:	2144      	movs	r1, #68	; 0x44
 80109d4:	6878      	ldr	r0, [r7, #4]
 80109d6:	f014 ff7e 	bl	80258d6 <_ZdlPvj>
 80109da:	687b      	ldr	r3, [r7, #4]
 80109dc:	4618      	mov	r0, r3
 80109de:	3708      	adds	r7, #8
 80109e0:	46bd      	mov	sp, r7
 80109e2:	bd80      	pop	{r7, pc}

080109e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80109e4:	b580      	push	{r7, lr}
 80109e6:	b082      	sub	sp, #8
 80109e8:	af00      	add	r7, sp, #0
 80109ea:	6078      	str	r0, [r7, #4]
 80109ec:	4a05      	ldr	r2, [pc, #20]	; (8010a04 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80109ee:	687b      	ldr	r3, [r7, #4]
 80109f0:	601a      	str	r2, [r3, #0]
 80109f2:	687b      	ldr	r3, [r7, #4]
 80109f4:	4618      	mov	r0, r3
 80109f6:	f7ff fee7 	bl	80107c8 <_ZN8touchgfx9DMA_QueueD1Ev>
 80109fa:	687b      	ldr	r3, [r7, #4]
 80109fc:	4618      	mov	r0, r3
 80109fe:	3708      	adds	r7, #8
 8010a00:	46bd      	mov	sp, r7
 8010a02:	bd80      	pop	{r7, pc}
 8010a04:	08028834 	.word	0x08028834

08010a08 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010a08:	b580      	push	{r7, lr}
 8010a0a:	b082      	sub	sp, #8
 8010a0c:	af00      	add	r7, sp, #0
 8010a0e:	6078      	str	r0, [r7, #4]
 8010a10:	6878      	ldr	r0, [r7, #4]
 8010a12:	f7ff ffe7 	bl	80109e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010a16:	2114      	movs	r1, #20
 8010a18:	6878      	ldr	r0, [r7, #4]
 8010a1a:	f014 ff5c 	bl	80258d6 <_ZdlPvj>
 8010a1e:	687b      	ldr	r3, [r7, #4]
 8010a20:	4618      	mov	r0, r3
 8010a22:	3708      	adds	r7, #8
 8010a24:	46bd      	mov	sp, r7
 8010a26:	bd80      	pop	{r7, pc}

08010a28 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8010a28:	b480      	push	{r7}
 8010a2a:	b083      	sub	sp, #12
 8010a2c:	af00      	add	r7, sp, #0
 8010a2e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8010a30:	4a04      	ldr	r2, [pc, #16]	; (8010a44 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8010a32:	687b      	ldr	r3, [r7, #4]
 8010a34:	6013      	str	r3, [r2, #0]
    }
 8010a36:	bf00      	nop
 8010a38:	370c      	adds	r7, #12
 8010a3a:	46bd      	mov	sp, r7
 8010a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a40:	4770      	bx	lr
 8010a42:	bf00      	nop
 8010a44:	24003000 	.word	0x24003000

08010a48 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010a48:	b480      	push	{r7}
 8010a4a:	b085      	sub	sp, #20
 8010a4c:	af00      	add	r7, sp, #0
 8010a4e:	60f8      	str	r0, [r7, #12]
 8010a50:	60b9      	str	r1, [r7, #8]
 8010a52:	607a      	str	r2, [r7, #4]
 8010a54:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010a56:	4a0b      	ldr	r2, [pc, #44]	; (8010a84 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010a58:	68fb      	ldr	r3, [r7, #12]
 8010a5a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8010a5c:	68fb      	ldr	r3, [r7, #12]
 8010a5e:	68ba      	ldr	r2, [r7, #8]
 8010a60:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8010a62:	68fb      	ldr	r3, [r7, #12]
 8010a64:	687a      	ldr	r2, [r7, #4]
 8010a66:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010a68:	68fb      	ldr	r3, [r7, #12]
 8010a6a:	683a      	ldr	r2, [r7, #0]
 8010a6c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 8010a6e:	68fb      	ldr	r3, [r7, #12]
 8010a70:	69ba      	ldr	r2, [r7, #24]
 8010a72:	611a      	str	r2, [r3, #16]
    {
    }
 8010a74:	68fb      	ldr	r3, [r7, #12]
 8010a76:	4618      	mov	r0, r3
 8010a78:	3714      	adds	r7, #20
 8010a7a:	46bd      	mov	sp, r7
 8010a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a80:	4770      	bx	lr
 8010a82:	bf00      	nop
 8010a84:	080284fc 	.word	0x080284fc

08010a88 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010a88:	b480      	push	{r7}
 8010a8a:	b083      	sub	sp, #12
 8010a8c:	af00      	add	r7, sp, #0
 8010a8e:	6078      	str	r0, [r7, #4]
    {
 8010a90:	4a04      	ldr	r2, [pc, #16]	; (8010aa4 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8010a92:	687b      	ldr	r3, [r7, #4]
 8010a94:	601a      	str	r2, [r3, #0]
    }
 8010a96:	687b      	ldr	r3, [r7, #4]
 8010a98:	4618      	mov	r0, r3
 8010a9a:	370c      	adds	r7, #12
 8010a9c:	46bd      	mov	sp, r7
 8010a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010aa2:	4770      	bx	lr
 8010aa4:	080284fc 	.word	0x080284fc

08010aa8 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010aa8:	b580      	push	{r7, lr}
 8010aaa:	b082      	sub	sp, #8
 8010aac:	af00      	add	r7, sp, #0
 8010aae:	6078      	str	r0, [r7, #4]
    }
 8010ab0:	6878      	ldr	r0, [r7, #4]
 8010ab2:	f7ff ffe9 	bl	8010a88 <_ZN8touchgfx7MVPHeapD1Ev>
 8010ab6:	2114      	movs	r1, #20
 8010ab8:	6878      	ldr	r0, [r7, #4]
 8010aba:	f014 ff0c 	bl	80258d6 <_ZdlPvj>
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	4618      	mov	r0, r3
 8010ac2:	3708      	adds	r7, #8
 8010ac4:	46bd      	mov	sp, r7
 8010ac6:	bd80      	pop	{r7, pc}

08010ac8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8010ac8:	b480      	push	{r7}
 8010aca:	b083      	sub	sp, #12
 8010acc:	af00      	add	r7, sp, #0
 8010ace:	6078      	str	r0, [r7, #4]
    {
 8010ad0:	4a04      	ldr	r2, [pc, #16]	; (8010ae4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8010ad2:	687b      	ldr	r3, [r7, #4]
 8010ad4:	601a      	str	r2, [r3, #0]
    }
 8010ad6:	687b      	ldr	r3, [r7, #4]
 8010ad8:	4618      	mov	r0, r3
 8010ada:	370c      	adds	r7, #12
 8010adc:	46bd      	mov	sp, r7
 8010ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ae2:	4770      	bx	lr
 8010ae4:	08028aa8 	.word	0x08028aa8

08010ae8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8010ae8:	b580      	push	{r7, lr}
 8010aea:	b082      	sub	sp, #8
 8010aec:	af00      	add	r7, sp, #0
 8010aee:	6078      	str	r0, [r7, #4]
    }
 8010af0:	6878      	ldr	r0, [r7, #4]
 8010af2:	f7ff ffe9 	bl	8010ac8 <_ZN8touchgfx3LCDD1Ev>
 8010af6:	2108      	movs	r1, #8
 8010af8:	6878      	ldr	r0, [r7, #4]
 8010afa:	f014 feec 	bl	80258d6 <_ZdlPvj>
 8010afe:	687b      	ldr	r3, [r7, #4]
 8010b00:	4618      	mov	r0, r3
 8010b02:	3708      	adds	r7, #8
 8010b04:	46bd      	mov	sp, r7
 8010b06:	bd80      	pop	{r7, pc}

08010b08 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8010b08:	b480      	push	{r7}
 8010b0a:	b083      	sub	sp, #12
 8010b0c:	af00      	add	r7, sp, #0
 8010b0e:	6078      	str	r0, [r7, #4]
            : startX(0),
 8010b10:	687b      	ldr	r3, [r7, #4]
 8010b12:	2200      	movs	r2, #0
 8010b14:	801a      	strh	r2, [r3, #0]
              startY(0),
 8010b16:	687b      	ldr	r3, [r7, #4]
 8010b18:	2200      	movs	r2, #0
 8010b1a:	805a      	strh	r2, [r3, #2]
              downX(0),
 8010b1c:	687b      	ldr	r3, [r7, #4]
 8010b1e:	2200      	movs	r2, #0
 8010b20:	809a      	strh	r2, [r3, #4]
              downY(0),
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	2200      	movs	r2, #0
 8010b26:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8010b28:	687b      	ldr	r3, [r7, #4]
 8010b2a:	2200      	movs	r2, #0
 8010b2c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 8010b2e:	687b      	ldr	r3, [r7, #4]
 8010b30:	2200      	movs	r2, #0
 8010b32:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	2200      	movs	r2, #0
 8010b38:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 8010b3a:	687b      	ldr	r3, [r7, #4]
 8010b3c:	2200      	movs	r2, #0
 8010b3e:	739a      	strb	r2, [r3, #14]
        {
        }
 8010b40:	687b      	ldr	r3, [r7, #4]
 8010b42:	4618      	mov	r0, r3
 8010b44:	370c      	adds	r7, #12
 8010b46:	46bd      	mov	sp, r7
 8010b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b4c:	4770      	bx	lr

08010b4e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8010b4e:	b580      	push	{r7, lr}
 8010b50:	b082      	sub	sp, #8
 8010b52:	af00      	add	r7, sp, #0
 8010b54:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8010b56:	687b      	ldr	r3, [r7, #4]
 8010b58:	4618      	mov	r0, r3
 8010b5a:	f7ff ffd5 	bl	8010b08 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8010b5e:	687b      	ldr	r3, [r7, #4]
 8010b60:	2200      	movs	r2, #0
 8010b62:	611a      	str	r2, [r3, #16]
 8010b64:	687b      	ldr	r3, [r7, #4]
 8010b66:	2200      	movs	r2, #0
 8010b68:	829a      	strh	r2, [r3, #20]
    {
    }
 8010b6a:	687b      	ldr	r3, [r7, #4]
 8010b6c:	4618      	mov	r0, r3
 8010b6e:	3708      	adds	r7, #8
 8010b70:	46bd      	mov	sp, r7
 8010b72:	bd80      	pop	{r7, pc}

08010b74 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010b74:	b580      	push	{r7, lr}
 8010b76:	b084      	sub	sp, #16
 8010b78:	af00      	add	r7, sp, #0
 8010b7a:	60f8      	str	r0, [r7, #12]
 8010b7c:	60b9      	str	r1, [r7, #8]
 8010b7e:	607a      	str	r2, [r7, #4]
 8010b80:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8010b82:	4a55      	ldr	r2, [pc, #340]	; (8010cd8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8010b84:	68fb      	ldr	r3, [r7, #12]
 8010b86:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010b88:	68fb      	ldr	r3, [r7, #12]
 8010b8a:	68ba      	ldr	r2, [r7, #8]
 8010b8c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 8010b8e:	68fb      	ldr	r3, [r7, #12]
 8010b90:	687a      	ldr	r2, [r7, #4]
 8010b92:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8010b94:	68fb      	ldr	r3, [r7, #12]
 8010b96:	683a      	ldr	r2, [r7, #0]
 8010b98:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8010b9a:	68fb      	ldr	r3, [r7, #12]
 8010b9c:	2200      	movs	r2, #0
 8010b9e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8010ba0:	68fb      	ldr	r3, [r7, #12]
 8010ba2:	2200      	movs	r2, #0
 8010ba4:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8010ba6:	68fb      	ldr	r3, [r7, #12]
 8010ba8:	2200      	movs	r2, #0
 8010baa:	619a      	str	r2, [r3, #24]
          gestures(),
 8010bac:	68fb      	ldr	r3, [r7, #12]
 8010bae:	331c      	adds	r3, #28
 8010bb0:	4618      	mov	r0, r3
 8010bb2:	f7ff ffcc 	bl	8010b4e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8010bb6:	68fb      	ldr	r3, [r7, #12]
 8010bb8:	2200      	movs	r2, #0
 8010bba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 8010bbe:	68fb      	ldr	r3, [r7, #12]
 8010bc0:	2200      	movs	r2, #0
 8010bc2:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 8010bc4:	68fb      	ldr	r3, [r7, #12]
 8010bc6:	2200      	movs	r2, #0
 8010bc8:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 8010bca:	68fb      	ldr	r3, [r7, #12]
 8010bcc:	2200      	movs	r2, #0
 8010bce:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8010bd0:	68fb      	ldr	r3, [r7, #12]
 8010bd2:	2200      	movs	r2, #0
 8010bd4:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8010bd6:	68fb      	ldr	r3, [r7, #12]
 8010bd8:	2200      	movs	r2, #0
 8010bda:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 8010bde:	68fb      	ldr	r3, [r7, #12]
 8010be0:	2201      	movs	r2, #1
 8010be2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 8010be6:	68fb      	ldr	r3, [r7, #12]
 8010be8:	2200      	movs	r2, #0
 8010bea:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 8010bee:	68fb      	ldr	r3, [r7, #12]
 8010bf0:	2200      	movs	r2, #0
 8010bf2:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 8010bf6:	68fb      	ldr	r3, [r7, #12]
 8010bf8:	2200      	movs	r2, #0
 8010bfa:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 8010bfc:	68fb      	ldr	r3, [r7, #12]
 8010bfe:	3350      	adds	r3, #80	; 0x50
 8010c00:	4618      	mov	r0, r3
 8010c02:	f7fc fc22 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 8010c06:	68fb      	ldr	r3, [r7, #12]
 8010c08:	2200      	movs	r2, #0
 8010c0a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 8010c0e:	68fb      	ldr	r3, [r7, #12]
 8010c10:	2200      	movs	r2, #0
 8010c12:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 8010c14:	68fb      	ldr	r3, [r7, #12]
 8010c16:	2200      	movs	r2, #0
 8010c18:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 8010c1a:	68fb      	ldr	r3, [r7, #12]
 8010c1c:	2200      	movs	r2, #0
 8010c1e:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8010c20:	68fb      	ldr	r3, [r7, #12]
 8010c22:	2201      	movs	r2, #1
 8010c24:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 8010c28:	68fb      	ldr	r3, [r7, #12]
 8010c2a:	2200      	movs	r2, #0
 8010c2c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8010c30:	68fb      	ldr	r3, [r7, #12]
 8010c32:	2200      	movs	r2, #0
 8010c34:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 8010c38:	68fb      	ldr	r3, [r7, #12]
 8010c3a:	2201      	movs	r2, #1
 8010c3c:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8010c40:	68fb      	ldr	r3, [r7, #12]
 8010c42:	2200      	movs	r2, #0
 8010c44:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 8010c48:	68fb      	ldr	r3, [r7, #12]
 8010c4a:	2200      	movs	r2, #0
 8010c4c:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8010c50:	68fb      	ldr	r3, [r7, #12]
 8010c52:	2200      	movs	r2, #0
 8010c54:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8010c58:	68fb      	ldr	r3, [r7, #12]
 8010c5a:	2200      	movs	r2, #0
 8010c5c:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8010c60:	68fb      	ldr	r3, [r7, #12]
 8010c62:	2200      	movs	r2, #0
 8010c64:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8010c68:	68fb      	ldr	r3, [r7, #12]
 8010c6a:	2200      	movs	r2, #0
 8010c6c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8010c6e:	68fb      	ldr	r3, [r7, #12]
 8010c70:	2200      	movs	r2, #0
 8010c72:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8010c76:	68fb      	ldr	r3, [r7, #12]
 8010c78:	2200      	movs	r2, #0
 8010c7a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 8010c7e:	68fb      	ldr	r3, [r7, #12]
 8010c80:	2201      	movs	r2, #1
 8010c82:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8010c86:	68fb      	ldr	r3, [r7, #12]
 8010c88:	2201      	movs	r2, #1
 8010c8a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 8010c8e:	4a13      	ldr	r2, [pc, #76]	; (8010cdc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8010c90:	68fb      	ldr	r3, [r7, #12]
 8010c92:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8010c94:	4a12      	ldr	r2, [pc, #72]	; (8010ce0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010c96:	8b3b      	ldrh	r3, [r7, #24]
 8010c98:	8013      	strh	r3, [r2, #0]
 8010c9a:	4b11      	ldr	r3, [pc, #68]	; (8010ce0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010c9c:	881a      	ldrh	r2, [r3, #0]
 8010c9e:	4b11      	ldr	r3, [pc, #68]	; (8010ce4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8010ca0:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8010ca2:	4a11      	ldr	r2, [pc, #68]	; (8010ce8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010ca4:	8bbb      	ldrh	r3, [r7, #28]
 8010ca6:	8013      	strh	r3, [r2, #0]
 8010ca8:	4b0f      	ldr	r3, [pc, #60]	; (8010ce8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010caa:	881a      	ldrh	r2, [r3, #0]
 8010cac:	4b0f      	ldr	r3, [pc, #60]	; (8010cec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 8010cae:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8010cb0:	4b0f      	ldr	r3, [pc, #60]	; (8010cf0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8010cb2:	2200      	movs	r2, #0
 8010cb4:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010cb6:	8b3a      	ldrh	r2, [r7, #24]
 8010cb8:	8bbb      	ldrh	r3, [r7, #28]
 8010cba:	429a      	cmp	r2, r3
 8010cbc:	bf34      	ite	cc
 8010cbe:	2301      	movcc	r3, #1
 8010cc0:	2300      	movcs	r3, #0
 8010cc2:	b2db      	uxtb	r3, r3
 8010cc4:	461a      	mov	r2, r3
 8010cc6:	68fb      	ldr	r3, [r7, #12]
 8010cc8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8010ccc:	68fb      	ldr	r3, [r7, #12]
 8010cce:	4618      	mov	r0, r3
 8010cd0:	3710      	adds	r7, #16
 8010cd2:	46bd      	mov	sp, r7
 8010cd4:	bd80      	pop	{r7, pc}
 8010cd6:	bf00      	nop
 8010cd8:	0802870c 	.word	0x0802870c
 8010cdc:	24002fa4 	.word	0x24002fa4
 8010ce0:	24002f98 	.word	0x24002f98
 8010ce4:	24002f9e 	.word	0x24002f9e
 8010ce8:	24002f9a 	.word	0x24002f9a
 8010cec:	24002fa0 	.word	0x24002fa0
 8010cf0:	24002f9c 	.word	0x24002f9c

08010cf4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8010cf4:	b580      	push	{r7, lr}
 8010cf6:	b082      	sub	sp, #8
 8010cf8:	af00      	add	r7, sp, #0
 8010cfa:	6078      	str	r0, [r7, #4]
 8010cfc:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreen_settingsScreenNoTransition();
 8010cfe:	683b      	ldr	r3, [r7, #0]
 8010d00:	4618      	mov	r0, r3
 8010d02:	f7fb fddd 	bl	800c8c0 <_ZN23FrontendApplicationBase37gotoscreen_settingsScreenNoTransitionEv>
    }
 8010d06:	bf00      	nop
 8010d08:	3708      	adds	r7, #8
 8010d0a:	46bd      	mov	sp, r7
 8010d0c:	bd80      	pop	{r7, pc}
	...

08010d10 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8010d10:	b580      	push	{r7, lr}
 8010d12:	b086      	sub	sp, #24
 8010d14:	af02      	add	r7, sp, #8
 8010d16:	60f8      	str	r0, [r7, #12]
 8010d18:	60b9      	str	r1, [r7, #8]
 8010d1a:	607a      	str	r2, [r7, #4]
 8010d1c:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8010d1e:	68f8      	ldr	r0, [r7, #12]
 8010d20:	69bb      	ldr	r3, [r7, #24]
 8010d22:	9300      	str	r3, [sp, #0]
 8010d24:	683b      	ldr	r3, [r7, #0]
 8010d26:	687a      	ldr	r2, [r7, #4]
 8010d28:	68b9      	ldr	r1, [r7, #8]
 8010d2a:	f7ff fe8d 	bl	8010a48 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8010d2e:	4a04      	ldr	r2, [pc, #16]	; (8010d40 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8010d30:	68fb      	ldr	r3, [r7, #12]
 8010d32:	601a      	str	r2, [r3, #0]
    {

    }
 8010d34:	68fb      	ldr	r3, [r7, #12]
 8010d36:	4618      	mov	r0, r3
 8010d38:	3710      	adds	r7, #16
 8010d3a:	46bd      	mov	sp, r7
 8010d3c:	bd80      	pop	{r7, pc}
 8010d3e:	bf00      	nop
 8010d40:	080284e8 	.word	0x080284e8

08010d44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8010d44:	b580      	push	{r7, lr}
 8010d46:	af00      	add	r7, sp, #0
 8010d48:	4801      	ldr	r0, [pc, #4]	; (8010d50 <__tcf_0+0xc>)
 8010d4a:	f000 f969 	bl	8011020 <_ZN12FrontendHeapD1Ev>
 8010d4e:	bd80      	pop	{r7, pc}
 8010d50:	2400048c 	.word	0x2400048c

08010d54 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8010d54:	b580      	push	{r7, lr}
 8010d56:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010d58:	4b11      	ldr	r3, [pc, #68]	; (8010da0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010d5a:	681b      	ldr	r3, [r3, #0]
 8010d5c:	f3bf 8f5b 	dmb	ish
 8010d60:	f003 0301 	and.w	r3, r3, #1
 8010d64:	2b00      	cmp	r3, #0
 8010d66:	bf0c      	ite	eq
 8010d68:	2301      	moveq	r3, #1
 8010d6a:	2300      	movne	r3, #0
 8010d6c:	b2db      	uxtb	r3, r3
 8010d6e:	2b00      	cmp	r3, #0
 8010d70:	d013      	beq.n	8010d9a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010d72:	480b      	ldr	r0, [pc, #44]	; (8010da0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010d74:	f014 fdb1 	bl	80258da <__cxa_guard_acquire>
 8010d78:	4603      	mov	r3, r0
 8010d7a:	2b00      	cmp	r3, #0
 8010d7c:	bf14      	ite	ne
 8010d7e:	2301      	movne	r3, #1
 8010d80:	2300      	moveq	r3, #0
 8010d82:	b2db      	uxtb	r3, r3
 8010d84:	2b00      	cmp	r3, #0
 8010d86:	d008      	beq.n	8010d9a <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010d88:	4806      	ldr	r0, [pc, #24]	; (8010da4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010d8a:	f000 f867 	bl	8010e5c <_ZN12FrontendHeapC1Ev>
 8010d8e:	4806      	ldr	r0, [pc, #24]	; (8010da8 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8010d90:	f014 fdee 	bl	8025970 <atexit>
 8010d94:	4802      	ldr	r0, [pc, #8]	; (8010da0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010d96:	f014 fdac 	bl	80258f2 <__cxa_guard_release>
        return instance;
 8010d9a:	4b02      	ldr	r3, [pc, #8]	; (8010da4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8010d9c:	4618      	mov	r0, r3
 8010d9e:	bd80      	pop	{r7, pc}
 8010da0:	2400088c 	.word	0x2400088c
 8010da4:	2400048c 	.word	0x2400048c
 8010da8:	08010d45 	.word	0x08010d45

08010dac <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8010dac:	b580      	push	{r7, lr}
 8010dae:	b082      	sub	sp, #8
 8010db0:	af00      	add	r7, sp, #0
 8010db2:	6078      	str	r0, [r7, #4]
 8010db4:	4a05      	ldr	r2, [pc, #20]	; (8010dcc <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8010db6:	687b      	ldr	r3, [r7, #4]
 8010db8:	601a      	str	r2, [r3, #0]
 8010dba:	687b      	ldr	r3, [r7, #4]
 8010dbc:	4618      	mov	r0, r3
 8010dbe:	f7ff fe63 	bl	8010a88 <_ZN8touchgfx7MVPHeapD1Ev>
 8010dc2:	687b      	ldr	r3, [r7, #4]
 8010dc4:	4618      	mov	r0, r3
 8010dc6:	3708      	adds	r7, #8
 8010dc8:	46bd      	mov	sp, r7
 8010dca:	bd80      	pop	{r7, pc}
 8010dcc:	080284e8 	.word	0x080284e8

08010dd0 <_ZN16FrontendHeapBaseD0Ev>:
 8010dd0:	b580      	push	{r7, lr}
 8010dd2:	b082      	sub	sp, #8
 8010dd4:	af00      	add	r7, sp, #0
 8010dd6:	6078      	str	r0, [r7, #4]
 8010dd8:	6878      	ldr	r0, [r7, #4]
 8010dda:	f7ff ffe7 	bl	8010dac <_ZN16FrontendHeapBaseD1Ev>
 8010dde:	2114      	movs	r1, #20
 8010de0:	6878      	ldr	r0, [r7, #4]
 8010de2:	f014 fd78 	bl	80258d6 <_ZdlPvj>
 8010de6:	687b      	ldr	r3, [r7, #4]
 8010de8:	4618      	mov	r0, r3
 8010dea:	3708      	adds	r7, #8
 8010dec:	46bd      	mov	sp, r7
 8010dee:	bd80      	pop	{r7, pc}

08010df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8010df0:	b580      	push	{r7, lr}
 8010df2:	b082      	sub	sp, #8
 8010df4:	af00      	add	r7, sp, #0
 8010df6:	6078      	str	r0, [r7, #4]
 8010df8:	687b      	ldr	r3, [r7, #4]
 8010dfa:	4618      	mov	r0, r3
 8010dfc:	f001 f806 	bl	8011e0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010e00:	4a03      	ldr	r2, [pc, #12]	; (8010e10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010e02:	687b      	ldr	r3, [r7, #4]
 8010e04:	601a      	str	r2, [r3, #0]
 8010e06:	687b      	ldr	r3, [r7, #4]
 8010e08:	4618      	mov	r0, r3
 8010e0a:	3708      	adds	r7, #8
 8010e0c:	46bd      	mov	sp, r7
 8010e0e:	bd80      	pop	{r7, pc}
 8010e10:	080284b4 	.word	0x080284b4

08010e14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010e14:	b580      	push	{r7, lr}
 8010e16:	b082      	sub	sp, #8
 8010e18:	af00      	add	r7, sp, #0
 8010e1a:	6078      	str	r0, [r7, #4]
 8010e1c:	687b      	ldr	r3, [r7, #4]
 8010e1e:	4618      	mov	r0, r3
 8010e20:	f000 fff4 	bl	8011e0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010e24:	4a03      	ldr	r2, [pc, #12]	; (8010e34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010e26:	687b      	ldr	r3, [r7, #4]
 8010e28:	601a      	str	r2, [r3, #0]
 8010e2a:	687b      	ldr	r3, [r7, #4]
 8010e2c:	4618      	mov	r0, r3
 8010e2e:	3708      	adds	r7, #8
 8010e30:	46bd      	mov	sp, r7
 8010e32:	bd80      	pop	{r7, pc}
 8010e34:	08028480 	.word	0x08028480

08010e38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010e38:	b580      	push	{r7, lr}
 8010e3a:	b082      	sub	sp, #8
 8010e3c:	af00      	add	r7, sp, #0
 8010e3e:	6078      	str	r0, [r7, #4]
 8010e40:	687b      	ldr	r3, [r7, #4]
 8010e42:	4618      	mov	r0, r3
 8010e44:	f000 ffe2 	bl	8011e0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010e48:	4a03      	ldr	r2, [pc, #12]	; (8010e58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010e4a:	687b      	ldr	r3, [r7, #4]
 8010e4c:	601a      	str	r2, [r3, #0]
 8010e4e:	687b      	ldr	r3, [r7, #4]
 8010e50:	4618      	mov	r0, r3
 8010e52:	3708      	adds	r7, #8
 8010e54:	46bd      	mov	sp, r7
 8010e56:	bd80      	pop	{r7, pc}
 8010e58:	0802844c 	.word	0x0802844c

08010e5c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010e5c:	b590      	push	{r4, r7, lr}
 8010e5e:	b085      	sub	sp, #20
 8010e60:	af02      	add	r7, sp, #8
 8010e62:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8010e64:	6878      	ldr	r0, [r7, #4]
 8010e66:	687b      	ldr	r3, [r7, #4]
 8010e68:	f103 0114 	add.w	r1, r3, #20
 8010e6c:	687b      	ldr	r3, [r7, #4]
 8010e6e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8010e72:	687b      	ldr	r3, [r7, #4]
 8010e74:	f503 7423 	add.w	r4, r3, #652	; 0x28c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010e78:	687b      	ldr	r3, [r7, #4]
 8010e7a:	f503 7329 	add.w	r3, r3, #676	; 0x2a4
                     app(model, *this)
 8010e7e:	9300      	str	r3, [sp, #0]
 8010e80:	4623      	mov	r3, r4
 8010e82:	f7ff ff45 	bl	8010d10 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8010e86:	4a18      	ldr	r2, [pc, #96]	; (8010ee8 <_ZN12FrontendHeapC1Ev+0x8c>)
 8010e88:	687b      	ldr	r3, [r7, #4]
 8010e8a:	601a      	str	r2, [r3, #0]
 8010e8c:	687b      	ldr	r3, [r7, #4]
 8010e8e:	3314      	adds	r3, #20
 8010e90:	4618      	mov	r0, r3
 8010e92:	f7ff ffad 	bl	8010df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010e96:	687b      	ldr	r3, [r7, #4]
 8010e98:	332c      	adds	r3, #44	; 0x2c
 8010e9a:	4618      	mov	r0, r3
 8010e9c:	f7ff ffba 	bl	8010e14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010ea0:	687b      	ldr	r3, [r7, #4]
 8010ea2:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 8010ea6:	4618      	mov	r0, r3
 8010ea8:	f7ff ffc6 	bl	8010e38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010eac:	687b      	ldr	r3, [r7, #4]
 8010eae:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 8010eb2:	4618      	mov	r0, r3
 8010eb4:	f7fe fd58 	bl	800f968 <_ZN5ModelC1Ev>
 8010eb8:	687b      	ldr	r3, [r7, #4]
 8010eba:	f503 7029 	add.w	r0, r3, #676	; 0x2a4
 8010ebe:	687b      	ldr	r3, [r7, #4]
 8010ec0:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 8010ec4:	687a      	ldr	r2, [r7, #4]
 8010ec6:	4619      	mov	r1, r3
 8010ec8:	f7fe fd38 	bl	800f93c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8010ecc:	687a      	ldr	r2, [r7, #4]
 8010ece:	687b      	ldr	r3, [r7, #4]
 8010ed0:	f503 7329 	add.w	r3, r3, #676	; 0x2a4
 8010ed4:	4619      	mov	r1, r3
 8010ed6:	4610      	mov	r0, r2
 8010ed8:	f7ff ff0c 	bl	8010cf4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8010edc:	687b      	ldr	r3, [r7, #4]
 8010ede:	4618      	mov	r0, r3
 8010ee0:	370c      	adds	r7, #12
 8010ee2:	46bd      	mov	sp, r7
 8010ee4:	bd90      	pop	{r4, r7, pc}
 8010ee6:	bf00      	nop
 8010ee8:	08028438 	.word	0x08028438

08010eec <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8010eec:	b580      	push	{r7, lr}
 8010eee:	b086      	sub	sp, #24
 8010ef0:	af02      	add	r7, sp, #8
 8010ef2:	60f8      	str	r0, [r7, #12]
 8010ef4:	60b9      	str	r1, [r7, #8]
 8010ef6:	607a      	str	r2, [r7, #4]
 8010ef8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 8010efa:	68f8      	ldr	r0, [r7, #12]
 8010efc:	8bbb      	ldrh	r3, [r7, #28]
 8010efe:	9301      	str	r3, [sp, #4]
 8010f00:	8b3b      	ldrh	r3, [r7, #24]
 8010f02:	9300      	str	r3, [sp, #0]
 8010f04:	683b      	ldr	r3, [r7, #0]
 8010f06:	687a      	ldr	r2, [r7, #4]
 8010f08:	68b9      	ldr	r1, [r7, #8]
 8010f0a:	f7ff fe33 	bl	8010b74 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8010f0e:	4a04      	ldr	r2, [pc, #16]	; (8010f20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010f10:	68fb      	ldr	r3, [r7, #12]
 8010f12:	601a      	str	r2, [r3, #0]
    }
 8010f14:	68fb      	ldr	r3, [r7, #12]
 8010f16:	4618      	mov	r0, r3
 8010f18:	3710      	adds	r7, #16
 8010f1a:	46bd      	mov	sp, r7
 8010f1c:	bd80      	pop	{r7, pc}
 8010f1e:	bf00      	nop
 8010f20:	08028538 	.word	0x08028538

08010f24 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8010f24:	b580      	push	{r7, lr}
 8010f26:	b086      	sub	sp, #24
 8010f28:	af02      	add	r7, sp, #8
 8010f2a:	60f8      	str	r0, [r7, #12]
 8010f2c:	60b9      	str	r1, [r7, #8]
 8010f2e:	607a      	str	r2, [r7, #4]
 8010f30:	603b      	str	r3, [r7, #0]
 8010f32:	68f8      	ldr	r0, [r7, #12]
 8010f34:	8bbb      	ldrh	r3, [r7, #28]
 8010f36:	9301      	str	r3, [sp, #4]
 8010f38:	8b3b      	ldrh	r3, [r7, #24]
 8010f3a:	9300      	str	r3, [sp, #0]
 8010f3c:	683b      	ldr	r3, [r7, #0]
 8010f3e:	687a      	ldr	r2, [r7, #4]
 8010f40:	68b9      	ldr	r1, [r7, #8]
 8010f42:	f7ff ffd3 	bl	8010eec <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010f46:	4a04      	ldr	r2, [pc, #16]	; (8010f58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010f48:	68fb      	ldr	r3, [r7, #12]
 8010f4a:	601a      	str	r2, [r3, #0]
    }
 8010f4c:	68fb      	ldr	r3, [r7, #12]
 8010f4e:	4618      	mov	r0, r3
 8010f50:	3710      	adds	r7, #16
 8010f52:	46bd      	mov	sp, r7
 8010f54:	bd80      	pop	{r7, pc}
 8010f56:	bf00      	nop
 8010f58:	080282ec 	.word	0x080282ec

08010f5c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8010f5c:	b480      	push	{r7}
 8010f5e:	b083      	sub	sp, #12
 8010f60:	af00      	add	r7, sp, #0
 8010f62:	6078      	str	r0, [r7, #4]
 8010f64:	4a04      	ldr	r2, [pc, #16]	; (8010f78 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8010f66:	687b      	ldr	r3, [r7, #4]
 8010f68:	601a      	str	r2, [r3, #0]
 8010f6a:	687b      	ldr	r3, [r7, #4]
 8010f6c:	4618      	mov	r0, r3
 8010f6e:	370c      	adds	r7, #12
 8010f70:	46bd      	mov	sp, r7
 8010f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f76:	4770      	bx	lr
 8010f78:	080282d4 	.word	0x080282d4

08010f7c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8010f7c:	b580      	push	{r7, lr}
 8010f7e:	b082      	sub	sp, #8
 8010f80:	af00      	add	r7, sp, #0
 8010f82:	6078      	str	r0, [r7, #4]
 8010f84:	687b      	ldr	r3, [r7, #4]
 8010f86:	4618      	mov	r0, r3
 8010f88:	f7ff ffe8 	bl	8010f5c <_ZN8touchgfx15TouchControllerC1Ev>
 8010f8c:	4a03      	ldr	r2, [pc, #12]	; (8010f9c <_ZN20STM32TouchControllerC1Ev+0x20>)
 8010f8e:	687b      	ldr	r3, [r7, #4]
 8010f90:	601a      	str	r2, [r3, #0]
 8010f92:	687b      	ldr	r3, [r7, #4]
 8010f94:	4618      	mov	r0, r3
 8010f96:	3708      	adds	r7, #8
 8010f98:	46bd      	mov	sp, r7
 8010f9a:	bd80      	pop	{r7, pc}
 8010f9c:	080282bc 	.word	0x080282bc

08010fa0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 8010fa0:	b590      	push	{r4, r7, lr}
 8010fa2:	b085      	sub	sp, #20
 8010fa4:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8010fa6:	f7fe fa93 	bl	800f4d0 <_ZN14BitmapDatabase11getInstanceEv>
 8010faa:	4604      	mov	r4, r0
 8010fac:	f7fe fa9a 	bl	800f4e4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8010fb0:	4603      	mov	r3, r0
 8010fb2:	4619      	mov	r1, r3
 8010fb4:	2300      	movs	r3, #0
 8010fb6:	9300      	str	r3, [sp, #0]
 8010fb8:	2300      	movs	r3, #0
 8010fba:	2200      	movs	r2, #0
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	f007 f82f 	bl	8018020 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 8010fc2:	4809      	ldr	r0, [pc, #36]	; (8010fe8 <touchgfx_init+0x48>)
 8010fc4:	f7ff fd30 	bl	8010a28 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8010fc8:	2000      	movs	r0, #0
 8010fca:	f7fe fbcf 	bl	800f76c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8010fce:	4807      	ldr	r0, [pc, #28]	; (8010fec <touchgfx_init+0x4c>)
 8010fd0:	f006 ff8e 	bl	8017ef0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8010fd4:	f7ff febe 	bl	8010d54 <_ZN12FrontendHeap11getInstanceEv>
 8010fd8:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8010fda:	4805      	ldr	r0, [pc, #20]	; (8010ff0 <touchgfx_init+0x50>)
 8010fdc:	f7ff fa54 	bl	8010488 <_ZN11TouchGFXHAL10initializeEv>
}
 8010fe0:	bf00      	nop
 8010fe2:	370c      	adds	r7, #12
 8010fe4:	46bd      	mov	sp, r7
 8010fe6:	bd90      	pop	{r4, r7, pc}
 8010fe8:	2400095c 	.word	0x2400095c
 8010fec:	24000018 	.word	0x24000018
 8010ff0:	24000960 	.word	0x24000960

08010ff4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8010ff4:	b480      	push	{r7}
 8010ff6:	af00      	add	r7, sp, #0
}
 8010ff8:	bf00      	nop
 8010ffa:	46bd      	mov	sp, r7
 8010ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011000:	4770      	bx	lr
	...

08011004 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8011004:	b580      	push	{r7, lr}
 8011006:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 8011008:	f7ff fba6 	bl	8010758 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 801100c:	4603      	mov	r3, r0
 801100e:	2b00      	cmp	r3, #0
 8011010:	d002      	beq.n	8011018 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 8011012:	4802      	ldr	r0, [pc, #8]	; (801101c <touchgfx_taskEntry+0x18>)
 8011014:	f7ff f91e 	bl	8010254 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 8011018:	bf00      	nop
 801101a:	bd80      	pop	{r7, pc}
 801101c:	24000960 	.word	0x24000960

08011020 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8011020:	b580      	push	{r7, lr}
 8011022:	b082      	sub	sp, #8
 8011024:	af00      	add	r7, sp, #0
 8011026:	6078      	str	r0, [r7, #4]
 8011028:	4a10      	ldr	r2, [pc, #64]	; (801106c <_ZN12FrontendHeapD1Ev+0x4c>)
 801102a:	687b      	ldr	r3, [r7, #4]
 801102c:	601a      	str	r2, [r3, #0]
 801102e:	687b      	ldr	r3, [r7, #4]
 8011030:	f503 7329 	add.w	r3, r3, #676	; 0x2a4
 8011034:	4618      	mov	r0, r3
 8011036:	f7fe fc4b 	bl	800f8d0 <_ZN19FrontendApplicationD1Ev>
 801103a:	687b      	ldr	r3, [r7, #4]
 801103c:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 8011040:	4618      	mov	r0, r3
 8011042:	f000 f827 	bl	8011094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011046:	687b      	ldr	r3, [r7, #4]
 8011048:	332c      	adds	r3, #44	; 0x2c
 801104a:	4618      	mov	r0, r3
 801104c:	f000 f844 	bl	80110d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011050:	687b      	ldr	r3, [r7, #4]
 8011052:	3314      	adds	r3, #20
 8011054:	4618      	mov	r0, r3
 8011056:	f000 f863 	bl	8011120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801105a:	687b      	ldr	r3, [r7, #4]
 801105c:	4618      	mov	r0, r3
 801105e:	f7ff fea5 	bl	8010dac <_ZN16FrontendHeapBaseD1Ev>
 8011062:	687b      	ldr	r3, [r7, #4]
 8011064:	4618      	mov	r0, r3
 8011066:	3708      	adds	r7, #8
 8011068:	46bd      	mov	sp, r7
 801106a:	bd80      	pop	{r7, pc}
 801106c:	08028438 	.word	0x08028438

08011070 <_ZN12FrontendHeapD0Ev>:
 8011070:	b580      	push	{r7, lr}
 8011072:	b082      	sub	sp, #8
 8011074:	af00      	add	r7, sp, #0
 8011076:	6078      	str	r0, [r7, #4]
 8011078:	6878      	ldr	r0, [r7, #4]
 801107a:	f7ff ffd1 	bl	8011020 <_ZN12FrontendHeapD1Ev>
 801107e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011082:	6878      	ldr	r0, [r7, #4]
 8011084:	f014 fc27 	bl	80258d6 <_ZdlPvj>
 8011088:	687b      	ldr	r3, [r7, #4]
 801108a:	4618      	mov	r0, r3
 801108c:	3708      	adds	r7, #8
 801108e:	46bd      	mov	sp, r7
 8011090:	bd80      	pop	{r7, pc}
	...

08011094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011094:	b580      	push	{r7, lr}
 8011096:	b082      	sub	sp, #8
 8011098:	af00      	add	r7, sp, #0
 801109a:	6078      	str	r0, [r7, #4]
 801109c:	4a05      	ldr	r2, [pc, #20]	; (80110b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801109e:	687b      	ldr	r3, [r7, #4]
 80110a0:	601a      	str	r2, [r3, #0]
 80110a2:	687b      	ldr	r3, [r7, #4]
 80110a4:	4618      	mov	r0, r3
 80110a6:	f000 feb0 	bl	8011e0a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80110aa:	687b      	ldr	r3, [r7, #4]
 80110ac:	4618      	mov	r0, r3
 80110ae:	3708      	adds	r7, #8
 80110b0:	46bd      	mov	sp, r7
 80110b2:	bd80      	pop	{r7, pc}
 80110b4:	0802844c 	.word	0x0802844c

080110b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80110b8:	b580      	push	{r7, lr}
 80110ba:	b082      	sub	sp, #8
 80110bc:	af00      	add	r7, sp, #0
 80110be:	6078      	str	r0, [r7, #4]
 80110c0:	6878      	ldr	r0, [r7, #4]
 80110c2:	f7ff ffe7 	bl	8011094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80110c6:	2114      	movs	r1, #20
 80110c8:	6878      	ldr	r0, [r7, #4]
 80110ca:	f014 fc04 	bl	80258d6 <_ZdlPvj>
 80110ce:	687b      	ldr	r3, [r7, #4]
 80110d0:	4618      	mov	r0, r3
 80110d2:	3708      	adds	r7, #8
 80110d4:	46bd      	mov	sp, r7
 80110d6:	bd80      	pop	{r7, pc}

080110d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80110d8:	b580      	push	{r7, lr}
 80110da:	b082      	sub	sp, #8
 80110dc:	af00      	add	r7, sp, #0
 80110de:	6078      	str	r0, [r7, #4]
 80110e0:	4a05      	ldr	r2, [pc, #20]	; (80110f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80110e2:	687b      	ldr	r3, [r7, #4]
 80110e4:	601a      	str	r2, [r3, #0]
 80110e6:	687b      	ldr	r3, [r7, #4]
 80110e8:	4618      	mov	r0, r3
 80110ea:	f000 fe8e 	bl	8011e0a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80110ee:	687b      	ldr	r3, [r7, #4]
 80110f0:	4618      	mov	r0, r3
 80110f2:	3708      	adds	r7, #8
 80110f4:	46bd      	mov	sp, r7
 80110f6:	bd80      	pop	{r7, pc}
 80110f8:	08028480 	.word	0x08028480

080110fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80110fc:	b580      	push	{r7, lr}
 80110fe:	b082      	sub	sp, #8
 8011100:	af00      	add	r7, sp, #0
 8011102:	6078      	str	r0, [r7, #4]
 8011104:	6878      	ldr	r0, [r7, #4]
 8011106:	f7ff ffe7 	bl	80110d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801110a:	f44f 7118 	mov.w	r1, #608	; 0x260
 801110e:	6878      	ldr	r0, [r7, #4]
 8011110:	f014 fbe1 	bl	80258d6 <_ZdlPvj>
 8011114:	687b      	ldr	r3, [r7, #4]
 8011116:	4618      	mov	r0, r3
 8011118:	3708      	adds	r7, #8
 801111a:	46bd      	mov	sp, r7
 801111c:	bd80      	pop	{r7, pc}
	...

08011120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011120:	b580      	push	{r7, lr}
 8011122:	b082      	sub	sp, #8
 8011124:	af00      	add	r7, sp, #0
 8011126:	6078      	str	r0, [r7, #4]
 8011128:	4a05      	ldr	r2, [pc, #20]	; (8011140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801112a:	687b      	ldr	r3, [r7, #4]
 801112c:	601a      	str	r2, [r3, #0]
 801112e:	687b      	ldr	r3, [r7, #4]
 8011130:	4618      	mov	r0, r3
 8011132:	f000 fe6a 	bl	8011e0a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011136:	687b      	ldr	r3, [r7, #4]
 8011138:	4618      	mov	r0, r3
 801113a:	3708      	adds	r7, #8
 801113c:	46bd      	mov	sp, r7
 801113e:	bd80      	pop	{r7, pc}
 8011140:	080284b4 	.word	0x080284b4

08011144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011144:	b580      	push	{r7, lr}
 8011146:	b082      	sub	sp, #8
 8011148:	af00      	add	r7, sp, #0
 801114a:	6078      	str	r0, [r7, #4]
 801114c:	6878      	ldr	r0, [r7, #4]
 801114e:	f7ff ffe7 	bl	8011120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011152:	2118      	movs	r1, #24
 8011154:	6878      	ldr	r0, [r7, #4]
 8011156:	f014 fbbe 	bl	80258d6 <_ZdlPvj>
 801115a:	687b      	ldr	r3, [r7, #4]
 801115c:	4618      	mov	r0, r3
 801115e:	3708      	adds	r7, #8
 8011160:	46bd      	mov	sp, r7
 8011162:	bd80      	pop	{r7, pc}

08011164 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8011164:	b580      	push	{r7, lr}
 8011166:	b082      	sub	sp, #8
 8011168:	af00      	add	r7, sp, #0
 801116a:	6078      	str	r0, [r7, #4]
 801116c:	4a05      	ldr	r2, [pc, #20]	; (8011184 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 801116e:	687b      	ldr	r3, [r7, #4]
 8011170:	601a      	str	r2, [r3, #0]
 8011172:	687b      	ldr	r3, [r7, #4]
 8011174:	4618      	mov	r0, r3
 8011176:	f7ff fca7 	bl	8010ac8 <_ZN8touchgfx3LCDD1Ev>
 801117a:	687b      	ldr	r3, [r7, #4]
 801117c:	4618      	mov	r0, r3
 801117e:	3708      	adds	r7, #8
 8011180:	46bd      	mov	sp, r7
 8011182:	bd80      	pop	{r7, pc}
 8011184:	08028f10 	.word	0x08028f10

08011188 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011188:	b580      	push	{r7, lr}
 801118a:	b082      	sub	sp, #8
 801118c:	af00      	add	r7, sp, #0
 801118e:	6078      	str	r0, [r7, #4]
 8011190:	6878      	ldr	r0, [r7, #4]
 8011192:	f7ff ffe7 	bl	8011164 <_ZN8touchgfx8LCD16bppD1Ev>
 8011196:	2184      	movs	r1, #132	; 0x84
 8011198:	6878      	ldr	r0, [r7, #4]
 801119a:	f014 fb9c 	bl	80258d6 <_ZdlPvj>
 801119e:	687b      	ldr	r3, [r7, #4]
 80111a0:	4618      	mov	r0, r3
 80111a2:	3708      	adds	r7, #8
 80111a4:	46bd      	mov	sp, r7
 80111a6:	bd80      	pop	{r7, pc}

080111a8 <_Z41__static_initialization_and_destruction_0ii>:
 80111a8:	b580      	push	{r7, lr}
 80111aa:	b084      	sub	sp, #16
 80111ac:	af02      	add	r7, sp, #8
 80111ae:	6078      	str	r0, [r7, #4]
 80111b0:	6039      	str	r1, [r7, #0]
 80111b2:	687b      	ldr	r3, [r7, #4]
 80111b4:	2b01      	cmp	r3, #1
 80111b6:	d118      	bne.n	80111ea <_Z41__static_initialization_and_destruction_0ii+0x42>
 80111b8:	683b      	ldr	r3, [r7, #0]
 80111ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80111be:	4293      	cmp	r3, r2
 80111c0:	d113      	bne.n	80111ea <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 80111c2:	4817      	ldr	r0, [pc, #92]	; (8011220 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80111c4:	f7ff feda 	bl	8010f7c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 80111c8:	4816      	ldr	r0, [pc, #88]	; (8011224 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80111ca:	f7ff fb8f 	bl	80108ec <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80111ce:	4816      	ldr	r0, [pc, #88]	; (8011228 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80111d0:	f00b f9f8 	bl	801c5c4 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 80111d4:	23f0      	movs	r3, #240	; 0xf0
 80111d6:	9301      	str	r3, [sp, #4]
 80111d8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80111dc:	9300      	str	r3, [sp, #0]
 80111de:	4b10      	ldr	r3, [pc, #64]	; (8011220 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80111e0:	4a11      	ldr	r2, [pc, #68]	; (8011228 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80111e2:	4910      	ldr	r1, [pc, #64]	; (8011224 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80111e4:	4811      	ldr	r0, [pc, #68]	; (801122c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80111e6:	f7ff fe9d 	bl	8010f24 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80111ea:	687b      	ldr	r3, [r7, #4]
 80111ec:	2b00      	cmp	r3, #0
 80111ee:	d113      	bne.n	8011218 <_Z41__static_initialization_and_destruction_0ii+0x70>
 80111f0:	683b      	ldr	r3, [r7, #0]
 80111f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80111f6:	4293      	cmp	r3, r2
 80111f8:	d10e      	bne.n	8011218 <_Z41__static_initialization_and_destruction_0ii+0x70>
 80111fa:	480c      	ldr	r0, [pc, #48]	; (801122c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80111fc:	f7ff f9d4 	bl	80105a8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8011200:	480b      	ldr	r0, [pc, #44]	; (8011230 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8011202:	f7fa fd67 	bl	800bcd4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8011206:	4808      	ldr	r0, [pc, #32]	; (8011228 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011208:	f7ff ffac 	bl	8011164 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 801120c:	4805      	ldr	r0, [pc, #20]	; (8011224 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 801120e:	f7ff fbc1 	bl	8010994 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8011212:	4803      	ldr	r0, [pc, #12]	; (8011220 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011214:	f7fe ff24 	bl	8010060 <_ZN20STM32TouchControllerD1Ev>
}
 8011218:	bf00      	nop
 801121a:	3708      	adds	r7, #8
 801121c:	46bd      	mov	sp, r7
 801121e:	bd80      	pop	{r7, pc}
 8011220:	24000890 	.word	0x24000890
 8011224:	24000894 	.word	0x24000894
 8011228:	240008d8 	.word	0x240008d8
 801122c:	24000960 	.word	0x24000960
 8011230:	24000018 	.word	0x24000018

08011234 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8011234:	b480      	push	{r7}
 8011236:	b083      	sub	sp, #12
 8011238:	af00      	add	r7, sp, #0
 801123a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 801123c:	2301      	movs	r3, #1
    }
 801123e:	4618      	mov	r0, r3
 8011240:	370c      	adds	r7, #12
 8011242:	46bd      	mov	sp, r7
 8011244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011248:	4770      	bx	lr

0801124a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 801124a:	b480      	push	{r7}
 801124c:	b083      	sub	sp, #12
 801124e:	af00      	add	r7, sp, #0
 8011250:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8011252:	230c      	movs	r3, #12
    }
 8011254:	4618      	mov	r0, r3
 8011256:	370c      	adds	r7, #12
 8011258:	46bd      	mov	sp, r7
 801125a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801125e:	4770      	bx	lr

08011260 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8011260:	b480      	push	{r7}
 8011262:	b083      	sub	sp, #12
 8011264:	af00      	add	r7, sp, #0
 8011266:	6078      	str	r0, [r7, #4]
 8011268:	460b      	mov	r3, r1
 801126a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 801126c:	887a      	ldrh	r2, [r7, #2]
 801126e:	4613      	mov	r3, r2
 8011270:	005b      	lsls	r3, r3, #1
 8011272:	4413      	add	r3, r2
 8011274:	009b      	lsls	r3, r3, #2
 8011276:	3308      	adds	r3, #8
 8011278:	687a      	ldr	r2, [r7, #4]
 801127a:	4413      	add	r3, r2
    }
 801127c:	4618      	mov	r0, r3
 801127e:	370c      	adds	r7, #12
 8011280:	46bd      	mov	sp, r7
 8011282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011286:	4770      	bx	lr

08011288 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011288:	b480      	push	{r7}
 801128a:	b083      	sub	sp, #12
 801128c:	af00      	add	r7, sp, #0
 801128e:	6078      	str	r0, [r7, #4]
 8011290:	460b      	mov	r3, r1
 8011292:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011294:	887a      	ldrh	r2, [r7, #2]
 8011296:	4613      	mov	r3, r2
 8011298:	005b      	lsls	r3, r3, #1
 801129a:	4413      	add	r3, r2
 801129c:	009b      	lsls	r3, r3, #2
 801129e:	3308      	adds	r3, #8
 80112a0:	687a      	ldr	r2, [r7, #4]
 80112a2:	4413      	add	r3, r2
    }
 80112a4:	4618      	mov	r0, r3
 80112a6:	370c      	adds	r7, #12
 80112a8:	46bd      	mov	sp, r7
 80112aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112ae:	4770      	bx	lr

080112b0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80112b0:	b480      	push	{r7}
 80112b2:	b083      	sub	sp, #12
 80112b4:	af00      	add	r7, sp, #0
 80112b6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80112b8:	2301      	movs	r3, #1
    }
 80112ba:	4618      	mov	r0, r3
 80112bc:	370c      	adds	r7, #12
 80112be:	46bd      	mov	sp, r7
 80112c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112c4:	4770      	bx	lr

080112c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80112c6:	b480      	push	{r7}
 80112c8:	b083      	sub	sp, #12
 80112ca:	af00      	add	r7, sp, #0
 80112cc:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80112ce:	f44f 7316 	mov.w	r3, #600	; 0x258
    }
 80112d2:	4618      	mov	r0, r3
 80112d4:	370c      	adds	r7, #12
 80112d6:	46bd      	mov	sp, r7
 80112d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112dc:	4770      	bx	lr

080112de <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 80112de:	b480      	push	{r7}
 80112e0:	b083      	sub	sp, #12
 80112e2:	af00      	add	r7, sp, #0
 80112e4:	6078      	str	r0, [r7, #4]
 80112e6:	460b      	mov	r3, r1
 80112e8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80112ea:	887b      	ldrh	r3, [r7, #2]
 80112ec:	f44f 7216 	mov.w	r2, #600	; 0x258
 80112f0:	fb02 f303 	mul.w	r3, r2, r3
 80112f4:	3308      	adds	r3, #8
 80112f6:	687a      	ldr	r2, [r7, #4]
 80112f8:	4413      	add	r3, r2
    }
 80112fa:	4618      	mov	r0, r3
 80112fc:	370c      	adds	r7, #12
 80112fe:	46bd      	mov	sp, r7
 8011300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011304:	4770      	bx	lr

08011306 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011306:	b480      	push	{r7}
 8011308:	b083      	sub	sp, #12
 801130a:	af00      	add	r7, sp, #0
 801130c:	6078      	str	r0, [r7, #4]
 801130e:	460b      	mov	r3, r1
 8011310:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011312:	887b      	ldrh	r3, [r7, #2]
 8011314:	f44f 7216 	mov.w	r2, #600	; 0x258
 8011318:	fb02 f303 	mul.w	r3, r2, r3
 801131c:	3308      	adds	r3, #8
 801131e:	687a      	ldr	r2, [r7, #4]
 8011320:	4413      	add	r3, r2
    }
 8011322:	4618      	mov	r0, r3
 8011324:	370c      	adds	r7, #12
 8011326:	46bd      	mov	sp, r7
 8011328:	f85d 7b04 	ldr.w	r7, [sp], #4
 801132c:	4770      	bx	lr

0801132e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 801132e:	b480      	push	{r7}
 8011330:	b083      	sub	sp, #12
 8011332:	af00      	add	r7, sp, #0
 8011334:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011336:	2301      	movs	r3, #1
    }
 8011338:	4618      	mov	r0, r3
 801133a:	370c      	adds	r7, #12
 801133c:	46bd      	mov	sp, r7
 801133e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011342:	4770      	bx	lr

08011344 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011344:	b480      	push	{r7}
 8011346:	b083      	sub	sp, #12
 8011348:	af00      	add	r7, sp, #0
 801134a:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 801134c:	2310      	movs	r3, #16
    }
 801134e:	4618      	mov	r0, r3
 8011350:	370c      	adds	r7, #12
 8011352:	46bd      	mov	sp, r7
 8011354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011358:	4770      	bx	lr

0801135a <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 801135a:	b480      	push	{r7}
 801135c:	b083      	sub	sp, #12
 801135e:	af00      	add	r7, sp, #0
 8011360:	6078      	str	r0, [r7, #4]
 8011362:	460b      	mov	r3, r1
 8011364:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011366:	887b      	ldrh	r3, [r7, #2]
 8011368:	011b      	lsls	r3, r3, #4
 801136a:	3308      	adds	r3, #8
 801136c:	687a      	ldr	r2, [r7, #4]
 801136e:	4413      	add	r3, r2
    }
 8011370:	4618      	mov	r0, r3
 8011372:	370c      	adds	r7, #12
 8011374:	46bd      	mov	sp, r7
 8011376:	f85d 7b04 	ldr.w	r7, [sp], #4
 801137a:	4770      	bx	lr

0801137c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_infoPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 801137c:	b480      	push	{r7}
 801137e:	b083      	sub	sp, #12
 8011380:	af00      	add	r7, sp, #0
 8011382:	6078      	str	r0, [r7, #4]
 8011384:	460b      	mov	r3, r1
 8011386:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011388:	887b      	ldrh	r3, [r7, #2]
 801138a:	011b      	lsls	r3, r3, #4
 801138c:	3308      	adds	r3, #8
 801138e:	687a      	ldr	r2, [r7, #4]
 8011390:	4413      	add	r3, r2
    }
 8011392:	4618      	mov	r0, r3
 8011394:	370c      	adds	r7, #12
 8011396:	46bd      	mov	sp, r7
 8011398:	f85d 7b04 	ldr.w	r7, [sp], #4
 801139c:	4770      	bx	lr

0801139e <_GLOBAL__sub_I_touchgfx_init>:
 801139e:	b580      	push	{r7, lr}
 80113a0:	af00      	add	r7, sp, #0
 80113a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80113a6:	2001      	movs	r0, #1
 80113a8:	f7ff fefe 	bl	80111a8 <_Z41__static_initialization_and_destruction_0ii>
 80113ac:	bd80      	pop	{r7, pc}

080113ae <_GLOBAL__sub_D_touchgfx_init>:
 80113ae:	b580      	push	{r7, lr}
 80113b0:	af00      	add	r7, sp, #0
 80113b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80113b6:	2000      	movs	r0, #0
 80113b8:	f7ff fef6 	bl	80111a8 <_Z41__static_initialization_and_destruction_0ii>
 80113bc:	bd80      	pop	{r7, pc}
	...

080113c0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 80113c0:	b480      	push	{r7}
 80113c2:	b083      	sub	sp, #12
 80113c4:	af00      	add	r7, sp, #0
 80113c6:	6078      	str	r0, [r7, #4]
    {
 80113c8:	4a04      	ldr	r2, [pc, #16]	; (80113dc <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 80113ca:	687b      	ldr	r3, [r7, #4]
 80113cc:	601a      	str	r2, [r3, #0]
    }
 80113ce:	687b      	ldr	r3, [r7, #4]
 80113d0:	4618      	mov	r0, r3
 80113d2:	370c      	adds	r7, #12
 80113d4:	46bd      	mov	sp, r7
 80113d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113da:	4770      	bx	lr
 80113dc:	08028610 	.word	0x08028610

080113e0 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 80113e0:	b580      	push	{r7, lr}
 80113e2:	b082      	sub	sp, #8
 80113e4:	af00      	add	r7, sp, #0
 80113e6:	6078      	str	r0, [r7, #4]
    }
 80113e8:	6878      	ldr	r0, [r7, #4]
 80113ea:	f7ff ffe9 	bl	80113c0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 80113ee:	2104      	movs	r1, #4
 80113f0:	6878      	ldr	r0, [r7, #4]
 80113f2:	f014 fa70 	bl	80258d6 <_ZdlPvj>
 80113f6:	687b      	ldr	r3, [r7, #4]
 80113f8:	4618      	mov	r0, r3
 80113fa:	3708      	adds	r7, #8
 80113fc:	46bd      	mov	sp, r7
 80113fe:	bd80      	pop	{r7, pc}

08011400 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8011400:	b480      	push	{r7}
 8011402:	b083      	sub	sp, #12
 8011404:	af00      	add	r7, sp, #0
 8011406:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8011408:	687b      	ldr	r3, [r7, #4]
 801140a:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 801140e:	3301      	adds	r3, #1
 8011410:	b2da      	uxtb	r2, r3
 8011412:	687b      	ldr	r3, [r7, #4]
 8011414:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 8011418:	bf00      	nop
 801141a:	370c      	adds	r7, #12
 801141c:	46bd      	mov	sp, r7
 801141e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011422:	4770      	bx	lr

08011424 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 8011424:	b480      	push	{r7}
 8011426:	b083      	sub	sp, #12
 8011428:	af00      	add	r7, sp, #0
 801142a:	6078      	str	r0, [r7, #4]
 801142c:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 801142e:	687b      	ldr	r3, [r7, #4]
 8011430:	683a      	ldr	r2, [r7, #0]
 8011432:	619a      	str	r2, [r3, #24]
    }
 8011434:	bf00      	nop
 8011436:	370c      	adds	r7, #12
 8011438:	46bd      	mov	sp, r7
 801143a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801143e:	4770      	bx	lr

08011440 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 8011440:	b480      	push	{r7}
 8011442:	b083      	sub	sp, #12
 8011444:	af00      	add	r7, sp, #0
 8011446:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 8011448:	687b      	ldr	r3, [r7, #4]
 801144a:	699b      	ldr	r3, [r3, #24]
    }
 801144c:	4618      	mov	r0, r3
 801144e:	370c      	adds	r7, #12
 8011450:	46bd      	mov	sp, r7
 8011452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011456:	4770      	bx	lr

08011458 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 8011458:	b580      	push	{r7, lr}
 801145a:	b082      	sub	sp, #8
 801145c:	af00      	add	r7, sp, #0
 801145e:	6078      	str	r0, [r7, #4]
 8011460:	460b      	mov	r3, r1
 8011462:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8011464:	78fb      	ldrb	r3, [r7, #3]
 8011466:	2b00      	cmp	r3, #0
 8011468:	d002      	beq.n	8011470 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 801146a:	78fb      	ldrb	r3, [r7, #3]
 801146c:	2b02      	cmp	r3, #2
 801146e:	d105      	bne.n	801147c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8011470:	687b      	ldr	r3, [r7, #4]
 8011472:	78fa      	ldrb	r2, [r7, #3]
 8011474:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 8011478:	2301      	movs	r3, #1
 801147a:	e027      	b.n	80114cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 801147c:	78fb      	ldrb	r3, [r7, #3]
 801147e:	2b01      	cmp	r3, #1
 8011480:	d123      	bne.n	80114ca <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8011482:	687b      	ldr	r3, [r7, #4]
 8011484:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011486:	2b00      	cmp	r3, #0
 8011488:	d014      	beq.n	80114b4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 801148a:	687b      	ldr	r3, [r7, #4]
 801148c:	681b      	ldr	r3, [r3, #0]
 801148e:	339c      	adds	r3, #156	; 0x9c
 8011490:	681b      	ldr	r3, [r3, #0]
 8011492:	6878      	ldr	r0, [r7, #4]
 8011494:	4798      	blx	r3
 8011496:	4603      	mov	r3, r0
 8011498:	461a      	mov	r2, r3
 801149a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801149e:	429a      	cmp	r2, r3
 80114a0:	d008      	beq.n	80114b4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80114a2:	4b0c      	ldr	r3, [pc, #48]	; (80114d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 80114a4:	781b      	ldrb	r3, [r3, #0]
 80114a6:	f083 0301 	eor.w	r3, r3, #1
 80114aa:	b2db      	uxtb	r3, r3
 80114ac:	2b00      	cmp	r3, #0
 80114ae:	d001      	beq.n	80114b4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80114b0:	2301      	movs	r3, #1
 80114b2:	e000      	b.n	80114b6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 80114b4:	2300      	movs	r3, #0
 80114b6:	2b00      	cmp	r3, #0
 80114b8:	d005      	beq.n	80114c6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 80114ba:	687b      	ldr	r3, [r7, #4]
 80114bc:	78fa      	ldrb	r2, [r7, #3]
 80114be:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 80114c2:	2301      	movs	r3, #1
 80114c4:	e002      	b.n	80114cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 80114c6:	2300      	movs	r3, #0
 80114c8:	e000      	b.n	80114cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 80114ca:	2300      	movs	r3, #0
    }
 80114cc:	4618      	mov	r0, r3
 80114ce:	3708      	adds	r7, #8
 80114d0:	46bd      	mov	sp, r7
 80114d2:	bd80      	pop	{r7, pc}
 80114d4:	24002fa2 	.word	0x24002fa2

080114d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   5, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 80114d8:	b5b0      	push	{r4, r5, r7, lr}
 80114da:	b082      	sub	sp, #8
 80114dc:	af00      	add	r7, sp, #0
 80114de:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 80114e0:	687b      	ldr	r3, [r7, #4]
 80114e2:	4618      	mov	r0, r3
 80114e4:	f000 ff89 	bl	80123fa <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80114e8:	687d      	ldr	r5, [r7, #4]
 80114ea:	687b      	ldr	r3, [r7, #4]
 80114ec:	681b      	ldr	r3, [r3, #0]
 80114ee:	3364      	adds	r3, #100	; 0x64
 80114f0:	681c      	ldr	r4, [r3, #0]
 80114f2:	f004 f8cd 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 80114f6:	4603      	mov	r3, r0
 80114f8:	4619      	mov	r1, r3
 80114fa:	4628      	mov	r0, r5
 80114fc:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 80114fe:	687b      	ldr	r3, [r7, #4]
 8011500:	681b      	ldr	r3, [r3, #0]
 8011502:	3380      	adds	r3, #128	; 0x80
 8011504:	681b      	ldr	r3, [r3, #0]
 8011506:	6878      	ldr	r0, [r7, #4]
 8011508:	4798      	blx	r3
    enableInterrupts();
 801150a:	687b      	ldr	r3, [r7, #4]
 801150c:	681b      	ldr	r3, [r3, #0]
 801150e:	3378      	adds	r3, #120	; 0x78
 8011510:	681b      	ldr	r3, [r3, #0]
 8011512:	6878      	ldr	r0, [r7, #4]
 8011514:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 8011516:	687b      	ldr	r3, [r7, #4]
 8011518:	4906      	ldr	r1, [pc, #24]	; (8011534 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 801151a:	4618      	mov	r0, r3
 801151c:	f7ff ff82 	bl	8011424 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8011520:	687b      	ldr	r3, [r7, #4]
 8011522:	2102      	movs	r1, #2
 8011524:	4618      	mov	r0, r3
 8011526:	f7ff ff97 	bl	8011458 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 801152a:	bf00      	nop
 801152c:	3708      	adds	r7, #8
 801152e:	46bd      	mov	sp, r7
 8011530:	bdb0      	pop	{r4, r5, r7, pc}
 8011532:	bf00      	nop
 8011534:	240009dc 	.word	0x240009dc

08011538 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8011538:	b480      	push	{r7}
 801153a:	b083      	sub	sp, #12
 801153c:	af00      	add	r7, sp, #0
 801153e:	6078      	str	r0, [r7, #4]
}
 8011540:	bf00      	nop
 8011542:	370c      	adds	r7, #12
 8011544:	46bd      	mov	sp, r7
 8011546:	f85d 7b04 	ldr.w	r7, [sp], #4
 801154a:	4770      	bx	lr

0801154c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 801154c:	b480      	push	{r7}
 801154e:	b083      	sub	sp, #12
 8011550:	af00      	add	r7, sp, #0
 8011552:	6078      	str	r0, [r7, #4]
}
 8011554:	bf00      	nop
 8011556:	370c      	adds	r7, #12
 8011558:	46bd      	mov	sp, r7
 801155a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801155e:	4770      	bx	lr

08011560 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8011560:	b480      	push	{r7}
 8011562:	b083      	sub	sp, #12
 8011564:	af00      	add	r7, sp, #0
 8011566:	6078      	str	r0, [r7, #4]
}
 8011568:	bf00      	nop
 801156a:	370c      	adds	r7, #12
 801156c:	46bd      	mov	sp, r7
 801156e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011572:	4770      	bx	lr

08011574 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8011574:	b480      	push	{r7}
 8011576:	b083      	sub	sp, #12
 8011578:	af00      	add	r7, sp, #0
 801157a:	6078      	str	r0, [r7, #4]
}
 801157c:	bf00      	nop
 801157e:	370c      	adds	r7, #12
 8011580:	46bd      	mov	sp, r7
 8011582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011586:	4770      	bx	lr

08011588 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8011588:	b580      	push	{r7, lr}
 801158a:	b082      	sub	sp, #8
 801158c:	af00      	add	r7, sp, #0
 801158e:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8011590:	687b      	ldr	r3, [r7, #4]
 8011592:	4618      	mov	r0, r3
 8011594:	f000 ff18 	bl	80123c8 <_ZN8touchgfx3HAL10beginFrameEv>
 8011598:	4603      	mov	r3, r0
}
 801159a:	4618      	mov	r0, r3
 801159c:	3708      	adds	r7, #8
 801159e:	46bd      	mov	sp, r7
 80115a0:	bd80      	pop	{r7, pc}

080115a2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 80115a2:	b580      	push	{r7, lr}
 80115a4:	b082      	sub	sp, #8
 80115a6:	af00      	add	r7, sp, #0
 80115a8:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 80115aa:	bf00      	nop
 80115ac:	f7ff f81e 	bl	80105ec <touchgfxDisplayDriverTransmitActive>
 80115b0:	4603      	mov	r3, r0
 80115b2:	2b00      	cmp	r3, #0
 80115b4:	bf14      	ite	ne
 80115b6:	2301      	movne	r3, #1
 80115b8:	2300      	moveq	r3, #0
 80115ba:	b2db      	uxtb	r3, r3
 80115bc:	2b00      	cmp	r3, #0
 80115be:	d1f5      	bne.n	80115ac <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 80115c0:	687b      	ldr	r3, [r7, #4]
 80115c2:	4618      	mov	r0, r3
 80115c4:	f000 ff0c 	bl	80123e0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 80115c8:	f7ff f8ba 	bl	8010740 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 80115cc:	bf00      	nop
 80115ce:	3708      	adds	r7, #8
 80115d0:	46bd      	mov	sp, r7
 80115d2:	bd80      	pop	{r7, pc}

080115d4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 80115d4:	b480      	push	{r7}
 80115d6:	b083      	sub	sp, #12
 80115d8:	af00      	add	r7, sp, #0
 80115da:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 80115dc:	2300      	movs	r3, #0
}
 80115de:	4618      	mov	r0, r3
 80115e0:	370c      	adds	r7, #12
 80115e2:	46bd      	mov	sp, r7
 80115e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115e8:	4770      	bx	lr

080115ea <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 80115ea:	b480      	push	{r7}
 80115ec:	b083      	sub	sp, #12
 80115ee:	af00      	add	r7, sp, #0
 80115f0:	6078      	str	r0, [r7, #4]
 80115f2:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 80115f4:	bf00      	nop
 80115f6:	370c      	adds	r7, #12
 80115f8:	46bd      	mov	sp, r7
 80115fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115fe:	4770      	bx	lr

08011600 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8011600:	b580      	push	{r7, lr}
 8011602:	b088      	sub	sp, #32
 8011604:	af02      	add	r7, sp, #8
 8011606:	6078      	str	r0, [r7, #4]
 8011608:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 801160a:	687b      	ldr	r3, [r7, #4]
 801160c:	6839      	ldr	r1, [r7, #0]
 801160e:	4618      	mov	r0, r3
 8011610:	f000 fea4 	bl	801235c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 8011614:	687b      	ldr	r3, [r7, #4]
 8011616:	699a      	ldr	r2, [r3, #24]
 8011618:	687b      	ldr	r3, [r7, #4]
 801161a:	699b      	ldr	r3, [r3, #24]
 801161c:	681b      	ldr	r3, [r3, #0]
 801161e:	3304      	adds	r3, #4
 8011620:	681b      	ldr	r3, [r3, #0]
 8011622:	4610      	mov	r0, r2
 8011624:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 8011626:	f7fe ffe1 	bl	80105ec <touchgfxDisplayDriverTransmitActive>
 801162a:	4603      	mov	r3, r0
 801162c:	2b00      	cmp	r3, #0
 801162e:	bf0c      	ite	eq
 8011630:	2301      	moveq	r3, #1
 8011632:	2300      	movne	r3, #0
 8011634:	b2db      	uxtb	r3, r3
 8011636:	2b00      	cmp	r3, #0
 8011638:	d021      	beq.n	801167e <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 801163a:	f107 030c 	add.w	r3, r7, #12
 801163e:	4618      	mov	r0, r3
 8011640:	f7fb ff03 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8011644:	687b      	ldr	r3, [r7, #4]
 8011646:	699a      	ldr	r2, [r3, #24]
 8011648:	687b      	ldr	r3, [r7, #4]
 801164a:	699b      	ldr	r3, [r3, #24]
 801164c:	681b      	ldr	r3, [r3, #0]
 801164e:	330c      	adds	r3, #12
 8011650:	681b      	ldr	r3, [r3, #0]
 8011652:	f107 010c 	add.w	r1, r7, #12
 8011656:	4610      	mov	r0, r2
 8011658:	4798      	blx	r3
 801165a:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 801165c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8011660:	b299      	uxth	r1, r3
 8011662:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8011666:	b29a      	uxth	r2, r3
 8011668:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 801166c:	b298      	uxth	r0, r3
 801166e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8011672:	b29b      	uxth	r3, r3
 8011674:	9300      	str	r3, [sp, #0]
 8011676:	4603      	mov	r3, r0
 8011678:	6978      	ldr	r0, [r7, #20]
 801167a:	f7fe ffc3 	bl	8010604 <touchgfxDisplayDriverTransmitBlock>
    }
}
 801167e:	bf00      	nop
 8011680:	3718      	adds	r7, #24
 8011682:	46bd      	mov	sp, r7
 8011684:	bd80      	pop	{r7, pc}

08011686 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011686:	b580      	push	{r7, lr}
 8011688:	b084      	sub	sp, #16
 801168a:	af00      	add	r7, sp, #0
 801168c:	60f8      	str	r0, [r7, #12]
 801168e:	60b9      	str	r1, [r7, #8]
 8011690:	607a      	str	r2, [r7, #4]
 8011692:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8011694:	68f8      	ldr	r0, [r7, #12]
 8011696:	683b      	ldr	r3, [r7, #0]
 8011698:	687a      	ldr	r2, [r7, #4]
 801169a:	68b9      	ldr	r1, [r7, #8]
 801169c:	f000 ffcf 	bl	801263e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 80116a0:	4603      	mov	r3, r0
}
 80116a2:	4618      	mov	r0, r3
 80116a4:	3710      	adds	r7, #16
 80116a6:	46bd      	mov	sp, r7
 80116a8:	bd80      	pop	{r7, pc}
	...

080116ac <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 80116ac:	b480      	push	{r7}
 80116ae:	b087      	sub	sp, #28
 80116b0:	af00      	add	r7, sp, #0
 80116b2:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 80116b4:	4b25      	ldr	r3, [pc, #148]	; (801174c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80116b6:	695b      	ldr	r3, [r3, #20]
 80116b8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80116bc:	2b00      	cmp	r3, #0
 80116be:	bf14      	ite	ne
 80116c0:	2301      	movne	r3, #1
 80116c2:	2300      	moveq	r3, #0
 80116c4:	b2db      	uxtb	r3, r3
 80116c6:	2b00      	cmp	r3, #0
 80116c8:	d03a      	beq.n	8011740 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80116ca:	4b20      	ldr	r3, [pc, #128]	; (801174c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80116cc:	2200      	movs	r2, #0
 80116ce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80116d2:	f3bf 8f4f 	dsb	sy
}
 80116d6:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 80116d8:	4b1c      	ldr	r3, [pc, #112]	; (801174c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80116da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80116de:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80116e0:	697b      	ldr	r3, [r7, #20]
 80116e2:	0b5b      	lsrs	r3, r3, #13
 80116e4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80116e8:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80116ea:	697b      	ldr	r3, [r7, #20]
 80116ec:	08db      	lsrs	r3, r3, #3
 80116ee:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80116f2:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80116f4:	693b      	ldr	r3, [r7, #16]
 80116f6:	015a      	lsls	r2, r3, #5
 80116f8:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 80116fc:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 80116fe:	68fa      	ldr	r2, [r7, #12]
 8011700:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011702:	4912      	ldr	r1, [pc, #72]	; (801174c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8011704:	4313      	orrs	r3, r2
 8011706:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 801170a:	68fb      	ldr	r3, [r7, #12]
 801170c:	1e5a      	subs	r2, r3, #1
 801170e:	60fa      	str	r2, [r7, #12]
 8011710:	2b00      	cmp	r3, #0
 8011712:	bf14      	ite	ne
 8011714:	2301      	movne	r3, #1
 8011716:	2300      	moveq	r3, #0
 8011718:	b2db      	uxtb	r3, r3
 801171a:	2b00      	cmp	r3, #0
 801171c:	d1ea      	bne.n	80116f4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 801171e:	693b      	ldr	r3, [r7, #16]
 8011720:	1e5a      	subs	r2, r3, #1
 8011722:	613a      	str	r2, [r7, #16]
 8011724:	2b00      	cmp	r3, #0
 8011726:	bf14      	ite	ne
 8011728:	2301      	movne	r3, #1
 801172a:	2300      	moveq	r3, #0
 801172c:	b2db      	uxtb	r3, r3
 801172e:	2b00      	cmp	r3, #0
 8011730:	d1db      	bne.n	80116ea <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 8011732:	f3bf 8f4f 	dsb	sy
}
 8011736:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8011738:	f3bf 8f6f 	isb	sy
}
 801173c:	bf00      	nop
}
 801173e:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 8011740:	bf00      	nop
 8011742:	371c      	adds	r7, #28
 8011744:	46bd      	mov	sp, r7
 8011746:	f85d 7b04 	ldr.w	r7, [sp], #4
 801174a:	4770      	bx	lr
 801174c:	e000ed00 	.word	0xe000ed00

08011750 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 8011750:	b480      	push	{r7}
 8011752:	b087      	sub	sp, #28
 8011754:	af00      	add	r7, sp, #0
 8011756:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011758:	4b25      	ldr	r3, [pc, #148]	; (80117f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801175a:	695b      	ldr	r3, [r3, #20]
 801175c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8011760:	2b00      	cmp	r3, #0
 8011762:	bf14      	ite	ne
 8011764:	2301      	movne	r3, #1
 8011766:	2300      	moveq	r3, #0
 8011768:	b2db      	uxtb	r3, r3
 801176a:	2b00      	cmp	r3, #0
 801176c:	d03a      	beq.n	80117e4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 801176e:	4b20      	ldr	r3, [pc, #128]	; (80117f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 8011770:	2200      	movs	r2, #0
 8011772:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8011776:	f3bf 8f4f 	dsb	sy
}
 801177a:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 801177c:	4b1c      	ldr	r3, [pc, #112]	; (80117f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801177e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011782:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8011784:	697b      	ldr	r3, [r7, #20]
 8011786:	0b5b      	lsrs	r3, r3, #13
 8011788:	f3c3 030e 	ubfx	r3, r3, #0, #15
 801178c:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 801178e:	697b      	ldr	r3, [r7, #20]
 8011790:	08db      	lsrs	r3, r3, #3
 8011792:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8011796:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011798:	693b      	ldr	r3, [r7, #16]
 801179a:	015a      	lsls	r2, r3, #5
 801179c:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 80117a0:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 80117a2:	68fa      	ldr	r2, [r7, #12]
 80117a4:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80117a6:	4912      	ldr	r1, [pc, #72]	; (80117f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 80117a8:	4313      	orrs	r3, r2
 80117aa:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 80117ae:	68fb      	ldr	r3, [r7, #12]
 80117b0:	1e5a      	subs	r2, r3, #1
 80117b2:	60fa      	str	r2, [r7, #12]
 80117b4:	2b00      	cmp	r3, #0
 80117b6:	bf14      	ite	ne
 80117b8:	2301      	movne	r3, #1
 80117ba:	2300      	moveq	r3, #0
 80117bc:	b2db      	uxtb	r3, r3
 80117be:	2b00      	cmp	r3, #0
 80117c0:	d1ea      	bne.n	8011798 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 80117c2:	693b      	ldr	r3, [r7, #16]
 80117c4:	1e5a      	subs	r2, r3, #1
 80117c6:	613a      	str	r2, [r7, #16]
 80117c8:	2b00      	cmp	r3, #0
 80117ca:	bf14      	ite	ne
 80117cc:	2301      	movne	r3, #1
 80117ce:	2300      	moveq	r3, #0
 80117d0:	b2db      	uxtb	r3, r3
 80117d2:	2b00      	cmp	r3, #0
 80117d4:	d1db      	bne.n	801178e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 80117d6:	f3bf 8f4f 	dsb	sy
}
 80117da:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80117dc:	f3bf 8f6f 	isb	sy
}
 80117e0:	bf00      	nop
}
 80117e2:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 80117e4:	bf00      	nop
 80117e6:	371c      	adds	r7, #28
 80117e8:	46bd      	mov	sp, r7
 80117ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117ee:	4770      	bx	lr
 80117f0:	e000ed00 	.word	0xe000ed00

080117f4 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 80117f4:	b480      	push	{r7}
 80117f6:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 80117f8:	bf00      	nop
 80117fa:	46bd      	mov	sp, r7
 80117fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011800:	4770      	bx	lr

08011802 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8011802:	b480      	push	{r7}
 8011804:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 8011806:	bf00      	nop
 8011808:	46bd      	mov	sp, r7
 801180a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801180e:	4770      	bx	lr

08011810 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 8011810:	b580      	push	{r7, lr}
 8011812:	b086      	sub	sp, #24
 8011814:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8011816:	f7fa fe57 	bl	800c4c8 <_ZN8touchgfx3HAL11getInstanceEv>
 801181a:	4603      	mov	r3, r0
 801181c:	4618      	mov	r0, r3
 801181e:	f7ff fe0f 	bl	8011440 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 8011822:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8011824:	68fb      	ldr	r3, [r7, #12]
 8011826:	681b      	ldr	r3, [r3, #0]
 8011828:	3318      	adds	r3, #24
 801182a:	681b      	ldr	r3, [r3, #0]
 801182c:	68f8      	ldr	r0, [r7, #12]
 801182e:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 8011830:	68fb      	ldr	r3, [r7, #12]
 8011832:	681b      	ldr	r3, [r3, #0]
 8011834:	3308      	adds	r3, #8
 8011836:	681b      	ldr	r3, [r3, #0]
 8011838:	68f8      	ldr	r0, [r7, #12]
 801183a:	4798      	blx	r3
 801183c:	4603      	mov	r3, r0
 801183e:	2b00      	cmp	r3, #0
 8011840:	d01d      	beq.n	801187e <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8011842:	463b      	mov	r3, r7
 8011844:	4618      	mov	r0, r3
 8011846:	f7fb fe00 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 801184a:	68fb      	ldr	r3, [r7, #12]
 801184c:	681b      	ldr	r3, [r3, #0]
 801184e:	330c      	adds	r3, #12
 8011850:	681b      	ldr	r3, [r3, #0]
 8011852:	463a      	mov	r2, r7
 8011854:	4611      	mov	r1, r2
 8011856:	68f8      	ldr	r0, [r7, #12]
 8011858:	4798      	blx	r3
 801185a:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 801185c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8011860:	b299      	uxth	r1, r3
 8011862:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011866:	b29a      	uxth	r2, r3
 8011868:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 801186c:	b298      	uxth	r0, r3
 801186e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8011872:	b29b      	uxth	r3, r3
 8011874:	9300      	str	r3, [sp, #0]
 8011876:	4603      	mov	r3, r0
 8011878:	68b8      	ldr	r0, [r7, #8]
 801187a:	f7fe fec3 	bl	8010604 <touchgfxDisplayDriverTransmitBlock>
    }
}
 801187e:	bf00      	nop
 8011880:	3710      	adds	r7, #16
 8011882:	46bd      	mov	sp, r7
 8011884:	bd80      	pop	{r7, pc}

08011886 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8011886:	b580      	push	{r7, lr}
 8011888:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 801188a:	f7ff ffc1 	bl	8011810 <_ZN8touchgfx16startNewTransferEv>
}
 801188e:	bf00      	nop
 8011890:	bd80      	pop	{r7, pc}

08011892 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8011892:	b580      	push	{r7, lr}
 8011894:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8011896:	f7fa fe17 	bl	800c4c8 <_ZN8touchgfx3HAL11getInstanceEv>
 801189a:	4603      	mov	r3, r0
 801189c:	4618      	mov	r0, r3
 801189e:	f7ff fdaf 	bl	8011400 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 80118a2:	f7fe ff41 	bl	8010728 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 80118a6:	bf00      	nop
 80118a8:	bd80      	pop	{r7, pc}
	...

080118ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 80118ac:	b480      	push	{r7}
 80118ae:	b083      	sub	sp, #12
 80118b0:	af00      	add	r7, sp, #0
 80118b2:	6078      	str	r0, [r7, #4]
 80118b4:	4a04      	ldr	r2, [pc, #16]	; (80118c8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 80118b6:	687b      	ldr	r3, [r7, #4]
 80118b8:	601a      	str	r2, [r3, #0]
 80118ba:	687b      	ldr	r3, [r7, #4]
 80118bc:	4618      	mov	r0, r3
 80118be:	370c      	adds	r7, #12
 80118c0:	46bd      	mov	sp, r7
 80118c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118c6:	4770      	bx	lr
 80118c8:	08028610 	.word	0x08028610

080118cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80118cc:	b5b0      	push	{r4, r5, r7, lr}
 80118ce:	b084      	sub	sp, #16
 80118d0:	af00      	add	r7, sp, #0
 80118d2:	6078      	str	r0, [r7, #4]
    {
 80118d4:	687b      	ldr	r3, [r7, #4]
 80118d6:	4618      	mov	r0, r3
 80118d8:	f7ff ffe8 	bl	80118ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80118dc:	4a1a      	ldr	r2, [pc, #104]	; (8011948 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev+0x7c>)
 80118de:	687b      	ldr	r3, [r7, #4]
 80118e0:	601a      	str	r2, [r3, #0]
 80118e2:	687a      	ldr	r2, [r7, #4]
 80118e4:	f242 538c 	movw	r3, #9612	; 0x258c
 80118e8:	4413      	add	r3, r2
 80118ea:	2404      	movs	r4, #4
 80118ec:	461d      	mov	r5, r3
 80118ee:	e004      	b.n	80118fa <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev+0x2e>
 80118f0:	4628      	mov	r0, r5
 80118f2:	f7fb fdaa 	bl	800d44a <_ZN8touchgfx4RectC1Ev>
 80118f6:	3508      	adds	r5, #8
 80118f8:	3c01      	subs	r4, #1
 80118fa:	2c00      	cmp	r4, #0
 80118fc:	daf8      	bge.n	80118f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80118fe:	687b      	ldr	r3, [r7, #4]
 8011900:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011904:	461a      	mov	r2, r3
 8011906:	f04f 33ff 	mov.w	r3, #4294967295
 801190a:	f8c2 35b4 	str.w	r3, [r2, #1460]	; 0x5b4
        drawingBlock = -1;
 801190e:	687b      	ldr	r3, [r7, #4]
 8011910:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011914:	461a      	mov	r2, r3
 8011916:	f04f 33ff 	mov.w	r3, #4294967295
 801191a:	f8c2 35b8 	str.w	r3, [r2, #1464]	; 0x5b8
        for (uint32_t i = 0; i < blocks; i++)
 801191e:	2300      	movs	r3, #0
 8011920:	60fb      	str	r3, [r7, #12]
 8011922:	e008      	b.n	8011936 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8011924:	687a      	ldr	r2, [r7, #4]
 8011926:	68fb      	ldr	r3, [r7, #12]
 8011928:	4413      	add	r3, r2
 801192a:	3304      	adds	r3, #4
 801192c:	2200      	movs	r2, #0
 801192e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8011930:	68fb      	ldr	r3, [r7, #12]
 8011932:	3301      	adds	r3, #1
 8011934:	60fb      	str	r3, [r7, #12]
 8011936:	68fb      	ldr	r3, [r7, #12]
 8011938:	2b04      	cmp	r3, #4
 801193a:	d9f3      	bls.n	8011924 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev+0x58>
        }
    }
 801193c:	687b      	ldr	r3, [r7, #4]
 801193e:	4618      	mov	r0, r3
 8011940:	3710      	adds	r7, #16
 8011942:	46bd      	mov	sp, r7
 8011944:	bdb0      	pop	{r4, r5, r7, pc}
 8011946:	bf00      	nop
 8011948:	0802850c 	.word	0x0802850c

0801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801194c:	b580      	push	{r7, lr}
 801194e:	b082      	sub	sp, #8
 8011950:	af00      	add	r7, sp, #0
 8011952:	6078      	str	r0, [r7, #4]
 8011954:	4a05      	ldr	r2, [pc, #20]	; (801196c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EED1Ev+0x20>)
 8011956:	687b      	ldr	r3, [r7, #4]
 8011958:	601a      	str	r2, [r3, #0]
 801195a:	687b      	ldr	r3, [r7, #4]
 801195c:	4618      	mov	r0, r3
 801195e:	f7ff fd2f 	bl	80113c0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011962:	687b      	ldr	r3, [r7, #4]
 8011964:	4618      	mov	r0, r3
 8011966:	3708      	adds	r7, #8
 8011968:	46bd      	mov	sp, r7
 801196a:	bd80      	pop	{r7, pc}
 801196c:	0802850c 	.word	0x0802850c

08011970 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EED0Ev>:
 8011970:	b580      	push	{r7, lr}
 8011972:	b082      	sub	sp, #8
 8011974:	af00      	add	r7, sp, #0
 8011976:	6078      	str	r0, [r7, #4]
 8011978:	6878      	ldr	r0, [r7, #4]
 801197a:	f7ff ffe7 	bl	801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EED1Ev>
 801197e:	f242 51bc 	movw	r1, #9660	; 0x25bc
 8011982:	6878      	ldr	r0, [r7, #4]
 8011984:	f013 ffa7 	bl	80258d6 <_ZdlPvj>
 8011988:	687b      	ldr	r3, [r7, #4]
 801198a:	4618      	mov	r0, r3
 801198c:	3708      	adds	r7, #8
 801198e:	46bd      	mov	sp, r7
 8011990:	bd80      	pop	{r7, pc}
	...

08011994 <_Z41__static_initialization_and_destruction_0ii>:
 8011994:	b580      	push	{r7, lr}
 8011996:	b082      	sub	sp, #8
 8011998:	af00      	add	r7, sp, #0
 801199a:	6078      	str	r0, [r7, #4]
 801199c:	6039      	str	r1, [r7, #0]
 801199e:	687b      	ldr	r3, [r7, #4]
 80119a0:	2b01      	cmp	r3, #1
 80119a2:	d107      	bne.n	80119b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80119a4:	683b      	ldr	r3, [r7, #0]
 80119a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119aa:	4293      	cmp	r3, r2
 80119ac:	d102      	bne.n	80119b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 80119ae:	4809      	ldr	r0, [pc, #36]	; (80119d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80119b0:	f7ff ff8c 	bl	80118cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EEC1Ev>
 80119b4:	687b      	ldr	r3, [r7, #4]
 80119b6:	2b00      	cmp	r3, #0
 80119b8:	d107      	bne.n	80119ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80119ba:	683b      	ldr	r3, [r7, #0]
 80119bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119c0:	4293      	cmp	r3, r2
 80119c2:	d102      	bne.n	80119ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80119c4:	4803      	ldr	r0, [pc, #12]	; (80119d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80119c6:	f7ff ffc1 	bl	801194c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EED1Ev>
}
 80119ca:	bf00      	nop
 80119cc:	3708      	adds	r7, #8
 80119ce:	46bd      	mov	sp, r7
 80119d0:	bd80      	pop	{r7, pc}
 80119d2:	bf00      	nop
 80119d4:	240009dc 	.word	0x240009dc

080119d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80119d8:	b580      	push	{r7, lr}
 80119da:	b086      	sub	sp, #24
 80119dc:	af00      	add	r7, sp, #0
 80119de:	60f8      	str	r0, [r7, #12]
 80119e0:	4608      	mov	r0, r1
 80119e2:	4611      	mov	r1, r2
 80119e4:	461a      	mov	r2, r3
 80119e6:	4603      	mov	r3, r0
 80119e8:	817b      	strh	r3, [r7, #10]
 80119ea:	460b      	mov	r3, r1
 80119ec:	813b      	strh	r3, [r7, #8]
 80119ee:	4613      	mov	r3, r2
 80119f0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80119f2:	68fb      	ldr	r3, [r7, #12]
 80119f4:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80119f8:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 80119fc:	3301      	adds	r3, #1
 80119fe:	68fa      	ldr	r2, [r7, #12]
 8011a00:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011a04:	f8c2 35b8 	str.w	r3, [r2, #1464]	; 0x5b8
        if (drawingBlock == blocks)
 8011a08:	68fb      	ldr	r3, [r7, #12]
 8011a0a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a0e:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011a12:	2b05      	cmp	r3, #5
 8011a14:	d109      	bne.n	8011a2a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8011a16:	68fb      	ldr	r3, [r7, #12]
 8011a18:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a1c:	461a      	mov	r2, r3
 8011a1e:	2300      	movs	r3, #0
 8011a20:	f8c2 35b8 	str.w	r3, [r2, #1464]	; 0x5b8
        }
        while (state[drawingBlock] != EMPTY)
 8011a24:	e001      	b.n	8011a2a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8011a26:	f7ff fee5 	bl	80117f4 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8011a2a:	68fb      	ldr	r3, [r7, #12]
 8011a2c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a30:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011a34:	68fa      	ldr	r2, [r7, #12]
 8011a36:	4413      	add	r3, r2
 8011a38:	791b      	ldrb	r3, [r3, #4]
 8011a3a:	b2db      	uxtb	r3, r3
 8011a3c:	2b00      	cmp	r3, #0
 8011a3e:	bf14      	ite	ne
 8011a40:	2301      	movne	r3, #1
 8011a42:	2300      	moveq	r3, #0
 8011a44:	b2db      	uxtb	r3, r3
 8011a46:	2b00      	cmp	r3, #0
 8011a48:	d1ed      	bne.n	8011a26 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 8011a4a:	68fb      	ldr	r3, [r7, #12]
 8011a4c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a50:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011a54:	68fa      	ldr	r2, [r7, #12]
 8011a56:	4413      	add	r3, r2
 8011a58:	791b      	ldrb	r3, [r3, #4]
 8011a5a:	b2db      	uxtb	r3, r3
 8011a5c:	2b00      	cmp	r3, #0
 8011a5e:	d005      	beq.n	8011a6c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x94>
 8011a60:	4b39      	ldr	r3, [pc, #228]	; (8011b48 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x170>)
 8011a62:	4a3a      	ldr	r2, [pc, #232]	; (8011b4c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x174>)
 8011a64:	21aa      	movs	r1, #170	; 0xaa
 8011a66:	483a      	ldr	r0, [pc, #232]	; (8011b50 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13allocateBlockEttttPPh+0x178>)
 8011a68:	f013 ff64 	bl	8025934 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8011a6c:	68fb      	ldr	r3, [r7, #12]
 8011a6e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a72:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011a76:	68fa      	ldr	r2, [r7, #12]
 8011a78:	4413      	add	r3, r2
 8011a7a:	2201      	movs	r2, #1
 8011a7c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 8011a7e:	88fb      	ldrh	r3, [r7, #6]
 8011a80:	005b      	lsls	r3, r3, #1
 8011a82:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8011a84:	697b      	ldr	r3, [r7, #20]
 8011a86:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8011a8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8011a8e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8011a90:	68fb      	ldr	r3, [r7, #12]
 8011a92:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011a96:	f8d3 25b8 	ldr.w	r2, [r3, #1464]	; 0x5b8
 8011a9a:	4613      	mov	r3, r2
 8011a9c:	011b      	lsls	r3, r3, #4
 8011a9e:	1a9b      	subs	r3, r3, r2
 8011aa0:	01db      	lsls	r3, r3, #7
 8011aa2:	3308      	adds	r3, #8
 8011aa4:	68fa      	ldr	r2, [r7, #12]
 8011aa6:	4413      	add	r3, r2
 8011aa8:	1d1a      	adds	r2, r3, #4
 8011aaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011aac:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8011aae:	68fb      	ldr	r3, [r7, #12]
 8011ab0:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011ab4:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011ab8:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8011abc:	68fa      	ldr	r2, [r7, #12]
 8011abe:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011ac2:	00db      	lsls	r3, r3, #3
 8011ac4:	4413      	add	r3, r2
 8011ac6:	460a      	mov	r2, r1
 8011ac8:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].y = y;
 8011aca:	68fb      	ldr	r3, [r7, #12]
 8011acc:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011ad0:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011ad4:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8011ad8:	68fa      	ldr	r2, [r7, #12]
 8011ada:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011ade:	00db      	lsls	r3, r3, #3
 8011ae0:	4413      	add	r3, r2
 8011ae2:	460a      	mov	r2, r1
 8011ae4:	80da      	strh	r2, [r3, #6]
        blockRect[drawingBlock].width = width;
 8011ae6:	68fb      	ldr	r3, [r7, #12]
 8011ae8:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011aec:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011af0:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 8011af4:	68fa      	ldr	r2, [r7, #12]
 8011af6:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011afa:	00db      	lsls	r3, r3, #3
 8011afc:	4413      	add	r3, r2
 8011afe:	460a      	mov	r2, r1
 8011b00:	811a      	strh	r2, [r3, #8]
        blockRect[drawingBlock].height = MIN(height, lines);
 8011b02:	8c3a      	ldrh	r2, [r7, #32]
 8011b04:	693b      	ldr	r3, [r7, #16]
 8011b06:	429a      	cmp	r2, r3
 8011b08:	bfa8      	it	ge
 8011b0a:	461a      	movge	r2, r3
 8011b0c:	68fb      	ldr	r3, [r7, #12]
 8011b0e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011b12:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011b16:	b211      	sxth	r1, r2
 8011b18:	68fa      	ldr	r2, [r7, #12]
 8011b1a:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011b1e:	00db      	lsls	r3, r3, #3
 8011b20:	4413      	add	r3, r2
 8011b22:	460a      	mov	r2, r1
 8011b24:	815a      	strh	r2, [r3, #10]
        return blockRect[drawingBlock].height;
 8011b26:	68fb      	ldr	r3, [r7, #12]
 8011b28:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011b2c:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011b30:	68fa      	ldr	r2, [r7, #12]
 8011b32:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011b36:	00db      	lsls	r3, r3, #3
 8011b38:	4413      	add	r3, r2
 8011b3a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8011b3e:	b29b      	uxth	r3, r3
    }
 8011b40:	4618      	mov	r0, r3
 8011b42:	3718      	adds	r7, #24
 8011b44:	46bd      	mov	sp, r7
 8011b46:	bd80      	pop	{r7, pc}
 8011b48:	0802768c 	.word	0x0802768c
 8011b4c:	080276ac 	.word	0x080276ac
 8011b50:	080277e0 	.word	0x080277e0

08011b54 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8011b54:	b580      	push	{r7, lr}
 8011b56:	b082      	sub	sp, #8
 8011b58:	af00      	add	r7, sp, #0
 8011b5a:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8011b5c:	687b      	ldr	r3, [r7, #4]
 8011b5e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011b62:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011b66:	687a      	ldr	r2, [r7, #4]
 8011b68:	4413      	add	r3, r2
 8011b6a:	791b      	ldrb	r3, [r3, #4]
 8011b6c:	b2db      	uxtb	r3, r3
 8011b6e:	2b01      	cmp	r3, #1
 8011b70:	d005      	beq.n	8011b7e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE25markBlockReadyForTransferEv+0x2a>
 8011b72:	4b0a      	ldr	r3, [pc, #40]	; (8011b9c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE25markBlockReadyForTransferEv+0x48>)
 8011b74:	4a0a      	ldr	r2, [pc, #40]	; (8011ba0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8011b76:	21b9      	movs	r1, #185	; 0xb9
 8011b78:	480a      	ldr	r0, [pc, #40]	; (8011ba4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE25markBlockReadyForTransferEv+0x50>)
 8011b7a:	f013 fedb 	bl	8025934 <__assert_func>
        state[drawingBlock] = DRAWN;
 8011b7e:	687b      	ldr	r3, [r7, #4]
 8011b80:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011b84:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011b88:	687a      	ldr	r2, [r7, #4]
 8011b8a:	4413      	add	r3, r2
 8011b8c:	2202      	movs	r2, #2
 8011b8e:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 8011b90:	f7ff fe37 	bl	8011802 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8011b94:	bf00      	nop
 8011b96:	3708      	adds	r7, #8
 8011b98:	46bd      	mov	sp, r7
 8011b9a:	bd80      	pop	{r7, pc}
 8011b9c:	08027834 	.word	0x08027834
 8011ba0:	08027858 	.word	0x08027858
 8011ba4:	080277e0 	.word	0x080277e0

08011ba8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8011ba8:	b480      	push	{r7}
 8011baa:	b085      	sub	sp, #20
 8011bac:	af00      	add	r7, sp, #0
 8011bae:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8011bb0:	2300      	movs	r3, #0
 8011bb2:	60fb      	str	r3, [r7, #12]
 8011bb4:	e011      	b.n	8011bda <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 8011bb6:	687a      	ldr	r2, [r7, #4]
 8011bb8:	68fb      	ldr	r3, [r7, #12]
 8011bba:	4413      	add	r3, r2
 8011bbc:	3304      	adds	r3, #4
 8011bbe:	781b      	ldrb	r3, [r3, #0]
 8011bc0:	b2db      	uxtb	r3, r3
 8011bc2:	2b02      	cmp	r3, #2
 8011bc4:	bf0c      	ite	eq
 8011bc6:	2301      	moveq	r3, #1
 8011bc8:	2300      	movne	r3, #0
 8011bca:	b2db      	uxtb	r3, r3
 8011bcc:	2b00      	cmp	r3, #0
 8011bce:	d001      	beq.n	8011bd4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 8011bd0:	2301      	movs	r3, #1
 8011bd2:	e006      	b.n	8011be2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8011bd4:	68fb      	ldr	r3, [r7, #12]
 8011bd6:	3301      	adds	r3, #1
 8011bd8:	60fb      	str	r3, [r7, #12]
 8011bda:	68fb      	ldr	r3, [r7, #12]
 8011bdc:	2b04      	cmp	r3, #4
 8011bde:	d9ea      	bls.n	8011bb6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 8011be0:	2300      	movs	r3, #0
    }
 8011be2:	4618      	mov	r0, r3
 8011be4:	3714      	adds	r7, #20
 8011be6:	46bd      	mov	sp, r7
 8011be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011bec:	4770      	bx	lr
	...

08011bf0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8011bf0:	b580      	push	{r7, lr}
 8011bf2:	b082      	sub	sp, #8
 8011bf4:	af00      	add	r7, sp, #0
 8011bf6:	6078      	str	r0, [r7, #4]
 8011bf8:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 8011bfa:	687b      	ldr	r3, [r7, #4]
 8011bfc:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c00:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011c04:	3301      	adds	r3, #1
 8011c06:	687a      	ldr	r2, [r7, #4]
 8011c08:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011c0c:	f8c2 35b4 	str.w	r3, [r2, #1460]	; 0x5b4
        if (sendingBlock == blocks)
 8011c10:	687b      	ldr	r3, [r7, #4]
 8011c12:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c16:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011c1a:	2b05      	cmp	r3, #5
 8011c1c:	d106      	bne.n	8011c2c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 8011c1e:	687b      	ldr	r3, [r7, #4]
 8011c20:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c24:	461a      	mov	r2, r3
 8011c26:	2300      	movs	r3, #0
 8011c28:	f8c2 35b4 	str.w	r3, [r2, #1460]	; 0x5b4
        }
        assert(state[sendingBlock] == DRAWN);
 8011c2c:	687b      	ldr	r3, [r7, #4]
 8011c2e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c32:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011c36:	687a      	ldr	r2, [r7, #4]
 8011c38:	4413      	add	r3, r2
 8011c3a:	791b      	ldrb	r3, [r3, #4]
 8011c3c:	b2db      	uxtb	r3, r3
 8011c3e:	2b02      	cmp	r3, #2
 8011c40:	d005      	beq.n	8011c4e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 8011c42:	4b18      	ldr	r3, [pc, #96]	; (8011ca4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8011c44:	4a18      	ldr	r2, [pc, #96]	; (8011ca8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE+0xb8>)
 8011c46:	21dd      	movs	r1, #221	; 0xdd
 8011c48:	4818      	ldr	r0, [pc, #96]	; (8011cac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE19getBlockForTransferERNS_4RectE+0xbc>)
 8011c4a:	f013 fe73 	bl	8025934 <__assert_func>
        rect = blockRect[sendingBlock];
 8011c4e:	687b      	ldr	r3, [r7, #4]
 8011c50:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c54:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011c58:	6839      	ldr	r1, [r7, #0]
 8011c5a:	687a      	ldr	r2, [r7, #4]
 8011c5c:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011c60:	00db      	lsls	r3, r3, #3
 8011c62:	4413      	add	r3, r2
 8011c64:	460a      	mov	r2, r1
 8011c66:	3304      	adds	r3, #4
 8011c68:	cb03      	ldmia	r3!, {r0, r1}
 8011c6a:	6010      	str	r0, [r2, #0]
 8011c6c:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8011c6e:	687b      	ldr	r3, [r7, #4]
 8011c70:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c74:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011c78:	687a      	ldr	r2, [r7, #4]
 8011c7a:	4413      	add	r3, r2
 8011c7c:	2203      	movs	r2, #3
 8011c7e:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8011c80:	687b      	ldr	r3, [r7, #4]
 8011c82:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011c86:	f8d3 25b4 	ldr.w	r2, [r3, #1460]	; 0x5b4
 8011c8a:	4613      	mov	r3, r2
 8011c8c:	011b      	lsls	r3, r3, #4
 8011c8e:	1a9b      	subs	r3, r3, r2
 8011c90:	01db      	lsls	r3, r3, #7
 8011c92:	3308      	adds	r3, #8
 8011c94:	687a      	ldr	r2, [r7, #4]
 8011c96:	4413      	add	r3, r2
 8011c98:	3304      	adds	r3, #4
    }
 8011c9a:	4618      	mov	r0, r3
 8011c9c:	3708      	adds	r7, #8
 8011c9e:	46bd      	mov	sp, r7
 8011ca0:	bd80      	pop	{r7, pc}
 8011ca2:	bf00      	nop
 8011ca4:	0802792c 	.word	0x0802792c
 8011ca8:	0802794c 	.word	0x0802794c
 8011cac:	080277e0 	.word	0x080277e0

08011cb0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8011cb0:	b580      	push	{r7, lr}
 8011cb2:	b084      	sub	sp, #16
 8011cb4:	af00      	add	r7, sp, #0
 8011cb6:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8011cb8:	687b      	ldr	r3, [r7, #4]
 8011cba:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011cbe:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011cc2:	3301      	adds	r3, #1
 8011cc4:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8011cc6:	68fb      	ldr	r3, [r7, #12]
 8011cc8:	2b05      	cmp	r3, #5
 8011cca:	d101      	bne.n	8011cd0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8011ccc:	2300      	movs	r3, #0
 8011cce:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 8011cd0:	687a      	ldr	r2, [r7, #4]
 8011cd2:	68fb      	ldr	r3, [r7, #12]
 8011cd4:	4413      	add	r3, r2
 8011cd6:	3304      	adds	r3, #4
 8011cd8:	781b      	ldrb	r3, [r3, #0]
 8011cda:	b2db      	uxtb	r3, r3
 8011cdc:	2b02      	cmp	r3, #2
 8011cde:	d005      	beq.n	8011cec <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv+0x3c>
 8011ce0:	4b08      	ldr	r3, [pc, #32]	; (8011d04 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv+0x54>)
 8011ce2:	4a09      	ldr	r2, [pc, #36]	; (8011d08 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv+0x58>)
 8011ce4:	21ea      	movs	r1, #234	; 0xea
 8011ce6:	4809      	ldr	r0, [pc, #36]	; (8011d0c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE20peekBlockForTransferEv+0x5c>)
 8011ce8:	f013 fe24 	bl	8025934 <__assert_func>
        return blockRect[nextSendingBlock];
 8011cec:	68fb      	ldr	r3, [r7, #12]
 8011cee:	f203 43b1 	addw	r3, r3, #1201	; 0x4b1
 8011cf2:	00db      	lsls	r3, r3, #3
 8011cf4:	687a      	ldr	r2, [r7, #4]
 8011cf6:	4413      	add	r3, r2
 8011cf8:	3304      	adds	r3, #4
    }
 8011cfa:	4618      	mov	r0, r3
 8011cfc:	3710      	adds	r7, #16
 8011cfe:	46bd      	mov	sp, r7
 8011d00:	bd80      	pop	{r7, pc}
 8011d02:	bf00      	nop
 8011d04:	08027a4c 	.word	0x08027a4c
 8011d08:	08027a70 	.word	0x08027a70
 8011d0c:	080277e0 	.word	0x080277e0

08011d10 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8011d10:	b480      	push	{r7}
 8011d12:	b085      	sub	sp, #20
 8011d14:	af00      	add	r7, sp, #0
 8011d16:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8011d18:	687b      	ldr	r3, [r7, #4]
 8011d1a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011d1e:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
 8011d22:	3301      	adds	r3, #1
 8011d24:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8011d26:	68fb      	ldr	r3, [r7, #12]
 8011d28:	2b05      	cmp	r3, #5
 8011d2a:	d101      	bne.n	8011d30 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 8011d2c:	2300      	movs	r3, #0
 8011d2e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8011d30:	687a      	ldr	r2, [r7, #4]
 8011d32:	68fb      	ldr	r3, [r7, #12]
 8011d34:	4413      	add	r3, r2
 8011d36:	3304      	adds	r3, #4
 8011d38:	781b      	ldrb	r3, [r3, #0]
 8011d3a:	b2db      	uxtb	r3, r3
 8011d3c:	2b00      	cmp	r3, #0
 8011d3e:	bf0c      	ite	eq
 8011d40:	2301      	moveq	r3, #1
 8011d42:	2300      	movne	r3, #0
 8011d44:	b2db      	uxtb	r3, r3
    }
 8011d46:	4618      	mov	r0, r3
 8011d48:	3714      	adds	r7, #20
 8011d4a:	46bd      	mov	sp, r7
 8011d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d50:	4770      	bx	lr
	...

08011d54 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8011d54:	b580      	push	{r7, lr}
 8011d56:	b082      	sub	sp, #8
 8011d58:	af00      	add	r7, sp, #0
 8011d5a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 8011d5c:	687b      	ldr	r3, [r7, #4]
 8011d5e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011d62:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011d66:	687a      	ldr	r2, [r7, #4]
 8011d68:	4413      	add	r3, r2
 8011d6a:	791b      	ldrb	r3, [r3, #4]
 8011d6c:	b2db      	uxtb	r3, r3
 8011d6e:	2b03      	cmp	r3, #3
 8011d70:	d005      	beq.n	8011d7e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE22freeBlockAfterTransferEv+0x2a>
 8011d72:	4b09      	ldr	r3, [pc, #36]	; (8011d98 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE22freeBlockAfterTransferEv+0x44>)
 8011d74:	4a09      	ldr	r2, [pc, #36]	; (8011d9c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE22freeBlockAfterTransferEv+0x48>)
 8011d76:	21ff      	movs	r1, #255	; 0xff
 8011d78:	4809      	ldr	r0, [pc, #36]	; (8011da0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm5ELm2EE22freeBlockAfterTransferEv+0x4c>)
 8011d7a:	f013 fddb 	bl	8025934 <__assert_func>
        state[sendingBlock] = EMPTY;
 8011d7e:	687b      	ldr	r3, [r7, #4]
 8011d80:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011d84:	f8d3 35b4 	ldr.w	r3, [r3, #1460]	; 0x5b4
 8011d88:	687a      	ldr	r2, [r7, #4]
 8011d8a:	4413      	add	r3, r2
 8011d8c:	2200      	movs	r2, #0
 8011d8e:	711a      	strb	r2, [r3, #4]
    }
 8011d90:	bf00      	nop
 8011d92:	3708      	adds	r7, #8
 8011d94:	46bd      	mov	sp, r7
 8011d96:	bd80      	pop	{r7, pc}
 8011d98:	08027b50 	.word	0x08027b50
 8011d9c:	08027b70 	.word	0x08027b70
 8011da0:	080277e0 	.word	0x080277e0

08011da4 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011da4:	b580      	push	{r7, lr}
 8011da6:	af00      	add	r7, sp, #0
 8011da8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011dac:	2001      	movs	r0, #1
 8011dae:	f7ff fdf1 	bl	8011994 <_Z41__static_initialization_and_destruction_0ii>
 8011db2:	bd80      	pop	{r7, pc}

08011db4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011db4:	b580      	push	{r7, lr}
 8011db6:	af00      	add	r7, sp, #0
 8011db8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011dbc:	2000      	movs	r0, #0
 8011dbe:	f7ff fde9 	bl	8011994 <_Z41__static_initialization_and_destruction_0ii>
 8011dc2:	bd80      	pop	{r7, pc}

08011dc4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8011dc4:	8880      	ldrh	r0, [r0, #4]
 8011dc6:	4770      	bx	lr

08011dc8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011dc8:	b570      	push	{r4, r5, r6, lr}
 8011dca:	6803      	ldr	r3, [r0, #0]
 8011dcc:	460c      	mov	r4, r1
 8011dce:	2100      	movs	r1, #0
 8011dd0:	4605      	mov	r5, r0
 8011dd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dd4:	4798      	blx	r3
 8011dd6:	4606      	mov	r6, r0
 8011dd8:	682b      	ldr	r3, [r5, #0]
 8011dda:	4628      	mov	r0, r5
 8011ddc:	1ba4      	subs	r4, r4, r6
 8011dde:	6a1b      	ldr	r3, [r3, #32]
 8011de0:	b2a4      	uxth	r4, r4
 8011de2:	4798      	blx	r3
 8011de4:	fbb4 f0f0 	udiv	r0, r4, r0
 8011de8:	bd70      	pop	{r4, r5, r6, pc}

08011dea <_ZN8touchgfx17AbstractPartition5clearEv>:
 8011dea:	2300      	movs	r3, #0
 8011dec:	8083      	strh	r3, [r0, #4]
 8011dee:	4770      	bx	lr

08011df0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011df0:	b510      	push	{r4, lr}
 8011df2:	6803      	ldr	r3, [r0, #0]
 8011df4:	4604      	mov	r4, r0
 8011df6:	8881      	ldrh	r1, [r0, #4]
 8011df8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dfa:	4798      	blx	r3
 8011dfc:	88a3      	ldrh	r3, [r4, #4]
 8011dfe:	3301      	adds	r3, #1
 8011e00:	80a3      	strh	r3, [r4, #4]
 8011e02:	bd10      	pop	{r4, pc}

08011e04 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8011e04:	6803      	ldr	r3, [r0, #0]
 8011e06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e08:	4718      	bx	r3

08011e0a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8011e0a:	4770      	bx	lr

08011e0c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8011e0c:	4a02      	ldr	r2, [pc, #8]	; (8011e18 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8011e0e:	6002      	str	r2, [r0, #0]
 8011e10:	2200      	movs	r2, #0
 8011e12:	8082      	strh	r2, [r0, #4]
 8011e14:	4770      	bx	lr
 8011e16:	bf00      	nop
 8011e18:	0802863c 	.word	0x0802863c

08011e1c <_ZN8touchgfx9Container13getFirstChildEv>:
 8011e1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011e1e:	4770      	bx	lr

08011e20 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8011e20:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e22:	2000      	movs	r0, #0
 8011e24:	b12b      	cbz	r3, 8011e32 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011e26:	b920      	cbnz	r0, 8011e32 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011e28:	1a5a      	subs	r2, r3, r1
 8011e2a:	699b      	ldr	r3, [r3, #24]
 8011e2c:	4250      	negs	r0, r2
 8011e2e:	4150      	adcs	r0, r2
 8011e30:	e7f8      	b.n	8011e24 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8011e32:	4770      	bx	lr

08011e34 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8011e34:	2300      	movs	r3, #0
 8011e36:	6148      	str	r0, [r1, #20]
 8011e38:	618b      	str	r3, [r1, #24]
 8011e3a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e3c:	b913      	cbnz	r3, 8011e44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8011e3e:	6281      	str	r1, [r0, #40]	; 0x28
 8011e40:	4770      	bx	lr
 8011e42:	4613      	mov	r3, r2
 8011e44:	699a      	ldr	r2, [r3, #24]
 8011e46:	2a00      	cmp	r2, #0
 8011e48:	d1fb      	bne.n	8011e42 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8011e4a:	6199      	str	r1, [r3, #24]
 8011e4c:	4770      	bx	lr

08011e4e <_ZN8touchgfx9Container9removeAllEv>:
 8011e4e:	2200      	movs	r2, #0
 8011e50:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e52:	b123      	cbz	r3, 8011e5e <_ZN8touchgfx9Container9removeAllEv+0x10>
 8011e54:	6999      	ldr	r1, [r3, #24]
 8011e56:	6281      	str	r1, [r0, #40]	; 0x28
 8011e58:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8011e5c:	e7f8      	b.n	8011e50 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8011e5e:	4770      	bx	lr

08011e60 <_ZN8touchgfx9Container6unlinkEv>:
 8011e60:	2300      	movs	r3, #0
 8011e62:	6283      	str	r3, [r0, #40]	; 0x28
 8011e64:	4770      	bx	lr

08011e66 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8011e66:	2200      	movs	r2, #0
 8011e68:	8002      	strh	r2, [r0, #0]
 8011e6a:	8042      	strh	r2, [r0, #2]
 8011e6c:	8082      	strh	r2, [r0, #4]
 8011e6e:	80c2      	strh	r2, [r0, #6]
 8011e70:	4770      	bx	lr

08011e72 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011e72:	b570      	push	{r4, r5, r6, lr}
 8011e74:	460d      	mov	r5, r1
 8011e76:	4616      	mov	r6, r2
 8011e78:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011e7a:	b13c      	cbz	r4, 8011e8c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8011e7c:	6823      	ldr	r3, [r4, #0]
 8011e7e:	4620      	mov	r0, r4
 8011e80:	4632      	mov	r2, r6
 8011e82:	4629      	mov	r1, r5
 8011e84:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011e86:	4798      	blx	r3
 8011e88:	69a4      	ldr	r4, [r4, #24]
 8011e8a:	e7f6      	b.n	8011e7a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8011e8c:	bd70      	pop	{r4, r5, r6, pc}

08011e8e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011e8e:	b538      	push	{r3, r4, r5, lr}
 8011e90:	460d      	mov	r5, r1
 8011e92:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011e94:	b134      	cbz	r4, 8011ea4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011e96:	682b      	ldr	r3, [r5, #0]
 8011e98:	4621      	mov	r1, r4
 8011e9a:	4628      	mov	r0, r5
 8011e9c:	689b      	ldr	r3, [r3, #8]
 8011e9e:	4798      	blx	r3
 8011ea0:	69a4      	ldr	r4, [r4, #24]
 8011ea2:	e7f7      	b.n	8011e94 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011ea4:	bd38      	pop	{r3, r4, r5, pc}

08011ea6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011ea6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011ea8:	b19b      	cbz	r3, 8011ed2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011eaa:	428b      	cmp	r3, r1
 8011eac:	d109      	bne.n	8011ec2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011eae:	699a      	ldr	r2, [r3, #24]
 8011eb0:	2100      	movs	r1, #0
 8011eb2:	6159      	str	r1, [r3, #20]
 8011eb4:	6282      	str	r2, [r0, #40]	; 0x28
 8011eb6:	b902      	cbnz	r2, 8011eba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8011eb8:	4770      	bx	lr
 8011eba:	6199      	str	r1, [r3, #24]
 8011ebc:	4770      	bx	lr
 8011ebe:	4613      	mov	r3, r2
 8011ec0:	b13a      	cbz	r2, 8011ed2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011ec2:	699a      	ldr	r2, [r3, #24]
 8011ec4:	428a      	cmp	r2, r1
 8011ec6:	d1fa      	bne.n	8011ebe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8011ec8:	698a      	ldr	r2, [r1, #24]
 8011eca:	619a      	str	r2, [r3, #24]
 8011ecc:	2300      	movs	r3, #0
 8011ece:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011ed2:	4770      	bx	lr

08011ed4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011ed4:	b410      	push	{r4}
 8011ed6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011ed8:	4604      	mov	r4, r0
 8011eda:	b92b      	cbnz	r3, 8011ee8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011edc:	6803      	ldr	r3, [r0, #0]
 8011ede:	4611      	mov	r1, r2
 8011ee0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011ee4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011ee6:	4718      	bx	r3
 8011ee8:	b941      	cbnz	r1, 8011efc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8011eea:	6193      	str	r3, [r2, #24]
 8011eec:	6282      	str	r2, [r0, #40]	; 0x28
 8011eee:	6154      	str	r4, [r2, #20]
 8011ef0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011ef4:	4770      	bx	lr
 8011ef6:	4603      	mov	r3, r0
 8011ef8:	2800      	cmp	r0, #0
 8011efa:	d0f9      	beq.n	8011ef0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8011efc:	4299      	cmp	r1, r3
 8011efe:	6998      	ldr	r0, [r3, #24]
 8011f00:	d1f9      	bne.n	8011ef6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8011f02:	6190      	str	r0, [r2, #24]
 8011f04:	618a      	str	r2, [r1, #24]
 8011f06:	e7f2      	b.n	8011eee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08011f08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8011f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f0c:	461f      	mov	r7, r3
 8011f0e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8011f12:	460d      	mov	r5, r1
 8011f14:	4616      	mov	r6, r2
 8011f16:	b103      	cbz	r3, 8011f1a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011f18:	6038      	str	r0, [r7, #0]
 8011f1a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011f1c:	b314      	cbz	r4, 8011f64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8011f1e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011f22:	b1eb      	cbz	r3, 8011f60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011f28:	428d      	cmp	r5, r1
 8011f2a:	db19      	blt.n	8011f60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f2c:	b289      	uxth	r1, r1
 8011f2e:	8923      	ldrh	r3, [r4, #8]
 8011f30:	440b      	add	r3, r1
 8011f32:	b21b      	sxth	r3, r3
 8011f34:	429d      	cmp	r5, r3
 8011f36:	da13      	bge.n	8011f60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f38:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011f3c:	4296      	cmp	r6, r2
 8011f3e:	db0f      	blt.n	8011f60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f40:	b292      	uxth	r2, r2
 8011f42:	8963      	ldrh	r3, [r4, #10]
 8011f44:	4413      	add	r3, r2
 8011f46:	b21b      	sxth	r3, r3
 8011f48:	429e      	cmp	r6, r3
 8011f4a:	da09      	bge.n	8011f60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f4c:	6823      	ldr	r3, [r4, #0]
 8011f4e:	1ab2      	subs	r2, r6, r2
 8011f50:	1a69      	subs	r1, r5, r1
 8011f52:	4620      	mov	r0, r4
 8011f54:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8011f58:	b212      	sxth	r2, r2
 8011f5a:	463b      	mov	r3, r7
 8011f5c:	b209      	sxth	r1, r1
 8011f5e:	47c0      	blx	r8
 8011f60:	69a4      	ldr	r4, [r4, #24]
 8011f62:	e7db      	b.n	8011f1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8011f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f6c:	4c6d      	ldr	r4, [pc, #436]	; (8012124 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 8011f6e:	b0a1      	sub	sp, #132	; 0x84
 8011f70:	4606      	mov	r6, r0
 8011f72:	6824      	ldr	r4, [r4, #0]
 8011f74:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8011f76:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8011f7a:	2400      	movs	r4, #0
 8011f7c:	9303      	str	r3, [sp, #12]
 8011f7e:	802c      	strh	r4, [r5, #0]
 8011f80:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011f82:	802c      	strh	r4, [r5, #0]
 8011f84:	601c      	str	r4, [r3, #0]
 8011f86:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8011f8a:	f7ff ffbd 	bl	8011f08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011f8e:	f1b9 0f03 	cmp.w	r9, #3
 8011f92:	f340 80c1 	ble.w	8012118 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 8011f96:	4631      	mov	r1, r6
 8011f98:	a80c      	add	r0, sp, #48	; 0x30
 8011f9a:	f004 fc8d 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f9e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011fa2:	9306      	str	r3, [sp, #24]
 8011fa4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011fa8:	9307      	str	r3, [sp, #28]
 8011faa:	9b03      	ldr	r3, [sp, #12]
 8011fac:	f8d3 a000 	ldr.w	sl, [r3]
 8011fb0:	f1ba 0f00 	cmp.w	sl, #0
 8011fb4:	f000 80b3 	beq.w	801211e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 8011fb8:	4651      	mov	r1, sl
 8011fba:	a810      	add	r0, sp, #64	; 0x40
 8011fbc:	f004 fc7c 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fc0:	2002      	movs	r0, #2
 8011fc2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8011fc6:	9b01      	ldr	r3, [sp, #4]
 8011fc8:	9a06      	ldr	r2, [sp, #24]
 8011fca:	fb91 f1f0 	sdiv	r1, r1, r0
 8011fce:	189d      	adds	r5, r3, r2
 8011fd0:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8011fd4:	9a07      	ldr	r2, [sp, #28]
 8011fd6:	4419      	add	r1, r3
 8011fd8:	9b02      	ldr	r3, [sp, #8]
 8011fda:	4413      	add	r3, r2
 8011fdc:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8011fe0:	1a6d      	subs	r5, r5, r1
 8011fe2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011fe6:	fb92 f2f0 	sdiv	r2, r2, r0
 8011fea:	440a      	add	r2, r1
 8011fec:	1a9b      	subs	r3, r3, r2
 8011fee:	435b      	muls	r3, r3
 8011ff0:	fb05 3505 	mla	r5, r5, r5, r3
 8011ff4:	4f4c      	ldr	r7, [pc, #304]	; (8012128 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8011ff6:	ac10      	add	r4, sp, #64	; 0x40
 8011ff8:	f1b9 0f0c 	cmp.w	r9, #12
 8011ffc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011ffe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012000:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012002:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012004:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012006:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012008:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 801200c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012010:	f04f 0303 	mov.w	r3, #3
 8012014:	bfd8      	it	le
 8012016:	f109 32ff 	addle.w	r2, r9, #4294967295
 801201a:	f04f 0400 	mov.w	r4, #0
 801201e:	f8cd 9000 	str.w	r9, [sp]
 8012022:	bfcc      	ite	gt
 8012024:	4698      	movgt	r8, r3
 8012026:	fb92 f8f3 	sdivle	r8, r2, r3
 801202a:	1c63      	adds	r3, r4, #1
 801202c:	aa10      	add	r2, sp, #64	; 0x40
 801202e:	f004 0401 	and.w	r4, r4, #1
 8012032:	f04f 0b00 	mov.w	fp, #0
 8012036:	9308      	str	r3, [sp, #32]
 8012038:	9b00      	ldr	r3, [sp, #0]
 801203a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 801203e:	fb93 f3f8 	sdiv	r3, r3, r8
 8012042:	3404      	adds	r4, #4
 8012044:	b29b      	uxth	r3, r3
 8012046:	9304      	str	r3, [sp, #16]
 8012048:	9a04      	ldr	r2, [sp, #16]
 801204a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801204e:	fb13 f302 	smulbb	r3, r3, r2
 8012052:	9a01      	ldr	r2, [sp, #4]
 8012054:	b29b      	uxth	r3, r3
 8012056:	1899      	adds	r1, r3, r2
 8012058:	9305      	str	r3, [sp, #20]
 801205a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801205e:	b209      	sxth	r1, r1
 8012060:	4299      	cmp	r1, r3
 8012062:	db4d      	blt.n	8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012064:	8932      	ldrh	r2, [r6, #8]
 8012066:	4413      	add	r3, r2
 8012068:	b21b      	sxth	r3, r3
 801206a:	4299      	cmp	r1, r3
 801206c:	da48      	bge.n	8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801206e:	9b04      	ldr	r3, [sp, #16]
 8012070:	6827      	ldr	r7, [r4, #0]
 8012072:	fb17 f703 	smulbb	r7, r7, r3
 8012076:	9b02      	ldr	r3, [sp, #8]
 8012078:	b2bf      	uxth	r7, r7
 801207a:	18fa      	adds	r2, r7, r3
 801207c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012080:	b212      	sxth	r2, r2
 8012082:	429a      	cmp	r2, r3
 8012084:	db3c      	blt.n	8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012086:	8970      	ldrh	r0, [r6, #10]
 8012088:	4403      	add	r3, r0
 801208a:	b21b      	sxth	r3, r3
 801208c:	429a      	cmp	r2, r3
 801208e:	da37      	bge.n	8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012090:	2300      	movs	r3, #0
 8012092:	4630      	mov	r0, r6
 8012094:	930b      	str	r3, [sp, #44]	; 0x2c
 8012096:	ab0b      	add	r3, sp, #44	; 0x2c
 8012098:	f7ff ff36 	bl	8011f08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801209c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801209e:	b37a      	cbz	r2, 8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80120a0:	4552      	cmp	r2, sl
 80120a2:	d02d      	beq.n	8012100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80120a4:	4611      	mov	r1, r2
 80120a6:	a80e      	add	r0, sp, #56	; 0x38
 80120a8:	9209      	str	r2, [sp, #36]	; 0x24
 80120aa:	f004 fc05 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120ae:	f04f 0e02 	mov.w	lr, #2
 80120b2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80120b6:	9a06      	ldr	r2, [sp, #24]
 80120b8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80120bc:	9b01      	ldr	r3, [sp, #4]
 80120be:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80120c2:	4413      	add	r3, r2
 80120c4:	9a07      	ldr	r2, [sp, #28]
 80120c6:	fb91 f1fe 	sdiv	r1, r1, lr
 80120ca:	fb9c fcfe 	sdiv	ip, ip, lr
 80120ce:	4401      	add	r1, r0
 80120d0:	1a58      	subs	r0, r3, r1
 80120d2:	9b02      	ldr	r3, [sp, #8]
 80120d4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80120d8:	4413      	add	r3, r2
 80120da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80120dc:	448c      	add	ip, r1
 80120de:	eba3 030c 	sub.w	r3, r3, ip
 80120e2:	435b      	muls	r3, r3
 80120e4:	fb00 3300 	mla	r3, r0, r0, r3
 80120e8:	42ab      	cmp	r3, r5
 80120ea:	d208      	bcs.n	80120fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80120ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80120ee:	461d      	mov	r5, r3
 80120f0:	9803      	ldr	r0, [sp, #12]
 80120f2:	6001      	str	r1, [r0, #0]
 80120f4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80120f6:	9805      	ldr	r0, [sp, #20]
 80120f8:	8008      	strh	r0, [r1, #0]
 80120fa:	992b      	ldr	r1, [sp, #172]	; 0xac
 80120fc:	800f      	strh	r7, [r1, #0]
 80120fe:	4692      	mov	sl, r2
 8012100:	f10b 0b01 	add.w	fp, fp, #1
 8012104:	3408      	adds	r4, #8
 8012106:	f1bb 0f04 	cmp.w	fp, #4
 801210a:	d19d      	bne.n	8012048 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801210c:	9b00      	ldr	r3, [sp, #0]
 801210e:	9c08      	ldr	r4, [sp, #32]
 8012110:	444b      	add	r3, r9
 8012112:	4544      	cmp	r4, r8
 8012114:	9300      	str	r3, [sp, #0]
 8012116:	d188      	bne.n	801202a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012118:	b021      	add	sp, #132	; 0x84
 801211a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801211e:	f04f 35ff 	mov.w	r5, #4294967295
 8012122:	e767      	b.n	8011ff4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012124:	24002fa4 	.word	0x24002fa4
 8012128:	08027c40 	.word	0x08027c40

0801212c <_ZN8touchgfx4RectaNERKS0_>:
 801212c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012130:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012134:	888c      	ldrh	r4, [r1, #4]
 8012136:	f9b0 9000 	ldrsh.w	r9, [r0]
 801213a:	443c      	add	r4, r7
 801213c:	b2a4      	uxth	r4, r4
 801213e:	fa0f f884 	sxth.w	r8, r4
 8012142:	45c1      	cmp	r9, r8
 8012144:	da2f      	bge.n	80121a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012146:	8882      	ldrh	r2, [r0, #4]
 8012148:	444a      	add	r2, r9
 801214a:	b292      	uxth	r2, r2
 801214c:	fa0f fe82 	sxth.w	lr, r2
 8012150:	4577      	cmp	r7, lr
 8012152:	da28      	bge.n	80121a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012154:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012158:	88cb      	ldrh	r3, [r1, #6]
 801215a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801215e:	442b      	add	r3, r5
 8012160:	b21b      	sxth	r3, r3
 8012162:	429e      	cmp	r6, r3
 8012164:	da1f      	bge.n	80121a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012166:	88c3      	ldrh	r3, [r0, #6]
 8012168:	4433      	add	r3, r6
 801216a:	b29b      	uxth	r3, r3
 801216c:	fa0f fc83 	sxth.w	ip, r3
 8012170:	4565      	cmp	r5, ip
 8012172:	da18      	bge.n	80121a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012174:	454f      	cmp	r7, r9
 8012176:	bfb8      	it	lt
 8012178:	464f      	movlt	r7, r9
 801217a:	42b5      	cmp	r5, r6
 801217c:	bfb8      	it	lt
 801217e:	4635      	movlt	r5, r6
 8012180:	45f0      	cmp	r8, lr
 8012182:	bfd8      	it	le
 8012184:	4622      	movle	r2, r4
 8012186:	1bd2      	subs	r2, r2, r7
 8012188:	8082      	strh	r2, [r0, #4]
 801218a:	884a      	ldrh	r2, [r1, #2]
 801218c:	88c9      	ldrh	r1, [r1, #6]
 801218e:	8007      	strh	r7, [r0, #0]
 8012190:	440a      	add	r2, r1
 8012192:	8045      	strh	r5, [r0, #2]
 8012194:	b292      	uxth	r2, r2
 8012196:	b211      	sxth	r1, r2
 8012198:	458c      	cmp	ip, r1
 801219a:	bfa8      	it	ge
 801219c:	4613      	movge	r3, r2
 801219e:	1b5b      	subs	r3, r3, r5
 80121a0:	80c3      	strh	r3, [r0, #6]
 80121a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80121a6:	2300      	movs	r3, #0
 80121a8:	8003      	strh	r3, [r0, #0]
 80121aa:	8043      	strh	r3, [r0, #2]
 80121ac:	8083      	strh	r3, [r0, #4]
 80121ae:	80c3      	strh	r3, [r0, #6]
 80121b0:	e7f7      	b.n	80121a2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080121b2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80121b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80121b6:	2b00      	cmp	r3, #0
 80121b8:	dd06      	ble.n	80121c8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80121ba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80121be:	2800      	cmp	r0, #0
 80121c0:	bfcc      	ite	gt
 80121c2:	2000      	movgt	r0, #0
 80121c4:	2001      	movle	r0, #1
 80121c6:	4770      	bx	lr
 80121c8:	2001      	movs	r0, #1
 80121ca:	4770      	bx	lr

080121cc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80121cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121d0:	2300      	movs	r3, #0
 80121d2:	4604      	mov	r4, r0
 80121d4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80121d6:	8003      	strh	r3, [r0, #0]
 80121d8:	8043      	strh	r3, [r0, #2]
 80121da:	8083      	strh	r3, [r0, #4]
 80121dc:	80c3      	strh	r3, [r0, #6]
 80121de:	2d00      	cmp	r5, #0
 80121e0:	d040      	beq.n	8012264 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80121e2:	1d28      	adds	r0, r5, #4
 80121e4:	f7ff ffe5 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80121e8:	b988      	cbnz	r0, 801220e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80121ea:	4620      	mov	r0, r4
 80121ec:	f7ff ffe1 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80121f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80121f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80121f8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80121fc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012200:	b138      	cbz	r0, 8012212 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012202:	8022      	strh	r2, [r4, #0]
 8012204:	8063      	strh	r3, [r4, #2]
 8012206:	f8a4 e004 	strh.w	lr, [r4, #4]
 801220a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801220e:	69ad      	ldr	r5, [r5, #24]
 8012210:	e7e5      	b.n	80121de <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012212:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012216:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801221a:	4290      	cmp	r0, r2
 801221c:	4607      	mov	r7, r0
 801221e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012222:	460e      	mov	r6, r1
 8012224:	bfa8      	it	ge
 8012226:	4617      	movge	r7, r2
 8012228:	4299      	cmp	r1, r3
 801222a:	4472      	add	r2, lr
 801222c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012230:	bfa8      	it	ge
 8012232:	461e      	movge	r6, r3
 8012234:	4440      	add	r0, r8
 8012236:	4471      	add	r1, lr
 8012238:	4463      	add	r3, ip
 801223a:	b200      	sxth	r0, r0
 801223c:	8027      	strh	r7, [r4, #0]
 801223e:	b212      	sxth	r2, r2
 8012240:	8066      	strh	r6, [r4, #2]
 8012242:	b209      	sxth	r1, r1
 8012244:	b21b      	sxth	r3, r3
 8012246:	4290      	cmp	r0, r2
 8012248:	bfac      	ite	ge
 801224a:	ebc7 0200 	rsbge	r2, r7, r0
 801224e:	ebc7 0202 	rsblt	r2, r7, r2
 8012252:	4299      	cmp	r1, r3
 8012254:	bfac      	ite	ge
 8012256:	ebc6 0301 	rsbge	r3, r6, r1
 801225a:	ebc6 0303 	rsblt	r3, r6, r3
 801225e:	80a2      	strh	r2, [r4, #4]
 8012260:	80e3      	strh	r3, [r4, #6]
 8012262:	e7d4      	b.n	801220e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012264:	4620      	mov	r0, r4
 8012266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801226a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801226a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801226e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012272:	b383      	cbz	r3, 80122d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012274:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012276:	b374      	cbz	r4, 80122d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012278:	f9b1 5000 	ldrsh.w	r5, [r1]
 801227c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012280:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012284:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012288:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801228c:	b303      	cbz	r3, 80122d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801228e:	4668      	mov	r0, sp
 8012290:	1d21      	adds	r1, r4, #4
 8012292:	f8ad 5000 	strh.w	r5, [sp]
 8012296:	f8ad 6002 	strh.w	r6, [sp, #2]
 801229a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801229e:	f8ad 8006 	strh.w	r8, [sp, #6]
 80122a2:	f7ff ff43 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 80122a6:	4668      	mov	r0, sp
 80122a8:	f7ff ff83 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80122ac:	b980      	cbnz	r0, 80122d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80122ae:	f8bd 3000 	ldrh.w	r3, [sp]
 80122b2:	4669      	mov	r1, sp
 80122b4:	88a2      	ldrh	r2, [r4, #4]
 80122b6:	4620      	mov	r0, r4
 80122b8:	1a9b      	subs	r3, r3, r2
 80122ba:	88e2      	ldrh	r2, [r4, #6]
 80122bc:	f8ad 3000 	strh.w	r3, [sp]
 80122c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122c4:	1a9b      	subs	r3, r3, r2
 80122c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80122ca:	6823      	ldr	r3, [r4, #0]
 80122cc:	689b      	ldr	r3, [r3, #8]
 80122ce:	4798      	blx	r3
 80122d0:	69a4      	ldr	r4, [r4, #24]
 80122d2:	2c00      	cmp	r4, #0
 80122d4:	d1d8      	bne.n	8012288 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80122d6:	b002      	add	sp, #8
 80122d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080122dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80122dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80122e2:	460d      	mov	r5, r1
 80122e4:	4616      	mov	r6, r2
 80122e6:	b323      	cbz	r3, 8012332 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80122ea:	b314      	cbz	r4, 8012332 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122ec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80122f0:	b1eb      	cbz	r3, 801232e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80122f2:	6828      	ldr	r0, [r5, #0]
 80122f4:	466b      	mov	r3, sp
 80122f6:	6869      	ldr	r1, [r5, #4]
 80122f8:	c303      	stmia	r3!, {r0, r1}
 80122fa:	4668      	mov	r0, sp
 80122fc:	1d21      	adds	r1, r4, #4
 80122fe:	f7ff ff15 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8012302:	4668      	mov	r0, sp
 8012304:	f7ff ff55 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012308:	b988      	cbnz	r0, 801232e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801230a:	f8bd 3000 	ldrh.w	r3, [sp]
 801230e:	4669      	mov	r1, sp
 8012310:	88a2      	ldrh	r2, [r4, #4]
 8012312:	4620      	mov	r0, r4
 8012314:	1a9b      	subs	r3, r3, r2
 8012316:	88e2      	ldrh	r2, [r4, #6]
 8012318:	f8ad 3000 	strh.w	r3, [sp]
 801231c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012320:	1a9b      	subs	r3, r3, r2
 8012322:	4632      	mov	r2, r6
 8012324:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012328:	6823      	ldr	r3, [r4, #0]
 801232a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801232c:	4798      	blx	r3
 801232e:	69a4      	ldr	r4, [r4, #24]
 8012330:	e7db      	b.n	80122ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012332:	b002      	add	sp, #8
 8012334:	bd70      	pop	{r4, r5, r6, pc}

08012336 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8012336:	4770      	bx	lr

08012338 <_ZN8touchgfx3HAL10FlushCacheEv>:
 8012338:	4770      	bx	lr

0801233a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801233a:	6803      	ldr	r3, [r0, #0]
 801233c:	b513      	push	{r0, r1, r4, lr}
 801233e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8012342:	2300      	movs	r3, #0
 8012344:	e9cd 3300 	strd	r3, r3, [sp]
 8012348:	466b      	mov	r3, sp
 801234a:	47a0      	blx	r4
 801234c:	b002      	add	sp, #8
 801234e:	bd10      	pop	{r4, pc}

08012350 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012350:	2301      	movs	r3, #1
 8012352:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012356:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801235a:	4770      	bx	lr

0801235c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801235c:	2301      	movs	r3, #1
 801235e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012362:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8012366:	4770      	bx	lr

08012368 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012368:	6843      	ldr	r3, [r0, #4]
 801236a:	2201      	movs	r2, #1
 801236c:	725a      	strb	r2, [r3, #9]
 801236e:	6840      	ldr	r0, [r0, #4]
 8012370:	6803      	ldr	r3, [r0, #0]
 8012372:	691b      	ldr	r3, [r3, #16]
 8012374:	4718      	bx	r3

08012376 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012376:	6840      	ldr	r0, [r0, #4]
 8012378:	6803      	ldr	r3, [r0, #0]
 801237a:	689b      	ldr	r3, [r3, #8]
 801237c:	4718      	bx	r3

0801237e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801237e:	b530      	push	{r4, r5, lr}
 8012380:	b08b      	sub	sp, #44	; 0x2c
 8012382:	6804      	ldr	r4, [r0, #0]
 8012384:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8012388:	9509      	str	r5, [sp, #36]	; 0x24
 801238a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801238e:	9508      	str	r5, [sp, #32]
 8012390:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012394:	9507      	str	r5, [sp, #28]
 8012396:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801239a:	9506      	str	r5, [sp, #24]
 801239c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80123a0:	9505      	str	r5, [sp, #20]
 80123a2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80123a6:	9504      	str	r5, [sp, #16]
 80123a8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80123ac:	9503      	str	r5, [sp, #12]
 80123ae:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80123b2:	9502      	str	r5, [sp, #8]
 80123b4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80123b8:	e9cd 3500 	strd	r3, r5, [sp]
 80123bc:	4613      	mov	r3, r2
 80123be:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80123c0:	2200      	movs	r2, #0
 80123c2:	47a0      	blx	r4
 80123c4:	b00b      	add	sp, #44	; 0x2c
 80123c6:	bd30      	pop	{r4, r5, pc}

080123c8 <_ZN8touchgfx3HAL10beginFrameEv>:
 80123c8:	4b04      	ldr	r3, [pc, #16]	; (80123dc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80123ca:	781b      	ldrb	r3, [r3, #0]
 80123cc:	b123      	cbz	r3, 80123d8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80123ce:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80123d2:	f080 0001 	eor.w	r0, r0, #1
 80123d6:	4770      	bx	lr
 80123d8:	2001      	movs	r0, #1
 80123da:	4770      	bx	lr
 80123dc:	24002fa2 	.word	0x24002fa2

080123e0 <_ZN8touchgfx3HAL8endFrameEv>:
 80123e0:	b510      	push	{r4, lr}
 80123e2:	4604      	mov	r4, r0
 80123e4:	6840      	ldr	r0, [r0, #4]
 80123e6:	6803      	ldr	r3, [r0, #0]
 80123e8:	689b      	ldr	r3, [r3, #8]
 80123ea:	4798      	blx	r3
 80123ec:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80123f0:	b113      	cbz	r3, 80123f8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80123f2:	2301      	movs	r3, #1
 80123f4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80123f8:	bd10      	pop	{r4, pc}

080123fa <_ZN8touchgfx3HAL10initializeEv>:
 80123fa:	b510      	push	{r4, lr}
 80123fc:	4604      	mov	r4, r0
 80123fe:	f7fe f947 	bl	8010690 <_ZN8touchgfx10OSWrappers10initializeEv>
 8012402:	f7fd fe4f 	bl	80100a4 <_ZN8touchgfx4GPIO4initEv>
 8012406:	6860      	ldr	r0, [r4, #4]
 8012408:	6803      	ldr	r3, [r0, #0]
 801240a:	68db      	ldr	r3, [r3, #12]
 801240c:	4798      	blx	r3
 801240e:	68e0      	ldr	r0, [r4, #12]
 8012410:	6803      	ldr	r3, [r0, #0]
 8012412:	689b      	ldr	r3, [r3, #8]
 8012414:	4798      	blx	r3
 8012416:	6823      	ldr	r3, [r4, #0]
 8012418:	4620      	mov	r0, r4
 801241a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801241c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012420:	4718      	bx	r3

08012422 <_ZN8touchgfx3HAL9taskEntryEv>:
 8012422:	b508      	push	{r3, lr}
 8012424:	6803      	ldr	r3, [r0, #0]
 8012426:	4604      	mov	r4, r0
 8012428:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801242c:	4798      	blx	r3
 801242e:	6823      	ldr	r3, [r4, #0]
 8012430:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012432:	4620      	mov	r0, r4
 8012434:	4798      	blx	r3
 8012436:	f7fe f99f 	bl	8010778 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 801243a:	6823      	ldr	r3, [r4, #0]
 801243c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801243e:	e7f8      	b.n	8012432 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08012440 <_ZN8touchgfx3HAL4tickEv>:
 8012440:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012442:	6803      	ldr	r3, [r0, #0]
 8012444:	4604      	mov	r4, r0
 8012446:	4d5b      	ldr	r5, [pc, #364]	; (80125b4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8012448:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801244c:	4798      	blx	r3
 801244e:	2800      	cmp	r0, #0
 8012450:	f000 8095 	beq.w	801257e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8012454:	2001      	movs	r0, #1
 8012456:	2600      	movs	r6, #0
 8012458:	f7fd fe2c 	bl	80100b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801245c:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8012460:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8012464:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8012468:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801246c:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8012470:	b133      	cbz	r3, 8012480 <_ZN8touchgfx3HAL4tickEv+0x40>
 8012472:	6823      	ldr	r3, [r4, #0]
 8012474:	4620      	mov	r0, r4
 8012476:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801247a:	4798      	blx	r3
 801247c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8012480:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012484:	2601      	movs	r6, #1
 8012486:	6862      	ldr	r2, [r4, #4]
 8012488:	f083 0301 	eor.w	r3, r3, #1
 801248c:	702e      	strb	r6, [r5, #0]
 801248e:	7253      	strb	r3, [r2, #9]
 8012490:	f003 f8fe 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 8012494:	6803      	ldr	r3, [r0, #0]
 8012496:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012498:	4798      	blx	r3
 801249a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801249e:	b90b      	cbnz	r3, 80124a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80124a0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80124a4:	f003 f8f4 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 80124a8:	6803      	ldr	r3, [r0, #0]
 80124aa:	695b      	ldr	r3, [r3, #20]
 80124ac:	4798      	blx	r3
 80124ae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80124b0:	6803      	ldr	r3, [r0, #0]
 80124b2:	691b      	ldr	r3, [r3, #16]
 80124b4:	4798      	blx	r3
 80124b6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80124ba:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80124be:	3b01      	subs	r3, #1
 80124c0:	b2db      	uxtb	r3, r3
 80124c2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80124c6:	b10a      	cbz	r2, 80124cc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80124c8:	2b00      	cmp	r3, #0
 80124ca:	d1eb      	bne.n	80124a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80124cc:	4a3a      	ldr	r2, [pc, #232]	; (80125b8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80124ce:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80124d2:	7813      	ldrb	r3, [r2, #0]
 80124d4:	3301      	adds	r3, #1
 80124d6:	b25b      	sxtb	r3, r3
 80124d8:	4299      	cmp	r1, r3
 80124da:	7013      	strb	r3, [r2, #0]
 80124dc:	dc10      	bgt.n	8012500 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80124de:	2300      	movs	r3, #0
 80124e0:	68e0      	ldr	r0, [r4, #12]
 80124e2:	a902      	add	r1, sp, #8
 80124e4:	7013      	strb	r3, [r2, #0]
 80124e6:	aa03      	add	r2, sp, #12
 80124e8:	6803      	ldr	r3, [r0, #0]
 80124ea:	68db      	ldr	r3, [r3, #12]
 80124ec:	4798      	blx	r3
 80124ee:	6823      	ldr	r3, [r4, #0]
 80124f0:	2800      	cmp	r0, #0
 80124f2:	d050      	beq.n	8012596 <_ZN8touchgfx3HAL4tickEv+0x156>
 80124f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80124f8:	4620      	mov	r0, r4
 80124fa:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80124fe:	4798      	blx	r3
 8012500:	2300      	movs	r3, #0
 8012502:	6960      	ldr	r0, [r4, #20]
 8012504:	f88d 3007 	strb.w	r3, [sp, #7]
 8012508:	b158      	cbz	r0, 8012522 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801250a:	6803      	ldr	r3, [r0, #0]
 801250c:	f10d 0107 	add.w	r1, sp, #7
 8012510:	68db      	ldr	r3, [r3, #12]
 8012512:	4798      	blx	r3
 8012514:	b128      	cbz	r0, 8012522 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8012516:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8012518:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801251c:	6803      	ldr	r3, [r0, #0]
 801251e:	68db      	ldr	r3, [r3, #12]
 8012520:	4798      	blx	r3
 8012522:	f104 001c 	add.w	r0, r4, #28
 8012526:	f013 f921 	bl	802576c <_ZN8touchgfx8Gestures4tickEv>
 801252a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801252e:	b30b      	cbz	r3, 8012574 <_ZN8touchgfx3HAL4tickEv+0x134>
 8012530:	6920      	ldr	r0, [r4, #16]
 8012532:	6803      	ldr	r3, [r0, #0]
 8012534:	691b      	ldr	r3, [r3, #16]
 8012536:	4798      	blx	r3
 8012538:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801253a:	4606      	mov	r6, r0
 801253c:	b903      	cbnz	r3, 8012540 <_ZN8touchgfx3HAL4tickEv+0x100>
 801253e:	6760      	str	r0, [r4, #116]	; 0x74
 8012540:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012542:	4a1e      	ldr	r2, [pc, #120]	; (80125bc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8012544:	1af3      	subs	r3, r6, r3
 8012546:	4293      	cmp	r3, r2
 8012548:	d914      	bls.n	8012574 <_ZN8touchgfx3HAL4tickEv+0x134>
 801254a:	6920      	ldr	r0, [r4, #16]
 801254c:	6803      	ldr	r3, [r0, #0]
 801254e:	699b      	ldr	r3, [r3, #24]
 8012550:	4798      	blx	r3
 8012552:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012554:	2264      	movs	r2, #100	; 0x64
 8012556:	1af3      	subs	r3, r6, r3
 8012558:	fbb3 f3f2 	udiv	r3, r3, r2
 801255c:	fbb0 f0f3 	udiv	r0, r0, r3
 8012560:	2800      	cmp	r0, #0
 8012562:	dc1d      	bgt.n	80125a0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8012564:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8012568:	6920      	ldr	r0, [r4, #16]
 801256a:	2100      	movs	r1, #0
 801256c:	6803      	ldr	r3, [r0, #0]
 801256e:	69db      	ldr	r3, [r3, #28]
 8012570:	4798      	blx	r3
 8012572:	6766      	str	r6, [r4, #116]	; 0x74
 8012574:	f003 f88c 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 8012578:	6803      	ldr	r3, [r0, #0]
 801257a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801257c:	4798      	blx	r3
 801257e:	6823      	ldr	r3, [r4, #0]
 8012580:	4620      	mov	r0, r4
 8012582:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012586:	4798      	blx	r3
 8012588:	2001      	movs	r0, #1
 801258a:	f7fd fdaf 	bl	80100ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801258e:	2300      	movs	r3, #0
 8012590:	702b      	strb	r3, [r5, #0]
 8012592:	b004      	add	sp, #16
 8012594:	bd70      	pop	{r4, r5, r6, pc}
 8012596:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801259a:	4620      	mov	r0, r4
 801259c:	4798      	blx	r3
 801259e:	e7af      	b.n	8012500 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80125a0:	2863      	cmp	r0, #99	; 0x63
 80125a2:	bfcb      	itete	gt
 80125a4:	2300      	movgt	r3, #0
 80125a6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80125aa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80125ae:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80125b2:	e7d9      	b.n	8012568 <_ZN8touchgfx3HAL4tickEv+0x128>
 80125b4:	24002fa8 	.word	0x24002fa8
 80125b8:	24002fa9 	.word	0x24002fa9
 80125bc:	05f5e100 	.word	0x05f5e100

080125c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80125c0:	b510      	push	{r4, lr}
 80125c2:	4604      	mov	r4, r0
 80125c4:	f7fe f88c 	bl	80106e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80125c8:	2200      	movs	r2, #0
 80125ca:	6863      	ldr	r3, [r4, #4]
 80125cc:	729a      	strb	r2, [r3, #10]
 80125ce:	bd10      	pop	{r4, pc}

080125d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80125d0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80125d2:	301c      	adds	r0, #28
 80125d4:	f013 b8c8 	b.w	8025768 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080125d8 <_ZN8touchgfx3HAL5touchEll>:
 80125d8:	b530      	push	{r4, r5, lr}
 80125da:	b087      	sub	sp, #28
 80125dc:	4604      	mov	r4, r0
 80125de:	a804      	add	r0, sp, #16
 80125e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80125e4:	f002 fe46 	bl	8015274 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80125e8:	9b04      	ldr	r3, [sp, #16]
 80125ea:	a906      	add	r1, sp, #24
 80125ec:	a803      	add	r0, sp, #12
 80125ee:	f8ad 300c 	strh.w	r3, [sp, #12]
 80125f2:	9b05      	ldr	r3, [sp, #20]
 80125f4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80125f8:	f002 fe8e 	bl	8015318 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80125fc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8012600:	f104 001c 	add.w	r0, r4, #28
 8012604:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012608:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801260c:	b189      	cbz	r1, 8012632 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801260e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8012612:	9300      	str	r3, [sp, #0]
 8012614:	4613      	mov	r3, r2
 8012616:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 801261a:	462a      	mov	r2, r5
 801261c:	f013 f8b4 	bl	8025788 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8012620:	b128      	cbz	r0, 801262e <_ZN8touchgfx3HAL5touchEll+0x56>
 8012622:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012626:	6623      	str	r3, [r4, #96]	; 0x60
 8012628:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801262c:	6663      	str	r3, [r4, #100]	; 0x64
 801262e:	b007      	add	sp, #28
 8012630:	bd30      	pop	{r4, r5, pc}
 8012632:	f013 f8e9 	bl	8025808 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012636:	2301      	movs	r3, #1
 8012638:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801263c:	e7f1      	b.n	8012622 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801263e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801263e:	b510      	push	{r4, lr}
 8012640:	2b00      	cmp	r3, #0
 8012642:	d046      	beq.n	80126d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012644:	ea81 0002 	eor.w	r0, r1, r2
 8012648:	07c4      	lsls	r4, r0, #31
 801264a:	d508      	bpl.n	801265e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801264c:	440b      	add	r3, r1
 801264e:	3a01      	subs	r2, #1
 8012650:	428b      	cmp	r3, r1
 8012652:	d93e      	bls.n	80126d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012654:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012658:	f801 0b01 	strb.w	r0, [r1], #1
 801265c:	e7f8      	b.n	8012650 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801265e:	07d0      	lsls	r0, r2, #31
 8012660:	bf42      	ittt	mi
 8012662:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8012666:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801266a:	f801 0b01 	strbmi.w	r0, [r1], #1
 801266e:	2b01      	cmp	r3, #1
 8012670:	d911      	bls.n	8012696 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012672:	ea81 0402 	eor.w	r4, r1, r2
 8012676:	4610      	mov	r0, r2
 8012678:	07a4      	lsls	r4, r4, #30
 801267a:	d022      	beq.n	80126c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801267c:	f023 0401 	bic.w	r4, r3, #1
 8012680:	440c      	add	r4, r1
 8012682:	428c      	cmp	r4, r1
 8012684:	4602      	mov	r2, r0
 8012686:	d904      	bls.n	8012692 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012688:	8812      	ldrh	r2, [r2, #0]
 801268a:	3002      	adds	r0, #2
 801268c:	f821 2b02 	strh.w	r2, [r1], #2
 8012690:	e7f7      	b.n	8012682 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8012692:	f003 0301 	and.w	r3, r3, #1
 8012696:	f023 0003 	bic.w	r0, r3, #3
 801269a:	4408      	add	r0, r1
 801269c:	4288      	cmp	r0, r1
 801269e:	4614      	mov	r4, r2
 80126a0:	d904      	bls.n	80126ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80126a2:	6824      	ldr	r4, [r4, #0]
 80126a4:	3204      	adds	r2, #4
 80126a6:	f841 4b04 	str.w	r4, [r1], #4
 80126aa:	e7f7      	b.n	801269c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80126ac:	f003 0303 	and.w	r3, r3, #3
 80126b0:	3a01      	subs	r2, #1
 80126b2:	440b      	add	r3, r1
 80126b4:	428b      	cmp	r3, r1
 80126b6:	d90c      	bls.n	80126d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80126b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80126bc:	f801 0b01 	strb.w	r0, [r1], #1
 80126c0:	e7f8      	b.n	80126b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80126c2:	0790      	lsls	r0, r2, #30
 80126c4:	d0e7      	beq.n	8012696 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80126c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80126ca:	3b02      	subs	r3, #2
 80126cc:	f821 0b02 	strh.w	r0, [r1], #2
 80126d0:	e7e1      	b.n	8012696 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80126d2:	2001      	movs	r0, #1
 80126d4:	bd10      	pop	{r4, pc}

080126d6 <_ZN8touchgfx3HAL7noTouchEv>:
 80126d6:	b510      	push	{r4, lr}
 80126d8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80126dc:	4604      	mov	r4, r0
 80126de:	b153      	cbz	r3, 80126f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80126e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80126e4:	2101      	movs	r1, #1
 80126e6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80126ea:	301c      	adds	r0, #28
 80126ec:	f013 f88c 	bl	8025808 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80126f0:	2300      	movs	r3, #0
 80126f2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80126f6:	bd10      	pop	{r4, pc}

080126f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80126f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80126fc:	b085      	sub	sp, #20
 80126fe:	4604      	mov	r4, r0
 8012700:	2000      	movs	r0, #0
 8012702:	4699      	mov	r9, r3
 8012704:	ad04      	add	r5, sp, #16
 8012706:	460f      	mov	r7, r1
 8012708:	4690      	mov	r8, r2
 801270a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801270e:	69a0      	ldr	r0, [r4, #24]
 8012710:	6806      	ldr	r6, [r0, #0]
 8012712:	9501      	str	r5, [sp, #4]
 8012714:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8012718:	9500      	str	r5, [sp, #0]
 801271a:	6835      	ldr	r5, [r6, #0]
 801271c:	47a8      	blx	r5
 801271e:	4d10      	ldr	r5, [pc, #64]	; (8012760 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8012720:	4606      	mov	r6, r0
 8012722:	f8a5 9000 	strh.w	r9, [r5]
 8012726:	f7f9 fedb 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 801272a:	6803      	ldr	r3, [r0, #0]
 801272c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801272e:	4798      	blx	r3
 8012730:	b128      	cbz	r0, 801273e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8012732:	2801      	cmp	r0, #1
 8012734:	d00b      	beq.n	801274e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8012736:	4630      	mov	r0, r6
 8012738:	b005      	add	sp, #20
 801273a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801273e:	882b      	ldrh	r3, [r5, #0]
 8012740:	fb08 7203 	mla	r2, r8, r3, r7
 8012744:	9b03      	ldr	r3, [sp, #12]
 8012746:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801274a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801274c:	e7f3      	b.n	8012736 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801274e:	882a      	ldrh	r2, [r5, #0]
 8012750:	9b03      	ldr	r3, [sp, #12]
 8012752:	fb08 7202 	mla	r2, r8, r2, r7
 8012756:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801275a:	1a9a      	subs	r2, r3, r2
 801275c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801275e:	e7ea      	b.n	8012736 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012760:	24002f9e 	.word	0x24002f9e

08012764 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012764:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012766:	b08b      	sub	sp, #44	; 0x2c
 8012768:	4617      	mov	r7, r2
 801276a:	4604      	mov	r4, r0
 801276c:	460e      	mov	r6, r1
 801276e:	461d      	mov	r5, r3
 8012770:	f7f9 feb6 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012774:	6803      	ldr	r3, [r0, #0]
 8012776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012778:	4798      	blx	r3
 801277a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801277e:	9007      	str	r0, [sp, #28]
 8012780:	4631      	mov	r1, r6
 8012782:	6822      	ldr	r2, [r4, #0]
 8012784:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012788:	4b0c      	ldr	r3, [pc, #48]	; (80127bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801278a:	4620      	mov	r0, r4
 801278c:	881b      	ldrh	r3, [r3, #0]
 801278e:	9306      	str	r3, [sp, #24]
 8012790:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012794:	9305      	str	r3, [sp, #20]
 8012796:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801279a:	9304      	str	r3, [sp, #16]
 801279c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80127a0:	9303      	str	r3, [sp, #12]
 80127a2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80127a6:	9302      	str	r3, [sp, #8]
 80127a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80127ac:	e9cd 5300 	strd	r5, r3, [sp]
 80127b0:	463b      	mov	r3, r7
 80127b2:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80127b4:	2200      	movs	r2, #0
 80127b6:	47a8      	blx	r5
 80127b8:	b00b      	add	sp, #44	; 0x2c
 80127ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127bc:	24002f9e 	.word	0x24002f9e

080127c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80127c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80127c4:	4698      	mov	r8, r3
 80127c6:	6803      	ldr	r3, [r0, #0]
 80127c8:	b08b      	sub	sp, #44	; 0x2c
 80127ca:	4617      	mov	r7, r2
 80127cc:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80127ce:	460e      	mov	r6, r1
 80127d0:	4b13      	ldr	r3, [pc, #76]	; (8012820 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80127d2:	4604      	mov	r4, r0
 80127d4:	f8b3 9000 	ldrh.w	r9, [r3]
 80127d8:	f7f9 fe82 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 80127dc:	6803      	ldr	r3, [r0, #0]
 80127de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127e0:	4798      	blx	r3
 80127e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80127e6:	2200      	movs	r2, #0
 80127e8:	4631      	mov	r1, r6
 80127ea:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80127ee:	2302      	movs	r3, #2
 80127f0:	4620      	mov	r0, r4
 80127f2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80127f6:	2301      	movs	r3, #1
 80127f8:	9305      	str	r3, [sp, #20]
 80127fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80127fe:	9304      	str	r3, [sp, #16]
 8012800:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012804:	9303      	str	r3, [sp, #12]
 8012806:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801280a:	9302      	str	r3, [sp, #8]
 801280c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012810:	e9cd 8300 	strd	r8, r3, [sp]
 8012814:	463b      	mov	r3, r7
 8012816:	47a8      	blx	r5
 8012818:	b00b      	add	sp, #44	; 0x2c
 801281a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801281e:	bf00      	nop
 8012820:	24002f9e 	.word	0x24002f9e

08012824 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012824:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012828:	4698      	mov	r8, r3
 801282a:	6803      	ldr	r3, [r0, #0]
 801282c:	b087      	sub	sp, #28
 801282e:	460e      	mov	r6, r1
 8012830:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8012832:	4617      	mov	r7, r2
 8012834:	4b0f      	ldr	r3, [pc, #60]	; (8012874 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8012836:	4604      	mov	r4, r0
 8012838:	f8b3 9000 	ldrh.w	r9, [r3]
 801283c:	f7f9 fe50 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012840:	6803      	ldr	r3, [r0, #0]
 8012842:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012844:	4798      	blx	r3
 8012846:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801284a:	463a      	mov	r2, r7
 801284c:	4631      	mov	r1, r6
 801284e:	f8cd 900c 	str.w	r9, [sp, #12]
 8012852:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012856:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801285a:	4620      	mov	r0, r4
 801285c:	9302      	str	r3, [sp, #8]
 801285e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012862:	9301      	str	r3, [sp, #4]
 8012864:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012868:	9300      	str	r3, [sp, #0]
 801286a:	4643      	mov	r3, r8
 801286c:	47a8      	blx	r5
 801286e:	b007      	add	sp, #28
 8012870:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012874:	24002f9e 	.word	0x24002f9e

08012878 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801287c:	4604      	mov	r4, r0
 801287e:	b08f      	sub	sp, #60	; 0x3c
 8012880:	4610      	mov	r0, r2
 8012882:	460d      	mov	r5, r1
 8012884:	4691      	mov	r9, r2
 8012886:	461e      	mov	r6, r3
 8012888:	f005 fb4a 	bl	8017f20 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801288c:	2800      	cmp	r0, #0
 801288e:	f000 809d 	beq.w	80129cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012892:	6823      	ldr	r3, [r4, #0]
 8012894:	4620      	mov	r0, r4
 8012896:	f8df b198 	ldr.w	fp, [pc, #408]	; 8012a30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801289a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801289e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128a0:	4798      	blx	r3
 80128a2:	6823      	ldr	r3, [r4, #0]
 80128a4:	4620      	mov	r0, r4
 80128a6:	f8df a18c 	ldr.w	sl, [pc, #396]	; 8012a34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80128aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128ac:	4798      	blx	r3
 80128ae:	f8bb 3000 	ldrh.w	r3, [fp]
 80128b2:	4f5c      	ldr	r7, [pc, #368]	; (8012a24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80128b4:	9301      	str	r3, [sp, #4]
 80128b6:	f8ba 3000 	ldrh.w	r3, [sl]
 80128ba:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80128be:	4640      	mov	r0, r8
 80128c0:	9302      	str	r3, [sp, #8]
 80128c2:	883b      	ldrh	r3, [r7, #0]
 80128c4:	9303      	str	r3, [sp, #12]
 80128c6:	4b58      	ldr	r3, [pc, #352]	; (8012a28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80128c8:	881a      	ldrh	r2, [r3, #0]
 80128ca:	9305      	str	r3, [sp, #20]
 80128cc:	9204      	str	r2, [sp, #16]
 80128ce:	f005 fbbb 	bl	8018048 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128d2:	8038      	strh	r0, [r7, #0]
 80128d4:	4640      	mov	r0, r8
 80128d6:	f005 fbeb 	bl	80180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128da:	9b05      	ldr	r3, [sp, #20]
 80128dc:	b280      	uxth	r0, r0
 80128de:	8018      	strh	r0, [r3, #0]
 80128e0:	4b52      	ldr	r3, [pc, #328]	; (8012a2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80128e2:	781b      	ldrb	r3, [r3, #0]
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	d174      	bne.n	80129d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80128e8:	883b      	ldrh	r3, [r7, #0]
 80128ea:	f8aa 0000 	strh.w	r0, [sl]
 80128ee:	f8ab 3000 	strh.w	r3, [fp]
 80128f2:	4648      	mov	r0, r9
 80128f4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80128f8:	f005 fb12 	bl	8017f20 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80128fc:	2200      	movs	r2, #0
 80128fe:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8012902:	4611      	mov	r1, r2
 8012904:	4628      	mov	r0, r5
 8012906:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801290a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801290e:	f7fa fe90 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
 8012912:	2301      	movs	r3, #1
 8012914:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012918:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801291c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012920:	2b00      	cmp	r3, #0
 8012922:	dd5c      	ble.n	80129de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012924:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012928:	2b00      	cmp	r3, #0
 801292a:	dd58      	ble.n	80129de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801292c:	462a      	mov	r2, r5
 801292e:	ab0a      	add	r3, sp, #40	; 0x28
 8012930:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012934:	6851      	ldr	r1, [r2, #4]
 8012936:	c303      	stmia	r3!, {r0, r1}
 8012938:	4631      	mov	r1, r6
 801293a:	a80a      	add	r0, sp, #40	; 0x28
 801293c:	f7ff fbf6 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8012940:	4b38      	ldr	r3, [pc, #224]	; (8012a24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012942:	2100      	movs	r1, #0
 8012944:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012948:	4b37      	ldr	r3, [pc, #220]	; (8012a28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801294a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801294e:	aa0a      	add	r2, sp, #40	; 0x28
 8012950:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012954:	910c      	str	r1, [sp, #48]	; 0x30
 8012956:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801295a:	ab08      	add	r3, sp, #32
 801295c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012960:	e883 0003 	stmia.w	r3, {r0, r1}
 8012964:	4618      	mov	r0, r3
 8012966:	a90c      	add	r1, sp, #48	; 0x30
 8012968:	f7ff fbe0 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 801296c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801296e:	2b00      	cmp	r3, #0
 8012970:	d13c      	bne.n	80129ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8012972:	2000      	movs	r0, #0
 8012974:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8012978:	2600      	movs	r6, #0
 801297a:	696b      	ldr	r3, [r5, #20]
 801297c:	a908      	add	r1, sp, #32
 801297e:	682a      	ldr	r2, [r5, #0]
 8012980:	4628      	mov	r0, r5
 8012982:	9305      	str	r3, [sp, #20]
 8012984:	616e      	str	r6, [r5, #20]
 8012986:	6892      	ldr	r2, [r2, #8]
 8012988:	4790      	blx	r2
 801298a:	9b05      	ldr	r3, [sp, #20]
 801298c:	4652      	mov	r2, sl
 801298e:	4649      	mov	r1, r9
 8012990:	616b      	str	r3, [r5, #20]
 8012992:	4628      	mov	r0, r5
 8012994:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8012998:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801299c:	f7fa fe49 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
 80129a0:	9a01      	ldr	r2, [sp, #4]
 80129a2:	4b23      	ldr	r3, [pc, #140]	; (8012a30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80129a4:	4620      	mov	r0, r4
 80129a6:	801a      	strh	r2, [r3, #0]
 80129a8:	9a02      	ldr	r2, [sp, #8]
 80129aa:	4b22      	ldr	r3, [pc, #136]	; (8012a34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80129ac:	801a      	strh	r2, [r3, #0]
 80129ae:	9a03      	ldr	r2, [sp, #12]
 80129b0:	4b1c      	ldr	r3, [pc, #112]	; (8012a24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80129b2:	801a      	strh	r2, [r3, #0]
 80129b4:	4b1c      	ldr	r3, [pc, #112]	; (8012a28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80129b6:	9a04      	ldr	r2, [sp, #16]
 80129b8:	801a      	strh	r2, [r3, #0]
 80129ba:	6823      	ldr	r3, [r4, #0]
 80129bc:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80129c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80129c2:	4798      	blx	r3
 80129c4:	6823      	ldr	r3, [r4, #0]
 80129c6:	4620      	mov	r0, r4
 80129c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129ca:	4798      	blx	r3
 80129cc:	b00f      	add	sp, #60	; 0x3c
 80129ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129d2:	883b      	ldrh	r3, [r7, #0]
 80129d4:	f8ab 0000 	strh.w	r0, [fp]
 80129d8:	f8aa 3000 	strh.w	r3, [sl]
 80129dc:	e789      	b.n	80128f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80129de:	462a      	mov	r2, r5
 80129e0:	ab0a      	add	r3, sp, #40	; 0x28
 80129e2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80129e6:	6851      	ldr	r1, [r2, #4]
 80129e8:	c303      	stmia	r3!, {r0, r1}
 80129ea:	e7a9      	b.n	8012940 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80129ec:	a807      	add	r0, sp, #28
 80129ee:	f005 fc9b 	bl	8018328 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80129f2:	4606      	mov	r6, r0
 80129f4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80129f6:	6803      	ldr	r3, [r0, #0]
 80129f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129fa:	4798      	blx	r3
 80129fc:	4286      	cmp	r6, r0
 80129fe:	d1b8      	bne.n	8012972 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012a00:	f7f9 fd6e 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012a04:	6803      	ldr	r3, [r0, #0]
 8012a06:	4606      	mov	r6, r0
 8012a08:	a807      	add	r0, sp, #28
 8012a0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a0c:	9305      	str	r3, [sp, #20]
 8012a0e:	f005 fc8b 	bl	8018328 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012a12:	9b05      	ldr	r3, [sp, #20]
 8012a14:	4601      	mov	r1, r0
 8012a16:	4630      	mov	r0, r6
 8012a18:	4798      	blx	r3
 8012a1a:	f080 0001 	eor.w	r0, r0, #1
 8012a1e:	b2c0      	uxtb	r0, r0
 8012a20:	e7a8      	b.n	8012974 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8012a22:	bf00      	nop
 8012a24:	24002f98 	.word	0x24002f98
 8012a28:	24002f9a 	.word	0x24002f9a
 8012a2c:	24002f9c 	.word	0x24002f9c
 8012a30:	24002f9e 	.word	0x24002f9e
 8012a34:	24002fa0 	.word	0x24002fa0

08012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012a38:	4b07      	ldr	r3, [pc, #28]	; (8012a58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012a3a:	b510      	push	{r4, lr}
 8012a3c:	781b      	ldrb	r3, [r3, #0]
 8012a3e:	4604      	mov	r4, r0
 8012a40:	b13b      	cbz	r3, 8012a52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a42:	6803      	ldr	r3, [r0, #0]
 8012a44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a46:	4798      	blx	r3
 8012a48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012a4a:	4283      	cmp	r3, r0
 8012a4c:	d101      	bne.n	8012a52 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a4e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012a50:	bd10      	pop	{r4, pc}
 8012a52:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012a54:	e7fc      	b.n	8012a50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012a56:	bf00      	nop
 8012a58:	24002fa2 	.word	0x24002fa2

08012a5c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a60:	461d      	mov	r5, r3
 8012a62:	b08a      	sub	sp, #40	; 0x28
 8012a64:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012a68:	4690      	mov	r8, r2
 8012a6a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8012a6e:	2400      	movs	r4, #0
 8012a70:	4607      	mov	r7, r0
 8012a72:	fb06 8505 	mla	r5, r6, r5, r8
 8012a76:	9404      	str	r4, [sp, #16]
 8012a78:	f88d 4020 	strb.w	r4, [sp, #32]
 8012a7c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012a80:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012a84:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012a88:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012a8c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012a90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012a94:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a98:	f7ff ffce 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012a9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012aa0:	6878      	ldr	r0, [r7, #4]
 8012aa2:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012aa6:	a901      	add	r1, sp, #4
 8012aa8:	9505      	str	r5, [sp, #20]
 8012aaa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012aae:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012ab2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012ab6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012aba:	6803      	ldr	r3, [r0, #0]
 8012abc:	685b      	ldr	r3, [r3, #4]
 8012abe:	4798      	blx	r3
 8012ac0:	b00a      	add	sp, #40	; 0x28
 8012ac2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ac6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012ac6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012aca:	b08b      	sub	sp, #44	; 0x2c
 8012acc:	2400      	movs	r4, #0
 8012ace:	4691      	mov	r9, r2
 8012ad0:	461d      	mov	r5, r3
 8012ad2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012ad6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012ada:	4688      	mov	r8, r1
 8012adc:	4607      	mov	r7, r0
 8012ade:	9404      	str	r4, [sp, #16]
 8012ae0:	fb06 9505 	mla	r5, r6, r5, r9
 8012ae4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012ae8:	f7ff ffa6 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012aec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012af0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012af4:	6878      	ldr	r0, [r7, #4]
 8012af6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012afa:	a901      	add	r1, sp, #4
 8012afc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012b00:	9505      	str	r5, [sp, #20]
 8012b02:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012b06:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012b0a:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012b0e:	f8cd 8010 	str.w	r8, [sp, #16]
 8012b12:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012b16:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012b1a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012b1e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012b22:	6803      	ldr	r3, [r0, #0]
 8012b24:	685b      	ldr	r3, [r3, #4]
 8012b26:	4798      	blx	r3
 8012b28:	b00b      	add	sp, #44	; 0x2c
 8012b2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012b30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b34:	b08a      	sub	sp, #40	; 0x28
 8012b36:	4698      	mov	r8, r3
 8012b38:	2300      	movs	r3, #0
 8012b3a:	4606      	mov	r6, r0
 8012b3c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8012b40:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8012b44:	2d0b      	cmp	r5, #11
 8012b46:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8012b4a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8012b4e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012b52:	9304      	str	r3, [sp, #16]
 8012b54:	d137      	bne.n	8012bc6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 8012b56:	2380      	movs	r3, #128	; 0x80
 8012b58:	f88d 0020 	strb.w	r0, [sp, #32]
 8012b5c:	4630      	mov	r0, r6
 8012b5e:	9203      	str	r2, [sp, #12]
 8012b60:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012b64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012b68:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012b6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012b70:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012b74:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012b78:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012b7c:	f7ff ff5c 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012b80:	2c0b      	cmp	r4, #11
 8012b82:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012b86:	f8ad 701e 	strh.w	r7, [sp, #30]
 8012b8a:	bf94      	ite	ls
 8012b8c:	4b19      	ldrls	r3, [pc, #100]	; (8012bf4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8012b8e:	2100      	movhi	r1, #0
 8012b90:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012b94:	bf98      	it	ls
 8012b96:	5d19      	ldrbls	r1, [r3, r4]
 8012b98:	fb02 8307 	mla	r3, r2, r7, r8
 8012b9c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012ba0:	10c9      	asrs	r1, r1, #3
 8012ba2:	fb01 0003 	mla	r0, r1, r3, r0
 8012ba6:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8012baa:	a901      	add	r1, sp, #4
 8012bac:	9005      	str	r0, [sp, #20]
 8012bae:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012bb2:	2300      	movs	r3, #0
 8012bb4:	6870      	ldr	r0, [r6, #4]
 8012bb6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012bba:	6803      	ldr	r3, [r0, #0]
 8012bbc:	685b      	ldr	r3, [r3, #4]
 8012bbe:	4798      	blx	r3
 8012bc0:	b00a      	add	sp, #40	; 0x28
 8012bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012bc6:	2d02      	cmp	r5, #2
 8012bc8:	d109      	bne.n	8012bde <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 8012bca:	28ff      	cmp	r0, #255	; 0xff
 8012bcc:	d105      	bne.n	8012bda <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8012bce:	f1bc 0f00 	cmp.w	ip, #0
 8012bd2:	bf14      	ite	ne
 8012bd4:	2340      	movne	r3, #64	; 0x40
 8012bd6:	2320      	moveq	r3, #32
 8012bd8:	e7be      	b.n	8012b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012bda:	2340      	movs	r3, #64	; 0x40
 8012bdc:	e7bc      	b.n	8012b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012bde:	28ff      	cmp	r0, #255	; 0xff
 8012be0:	d105      	bne.n	8012bee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8012be2:	f1bc 0f00 	cmp.w	ip, #0
 8012be6:	bf14      	ite	ne
 8012be8:	2304      	movne	r3, #4
 8012bea:	2301      	moveq	r3, #1
 8012bec:	e7b4      	b.n	8012b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012bee:	2304      	movs	r3, #4
 8012bf0:	e7b2      	b.n	8012b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012bf2:	bf00      	nop
 8012bf4:	080286f8 	.word	0x080286f8

08012bf8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bfc:	b08b      	sub	sp, #44	; 0x2c
 8012bfe:	461d      	mov	r5, r3
 8012c00:	2400      	movs	r4, #0
 8012c02:	4688      	mov	r8, r1
 8012c04:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8012c08:	4693      	mov	fp, r2
 8012c0a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8012c0e:	4607      	mov	r7, r0
 8012c10:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012c14:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8012c18:	9404      	str	r4, [sp, #16]
 8012c1a:	bf14      	ite	ne
 8012c1c:	2308      	movne	r3, #8
 8012c1e:	2302      	moveq	r3, #2
 8012c20:	fb05 b50a 	mla	r5, r5, sl, fp
 8012c24:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012c28:	f7ff ff06 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012c2c:	2e0b      	cmp	r6, #11
 8012c2e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012c32:	a901      	add	r1, sp, #4
 8012c34:	bf98      	it	ls
 8012c36:	4b13      	ldrls	r3, [pc, #76]	; (8012c84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8012c38:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012c3c:	bf98      	it	ls
 8012c3e:	5d9c      	ldrbls	r4, [r3, r6]
 8012c40:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012c44:	10e4      	asrs	r4, r4, #3
 8012c46:	f8cd 8010 	str.w	r8, [sp, #16]
 8012c4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c4e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012c52:	fb04 0405 	mla	r4, r4, r5, r0
 8012c56:	6878      	ldr	r0, [r7, #4]
 8012c58:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012c5c:	2300      	movs	r3, #0
 8012c5e:	9405      	str	r4, [sp, #20]
 8012c60:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c64:	f88d 9020 	strb.w	r9, [sp, #32]
 8012c68:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012c6c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012c70:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8012c74:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8012c78:	6803      	ldr	r3, [r0, #0]
 8012c7a:	685b      	ldr	r3, [r3, #4]
 8012c7c:	4798      	blx	r3
 8012c7e:	b00b      	add	sp, #44	; 0x2c
 8012c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c84:	080286f8 	.word	0x080286f8

08012c88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c8c:	461e      	mov	r6, r3
 8012c8e:	4b0a      	ldr	r3, [pc, #40]	; (8012cb8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012c90:	460f      	mov	r7, r1
 8012c92:	4690      	mov	r8, r2
 8012c94:	881d      	ldrh	r5, [r3, #0]
 8012c96:	f7f9 fc23 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012c9a:	6803      	ldr	r3, [r0, #0]
 8012c9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c9e:	4798      	blx	r3
 8012ca0:	280b      	cmp	r0, #11
 8012ca2:	bf96      	itet	ls
 8012ca4:	4b05      	ldrls	r3, [pc, #20]	; (8012cbc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012ca6:	2400      	movhi	r4, #0
 8012ca8:	5c1c      	ldrbls	r4, [r3, r0]
 8012caa:	fb08 7005 	mla	r0, r8, r5, r7
 8012cae:	10e4      	asrs	r4, r4, #3
 8012cb0:	fb04 6000 	mla	r0, r4, r0, r6
 8012cb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cb8:	24002f9e 	.word	0x24002f9e
 8012cbc:	080286f8 	.word	0x080286f8

08012cc0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012cc2:	b08b      	sub	sp, #44	; 0x2c
 8012cc4:	461f      	mov	r7, r3
 8012cc6:	4604      	mov	r4, r0
 8012cc8:	4616      	mov	r6, r2
 8012cca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012cce:	2500      	movs	r5, #0
 8012cd0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012cd4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012cd8:	9504      	str	r5, [sp, #16]
 8012cda:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012cde:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012ce2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012ce6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012cea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012cee:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012cf2:	f88d 3020 	strb.w	r3, [sp, #32]
 8012cf6:	f7ff fe9f 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012cfa:	463a      	mov	r2, r7
 8012cfc:	4631      	mov	r1, r6
 8012cfe:	4603      	mov	r3, r0
 8012d00:	4620      	mov	r0, r4
 8012d02:	f7ff ffc1 	bl	8012c88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012d06:	4b0e      	ldr	r3, [pc, #56]	; (8012d40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8012d08:	9005      	str	r0, [sp, #20]
 8012d0a:	881b      	ldrh	r3, [r3, #0]
 8012d0c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012d10:	f7f9 fbe6 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012d14:	6803      	ldr	r3, [r0, #0]
 8012d16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d18:	4798      	blx	r3
 8012d1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012d1c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8012d20:	a901      	add	r1, sp, #4
 8012d22:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012d26:	9304      	str	r3, [sp, #16]
 8012d28:	6860      	ldr	r0, [r4, #4]
 8012d2a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012d2e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8012d32:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012d36:	6803      	ldr	r3, [r0, #0]
 8012d38:	685b      	ldr	r3, [r3, #4]
 8012d3a:	4798      	blx	r3
 8012d3c:	b00b      	add	sp, #44	; 0x2c
 8012d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d40:	24002f9e 	.word	0x24002f9e

08012d44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8012d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d46:	b08d      	sub	sp, #52	; 0x34
 8012d48:	2501      	movs	r5, #1
 8012d4a:	4604      	mov	r4, r0
 8012d4c:	466b      	mov	r3, sp
 8012d4e:	9503      	str	r5, [sp, #12]
 8012d50:	e883 0006 	stmia.w	r3, {r1, r2}
 8012d54:	2300      	movs	r3, #0
 8012d56:	f8bd 6000 	ldrh.w	r6, [sp]
 8012d5a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012d5e:	9306      	str	r3, [sp, #24]
 8012d60:	6803      	ldr	r3, [r0, #0]
 8012d62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d64:	4798      	blx	r3
 8012d66:	463a      	mov	r2, r7
 8012d68:	4631      	mov	r1, r6
 8012d6a:	4603      	mov	r3, r0
 8012d6c:	4620      	mov	r0, r4
 8012d6e:	f7ff ff8b 	bl	8012c88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012d72:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012d74:	9004      	str	r0, [sp, #16]
 8012d76:	9307      	str	r3, [sp, #28]
 8012d78:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012d7c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012d80:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012d84:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012d88:	4b0e      	ldr	r3, [pc, #56]	; (8012dc4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012d8a:	881b      	ldrh	r3, [r3, #0]
 8012d8c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012d90:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012d94:	f7f9 fba4 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012d98:	6803      	ldr	r3, [r0, #0]
 8012d9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d9c:	4798      	blx	r3
 8012d9e:	23ff      	movs	r3, #255	; 0xff
 8012da0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012da4:	a903      	add	r1, sp, #12
 8012da6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012daa:	6860      	ldr	r0, [r4, #4]
 8012dac:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012db0:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012db4:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012db8:	6803      	ldr	r3, [r0, #0]
 8012dba:	685b      	ldr	r3, [r3, #4]
 8012dbc:	4798      	blx	r3
 8012dbe:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012dc0:	b00d      	add	sp, #52	; 0x34
 8012dc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012dc4:	24002f9e 	.word	0x24002f9e

08012dc8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012dcc:	b08c      	sub	sp, #48	; 0x30
 8012dce:	461e      	mov	r6, r3
 8012dd0:	2300      	movs	r3, #0
 8012dd2:	4604      	mov	r4, r0
 8012dd4:	466d      	mov	r5, sp
 8012dd6:	9306      	str	r3, [sp, #24]
 8012dd8:	6803      	ldr	r3, [r0, #0]
 8012dda:	e885 0006 	stmia.w	r5, {r1, r2}
 8012dde:	2501      	movs	r5, #1
 8012de0:	f8bd 7000 	ldrh.w	r7, [sp]
 8012de4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012de8:	9503      	str	r5, [sp, #12]
 8012dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012dec:	4798      	blx	r3
 8012dee:	4642      	mov	r2, r8
 8012df0:	4639      	mov	r1, r7
 8012df2:	4603      	mov	r3, r0
 8012df4:	4620      	mov	r0, r4
 8012df6:	f7ff ff47 	bl	8012c88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012dfa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012dfe:	9004      	str	r0, [sp, #16]
 8012e00:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012e04:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012e08:	9607      	str	r6, [sp, #28]
 8012e0a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012e0e:	4b10      	ldr	r3, [pc, #64]	; (8012e50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8012e10:	881b      	ldrh	r3, [r3, #0]
 8012e12:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012e16:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012e18:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012e1c:	f7f9 fb60 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8012e20:	6803      	ldr	r3, [r0, #0]
 8012e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e24:	4798      	blx	r3
 8012e26:	23ff      	movs	r3, #255	; 0xff
 8012e28:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012e2c:	a903      	add	r1, sp, #12
 8012e2e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012e32:	6860      	ldr	r0, [r4, #4]
 8012e34:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012e38:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012e3c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012e40:	6803      	ldr	r3, [r0, #0]
 8012e42:	685b      	ldr	r3, [r3, #4]
 8012e44:	4798      	blx	r3
 8012e46:	4630      	mov	r0, r6
 8012e48:	b00c      	add	sp, #48	; 0x30
 8012e4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012e4e:	bf00      	nop
 8012e50:	24002f9e 	.word	0x24002f9e

08012e54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8012e54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e56:	b085      	sub	sp, #20
 8012e58:	4605      	mov	r5, r0
 8012e5a:	ac02      	add	r4, sp, #8
 8012e5c:	e884 0006 	stmia.w	r4, {r1, r2}
 8012e60:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8012e64:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012e68:	f7ff fde6 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012e6c:	4631      	mov	r1, r6
 8012e6e:	4603      	mov	r3, r0
 8012e70:	463a      	mov	r2, r7
 8012e72:	4628      	mov	r0, r5
 8012e74:	f7ff ff08 	bl	8012c88 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012e78:	4a05      	ldr	r2, [pc, #20]	; (8012e90 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012e7a:	682b      	ldr	r3, [r5, #0]
 8012e7c:	8812      	ldrh	r2, [r2, #0]
 8012e7e:	9200      	str	r2, [sp, #0]
 8012e80:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8012e82:	4603      	mov	r3, r0
 8012e84:	4628      	mov	r0, r5
 8012e86:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012e8a:	47b0      	blx	r6
 8012e8c:	b005      	add	sp, #20
 8012e8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e90:	24002f9e 	.word	0x24002f9e

08012e94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8012e94:	b570      	push	{r4, r5, r6, lr}
 8012e96:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012e9a:	4604      	mov	r4, r0
 8012e9c:	b19b      	cbz	r3, 8012ec6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012e9e:	2002      	movs	r0, #2
 8012ea0:	f7fd f940 	bl	8010124 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8012ea4:	2300      	movs	r3, #0
 8012ea6:	4620      	mov	r0, r4
 8012ea8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012eac:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012eb0:	6823      	ldr	r3, [r4, #0]
 8012eb2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8012eb6:	f7ff fdbf 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012eba:	4601      	mov	r1, r0
 8012ebc:	4620      	mov	r0, r4
 8012ebe:	462b      	mov	r3, r5
 8012ec0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ec4:	4718      	bx	r3
 8012ec6:	bd70      	pop	{r4, r5, r6, pc}

08012ec8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012ec8:	b538      	push	{r3, r4, r5, lr}
 8012eca:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012ece:	4604      	mov	r4, r0
 8012ed0:	460d      	mov	r5, r1
 8012ed2:	428b      	cmp	r3, r1
 8012ed4:	d006      	beq.n	8012ee4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8012ed6:	6803      	ldr	r3, [r0, #0]
 8012ed8:	b929      	cbnz	r1, 8012ee6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012eda:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012ede:	4798      	blx	r3
 8012ee0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8012ee4:	bd38      	pop	{r3, r4, r5, pc}
 8012ee6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8012eea:	e7f8      	b.n	8012ede <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012eec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012eec:	4b0d      	ldr	r3, [pc, #52]	; (8012f24 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012eee:	b510      	push	{r4, lr}
 8012ef0:	781b      	ldrb	r3, [r3, #0]
 8012ef2:	4604      	mov	r4, r0
 8012ef4:	b95b      	cbnz	r3, 8012f0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012ef6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8012efa:	2b02      	cmp	r3, #2
 8012efc:	d007      	beq.n	8012f0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012efe:	6840      	ldr	r0, [r0, #4]
 8012f00:	f000 f90e 	bl	8013120 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8012f04:	b118      	cbz	r0, 8012f0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012f06:	6862      	ldr	r2, [r4, #4]
 8012f08:	7a53      	ldrb	r3, [r2, #9]
 8012f0a:	2b00      	cmp	r3, #0
 8012f0c:	d0fc      	beq.n	8012f08 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8012f0e:	f7fd fbd1 	bl	80106b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012f12:	4620      	mov	r0, r4
 8012f14:	2100      	movs	r1, #0
 8012f16:	f7ff ffd7 	bl	8012ec8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012f1a:	4620      	mov	r0, r4
 8012f1c:	f7ff fd8c 	bl	8012a38 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012f20:	bd10      	pop	{r4, pc}
 8012f22:	bf00      	nop
 8012f24:	24002fa2 	.word	0x24002fa2

08012f28 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8012f28:	6803      	ldr	r3, [r0, #0]
 8012f2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012f2c:	4718      	bx	r3

08012f2e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012f2e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012f32:	1a13      	subs	r3, r2, r0
 8012f34:	4258      	negs	r0, r3
 8012f36:	4158      	adcs	r0, r3
 8012f38:	4770      	bx	lr

08012f3a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012f3a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012f3e:	1a9b      	subs	r3, r3, r2
 8012f40:	2b00      	cmp	r3, #0
 8012f42:	bfdc      	itt	le
 8012f44:	6882      	ldrle	r2, [r0, #8]
 8012f46:	189b      	addle	r3, r3, r2
 8012f48:	2b01      	cmp	r3, #1
 8012f4a:	bfcc      	ite	gt
 8012f4c:	2000      	movgt	r0, #0
 8012f4e:	2001      	movle	r0, #1
 8012f50:	4770      	bx	lr

08012f52 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012f52:	6902      	ldr	r2, [r0, #16]
 8012f54:	6843      	ldr	r3, [r0, #4]
 8012f56:	2024      	movs	r0, #36	; 0x24
 8012f58:	fb00 3002 	mla	r0, r0, r2, r3
 8012f5c:	4770      	bx	lr

08012f5e <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012f5e:	6803      	ldr	r3, [r0, #0]
 8012f60:	691b      	ldr	r3, [r3, #16]
 8012f62:	4718      	bx	r3

08012f64 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8012f64:	2301      	movs	r3, #1
 8012f66:	b570      	push	{r4, r5, r6, lr}
 8012f68:	7203      	strb	r3, [r0, #8]
 8012f6a:	4604      	mov	r4, r0
 8012f6c:	6840      	ldr	r0, [r0, #4]
 8012f6e:	6803      	ldr	r3, [r0, #0]
 8012f70:	699b      	ldr	r3, [r3, #24]
 8012f72:	4798      	blx	r3
 8012f74:	6803      	ldr	r3, [r0, #0]
 8012f76:	4605      	mov	r5, r0
 8012f78:	2b40      	cmp	r3, #64	; 0x40
 8012f7a:	d00c      	beq.n	8012f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012f7c:	d810      	bhi.n	8012fa0 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012f7e:	2b04      	cmp	r3, #4
 8012f80:	d01d      	beq.n	8012fbe <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012f82:	d804      	bhi.n	8012f8e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8012f84:	2b01      	cmp	r3, #1
 8012f86:	d006      	beq.n	8012f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012f88:	2b02      	cmp	r3, #2
 8012f8a:	d02c      	beq.n	8012fe6 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012f8c:	bd70      	pop	{r4, r5, r6, pc}
 8012f8e:	2b08      	cmp	r3, #8
 8012f90:	d01d      	beq.n	8012fce <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012f92:	2b20      	cmp	r3, #32
 8012f94:	d1fa      	bne.n	8012f8c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8012f96:	6823      	ldr	r3, [r4, #0]
 8012f98:	4620      	mov	r0, r4
 8012f9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012f9c:	4798      	blx	r3
 8012f9e:	e013      	b.n	8012fc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012fa0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8012fa4:	d0f7      	beq.n	8012f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012fa6:	d804      	bhi.n	8012fb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8012fa8:	2b80      	cmp	r3, #128	; 0x80
 8012faa:	d0f4      	beq.n	8012f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012fac:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012fb0:	e7f0      	b.n	8012f94 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012fb2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012fb6:	d0ee      	beq.n	8012f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012fb8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012fbc:	e7e5      	b.n	8012f8a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012fbe:	6823      	ldr	r3, [r4, #0]
 8012fc0:	7f01      	ldrb	r1, [r0, #28]
 8012fc2:	4620      	mov	r0, r4
 8012fc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012fc6:	4798      	blx	r3
 8012fc8:	6823      	ldr	r3, [r4, #0]
 8012fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012fcc:	e006      	b.n	8012fdc <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012fce:	6823      	ldr	r3, [r4, #0]
 8012fd0:	7f01      	ldrb	r1, [r0, #28]
 8012fd2:	4620      	mov	r0, r4
 8012fd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012fd6:	4798      	blx	r3
 8012fd8:	6823      	ldr	r3, [r4, #0]
 8012fda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012fdc:	4629      	mov	r1, r5
 8012fde:	4620      	mov	r0, r4
 8012fe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012fe4:	4718      	bx	r3
 8012fe6:	6823      	ldr	r3, [r4, #0]
 8012fe8:	4620      	mov	r0, r4
 8012fea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012fec:	4798      	blx	r3
 8012fee:	e7f3      	b.n	8012fd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08012ff0 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8012ff0:	4770      	bx	lr

08012ff2 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8012ff2:	4770      	bx	lr

08012ff4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8012ff4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8012ff8:	b510      	push	{r4, lr}
 8012ffa:	1ad2      	subs	r2, r2, r3
 8012ffc:	2a00      	cmp	r2, #0
 8012ffe:	bfdc      	itt	le
 8013000:	6884      	ldrle	r4, [r0, #8]
 8013002:	1912      	addle	r2, r2, r4
 8013004:	2a01      	cmp	r2, #1
 8013006:	dd16      	ble.n	8013036 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8013008:	6842      	ldr	r2, [r0, #4]
 801300a:	2424      	movs	r4, #36	; 0x24
 801300c:	fb04 2303 	mla	r3, r4, r3, r2
 8013010:	f101 0220 	add.w	r2, r1, #32
 8013014:	f851 4b04 	ldr.w	r4, [r1], #4
 8013018:	4291      	cmp	r1, r2
 801301a:	f843 4b04 	str.w	r4, [r3], #4
 801301e:	d1f9      	bne.n	8013014 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013020:	780a      	ldrb	r2, [r1, #0]
 8013022:	701a      	strb	r2, [r3, #0]
 8013024:	68c3      	ldr	r3, [r0, #12]
 8013026:	6882      	ldr	r2, [r0, #8]
 8013028:	f3bf 8f5b 	dmb	ish
 801302c:	3301      	adds	r3, #1
 801302e:	429a      	cmp	r2, r3
 8013030:	bfd8      	it	le
 8013032:	1a9b      	suble	r3, r3, r2
 8013034:	60c3      	str	r3, [r0, #12]
 8013036:	bd10      	pop	{r4, pc}

08013038 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013038:	6903      	ldr	r3, [r0, #16]
 801303a:	6882      	ldr	r2, [r0, #8]
 801303c:	f3bf 8f5b 	dmb	ish
 8013040:	3301      	adds	r3, #1
 8013042:	429a      	cmp	r2, r3
 8013044:	bfd8      	it	le
 8013046:	1a9b      	suble	r3, r3, r2
 8013048:	6103      	str	r3, [r0, #16]
 801304a:	4770      	bx	lr

0801304c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801304c:	b570      	push	{r4, r5, r6, lr}
 801304e:	4604      	mov	r4, r0
 8013050:	460e      	mov	r6, r1
 8013052:	6860      	ldr	r0, [r4, #4]
 8013054:	6803      	ldr	r3, [r0, #0]
 8013056:	685b      	ldr	r3, [r3, #4]
 8013058:	4798      	blx	r3
 801305a:	2800      	cmp	r0, #0
 801305c:	d1f9      	bne.n	8013052 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801305e:	4d0d      	ldr	r5, [pc, #52]	; (8013094 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013060:	6828      	ldr	r0, [r5, #0]
 8013062:	6803      	ldr	r3, [r0, #0]
 8013064:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013066:	4798      	blx	r3
 8013068:	f7fd fb46 	bl	80106f8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801306c:	6828      	ldr	r0, [r5, #0]
 801306e:	2101      	movs	r1, #1
 8013070:	f7ff ff2a 	bl	8012ec8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013074:	6860      	ldr	r0, [r4, #4]
 8013076:	4631      	mov	r1, r6
 8013078:	6803      	ldr	r3, [r0, #0]
 801307a:	689b      	ldr	r3, [r3, #8]
 801307c:	4798      	blx	r3
 801307e:	6823      	ldr	r3, [r4, #0]
 8013080:	4620      	mov	r0, r4
 8013082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013084:	4798      	blx	r3
 8013086:	6828      	ldr	r0, [r5, #0]
 8013088:	6803      	ldr	r3, [r0, #0]
 801308a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801308e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013090:	4718      	bx	r3
 8013092:	bf00      	nop
 8013094:	24002fa4 	.word	0x24002fa4

08013098 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013098:	b508      	push	{r3, lr}
 801309a:	f7fd fb0b 	bl	80106b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801309e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80130a2:	f7fd bb1d 	b.w	80106e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080130a6 <_ZN8touchgfx13DMA_Interface5startEv>:
 80130a6:	b510      	push	{r4, lr}
 80130a8:	4604      	mov	r4, r0
 80130aa:	6840      	ldr	r0, [r0, #4]
 80130ac:	6803      	ldr	r3, [r0, #0]
 80130ae:	681b      	ldr	r3, [r3, #0]
 80130b0:	4798      	blx	r3
 80130b2:	b948      	cbnz	r0, 80130c8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80130b4:	7a63      	ldrb	r3, [r4, #9]
 80130b6:	b13b      	cbz	r3, 80130c8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80130b8:	7a23      	ldrb	r3, [r4, #8]
 80130ba:	b92b      	cbnz	r3, 80130c8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80130bc:	6823      	ldr	r3, [r4, #0]
 80130be:	4620      	mov	r0, r4
 80130c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80130c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80130c6:	4718      	bx	r3
 80130c8:	bd10      	pop	{r4, pc}

080130ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80130ca:	b570      	push	{r4, r5, r6, lr}
 80130cc:	4604      	mov	r4, r0
 80130ce:	6840      	ldr	r0, [r0, #4]
 80130d0:	6803      	ldr	r3, [r0, #0]
 80130d2:	681b      	ldr	r3, [r3, #0]
 80130d4:	4798      	blx	r3
 80130d6:	4605      	mov	r5, r0
 80130d8:	b930      	cbnz	r0, 80130e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80130da:	7a23      	ldrb	r3, [r4, #8]
 80130dc:	b123      	cbz	r3, 80130e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80130de:	6860      	ldr	r0, [r4, #4]
 80130e0:	6803      	ldr	r3, [r0, #0]
 80130e2:	695b      	ldr	r3, [r3, #20]
 80130e4:	4798      	blx	r3
 80130e6:	7225      	strb	r5, [r4, #8]
 80130e8:	6860      	ldr	r0, [r4, #4]
 80130ea:	6803      	ldr	r3, [r0, #0]
 80130ec:	681b      	ldr	r3, [r3, #0]
 80130ee:	4798      	blx	r3
 80130f0:	b928      	cbnz	r0, 80130fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80130f2:	6823      	ldr	r3, [r4, #0]
 80130f4:	4620      	mov	r0, r4
 80130f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80130f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130fc:	4718      	bx	r3
 80130fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013102:	f7fd bb05 	b.w	8010710 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08013108 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8013108:	b510      	push	{r4, lr}
 801310a:	6082      	str	r2, [r0, #8]
 801310c:	2200      	movs	r2, #0
 801310e:	4c03      	ldr	r4, [pc, #12]	; (801311c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013110:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013114:	e9c0 4100 	strd	r4, r1, [r0]
 8013118:	bd10      	pop	{r4, pc}
 801311a:	bf00      	nop
 801311c:	08028834 	.word	0x08028834

08013120 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013120:	6840      	ldr	r0, [r0, #4]
 8013122:	6803      	ldr	r3, [r0, #0]
 8013124:	681b      	ldr	r3, [r3, #0]
 8013126:	4718      	bx	r3

08013128 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013128:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801312c:	4770      	bx	lr

0801312e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801312e:	b510      	push	{r4, lr}
 8013130:	4604      	mov	r4, r0
 8013132:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013134:	b150      	cbz	r0, 801314c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013136:	6803      	ldr	r3, [r0, #0]
 8013138:	68db      	ldr	r3, [r3, #12]
 801313a:	4798      	blx	r3
 801313c:	b130      	cbz	r0, 801314c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801313e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013140:	4621      	mov	r1, r4
 8013142:	6803      	ldr	r3, [r0, #0]
 8013144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013148:	689b      	ldr	r3, [r3, #8]
 801314a:	4718      	bx	r3
 801314c:	bd10      	pop	{r4, pc}

0801314e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801314e:	790b      	ldrb	r3, [r1, #4]
 8013150:	2b00      	cmp	r3, #0
 8013152:	bf0c      	ite	eq
 8013154:	2301      	moveq	r3, #1
 8013156:	2300      	movne	r3, #0
 8013158:	b570      	push	{r4, r5, r6, lr}
 801315a:	4604      	mov	r4, r0
 801315c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8013160:	460e      	mov	r6, r1
 8013162:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8013166:	d109      	bne.n	801317c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8013168:	b14d      	cbz	r5, 801317e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801316a:	7933      	ldrb	r3, [r6, #4]
 801316c:	2b01      	cmp	r3, #1
 801316e:	d10c      	bne.n	801318a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8013170:	6823      	ldr	r3, [r4, #0]
 8013172:	4620      	mov	r0, r4
 8013174:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8013176:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801317a:	4718      	bx	r3
 801317c:	b12d      	cbz	r5, 801318a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801317e:	6823      	ldr	r3, [r4, #0]
 8013180:	4620      	mov	r0, r4
 8013182:	695b      	ldr	r3, [r3, #20]
 8013184:	4798      	blx	r3
 8013186:	2d00      	cmp	r5, #0
 8013188:	d1ef      	bne.n	801316a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801318a:	bd70      	pop	{r4, r5, r6, pc}

0801318c <_ZN8touchgfx8TextArea8setWidthEs>:
 801318c:	b530      	push	{r4, r5, lr}
 801318e:	b085      	sub	sp, #20
 8013190:	6803      	ldr	r3, [r0, #0]
 8013192:	4604      	mov	r4, r0
 8013194:	8101      	strh	r1, [r0, #8]
 8013196:	466d      	mov	r5, sp
 8013198:	4601      	mov	r1, r0
 801319a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801319e:	343c      	adds	r4, #60	; 0x3c
 80131a0:	4628      	mov	r0, r5
 80131a2:	4798      	blx	r3
 80131a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80131a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80131ac:	b005      	add	sp, #20
 80131ae:	bd30      	pop	{r4, r5, pc}

080131b0 <_ZN8touchgfx8TextArea9setHeightEs>:
 80131b0:	b530      	push	{r4, r5, lr}
 80131b2:	b085      	sub	sp, #20
 80131b4:	6803      	ldr	r3, [r0, #0]
 80131b6:	4604      	mov	r4, r0
 80131b8:	8141      	strh	r1, [r0, #10]
 80131ba:	466d      	mov	r5, sp
 80131bc:	4601      	mov	r1, r0
 80131be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80131c2:	343c      	adds	r4, #60	; 0x3c
 80131c4:	4628      	mov	r0, r5
 80131c6:	4798      	blx	r3
 80131c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80131cc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80131d0:	b005      	add	sp, #20
 80131d2:	bd30      	pop	{r4, r5, pc}

080131d4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80131d4:	2200      	movs	r2, #0
 80131d6:	8002      	strh	r2, [r0, #0]
 80131d8:	8042      	strh	r2, [r0, #2]
 80131da:	8082      	strh	r2, [r0, #4]
 80131dc:	80c2      	strh	r2, [r0, #6]
 80131de:	4770      	bx	lr

080131e0 <_ZN8touchgfx8TextArea8setAlphaEh>:
 80131e0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 80131e4:	4770      	bx	lr
	...

080131e8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 80131e8:	b570      	push	{r4, r5, r6, lr}
 80131ea:	6803      	ldr	r3, [r0, #0]
 80131ec:	4604      	mov	r4, r0
 80131ee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80131f0:	460d      	mov	r5, r1
 80131f2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 80131f4:	4b08      	ldr	r3, [pc, #32]	; (8013218 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 80131f6:	681b      	ldr	r3, [r3, #0]
 80131f8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80131fc:	4b07      	ldr	r3, [pc, #28]	; (801321c <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 80131fe:	681b      	ldr	r3, [r3, #0]
 8013200:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8013204:	6803      	ldr	r3, [r0, #0]
 8013206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013208:	4798      	blx	r3
 801320a:	1a29      	subs	r1, r5, r0
 801320c:	4633      	mov	r3, r6
 801320e:	4620      	mov	r0, r4
 8013210:	b209      	sxth	r1, r1
 8013212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013216:	4718      	bx	r3
 8013218:	24002ff4 	.word	0x24002ff4
 801321c:	24002ffc 	.word	0x24002ffc

08013220 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8013220:	b570      	push	{r4, r5, r6, lr}
 8013222:	6803      	ldr	r3, [r0, #0]
 8013224:	4604      	mov	r4, r0
 8013226:	4615      	mov	r5, r2
 8013228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801322a:	4798      	blx	r3
 801322c:	6823      	ldr	r3, [r4, #0]
 801322e:	4629      	mov	r1, r5
 8013230:	4620      	mov	r0, r4
 8013232:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013234:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013238:	4718      	bx	r3

0801323a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 801323a:	2000      	movs	r0, #0
 801323c:	4770      	bx	lr

0801323e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 801323e:	2000      	movs	r0, #0
 8013240:	4770      	bx	lr
	...

08013244 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8013244:	4b07      	ldr	r3, [pc, #28]	; (8013264 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8013246:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013248:	881b      	ldrh	r3, [r3, #0]
 801324a:	4293      	cmp	r3, r2
 801324c:	bf81      	itttt	hi
 801324e:	4b06      	ldrhi	r3, [pc, #24]	; (8013268 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013250:	681b      	ldrhi	r3, [r3, #0]
 8013252:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8013256:	7858      	ldrbhi	r0, [r3, #1]
 8013258:	bf8c      	ite	hi
 801325a:	f000 0003 	andhi.w	r0, r0, #3
 801325e:	2000      	movls	r0, #0
 8013260:	4770      	bx	lr
 8013262:	bf00      	nop
 8013264:	24002ff8 	.word	0x24002ff8
 8013268:	24002ff4 	.word	0x24002ff4

0801326c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 801326c:	4b11      	ldr	r3, [pc, #68]	; (80132b4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801326e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013272:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013274:	4604      	mov	r4, r0
 8013276:	881b      	ldrh	r3, [r3, #0]
 8013278:	428b      	cmp	r3, r1
 801327a:	d918      	bls.n	80132ae <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 801327c:	6803      	ldr	r3, [r0, #0]
 801327e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8013280:	4b0d      	ldr	r3, [pc, #52]	; (80132b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8013282:	6818      	ldr	r0, [r3, #0]
 8013284:	f7fc fac8 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 8013288:	6823      	ldr	r3, [r4, #0]
 801328a:	4606      	mov	r6, r0
 801328c:	4620      	mov	r0, r4
 801328e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013290:	4798      	blx	r3
 8013292:	6823      	ldr	r3, [r4, #0]
 8013294:	4607      	mov	r7, r0
 8013296:	4620      	mov	r0, r4
 8013298:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801329c:	4798      	blx	r3
 801329e:	463a      	mov	r2, r7
 80132a0:	4603      	mov	r3, r0
 80132a2:	4631      	mov	r1, r6
 80132a4:	4620      	mov	r0, r4
 80132a6:	46ac      	mov	ip, r5
 80132a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80132ac:	4760      	bx	ip
 80132ae:	2000      	movs	r0, #0
 80132b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132b4:	24002ff8 	.word	0x24002ff8
 80132b8:	24003000 	.word	0x24003000

080132bc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80132bc:	4b18      	ldr	r3, [pc, #96]	; (8013320 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80132be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80132c2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80132c4:	4604      	mov	r4, r0
 80132c6:	881b      	ldrh	r3, [r3, #0]
 80132c8:	428b      	cmp	r3, r1
 80132ca:	d926      	bls.n	801331a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80132cc:	4b15      	ldr	r3, [pc, #84]	; (8013324 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80132ce:	681b      	ldr	r3, [r3, #0]
 80132d0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80132d4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80132d8:	4b13      	ldr	r3, [pc, #76]	; (8013328 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80132da:	7855      	ldrb	r5, [r2, #1]
 80132dc:	681b      	ldr	r3, [r3, #0]
 80132de:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80132e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80132e6:	6833      	ldr	r3, [r6, #0]
 80132e8:	69df      	ldr	r7, [r3, #28]
 80132ea:	4b10      	ldr	r3, [pc, #64]	; (801332c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80132ec:	6818      	ldr	r0, [r3, #0]
 80132ee:	f7fc fa93 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 80132f2:	6823      	ldr	r3, [r4, #0]
 80132f4:	4680      	mov	r8, r0
 80132f6:	4620      	mov	r0, r4
 80132f8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132fa:	4798      	blx	r3
 80132fc:	6823      	ldr	r3, [r4, #0]
 80132fe:	4681      	mov	r9, r0
 8013300:	4620      	mov	r0, r4
 8013302:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013306:	4798      	blx	r3
 8013308:	464b      	mov	r3, r9
 801330a:	9000      	str	r0, [sp, #0]
 801330c:	4642      	mov	r2, r8
 801330e:	4629      	mov	r1, r5
 8013310:	4630      	mov	r0, r6
 8013312:	47b8      	blx	r7
 8013314:	b003      	add	sp, #12
 8013316:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801331a:	2000      	movs	r0, #0
 801331c:	e7fa      	b.n	8013314 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801331e:	bf00      	nop
 8013320:	24002ff8 	.word	0x24002ff8
 8013324:	24002ff4 	.word	0x24002ff4
 8013328:	24002ffc 	.word	0x24002ffc
 801332c:	24003000 	.word	0x24003000

08013330 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013330:	b40e      	push	{r1, r2, r3}
 8013332:	4b30      	ldr	r3, [pc, #192]	; (80133f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013338:	881a      	ldrh	r2, [r3, #0]
 801333a:	b09d      	sub	sp, #116	; 0x74
 801333c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801333e:	4604      	mov	r4, r0
 8013340:	429a      	cmp	r2, r3
 8013342:	d954      	bls.n	80133ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013344:	aa26      	add	r2, sp, #152	; 0x98
 8013346:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80133f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801334a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80133fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801334e:	9202      	str	r2, [sp, #8]
 8013350:	f8d9 2000 	ldr.w	r2, [r9]
 8013354:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013358:	f8d8 3000 	ldr.w	r3, [r8]
 801335c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013360:	682b      	ldr	r3, [r5, #0]
 8013362:	4628      	mov	r0, r5
 8013364:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013366:	4798      	blx	r3
 8013368:	4606      	mov	r6, r0
 801336a:	b207      	sxth	r7, r0
 801336c:	a803      	add	r0, sp, #12
 801336e:	f003 fe59 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8013372:	682b      	ldr	r3, [r5, #0]
 8013374:	4628      	mov	r0, r5
 8013376:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013378:	4798      	blx	r3
 801337a:	682b      	ldr	r3, [r5, #0]
 801337c:	4682      	mov	sl, r0
 801337e:	4628      	mov	r0, r5
 8013380:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013382:	4798      	blx	r3
 8013384:	4653      	mov	r3, sl
 8013386:	9000      	str	r0, [sp, #0]
 8013388:	a803      	add	r0, sp, #12
 801338a:	9a02      	ldr	r2, [sp, #8]
 801338c:	9925      	ldr	r1, [sp, #148]	; 0x94
 801338e:	f003 fea4 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013392:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013394:	f8d9 3000 	ldr.w	r3, [r9]
 8013398:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 801339c:	8925      	ldrh	r5, [r4, #8]
 801339e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80133a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80133a6:	eba5 050c 	sub.w	r5, r5, ip
 80133aa:	784a      	ldrb	r2, [r1, #1]
 80133ac:	f8d8 3000 	ldr.w	r3, [r8]
 80133b0:	b22d      	sxth	r5, r5
 80133b2:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80133b6:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80133ba:	9500      	str	r5, [sp, #0]
 80133bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80133c0:	a803      	add	r0, sp, #12
 80133c2:	f001 fcdd 	bl	8014d80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80133c6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80133ca:	b203      	sxth	r3, r0
 80133cc:	18b9      	adds	r1, r7, r2
 80133ce:	2900      	cmp	r1, #0
 80133d0:	dd0b      	ble.n	80133ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80133d2:	3b01      	subs	r3, #1
 80133d4:	fb13 f302 	smulbb	r3, r3, r2
 80133d8:	fb16 3300 	smlabb	r3, r6, r0, r3
 80133dc:	b21f      	sxth	r7, r3
 80133de:	4638      	mov	r0, r7
 80133e0:	b01d      	add	sp, #116	; 0x74
 80133e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133e6:	b003      	add	sp, #12
 80133e8:	4770      	bx	lr
 80133ea:	2b00      	cmp	r3, #0
 80133ec:	dcf7      	bgt.n	80133de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80133ee:	2700      	movs	r7, #0
 80133f0:	e7f5      	b.n	80133de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80133f2:	bf00      	nop
 80133f4:	24002ff8 	.word	0x24002ff8
 80133f8:	24002ff4 	.word	0x24002ff4
 80133fc:	24002ffc 	.word	0x24002ffc

08013400 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8013400:	4bbd      	ldr	r3, [pc, #756]	; (80136f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013402:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013406:	460c      	mov	r4, r1
 8013408:	881b      	ldrh	r3, [r3, #0]
 801340a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 801340c:	b0a9      	sub	sp, #164	; 0xa4
 801340e:	4680      	mov	r8, r0
 8013410:	428b      	cmp	r3, r1
 8013412:	d809      	bhi.n	8013428 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013414:	2300      	movs	r3, #0
 8013416:	f04f 32ff 	mov.w	r2, #4294967295
 801341a:	6083      	str	r3, [r0, #8]
 801341c:	e9c0 3200 	strd	r3, r2, [r0]
 8013420:	4640      	mov	r0, r8
 8013422:	b029      	add	sp, #164	; 0xa4
 8013424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013428:	4eb4      	ldr	r6, [pc, #720]	; (80136fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801342a:	6833      	ldr	r3, [r6, #0]
 801342c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013430:	4bb3      	ldr	r3, [pc, #716]	; (8013700 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8013432:	681b      	ldr	r3, [r3, #0]
 8013434:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013438:	4bb2      	ldr	r3, [pc, #712]	; (8013704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801343a:	6818      	ldr	r0, [r3, #0]
 801343c:	f7fc f9ec 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 8013440:	682b      	ldr	r3, [r5, #0]
 8013442:	4681      	mov	r9, r0
 8013444:	4628      	mov	r0, r5
 8013446:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013448:	4798      	blx	r3
 801344a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 801344c:	b203      	sxth	r3, r0
 801344e:	4682      	mov	sl, r0
 8013450:	4407      	add	r7, r0
 8013452:	a80f      	add	r0, sp, #60	; 0x3c
 8013454:	9304      	str	r3, [sp, #16]
 8013456:	b2bb      	uxth	r3, r7
 8013458:	9303      	str	r3, [sp, #12]
 801345a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801345e:	2b00      	cmp	r3, #0
 8013460:	f040 80a5 	bne.w	80135ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 8013464:	f003 fdde 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8013468:	682b      	ldr	r3, [r5, #0]
 801346a:	4628      	mov	r0, r5
 801346c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801346e:	4798      	blx	r3
 8013470:	682b      	ldr	r3, [r5, #0]
 8013472:	4606      	mov	r6, r0
 8013474:	4628      	mov	r0, r5
 8013476:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013478:	4798      	blx	r3
 801347a:	6823      	ldr	r3, [r4, #0]
 801347c:	4607      	mov	r7, r0
 801347e:	4620      	mov	r0, r4
 8013480:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013482:	4798      	blx	r3
 8013484:	6823      	ldr	r3, [r4, #0]
 8013486:	4683      	mov	fp, r0
 8013488:	4620      	mov	r0, r4
 801348a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801348e:	4798      	blx	r3
 8013490:	463b      	mov	r3, r7
 8013492:	4649      	mov	r1, r9
 8013494:	4632      	mov	r2, r6
 8013496:	2600      	movs	r6, #0
 8013498:	e9cd b000 	strd	fp, r0, [sp]
 801349c:	a80f      	add	r0, sp, #60	; 0x3c
 801349e:	4637      	mov	r7, r6
 80134a0:	f003 fe30 	bl	8017104 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80134a4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80134a8:	f8df b250 	ldr.w	fp, [pc, #592]	; 80136fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80134ac:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80134b0:	bf0c      	ite	eq
 80134b2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80134b6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80134ba:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80134bc:	4629      	mov	r1, r5
 80134be:	f8db 3000 	ldr.w	r3, [fp]
 80134c2:	a80f      	add	r0, sp, #60	; 0x3c
 80134c4:	3701      	adds	r7, #1
 80134c6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80134ca:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80134ce:	b2bf      	uxth	r7, r7
 80134d0:	785b      	ldrb	r3, [r3, #1]
 80134d2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80134d6:	f001 f96e 	bl	80147b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80134da:	9b03      	ldr	r3, [sp, #12]
 80134dc:	4286      	cmp	r6, r0
 80134de:	eba9 0903 	sub.w	r9, r9, r3
 80134e2:	bfb8      	it	lt
 80134e4:	4606      	movlt	r6, r0
 80134e6:	a80f      	add	r0, sp, #60	; 0x3c
 80134e8:	fa0f f989 	sxth.w	r9, r9
 80134ec:	b236      	sxth	r6, r6
 80134ee:	f003 fdc0 	bl	8017072 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80134f2:	b918      	cbnz	r0, 80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80134f4:	7a2b      	ldrb	r3, [r5, #8]
 80134f6:	444b      	add	r3, r9
 80134f8:	2b00      	cmp	r3, #0
 80134fa:	dcde      	bgt.n	80134ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 80134fc:	9b03      	ldr	r3, [sp, #12]
 80134fe:	4620      	mov	r0, r4
 8013500:	9a04      	ldr	r2, [sp, #16]
 8013502:	fb13 f707 	smulbb	r7, r3, r7
 8013506:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013508:	f895 9009 	ldrb.w	r9, [r5, #9]
 801350c:	1aff      	subs	r7, r7, r3
 801350e:	b2bf      	uxth	r7, r7
 8013510:	b23b      	sxth	r3, r7
 8013512:	429a      	cmp	r2, r3
 8013514:	bfa8      	it	ge
 8013516:	4657      	movge	r7, sl
 8013518:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801351c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013520:	6823      	ldr	r3, [r4, #0]
 8013522:	444f      	add	r7, r9
 8013524:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013526:	bf08      	it	eq
 8013528:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801352c:	fa1f f987 	uxth.w	r9, r7
 8013530:	bf18      	it	ne
 8013532:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8013536:	4798      	blx	r3
 8013538:	2801      	cmp	r0, #1
 801353a:	fa0f f789 	sxth.w	r7, r9
 801353e:	b2b3      	uxth	r3, r6
 8013540:	f000 80e2 	beq.w	8013708 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013544:	2802      	cmp	r0, #2
 8013546:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 801354a:	f000 80e3 	beq.w	8013714 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801354e:	7aea      	ldrb	r2, [r5, #11]
 8013550:	b236      	sxth	r6, r6
 8013552:	7b2d      	ldrb	r5, [r5, #12]
 8013554:	1ab6      	subs	r6, r6, r2
 8013556:	442a      	add	r2, r5
 8013558:	fa1f fa86 	uxth.w	sl, r6
 801355c:	4413      	add	r3, r2
 801355e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8013562:	fa0f fb8a 	sxth.w	fp, sl
 8013566:	b29b      	uxth	r3, r3
 8013568:	2a02      	cmp	r2, #2
 801356a:	b21e      	sxth	r6, r3
 801356c:	f000 80d6 	beq.w	801371c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8013570:	2a03      	cmp	r2, #3
 8013572:	f000 80de 	beq.w	8013732 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8013576:	2a01      	cmp	r2, #1
 8013578:	f040 80e6 	bne.w	8013748 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801357c:	8925      	ldrh	r5, [r4, #8]
 801357e:	4633      	mov	r3, r6
 8013580:	463e      	mov	r6, r7
 8013582:	eba5 0909 	sub.w	r9, r5, r9
 8013586:	461f      	mov	r7, r3
 8013588:	465d      	mov	r5, fp
 801358a:	fa0f fb89 	sxth.w	fp, r9
 801358e:	4b5d      	ldr	r3, [pc, #372]	; (8013704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013590:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013592:	6818      	ldr	r0, [r3, #0]
 8013594:	f7fc f940 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 8013598:	f8a8 b000 	strh.w	fp, [r8]
 801359c:	f8a8 5002 	strh.w	r5, [r8, #2]
 80135a0:	f8a8 6004 	strh.w	r6, [r8, #4]
 80135a4:	f8a8 7006 	strh.w	r7, [r8, #6]
 80135a8:	f8c8 0008 	str.w	r0, [r8, #8]
 80135ac:	e738      	b.n	8013420 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80135ae:	f003 fd39 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 80135b2:	682b      	ldr	r3, [r5, #0]
 80135b4:	4628      	mov	r0, r5
 80135b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80135b8:	4798      	blx	r3
 80135ba:	682b      	ldr	r3, [r5, #0]
 80135bc:	4607      	mov	r7, r0
 80135be:	4628      	mov	r0, r5
 80135c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80135c2:	4798      	blx	r3
 80135c4:	6823      	ldr	r3, [r4, #0]
 80135c6:	4683      	mov	fp, r0
 80135c8:	4620      	mov	r0, r4
 80135ca:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80135cc:	4798      	blx	r3
 80135ce:	6822      	ldr	r2, [r4, #0]
 80135d0:	9005      	str	r0, [sp, #20]
 80135d2:	4620      	mov	r0, r4
 80135d4:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80135d8:	4790      	blx	r2
 80135da:	9b05      	ldr	r3, [sp, #20]
 80135dc:	463a      	mov	r2, r7
 80135de:	4649      	mov	r1, r9
 80135e0:	9001      	str	r0, [sp, #4]
 80135e2:	a80f      	add	r0, sp, #60	; 0x3c
 80135e4:	9300      	str	r3, [sp, #0]
 80135e6:	465b      	mov	r3, fp
 80135e8:	f003 fd8c 	bl	8017104 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80135ec:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80135f0:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80135f4:	af0f      	add	r7, sp, #60	; 0x3c
 80135f6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80135fa:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80135fe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013600:	bf0a      	itet	eq
 8013602:	464a      	moveq	r2, r9
 8013604:	461a      	movne	r2, r3
 8013606:	4699      	moveq	r9, r3
 8013608:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801360c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013610:	1ad2      	subs	r2, r2, r3
 8013612:	6833      	ldr	r3, [r6, #0]
 8013614:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013618:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801361c:	7859      	ldrb	r1, [r3, #1]
 801361e:	2300      	movs	r3, #0
 8013620:	9707      	str	r7, [sp, #28]
 8013622:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013626:	f8ad 3018 	strh.w	r3, [sp, #24]
 801362a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801362e:	f88d 1020 	strb.w	r1, [sp, #32]
 8013632:	9509      	str	r5, [sp, #36]	; 0x24
 8013634:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013638:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801363c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8013640:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013644:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013648:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801364c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013650:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013654:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013658:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801365c:	b350      	cbz	r0, 80136b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801365e:	682b      	ldr	r3, [r5, #0]
 8013660:	4628      	mov	r0, r5
 8013662:	695b      	ldr	r3, [r3, #20]
 8013664:	4798      	blx	r3
 8013666:	4607      	mov	r7, r0
 8013668:	b320      	cbz	r0, 80136b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801366a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801366c:	4639      	mov	r1, r7
 801366e:	6803      	ldr	r3, [r0, #0]
 8013670:	68db      	ldr	r3, [r3, #12]
 8013672:	4798      	blx	r3
 8013674:	4606      	mov	r6, r0
 8013676:	b1e8      	cbz	r0, 80136b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8013678:	7b43      	ldrb	r3, [r0, #13]
 801367a:	7a82      	ldrb	r2, [r0, #10]
 801367c:	005b      	lsls	r3, r3, #1
 801367e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013682:	4313      	orrs	r3, r2
 8013684:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013688:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801368c:	2b06      	cmp	r3, #6
 801368e:	d111      	bne.n	80136b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8013690:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013692:	4632      	mov	r2, r6
 8013694:	4639      	mov	r1, r7
 8013696:	6803      	ldr	r3, [r0, #0]
 8013698:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801369a:	4798      	blx	r3
 801369c:	7b73      	ldrb	r3, [r6, #13]
 801369e:	005b      	lsls	r3, r3, #1
 80136a0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80136a4:	7ab3      	ldrb	r3, [r6, #10]
 80136a6:	4313      	orrs	r3, r2
 80136a8:	4418      	add	r0, r3
 80136aa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80136ae:	4418      	add	r0, r3
 80136b0:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80136b4:	2600      	movs	r6, #0
 80136b6:	4637      	mov	r7, r6
 80136b8:	a806      	add	r0, sp, #24
 80136ba:	3701      	adds	r7, #1
 80136bc:	f001 fa5d 	bl	8014b7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80136c0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80136c4:	9b03      	ldr	r3, [sp, #12]
 80136c6:	b2bf      	uxth	r7, r7
 80136c8:	4286      	cmp	r6, r0
 80136ca:	eba9 0903 	sub.w	r9, r9, r3
 80136ce:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80136d2:	bfb8      	it	lt
 80136d4:	4606      	movlt	r6, r0
 80136d6:	fa0f f989 	sxth.w	r9, r9
 80136da:	b236      	sxth	r6, r6
 80136dc:	2b00      	cmp	r3, #0
 80136de:	f43f af0d 	beq.w	80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80136e2:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80136e6:	2b00      	cmp	r3, #0
 80136e8:	f47f af08 	bne.w	80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80136ec:	7a2b      	ldrb	r3, [r5, #8]
 80136ee:	444b      	add	r3, r9
 80136f0:	2b00      	cmp	r3, #0
 80136f2:	dce1      	bgt.n	80136b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 80136f4:	e702      	b.n	80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80136f6:	bf00      	nop
 80136f8:	24002ff8 	.word	0x24002ff8
 80136fc:	24002ff4 	.word	0x24002ff4
 8013700:	24002ffc 	.word	0x24002ffc
 8013704:	24003000 	.word	0x24003000
 8013708:	ebaa 0606 	sub.w	r6, sl, r6
 801370c:	2002      	movs	r0, #2
 801370e:	fb96 f6f0 	sdiv	r6, r6, r0
 8013712:	e71c      	b.n	801354e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8013714:	441e      	add	r6, r3
 8013716:	ebaa 0606 	sub.w	r6, sl, r6
 801371a:	e718      	b.n	801354e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 801371c:	8925      	ldrh	r5, [r4, #8]
 801371e:	1aed      	subs	r5, r5, r3
 8013720:	eba5 050a 	sub.w	r5, r5, sl
 8013724:	fa0f fb85 	sxth.w	fp, r5
 8013728:	8965      	ldrh	r5, [r4, #10]
 801372a:	eba5 0509 	sub.w	r5, r5, r9
 801372e:	b22d      	sxth	r5, r5
 8013730:	e72d      	b.n	801358e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8013732:	8965      	ldrh	r5, [r4, #10]
 8013734:	f04f 0b00 	mov.w	fp, #0
 8013738:	1aed      	subs	r5, r5, r3
 801373a:	4633      	mov	r3, r6
 801373c:	463e      	mov	r6, r7
 801373e:	eba5 050a 	sub.w	r5, r5, sl
 8013742:	461f      	mov	r7, r3
 8013744:	b22d      	sxth	r5, r5
 8013746:	e722      	b.n	801358e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8013748:	2500      	movs	r5, #0
 801374a:	e720      	b.n	801358e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0801374c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801374c:	b513      	push	{r0, r1, r4, lr}
 801374e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8013752:	4604      	mov	r4, r0
 8013754:	b1fb      	cbz	r3, 8013796 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013756:	4b16      	ldr	r3, [pc, #88]	; (80137b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013758:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801375a:	881b      	ldrh	r3, [r3, #0]
 801375c:	428b      	cmp	r3, r1
 801375e:	d91a      	bls.n	8013796 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013760:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013764:	2b00      	cmp	r3, #0
 8013766:	dd16      	ble.n	8013796 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013768:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801376c:	2b00      	cmp	r3, #0
 801376e:	dd12      	ble.n	8013796 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013770:	4b10      	ldr	r3, [pc, #64]	; (80137b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8013772:	6818      	ldr	r0, [r3, #0]
 8013774:	f7fc f850 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 8013778:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801377c:	6822      	ldr	r2, [r4, #0]
 801377e:	2b00      	cmp	r3, #0
 8013780:	db06      	blt.n	8013790 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013782:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013786:	2b00      	cmp	r3, #0
 8013788:	db02      	blt.n	8013790 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801378a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801378c:	4298      	cmp	r0, r3
 801378e:	d004      	beq.n	801379a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8013790:	6953      	ldr	r3, [r2, #20]
 8013792:	4620      	mov	r0, r4
 8013794:	4798      	blx	r3
 8013796:	b002      	add	sp, #8
 8013798:	bd10      	pop	{r4, pc}
 801379a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801379e:	466b      	mov	r3, sp
 80137a0:	6912      	ldr	r2, [r2, #16]
 80137a2:	c903      	ldmia	r1, {r0, r1}
 80137a4:	e883 0003 	stmia.w	r3, {r0, r1}
 80137a8:	4619      	mov	r1, r3
 80137aa:	4620      	mov	r0, r4
 80137ac:	4790      	blx	r2
 80137ae:	e7f2      	b.n	8013796 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80137b0:	24002ff8 	.word	0x24002ff8
 80137b4:	24003000 	.word	0x24003000

080137b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80137b8:	4b45      	ldr	r3, [pc, #276]	; (80138d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80137ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80137be:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80137c0:	b08e      	sub	sp, #56	; 0x38
 80137c2:	881b      	ldrh	r3, [r3, #0]
 80137c4:	4604      	mov	r4, r0
 80137c6:	4293      	cmp	r3, r2
 80137c8:	d97e      	bls.n	80138c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137ca:	6808      	ldr	r0, [r1, #0]
 80137cc:	ab05      	add	r3, sp, #20
 80137ce:	6849      	ldr	r1, [r1, #4]
 80137d0:	4d40      	ldr	r5, [pc, #256]	; (80138d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80137d2:	c303      	stmia	r3!, {r0, r1}
 80137d4:	4611      	mov	r1, r2
 80137d6:	6828      	ldr	r0, [r5, #0]
 80137d8:	f7fc f81e 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 80137dc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80137e0:	2b00      	cmp	r3, #0
 80137e2:	db11      	blt.n	8013808 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137e4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80137e8:	2b00      	cmp	r3, #0
 80137ea:	db0d      	blt.n	8013808 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137ec:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80137ee:	4298      	cmp	r0, r3
 80137f0:	d10a      	bne.n	8013808 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137f2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80137f6:	ab09      	add	r3, sp, #36	; 0x24
 80137f8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80137fc:	e883 0003 	stmia.w	r3, {r0, r1}
 8013800:	4619      	mov	r1, r3
 8013802:	a805      	add	r0, sp, #20
 8013804:	f7fe fc92 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8013808:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801380c:	2b00      	cmp	r3, #0
 801380e:	dd5b      	ble.n	80138c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013810:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013814:	2b00      	cmp	r3, #0
 8013816:	dd57      	ble.n	80138c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013818:	4f2f      	ldr	r7, [pc, #188]	; (80138d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801381a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801381c:	683b      	ldr	r3, [r7, #0]
 801381e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8013822:	4b2e      	ldr	r3, [pc, #184]	; (80138dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013824:	681b      	ldr	r3, [r3, #0]
 8013826:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801382a:	2e00      	cmp	r6, #0
 801382c:	d04c      	beq.n	80138c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801382e:	6823      	ldr	r3, [r4, #0]
 8013830:	4620      	mov	r0, r4
 8013832:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013836:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013838:	4798      	blx	r3
 801383a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801383c:	683b      	ldr	r3, [r7, #0]
 801383e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8013842:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013846:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801384a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 801384e:	785b      	ldrb	r3, [r3, #1]
 8013850:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013854:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013858:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801385a:	9609      	str	r6, [sp, #36]	; 0x24
 801385c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013860:	4b1f      	ldr	r3, [pc, #124]	; (80138e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8013862:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8013866:	681b      	ldr	r3, [r3, #0]
 8013868:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 801386c:	910b      	str	r1, [sp, #44]	; 0x2c
 801386e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8013872:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8013876:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801387a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801387e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013882:	b10a      	cbz	r2, 8013888 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013884:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8013886:	b906      	cbnz	r6, 801388a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8013888:	689e      	ldr	r6, [r3, #8]
 801388a:	af07      	add	r7, sp, #28
 801388c:	4621      	mov	r1, r4
 801388e:	4638      	mov	r0, r7
 8013890:	f003 f812 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013894:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013896:	6828      	ldr	r0, [r5, #0]
 8013898:	f7fb ffbe 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 801389c:	6823      	ldr	r3, [r4, #0]
 801389e:	4605      	mov	r5, r0
 80138a0:	4620      	mov	r0, r4
 80138a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80138a4:	4798      	blx	r3
 80138a6:	6823      	ldr	r3, [r4, #0]
 80138a8:	4680      	mov	r8, r0
 80138aa:	4620      	mov	r0, r4
 80138ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80138b0:	4798      	blx	r3
 80138b2:	ab09      	add	r3, sp, #36	; 0x24
 80138b4:	9501      	str	r5, [sp, #4]
 80138b6:	9300      	str	r3, [sp, #0]
 80138b8:	ab05      	add	r3, sp, #20
 80138ba:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80138be:	4630      	mov	r0, r6
 80138c0:	e897 0006 	ldmia.w	r7, {r1, r2}
 80138c4:	f7fb ff39 	bl	800f73a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80138c8:	b00e      	add	sp, #56	; 0x38
 80138ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80138ce:	bf00      	nop
 80138d0:	24002ff8 	.word	0x24002ff8
 80138d4:	24003000 	.word	0x24003000
 80138d8:	24002ff4 	.word	0x24002ff4
 80138dc:	24002ffc 	.word	0x24002ffc
 80138e0:	24002fa4 	.word	0x24002fa4

080138e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80138e4:	b538      	push	{r3, r4, r5, lr}
 80138e6:	4b0e      	ldr	r3, [pc, #56]	; (8013920 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80138e8:	4604      	mov	r4, r0
 80138ea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80138ec:	881b      	ldrh	r3, [r3, #0]
 80138ee:	429a      	cmp	r2, r3
 80138f0:	d214      	bcs.n	801391c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80138f2:	6803      	ldr	r3, [r0, #0]
 80138f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80138f6:	4798      	blx	r3
 80138f8:	6823      	ldr	r3, [r4, #0]
 80138fa:	4605      	mov	r5, r0
 80138fc:	4620      	mov	r0, r4
 80138fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8013900:	4798      	blx	r3
 8013902:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013906:	b22d      	sxth	r5, r5
 8013908:	4601      	mov	r1, r0
 801390a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801390e:	bf06      	itte	eq
 8013910:	4602      	moveq	r2, r0
 8013912:	4629      	moveq	r1, r5
 8013914:	462a      	movne	r2, r5
 8013916:	4620      	mov	r0, r4
 8013918:	f7f9 fee7 	bl	800d6ea <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801391c:	bd38      	pop	{r3, r4, r5, pc}
 801391e:	bf00      	nop
 8013920:	24002ff8 	.word	0x24002ff8

08013924 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013924:	b530      	push	{r4, r5, lr}
 8013926:	888b      	ldrh	r3, [r1, #4]
 8013928:	b085      	sub	sp, #20
 801392a:	4604      	mov	r4, r0
 801392c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801392e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013932:	b923      	cbnz	r3, 801393e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013934:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013938:	b90b      	cbnz	r3, 801393e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801393a:	f7ff ffd3 	bl	80138e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801393e:	6823      	ldr	r3, [r4, #0]
 8013940:	466d      	mov	r5, sp
 8013942:	4621      	mov	r1, r4
 8013944:	343c      	adds	r4, #60	; 0x3c
 8013946:	4628      	mov	r0, r5
 8013948:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801394c:	4798      	blx	r3
 801394e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8013952:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013956:	b005      	add	sp, #20
 8013958:	bd30      	pop	{r4, r5, pc}

0801395a <_ZNK8touchgfx3Box12getSolidRectEv>:
 801395a:	2300      	movs	r3, #0
 801395c:	8083      	strh	r3, [r0, #4]
 801395e:	80c3      	strh	r3, [r0, #6]
 8013960:	8003      	strh	r3, [r0, #0]
 8013962:	8043      	strh	r3, [r0, #2]
 8013964:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013968:	2bff      	cmp	r3, #255	; 0xff
 801396a:	bf01      	itttt	eq
 801396c:	890b      	ldrheq	r3, [r1, #8]
 801396e:	8083      	strheq	r3, [r0, #4]
 8013970:	894b      	ldrheq	r3, [r1, #10]
 8013972:	80c3      	strheq	r3, [r0, #6]
 8013974:	4770      	bx	lr
	...

08013978 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013978:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801397a:	4604      	mov	r4, r0
 801397c:	466b      	mov	r3, sp
 801397e:	6808      	ldr	r0, [r1, #0]
 8013980:	6849      	ldr	r1, [r1, #4]
 8013982:	c303      	stmia	r3!, {r0, r1}
 8013984:	6823      	ldr	r3, [r4, #0]
 8013986:	4669      	mov	r1, sp
 8013988:	4620      	mov	r0, r4
 801398a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801398c:	4798      	blx	r3
 801398e:	4b08      	ldr	r3, [pc, #32]	; (80139b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013990:	681b      	ldr	r3, [r3, #0]
 8013992:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013996:	b10a      	cbz	r2, 801399c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013998:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801399a:	b900      	cbnz	r0, 801399e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 801399c:	6898      	ldr	r0, [r3, #8]
 801399e:	6803      	ldr	r3, [r0, #0]
 80139a0:	4669      	mov	r1, sp
 80139a2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80139a4:	6a1d      	ldr	r5, [r3, #32]
 80139a6:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80139aa:	47a8      	blx	r5
 80139ac:	b003      	add	sp, #12
 80139ae:	bd30      	pop	{r4, r5, pc}
 80139b0:	24002fa4 	.word	0x24002fa4

080139b4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80139b4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80139b8:	b12a      	cbz	r2, 80139c6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80139ba:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80139be:	b112      	cbz	r2, 80139c6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80139c0:	6803      	ldr	r3, [r0, #0]
 80139c2:	695b      	ldr	r3, [r3, #20]
 80139c4:	4718      	bx	r3
 80139c6:	4770      	bx	lr

080139c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80139c8:	b570      	push	{r4, r5, r6, lr}
 80139ca:	880b      	ldrh	r3, [r1, #0]
 80139cc:	4605      	mov	r5, r0
 80139ce:	4604      	mov	r4, r0
 80139d0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80139d2:	8813      	ldrh	r3, [r2, #0]
 80139d4:	f825 3f30 	strh.w	r3, [r5, #48]!
 80139d8:	4628      	mov	r0, r5
 80139da:	f004 fb35 	bl	8018048 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139de:	4606      	mov	r6, r0
 80139e0:	4628      	mov	r0, r5
 80139e2:	f004 fb65 	bl	80180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80139e6:	6823      	ldr	r3, [r4, #0]
 80139e8:	4605      	mov	r5, r0
 80139ea:	4631      	mov	r1, r6
 80139ec:	4620      	mov	r0, r4
 80139ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80139f0:	4798      	blx	r3
 80139f2:	6823      	ldr	r3, [r4, #0]
 80139f4:	4629      	mov	r1, r5
 80139f6:	4620      	mov	r0, r4
 80139f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80139fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80139fe:	4718      	bx	r3

08013a00 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013a00:	b510      	push	{r4, lr}
 8013a02:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013a06:	4604      	mov	r4, r0
 8013a08:	2bff      	cmp	r3, #255	; 0xff
 8013a0a:	d006      	beq.n	8013a1a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013a0c:	2300      	movs	r3, #0
 8013a0e:	8003      	strh	r3, [r0, #0]
 8013a10:	8043      	strh	r3, [r0, #2]
 8013a12:	8083      	strh	r3, [r0, #4]
 8013a14:	80c3      	strh	r3, [r0, #6]
 8013a16:	4620      	mov	r0, r4
 8013a18:	bd10      	pop	{r4, pc}
 8013a1a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013a1e:	b11b      	cbz	r3, 8013a28 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013a20:	3130      	adds	r1, #48	; 0x30
 8013a22:	f004 fb79 	bl	8018118 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a26:	e7f6      	b.n	8013a16 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013a28:	312e      	adds	r1, #46	; 0x2e
 8013a2a:	e7fa      	b.n	8013a22 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08013a2c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a30:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013a34:	b08a      	sub	sp, #40	; 0x28
 8013a36:	4604      	mov	r4, r0
 8013a38:	4688      	mov	r8, r1
 8013a3a:	2b00      	cmp	r3, #0
 8013a3c:	d066      	beq.n	8013b0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013a3e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013a40:	a805      	add	r0, sp, #20
 8013a42:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013a46:	f004 faff 	bl	8018048 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a4a:	4607      	mov	r7, r0
 8013a4c:	a805      	add	r0, sp, #20
 8013a4e:	f004 fb2f 	bl	80180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a52:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013a56:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013a5a:	2300      	movs	r3, #0
 8013a5c:	4432      	add	r2, r6
 8013a5e:	9306      	str	r3, [sp, #24]
 8013a60:	b292      	uxth	r2, r2
 8013a62:	fa0f fc82 	sxth.w	ip, r2
 8013a66:	459c      	cmp	ip, r3
 8013a68:	dd52      	ble.n	8013b10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a6a:	42b7      	cmp	r7, r6
 8013a6c:	dd50      	ble.n	8013b10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a6e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013a72:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013a76:	442b      	add	r3, r5
 8013a78:	b29b      	uxth	r3, r3
 8013a7a:	b219      	sxth	r1, r3
 8013a7c:	2900      	cmp	r1, #0
 8013a7e:	dd47      	ble.n	8013b10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a80:	42a8      	cmp	r0, r5
 8013a82:	dd45      	ble.n	8013b10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a84:	4567      	cmp	r7, ip
 8013a86:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013a8a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013a8e:	bfb8      	it	lt
 8013a90:	b2ba      	uxthlt	r2, r7
 8013a92:	4288      	cmp	r0, r1
 8013a94:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013a98:	bfb8      	it	lt
 8013a9a:	b283      	uxthlt	r3, r0
 8013a9c:	1b92      	subs	r2, r2, r6
 8013a9e:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013aa2:	1b5b      	subs	r3, r3, r5
 8013aa4:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013aa8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013aac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013ab0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013ab4:	429a      	cmp	r2, r3
 8013ab6:	d026      	beq.n	8013b06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ab8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	dd22      	ble.n	8013b06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ac0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013ac4:	2b00      	cmp	r3, #0
 8013ac6:	dd1e      	ble.n	8013b06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ac8:	2300      	movs	r3, #0
 8013aca:	a908      	add	r1, sp, #32
 8013acc:	4620      	mov	r0, r4
 8013ace:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013ad2:	6823      	ldr	r3, [r4, #0]
 8013ad4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ad6:	4798      	blx	r3
 8013ad8:	4b0f      	ldr	r3, [pc, #60]	; (8013b18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013ada:	681b      	ldr	r3, [r3, #0]
 8013adc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013ae0:	b10a      	cbz	r2, 8013ae6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013ae2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013ae4:	b900      	cbnz	r0, 8013ae8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013ae6:	6898      	ldr	r0, [r3, #8]
 8013ae8:	2501      	movs	r5, #1
 8013aea:	6801      	ldr	r1, [r0, #0]
 8013aec:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013af0:	9502      	str	r5, [sp, #8]
 8013af2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013af6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013afa:	9401      	str	r4, [sp, #4]
 8013afc:	ac06      	add	r4, sp, #24
 8013afe:	9400      	str	r4, [sp, #0]
 8013b00:	688c      	ldr	r4, [r1, #8]
 8013b02:	a905      	add	r1, sp, #20
 8013b04:	47a0      	blx	r4
 8013b06:	b00a      	add	sp, #40	; 0x28
 8013b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b0c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013b0e:	e797      	b.n	8013a40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013b10:	2300      	movs	r3, #0
 8013b12:	9307      	str	r3, [sp, #28]
 8013b14:	e7ca      	b.n	8013aac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013b16:	bf00      	nop
 8013b18:	24002fa4 	.word	0x24002fa4

08013b1c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013b1c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013b20:	b12a      	cbz	r2, 8013b2e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b22:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013b26:	b112      	cbz	r2, 8013b2e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b28:	6803      	ldr	r3, [r0, #0]
 8013b2a:	695b      	ldr	r3, [r3, #20]
 8013b2c:	4718      	bx	r3
 8013b2e:	4770      	bx	lr

08013b30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013b30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b34:	b08d      	sub	sp, #52	; 0x34
 8013b36:	4604      	mov	r4, r0
 8013b38:	460f      	mov	r7, r1
 8013b3a:	f7ff ff77 	bl	8013a2c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013b3e:	4a55      	ldr	r2, [pc, #340]	; (8013c94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013b40:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013b42:	8812      	ldrh	r2, [r2, #0]
 8013b44:	429a      	cmp	r2, r3
 8013b46:	f240 8082 	bls.w	8013c4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013b4a:	4d53      	ldr	r5, [pc, #332]	; (8013c98 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013b4c:	682a      	ldr	r2, [r5, #0]
 8013b4e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013b52:	4b52      	ldr	r3, [pc, #328]	; (8013c9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013b54:	681b      	ldr	r3, [r3, #0]
 8013b56:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013b5a:	2200      	movs	r2, #0
 8013b5c:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013b60:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013b64:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013b68:	2a03      	cmp	r2, #3
 8013b6a:	d811      	bhi.n	8013b90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013b6c:	e8df f002 	tbb	[pc, r2]
 8013b70:	89727902 	.word	0x89727902
 8013b74:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013b78:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013b7c:	1ad2      	subs	r2, r2, r3
 8013b7e:	2002      	movs	r0, #2
 8013b80:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013b84:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013b88:	fb92 f2f0 	sdiv	r2, r2, r0
 8013b8c:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013b90:	f10d 080c 	add.w	r8, sp, #12
 8013b94:	f10d 0914 	add.w	r9, sp, #20
 8013b98:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013b9c:	e889 0003 	stmia.w	r9, {r0, r1}
 8013ba0:	4639      	mov	r1, r7
 8013ba2:	4648      	mov	r0, r9
 8013ba4:	f7fe fac2 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8013ba8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013bac:	2b00      	cmp	r3, #0
 8013bae:	dd4e      	ble.n	8013c4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013bb0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013bb4:	2b00      	cmp	r3, #0
 8013bb6:	dd4a      	ble.n	8013c4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013bb8:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013bbc:	4641      	mov	r1, r8
 8013bbe:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013bc2:	4620      	mov	r0, r4
 8013bc4:	1a9b      	subs	r3, r3, r2
 8013bc6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013bca:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013bce:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013bd2:	1a9b      	subs	r3, r3, r2
 8013bd4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013bd8:	6823      	ldr	r3, [r4, #0]
 8013bda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bdc:	4798      	blx	r3
 8013bde:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013be2:	2b00      	cmp	r3, #0
 8013be4:	d053      	beq.n	8013c8e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013be6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013be8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013bea:	682b      	ldr	r3, [r5, #0]
 8013bec:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013bf0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013bf4:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013bf8:	785b      	ldrb	r3, [r3, #1]
 8013bfa:	9209      	str	r2, [sp, #36]	; 0x24
 8013bfc:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013c00:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013c04:	9607      	str	r6, [sp, #28]
 8013c06:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013c0a:	2300      	movs	r3, #0
 8013c0c:	f88d 5020 	strb.w	r5, [sp, #32]
 8013c10:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013c14:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013c18:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013c1c:	4b20      	ldr	r3, [pc, #128]	; (8013ca0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013c1e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013c22:	681b      	ldr	r3, [r3, #0]
 8013c24:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013c28:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013c2c:	b10a      	cbz	r2, 8013c32 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013c2e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013c30:	b904      	cbnz	r4, 8013c34 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013c32:	689c      	ldr	r4, [r3, #8]
 8013c34:	4b1b      	ldr	r3, [pc, #108]	; (8013ca4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013c36:	6818      	ldr	r0, [r3, #0]
 8013c38:	f7fb fdee 	bl	800f818 <_ZNK8touchgfx5Texts7getTextEt>
 8013c3c:	ab07      	add	r3, sp, #28
 8013c3e:	9001      	str	r0, [sp, #4]
 8013c40:	4620      	mov	r0, r4
 8013c42:	9300      	str	r3, [sp, #0]
 8013c44:	464b      	mov	r3, r9
 8013c46:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013c4a:	f7fb fd76 	bl	800f73a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013c4e:	b00d      	add	sp, #52	; 0x34
 8013c50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c54:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013c58:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013c5c:	1ad2      	subs	r2, r2, r3
 8013c5e:	3201      	adds	r2, #1
 8013c60:	e78d      	b.n	8013b7e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013c62:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013c66:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013c6a:	1ad2      	subs	r2, r2, r3
 8013c6c:	3201      	adds	r2, #1
 8013c6e:	2002      	movs	r0, #2
 8013c70:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013c74:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013c78:	fb92 f2f0 	sdiv	r2, r2, r0
 8013c7c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013c80:	e786      	b.n	8013b90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013c82:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013c86:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013c8a:	1ad2      	subs	r2, r2, r3
 8013c8c:	e7ef      	b.n	8013c6e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013c8e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013c90:	e7aa      	b.n	8013be8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013c92:	bf00      	nop
 8013c94:	24002ff8 	.word	0x24002ff8
 8013c98:	24002ff4 	.word	0x24002ff4
 8013c9c:	24002ffc 	.word	0x24002ffc
 8013ca0:	24002fa4 	.word	0x24002fa4
 8013ca4:	24003000 	.word	0x24003000

08013ca8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013ca8:	2101      	movs	r1, #1
 8013caa:	2200      	movs	r2, #0
 8013cac:	b510      	push	{r4, lr}
 8013cae:	4c13      	ldr	r4, [pc, #76]	; (8013cfc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013cb0:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013cb4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013cb8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013cbc:	6004      	str	r4, [r0, #0]
 8013cbe:	4c10      	ldr	r4, [pc, #64]	; (8013d00 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013cc0:	8082      	strh	r2, [r0, #4]
 8013cc2:	80c2      	strh	r2, [r0, #6]
 8013cc4:	8102      	strh	r2, [r0, #8]
 8013cc6:	8142      	strh	r2, [r0, #10]
 8013cc8:	8182      	strh	r2, [r0, #12]
 8013cca:	81c2      	strh	r2, [r0, #14]
 8013ccc:	8202      	strh	r2, [r0, #16]
 8013cce:	8242      	strh	r2, [r0, #18]
 8013cd0:	61c2      	str	r2, [r0, #28]
 8013cd2:	8402      	strh	r2, [r0, #32]
 8013cd4:	8442      	strh	r2, [r0, #34]	; 0x22
 8013cd6:	6282      	str	r2, [r0, #40]	; 0x28
 8013cd8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013cdc:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013cde:	8601      	strh	r1, [r0, #48]	; 0x30
 8013ce0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013ce4:	6344      	str	r4, [r0, #52]	; 0x34
 8013ce6:	8701      	strh	r1, [r0, #56]	; 0x38
 8013ce8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013cec:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013cf0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013cf4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013cf8:	bd10      	pop	{r4, pc}
 8013cfa:	bf00      	nop
 8013cfc:	08028a34 	.word	0x08028a34
 8013d00:	08027cc8 	.word	0x08027cc8

08013d04 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013d04:	b510      	push	{r4, lr}
 8013d06:	6803      	ldr	r3, [r0, #0]
 8013d08:	460c      	mov	r4, r1
 8013d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d0c:	4798      	blx	r3
 8013d0e:	1b03      	subs	r3, r0, r4
 8013d10:	4258      	negs	r0, r3
 8013d12:	4158      	adcs	r0, r3
 8013d14:	bd10      	pop	{r4, pc}
	...

08013d18 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013d18:	4b01      	ldr	r3, [pc, #4]	; (8013d20 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8013d1a:	6019      	str	r1, [r3, #0]
 8013d1c:	4770      	bx	lr
 8013d1e:	bf00      	nop
 8013d20:	24002fac 	.word	0x24002fac

08013d24 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d28:	4696      	mov	lr, r2
 8013d2a:	b097      	sub	sp, #92	; 0x5c
 8013d2c:	4605      	mov	r5, r0
 8013d2e:	4614      	mov	r4, r2
 8013d30:	460e      	mov	r6, r1
 8013d32:	461f      	mov	r7, r3
 8013d34:	f10d 0c1c 	add.w	ip, sp, #28
 8013d38:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013d3c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013d40:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013d44:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013d48:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013d4c:	f8de 3000 	ldr.w	r3, [lr]
 8013d50:	f104 0e14 	add.w	lr, r4, #20
 8013d54:	f8cc 3000 	str.w	r3, [ip]
 8013d58:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013d5c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013d60:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013d64:	f8de 3000 	ldr.w	r3, [lr]
 8013d68:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013d6c:	f8cc 3000 	str.w	r3, [ip]
 8013d70:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013d74:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013d78:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013d7c:	f8de 3000 	ldr.w	r3, [lr]
 8013d80:	4631      	mov	r1, r6
 8013d82:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013d84:	4628      	mov	r0, r5
 8013d86:	f8cc 3000 	str.w	r3, [ip]
 8013d8a:	682b      	ldr	r3, [r5, #0]
 8013d8c:	9201      	str	r2, [sp, #4]
 8013d8e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013d90:	f8cd 8008 	str.w	r8, [sp, #8]
 8013d94:	9200      	str	r2, [sp, #0]
 8013d96:	aa07      	add	r2, sp, #28
 8013d98:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013d9c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013da0:	463b      	mov	r3, r7
 8013da2:	47d8      	blx	fp
 8013da4:	46a6      	mov	lr, r4
 8013da6:	f10d 0c1c 	add.w	ip, sp, #28
 8013daa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013dae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013db2:	f8de 3000 	ldr.w	r3, [lr]
 8013db6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013dba:	343c      	adds	r4, #60	; 0x3c
 8013dbc:	f8cc 3000 	str.w	r3, [ip]
 8013dc0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013dc4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013dc8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013dcc:	f8de 3000 	ldr.w	r3, [lr]
 8013dd0:	f8cc 3000 	str.w	r3, [ip]
 8013dd4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013dd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013dda:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013dde:	6823      	ldr	r3, [r4, #0]
 8013de0:	4631      	mov	r1, r6
 8013de2:	4628      	mov	r0, r5
 8013de4:	f8cc 3000 	str.w	r3, [ip]
 8013de8:	682b      	ldr	r3, [r5, #0]
 8013dea:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013dee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013df0:	f8cd 8008 	str.w	r8, [sp, #8]
 8013df4:	9201      	str	r2, [sp, #4]
 8013df6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013df8:	9200      	str	r2, [sp, #0]
 8013dfa:	aa07      	add	r2, sp, #28
 8013dfc:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013dfe:	463b      	mov	r3, r7
 8013e00:	47a0      	blx	r4
 8013e02:	b017      	add	sp, #92	; 0x5c
 8013e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013e08 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013e08:	2000      	movs	r0, #0
 8013e0a:	4770      	bx	lr

08013e0c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e10:	b08d      	sub	sp, #52	; 0x34
 8013e12:	4688      	mov	r8, r1
 8013e14:	f8d3 c000 	ldr.w	ip, [r3]
 8013e18:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013e1a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013e1e:	680f      	ldr	r7, [r1, #0]
 8013e20:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013e24:	eba7 070c 	sub.w	r7, r7, ip
 8013e28:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013e2c:	edd3 6a07 	vldr	s13, [r3, #28]
 8013e30:	42bc      	cmp	r4, r7
 8013e32:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013e34:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013e38:	bfa8      	it	ge
 8013e3a:	463c      	movge	r4, r7
 8013e3c:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013e40:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013e44:	ee07 4a90 	vmov	s15, r4
 8013e48:	eb09 0e0c 	add.w	lr, r9, ip
 8013e4c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013e50:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013e54:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013e58:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013e5c:	4571      	cmp	r1, lr
 8013e5e:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013e62:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013e66:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013e6a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013e6e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013e72:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013e76:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013e7a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013e7e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013e82:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013e86:	f340 808c 	ble.w	8013fa2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8013e8a:	eba1 060e 	sub.w	r6, r1, lr
 8013e8e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013e92:	ee07 5a10 	vmov	s14, r5
 8013e96:	2d00      	cmp	r5, #0
 8013e98:	fb04 6615 	mls	r6, r4, r5, r6
 8013e9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ea0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013ea4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013ea8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013eac:	dd12      	ble.n	8013ed4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8013eae:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013eb2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013eb6:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013eba:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ec2:	bf14      	ite	ne
 8013ec4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013ec8:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013ecc:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013ed0:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013ed4:	fb05 f204 	mul.w	r2, r5, r4
 8013ed8:	1abf      	subs	r7, r7, r2
 8013eda:	4494      	add	ip, r2
 8013edc:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013ee0:	4411      	add	r1, r2
 8013ee2:	eb09 020c 	add.w	r2, r9, ip
 8013ee6:	b209      	sxth	r1, r1
 8013ee8:	443a      	add	r2, r7
 8013eea:	428a      	cmp	r2, r1
 8013eec:	bfc4      	itt	gt
 8013eee:	eba1 0209 	subgt.w	r2, r1, r9
 8013ef2:	eba2 070c 	subgt.w	r7, r2, ip
 8013ef6:	2f00      	cmp	r7, #0
 8013ef8:	dd50      	ble.n	8013f9c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8013efa:	fb97 f1f4 	sdiv	r1, r7, r4
 8013efe:	fb04 7211 	mls	r2, r4, r1, r7
 8013f02:	b90a      	cbnz	r2, 8013f08 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8013f04:	3901      	subs	r1, #1
 8013f06:	4622      	mov	r2, r4
 8013f08:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013f0c:	6840      	ldr	r0, [r0, #4]
 8013f0e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013f12:	44b6      	add	lr, r6
 8013f14:	f8d0 a000 	ldr.w	sl, [r0]
 8013f18:	2900      	cmp	r1, #0
 8013f1a:	bfcc      	ite	gt
 8013f1c:	46a1      	movgt	r9, r4
 8013f1e:	4691      	movle	r9, r2
 8013f20:	900b      	str	r0, [sp, #44]	; 0x2c
 8013f22:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013f24:	fb04 e505 	mla	r5, r4, r5, lr
 8013f28:	eef0 6a42 	vmov.f32	s13, s4
 8013f2c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013f30:	9008      	str	r0, [sp, #32]
 8013f32:	eeb0 7a61 	vmov.f32	s14, s3
 8013f36:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013f38:	695b      	ldr	r3, [r3, #20]
 8013f3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f3e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013f42:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013f46:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013f48:	445b      	add	r3, fp
 8013f4a:	9307      	str	r3, [sp, #28]
 8013f4c:	ee16 3a90 	vmov	r3, s13
 8013f50:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013f54:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013f58:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013f5c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013f60:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013f64:	ee17 7a90 	vmov	r7, s15
 8013f68:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013f6c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013f70:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013f74:	ee17 ca90 	vmov	ip, s15
 8013f78:	fb9c fcf4 	sdiv	ip, ip, r4
 8013f7c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013f80:	9302      	str	r3, [sp, #8]
 8013f82:	ee17 3a10 	vmov	r3, s14
 8013f86:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013f8a:	fb07 3706 	mla	r7, r7, r6, r3
 8013f8e:	eba9 0306 	sub.w	r3, r9, r6
 8013f92:	e9cd 4700 	strd	r4, r7, [sp]
 8013f96:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013f9a:	47a0      	blx	r4
 8013f9c:	b00d      	add	sp, #52	; 0x34
 8013f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fa2:	2500      	movs	r5, #0
 8013fa4:	462e      	mov	r6, r5
 8013fa6:	e799      	b.n	8013edc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08013fa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fac:	b0db      	sub	sp, #364	; 0x16c
 8013fae:	461d      	mov	r5, r3
 8013fb0:	4614      	mov	r4, r2
 8013fb2:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013fb6:	910f      	str	r1, [sp, #60]	; 0x3c
 8013fb8:	4629      	mov	r1, r5
 8013fba:	930a      	str	r3, [sp, #40]	; 0x28
 8013fbc:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013fc0:	9009      	str	r0, [sp, #36]	; 0x24
 8013fc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013fc4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013fc8:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013fcc:	9310      	str	r3, [sp, #64]	; 0x40
 8013fce:	6803      	ldr	r3, [r0, #0]
 8013fd0:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013fd2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013fd6:	47b8      	blx	r7
 8013fd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fda:	6058      	str	r0, [r3, #4]
 8013fdc:	2800      	cmp	r0, #0
 8013fde:	f000 83a1 	beq.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013fe2:	682b      	ldr	r3, [r5, #0]
 8013fe4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013fe8:	ed94 7a02 	vldr	s14, [r4, #8]
 8013fec:	9314      	str	r3, [sp, #80]	; 0x50
 8013fee:	686b      	ldr	r3, [r5, #4]
 8013ff0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013ff4:	9315      	str	r3, [sp, #84]	; 0x54
 8013ff6:	4bc1      	ldr	r3, [pc, #772]	; (80142fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013ff8:	7819      	ldrb	r1, [r3, #0]
 8013ffa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013ffe:	2900      	cmp	r1, #0
 8014000:	bf16      	itet	ne
 8014002:	4619      	movne	r1, r3
 8014004:	4611      	moveq	r1, r2
 8014006:	4613      	movne	r3, r2
 8014008:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801400c:	9116      	str	r1, [sp, #88]	; 0x58
 801400e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014012:	f240 8387 	bls.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014016:	ed94 7a07 	vldr	s14, [r4, #28]
 801401a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801401e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014022:	f240 837f 	bls.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014026:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801402a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801402e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014032:	f240 8377 	bls.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014036:	6822      	ldr	r2, [r4, #0]
 8014038:	4bb1      	ldr	r3, [pc, #708]	; (8014300 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801403a:	429a      	cmp	r2, r3
 801403c:	f2c0 8372 	blt.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014040:	49b0      	ldr	r1, [pc, #704]	; (8014304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014042:	6963      	ldr	r3, [r4, #20]
 8014044:	428a      	cmp	r2, r1
 8014046:	f300 836d 	bgt.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801404a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801404e:	48ae      	ldr	r0, [pc, #696]	; (8014308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014050:	33ff      	adds	r3, #255	; 0xff
 8014052:	4283      	cmp	r3, r0
 8014054:	f200 8366 	bhi.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014058:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801405a:	4dac      	ldr	r5, [pc, #688]	; (801430c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801405c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014060:	33ff      	adds	r3, #255	; 0xff
 8014062:	42ab      	cmp	r3, r5
 8014064:	f200 835e 	bhi.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014068:	6862      	ldr	r2, [r4, #4]
 801406a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801406e:	33ff      	adds	r3, #255	; 0xff
 8014070:	4283      	cmp	r3, r0
 8014072:	f200 8357 	bhi.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014076:	69a1      	ldr	r1, [r4, #24]
 8014078:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 801407c:	33ff      	adds	r3, #255	; 0xff
 801407e:	4283      	cmp	r3, r0
 8014080:	f200 8350 	bhi.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014084:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014086:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801408a:	30ff      	adds	r0, #255	; 0xff
 801408c:	42a8      	cmp	r0, r5
 801408e:	f200 8349 	bhi.w	8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014092:	428a      	cmp	r2, r1
 8014094:	f280 8110 	bge.w	80142b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014098:	429a      	cmp	r2, r3
 801409a:	f300 8119 	bgt.w	80142d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801409e:	4299      	cmp	r1, r3
 80140a0:	f280 811d 	bge.w	80142de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80140a4:	2502      	movs	r5, #2
 80140a6:	2701      	movs	r7, #1
 80140a8:	46a9      	mov	r9, r5
 80140aa:	46b8      	mov	r8, r7
 80140ac:	f04f 0a00 	mov.w	sl, #0
 80140b0:	4621      	mov	r1, r4
 80140b2:	a849      	add	r0, sp, #292	; 0x124
 80140b4:	f003 fd00 	bl	8017ab8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80140b8:	4622      	mov	r2, r4
 80140ba:	4653      	mov	r3, sl
 80140bc:	a949      	add	r1, sp, #292	; 0x124
 80140be:	f8cd 9000 	str.w	r9, [sp]
 80140c2:	a819      	add	r0, sp, #100	; 0x64
 80140c4:	f003 fe28 	bl	8017d18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80140c8:	4622      	mov	r2, r4
 80140ca:	4653      	mov	r3, sl
 80140cc:	a949      	add	r1, sp, #292	; 0x124
 80140ce:	f8cd 8000 	str.w	r8, [sp]
 80140d2:	a829      	add	r0, sp, #164	; 0xa4
 80140d4:	f003 fe20 	bl	8017d18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80140d8:	4643      	mov	r3, r8
 80140da:	4622      	mov	r2, r4
 80140dc:	a949      	add	r1, sp, #292	; 0x124
 80140de:	f8cd 9000 	str.w	r9, [sp]
 80140e2:	a839      	add	r0, sp, #228	; 0xe4
 80140e4:	f003 fe18 	bl	8017d18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80140e8:	42af      	cmp	r7, r5
 80140ea:	af12      	add	r7, sp, #72	; 0x48
 80140ec:	bfb7      	itett	lt
 80140ee:	2300      	movlt	r3, #0
 80140f0:	2301      	movge	r3, #1
 80140f2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80140f4:	ac19      	addlt	r4, sp, #100	; 0x64
 80140f6:	bfb1      	iteee	lt
 80140f8:	930e      	strlt	r3, [sp, #56]	; 0x38
 80140fa:	ad19      	addge	r5, sp, #100	; 0x64
 80140fc:	930e      	strge	r3, [sp, #56]	; 0x38
 80140fe:	ac29      	addge	r4, sp, #164	; 0xa4
 8014100:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014102:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014106:	e887 0003 	stmia.w	r7, {r0, r1}
 801410a:	b928      	cbnz	r0, 8014118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801410c:	4b80      	ldr	r3, [pc, #512]	; (8014310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801410e:	6818      	ldr	r0, [r3, #0]
 8014110:	6803      	ldr	r3, [r0, #0]
 8014112:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014114:	4798      	blx	r3
 8014116:	6038      	str	r0, [r7, #0]
 8014118:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801411a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801411e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014122:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014124:	930c      	str	r3, [sp, #48]	; 0x30
 8014126:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014128:	6963      	ldr	r3, [r4, #20]
 801412a:	440b      	add	r3, r1
 801412c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014130:	4408      	add	r0, r1
 8014132:	b200      	sxth	r0, r0
 8014134:	4283      	cmp	r3, r0
 8014136:	900d      	str	r0, [sp, #52]	; 0x34
 8014138:	f280 80dd 	bge.w	80142f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801413c:	428b      	cmp	r3, r1
 801413e:	da08      	bge.n	8014152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014140:	2a00      	cmp	r2, #0
 8014142:	dd06      	ble.n	8014152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014144:	1acb      	subs	r3, r1, r3
 8014146:	429a      	cmp	r2, r3
 8014148:	f2c0 80e4 	blt.w	8014314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801414c:	2b00      	cmp	r3, #0
 801414e:	f300 80e2 	bgt.w	8014316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014152:	6967      	ldr	r7, [r4, #20]
 8014154:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014158:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801415a:	443b      	add	r3, r7
 801415c:	461f      	mov	r7, r3
 801415e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014160:	1bdf      	subs	r7, r3, r7
 8014162:	4297      	cmp	r7, r2
 8014164:	bfa8      	it	ge
 8014166:	4617      	movge	r7, r2
 8014168:	2f00      	cmp	r7, #0
 801416a:	f340 8166 	ble.w	801443a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801416e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014170:	6829      	ldr	r1, [r5, #0]
 8014172:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014176:	f9bb 3000 	ldrsh.w	r3, [fp]
 801417a:	4411      	add	r1, r2
 801417c:	6820      	ldr	r0, [r4, #0]
 801417e:	4299      	cmp	r1, r3
 8014180:	dd1a      	ble.n	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014182:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014186:	4402      	add	r2, r0
 8014188:	440b      	add	r3, r1
 801418a:	b21b      	sxth	r3, r3
 801418c:	429a      	cmp	r2, r3
 801418e:	dc13      	bgt.n	80141b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014190:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014192:	a912      	add	r1, sp, #72	; 0x48
 8014194:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014196:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014198:	681b      	ldr	r3, [r3, #0]
 801419a:	9206      	str	r2, [sp, #24]
 801419c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801419e:	9500      	str	r5, [sp, #0]
 80141a0:	9205      	str	r2, [sp, #20]
 80141a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80141a4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80141a8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80141aa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80141ae:	aa49      	add	r2, sp, #292	; 0x124
 80141b0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80141b4:	4623      	mov	r3, r4
 80141b6:	47c8      	blx	r9
 80141b8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80141bc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80141c0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80141c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80141c8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80141cc:	68a1      	ldr	r1, [r4, #8]
 80141ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80141d2:	ed94 6a08 	vldr	s12, [r4, #32]
 80141d6:	edd4 6a07 	vldr	s13, [r4, #28]
 80141da:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80141de:	ee76 6a86 	vadd.f32	s13, s13, s12
 80141e2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80141e6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80141ea:	edc4 6a07 	vstr	s13, [r4, #28]
 80141ee:	441a      	add	r2, r3
 80141f0:	6963      	ldr	r3, [r4, #20]
 80141f2:	3301      	adds	r3, #1
 80141f4:	6022      	str	r2, [r4, #0]
 80141f6:	6163      	str	r3, [r4, #20]
 80141f8:	69a3      	ldr	r3, [r4, #24]
 80141fa:	3b01      	subs	r3, #1
 80141fc:	61a3      	str	r3, [r4, #24]
 80141fe:	6923      	ldr	r3, [r4, #16]
 8014200:	440b      	add	r3, r1
 8014202:	68e1      	ldr	r1, [r4, #12]
 8014204:	428b      	cmp	r3, r1
 8014206:	6123      	str	r3, [r4, #16]
 8014208:	db15      	blt.n	8014236 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801420a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801420e:	3201      	adds	r2, #1
 8014210:	1a5b      	subs	r3, r3, r1
 8014212:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014216:	6022      	str	r2, [r4, #0]
 8014218:	6123      	str	r3, [r4, #16]
 801421a:	edc4 6a07 	vstr	s13, [r4, #28]
 801421e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014222:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014226:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801422a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801422e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014232:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014236:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801423a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801423e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014242:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014246:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801424a:	68a9      	ldr	r1, [r5, #8]
 801424c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014250:	ed95 6a08 	vldr	s12, [r5, #32]
 8014254:	edd5 6a07 	vldr	s13, [r5, #28]
 8014258:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801425c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014260:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014264:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014268:	edc5 6a07 	vstr	s13, [r5, #28]
 801426c:	441a      	add	r2, r3
 801426e:	696b      	ldr	r3, [r5, #20]
 8014270:	3301      	adds	r3, #1
 8014272:	602a      	str	r2, [r5, #0]
 8014274:	616b      	str	r3, [r5, #20]
 8014276:	69ab      	ldr	r3, [r5, #24]
 8014278:	3b01      	subs	r3, #1
 801427a:	61ab      	str	r3, [r5, #24]
 801427c:	692b      	ldr	r3, [r5, #16]
 801427e:	440b      	add	r3, r1
 8014280:	68e9      	ldr	r1, [r5, #12]
 8014282:	428b      	cmp	r3, r1
 8014284:	612b      	str	r3, [r5, #16]
 8014286:	db15      	blt.n	80142b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8014288:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801428c:	3201      	adds	r2, #1
 801428e:	1a5b      	subs	r3, r3, r1
 8014290:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014294:	602a      	str	r2, [r5, #0]
 8014296:	612b      	str	r3, [r5, #16]
 8014298:	edc5 6a07 	vstr	s13, [r5, #28]
 801429c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80142a0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80142a4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80142a8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80142ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 80142b0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80142b4:	3f01      	subs	r7, #1
 80142b6:	e757      	b.n	8014168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80142b8:	4299      	cmp	r1, r3
 80142ba:	dc13      	bgt.n	80142e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80142bc:	429a      	cmp	r2, r3
 80142be:	da14      	bge.n	80142ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80142c0:	2502      	movs	r5, #2
 80142c2:	2703      	movs	r7, #3
 80142c4:	f04f 0800 	mov.w	r8, #0
 80142c8:	46a9      	mov	r9, r5
 80142ca:	f04f 0a01 	mov.w	sl, #1
 80142ce:	e6ef      	b.n	80140b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80142d0:	2501      	movs	r5, #1
 80142d2:	2700      	movs	r7, #0
 80142d4:	46a9      	mov	r9, r5
 80142d6:	46b8      	mov	r8, r7
 80142d8:	f04f 0a02 	mov.w	sl, #2
 80142dc:	e6e8      	b.n	80140b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80142de:	2501      	movs	r5, #1
 80142e0:	2702      	movs	r7, #2
 80142e2:	e6e1      	b.n	80140a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80142e4:	2500      	movs	r5, #0
 80142e6:	2701      	movs	r7, #1
 80142e8:	e7f4      	b.n	80142d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80142ea:	2702      	movs	r7, #2
 80142ec:	2503      	movs	r5, #3
 80142ee:	f04f 0900 	mov.w	r9, #0
 80142f2:	46b8      	mov	r8, r7
 80142f4:	e7e9      	b.n	80142ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80142f6:	4613      	mov	r3, r2
 80142f8:	e728      	b.n	801414c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80142fa:	bf00      	nop
 80142fc:	24002f9c 	.word	0x24002f9c
 8014300:	fffd8f01 	.word	0xfffd8f01
 8014304:	00027100 	.word	0x00027100
 8014308:	0004e1ff 	.word	0x0004e1ff
 801430c:	0004e1fe 	.word	0x0004e1fe
 8014310:	24002fa4 	.word	0x24002fa4
 8014314:	4613      	mov	r3, r2
 8014316:	992b      	ldr	r1, [sp, #172]	; 0xac
 8014318:	469e      	mov	lr, r3
 801431a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801431c:	469c      	mov	ip, r3
 801431e:	9111      	str	r1, [sp, #68]	; 0x44
 8014320:	f04f 0900 	mov.w	r9, #0
 8014324:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8014328:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801432c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014330:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014334:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8014338:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801433c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014340:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014344:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014348:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801434c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014350:	f1bc 0f00 	cmp.w	ip, #0
 8014354:	d147      	bne.n	80143e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014356:	eb03 0c07 	add.w	ip, r3, r7
 801435a:	1ad7      	subs	r7, r2, r3
 801435c:	f1b9 0f00 	cmp.w	r9, #0
 8014360:	d009      	beq.n	8014376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014362:	9029      	str	r0, [sp, #164]	; 0xa4
 8014364:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014368:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801436c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014370:	912d      	str	r1, [sp, #180]	; 0xb4
 8014372:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8014376:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014378:	f04f 0800 	mov.w	r8, #0
 801437c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014380:	9111      	str	r1, [sp, #68]	; 0x44
 8014382:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014386:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801438a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801438e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014392:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014396:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801439a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801439e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80143a2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80143a6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80143aa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80143ae:	f1be 0f00 	cmp.w	lr, #0
 80143b2:	d031      	beq.n	8014418 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80143b4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80143b6:	4450      	add	r0, sl
 80143b8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80143bc:	4431      	add	r1, r6
 80143be:	ee37 7a04 	vadd.f32	s14, s14, s8
 80143c2:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80143c6:	4549      	cmp	r1, r9
 80143c8:	db08      	blt.n	80143dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80143ca:	ee77 7a85 	vadd.f32	s15, s15, s10
 80143ce:	3001      	adds	r0, #1
 80143d0:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80143d4:	eba1 0109 	sub.w	r1, r1, r9
 80143d8:	ee37 7a06 	vadd.f32	s14, s14, s12
 80143dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80143e0:	f04f 0801 	mov.w	r8, #1
 80143e4:	e7e3      	b.n	80143ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80143e6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80143e8:	4450      	add	r0, sl
 80143ea:	ee37 7a24 	vadd.f32	s14, s14, s9
 80143ee:	4431      	add	r1, r6
 80143f0:	ee77 7a84 	vadd.f32	s15, s15, s8
 80143f4:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80143f8:	4541      	cmp	r1, r8
 80143fa:	db08      	blt.n	801440e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80143fc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014400:	3001      	adds	r0, #1
 8014402:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014406:	eba1 0108 	sub.w	r1, r1, r8
 801440a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801440e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014412:	f04f 0901 	mov.w	r9, #1
 8014416:	e79b      	b.n	8014350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014418:	449c      	add	ip, r3
 801441a:	1aff      	subs	r7, r7, r3
 801441c:	f1b8 0f00 	cmp.w	r8, #0
 8014420:	d009      	beq.n	8014436 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014422:	9019      	str	r0, [sp, #100]	; 0x64
 8014424:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014428:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801442c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014430:	911d      	str	r1, [sp, #116]	; 0x74
 8014432:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014436:	1ad2      	subs	r2, r2, r3
 8014438:	e68b      	b.n	8014152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801443a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801443c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801443e:	2b00      	cmp	r3, #0
 8014440:	f000 80d1 	beq.w	80145e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014444:	ad19      	add	r5, sp, #100	; 0x64
 8014446:	ac39      	add	r4, sp, #228	; 0xe4
 8014448:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801444a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801444e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014452:	930c      	str	r3, [sp, #48]	; 0x30
 8014454:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014456:	6963      	ldr	r3, [r4, #20]
 8014458:	440b      	add	r3, r1
 801445a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801445e:	4408      	add	r0, r1
 8014460:	b200      	sxth	r0, r0
 8014462:	4283      	cmp	r3, r0
 8014464:	900d      	str	r0, [sp, #52]	; 0x34
 8014466:	f280 80c1 	bge.w	80145ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801446a:	428b      	cmp	r3, r1
 801446c:	da08      	bge.n	8014480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801446e:	2a00      	cmp	r2, #0
 8014470:	dd06      	ble.n	8014480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014472:	1acb      	subs	r3, r1, r3
 8014474:	429a      	cmp	r2, r3
 8014476:	f2c0 80bb 	blt.w	80145f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801447a:	2b00      	cmp	r3, #0
 801447c:	f300 80b9 	bgt.w	80145f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014480:	6967      	ldr	r7, [r4, #20]
 8014482:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014486:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014488:	443b      	add	r3, r7
 801448a:	461f      	mov	r7, r3
 801448c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801448e:	1bdf      	subs	r7, r3, r7
 8014490:	4297      	cmp	r7, r2
 8014492:	bfa8      	it	ge
 8014494:	4617      	movge	r7, r2
 8014496:	2f00      	cmp	r7, #0
 8014498:	f340 813c 	ble.w	8014714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801449c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801449e:	6829      	ldr	r1, [r5, #0]
 80144a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80144a4:	f9bb 3000 	ldrsh.w	r3, [fp]
 80144a8:	4411      	add	r1, r2
 80144aa:	6820      	ldr	r0, [r4, #0]
 80144ac:	4299      	cmp	r1, r3
 80144ae:	dd1a      	ble.n	80144e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80144b0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80144b4:	4402      	add	r2, r0
 80144b6:	440b      	add	r3, r1
 80144b8:	b21b      	sxth	r3, r3
 80144ba:	429a      	cmp	r2, r3
 80144bc:	dc13      	bgt.n	80144e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80144be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144c0:	a912      	add	r1, sp, #72	; 0x48
 80144c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80144c6:	681b      	ldr	r3, [r3, #0]
 80144c8:	9206      	str	r2, [sp, #24]
 80144ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80144cc:	9500      	str	r5, [sp, #0]
 80144ce:	9205      	str	r2, [sp, #20]
 80144d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80144d2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80144d6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80144d8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80144dc:	aa49      	add	r2, sp, #292	; 0x124
 80144de:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80144e2:	4623      	mov	r3, r4
 80144e4:	47c8      	blx	r9
 80144e6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80144ea:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80144ee:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80144f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80144f6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80144fa:	68a1      	ldr	r1, [r4, #8]
 80144fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014500:	ed94 6a08 	vldr	s12, [r4, #32]
 8014504:	edd4 6a07 	vldr	s13, [r4, #28]
 8014508:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801450c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014510:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014514:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014518:	edc4 6a07 	vstr	s13, [r4, #28]
 801451c:	441a      	add	r2, r3
 801451e:	6963      	ldr	r3, [r4, #20]
 8014520:	3301      	adds	r3, #1
 8014522:	6022      	str	r2, [r4, #0]
 8014524:	6163      	str	r3, [r4, #20]
 8014526:	69a3      	ldr	r3, [r4, #24]
 8014528:	3b01      	subs	r3, #1
 801452a:	61a3      	str	r3, [r4, #24]
 801452c:	6923      	ldr	r3, [r4, #16]
 801452e:	440b      	add	r3, r1
 8014530:	68e1      	ldr	r1, [r4, #12]
 8014532:	428b      	cmp	r3, r1
 8014534:	6123      	str	r3, [r4, #16]
 8014536:	db15      	blt.n	8014564 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014538:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801453c:	3201      	adds	r2, #1
 801453e:	1a5b      	subs	r3, r3, r1
 8014540:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014544:	6022      	str	r2, [r4, #0]
 8014546:	6123      	str	r3, [r4, #16]
 8014548:	edc4 6a07 	vstr	s13, [r4, #28]
 801454c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014550:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014554:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014558:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801455c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014560:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014564:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014568:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801456c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014570:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014574:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014578:	68a9      	ldr	r1, [r5, #8]
 801457a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801457e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014582:	edd5 6a07 	vldr	s13, [r5, #28]
 8014586:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801458a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801458e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014592:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014596:	edc5 6a07 	vstr	s13, [r5, #28]
 801459a:	441a      	add	r2, r3
 801459c:	696b      	ldr	r3, [r5, #20]
 801459e:	3301      	adds	r3, #1
 80145a0:	602a      	str	r2, [r5, #0]
 80145a2:	616b      	str	r3, [r5, #20]
 80145a4:	69ab      	ldr	r3, [r5, #24]
 80145a6:	3b01      	subs	r3, #1
 80145a8:	61ab      	str	r3, [r5, #24]
 80145aa:	692b      	ldr	r3, [r5, #16]
 80145ac:	440b      	add	r3, r1
 80145ae:	68e9      	ldr	r1, [r5, #12]
 80145b0:	428b      	cmp	r3, r1
 80145b2:	612b      	str	r3, [r5, #16]
 80145b4:	db15      	blt.n	80145e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80145b6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80145ba:	3201      	adds	r2, #1
 80145bc:	1a5b      	subs	r3, r3, r1
 80145be:	ee76 6a26 	vadd.f32	s13, s12, s13
 80145c2:	602a      	str	r2, [r5, #0]
 80145c4:	612b      	str	r3, [r5, #16]
 80145c6:	edc5 6a07 	vstr	s13, [r5, #28]
 80145ca:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80145ce:	ee36 7a87 	vadd.f32	s14, s13, s14
 80145d2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80145d6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80145da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80145de:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80145e2:	3f01      	subs	r7, #1
 80145e4:	e757      	b.n	8014496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80145e6:	ad39      	add	r5, sp, #228	; 0xe4
 80145e8:	ac19      	add	r4, sp, #100	; 0x64
 80145ea:	e72d      	b.n	8014448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80145ec:	4613      	mov	r3, r2
 80145ee:	e744      	b.n	801447a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80145f0:	4613      	mov	r3, r2
 80145f2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80145f4:	469e      	mov	lr, r3
 80145f6:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80145fa:	461f      	mov	r7, r3
 80145fc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014600:	f04f 0900 	mov.w	r9, #0
 8014604:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014608:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801460c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014610:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014614:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014618:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801461a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801461e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014622:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014626:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801462a:	960e      	str	r6, [sp, #56]	; 0x38
 801462c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014630:	2f00      	cmp	r7, #0
 8014632:	d146      	bne.n	80146c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014634:	449c      	add	ip, r3
 8014636:	1ad7      	subs	r7, r2, r3
 8014638:	f1b9 0f00 	cmp.w	r9, #0
 801463c:	d009      	beq.n	8014652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801463e:	9039      	str	r0, [sp, #228]	; 0xe4
 8014640:	913d      	str	r1, [sp, #244]	; 0xf4
 8014642:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014646:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801464a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801464e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014652:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014654:	f04f 0800 	mov.w	r8, #0
 8014658:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801465c:	910e      	str	r1, [sp, #56]	; 0x38
 801465e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014662:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014666:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801466a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801466e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014672:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014676:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801467a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801467e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014682:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014686:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801468a:	f1be 0f00 	cmp.w	lr, #0
 801468e:	d030      	beq.n	80146f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014690:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014692:	4450      	add	r0, sl
 8014694:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014698:	4431      	add	r1, r6
 801469a:	ee37 7a04 	vadd.f32	s14, s14, s8
 801469e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80146a2:	4549      	cmp	r1, r9
 80146a4:	db08      	blt.n	80146b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80146a6:	ee77 7a85 	vadd.f32	s15, s15, s10
 80146aa:	3001      	adds	r0, #1
 80146ac:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80146b0:	eba1 0109 	sub.w	r1, r1, r9
 80146b4:	ee37 7a06 	vadd.f32	s14, s14, s12
 80146b8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80146bc:	f04f 0801 	mov.w	r8, #1
 80146c0:	e7e3      	b.n	801468a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80146c2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80146c4:	4450      	add	r0, sl
 80146c6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80146ca:	4431      	add	r1, r6
 80146cc:	ee77 7a84 	vadd.f32	s15, s15, s8
 80146d0:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80146d4:	4541      	cmp	r1, r8
 80146d6:	db08      	blt.n	80146ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80146d8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80146dc:	3001      	adds	r0, #1
 80146de:	ee37 7a25 	vadd.f32	s14, s14, s11
 80146e2:	eba1 0108 	sub.w	r1, r1, r8
 80146e6:	ee77 7a86 	vadd.f32	s15, s15, s12
 80146ea:	3f01      	subs	r7, #1
 80146ec:	f04f 0901 	mov.w	r9, #1
 80146f0:	e79e      	b.n	8014630 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80146f2:	449c      	add	ip, r3
 80146f4:	1aff      	subs	r7, r7, r3
 80146f6:	f1b8 0f00 	cmp.w	r8, #0
 80146fa:	d009      	beq.n	8014710 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80146fc:	9019      	str	r0, [sp, #100]	; 0x64
 80146fe:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014702:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014706:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801470a:	911d      	str	r1, [sp, #116]	; 0x74
 801470c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014710:	1ad2      	subs	r2, r2, r3
 8014712:	e6b5      	b.n	8014480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014714:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014716:	681b      	ldr	r3, [r3, #0]
 8014718:	b923      	cbnz	r3, 8014724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801471a:	4b04      	ldr	r3, [pc, #16]	; (801472c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801471c:	6818      	ldr	r0, [r3, #0]
 801471e:	6803      	ldr	r3, [r0, #0]
 8014720:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014722:	4798      	blx	r3
 8014724:	b05b      	add	sp, #364	; 0x16c
 8014726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801472a:	bf00      	nop
 801472c:	24002fa4 	.word	0x24002fa4

08014730 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014730:	b570      	push	{r4, r5, r6, lr}
 8014732:	4604      	mov	r4, r0
 8014734:	2500      	movs	r5, #0
 8014736:	9805      	ldr	r0, [sp, #20]
 8014738:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801473c:	6061      	str	r1, [r4, #4]
 801473e:	8263      	strh	r3, [r4, #18]
 8014740:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014744:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014748:	8025      	strh	r5, [r4, #0]
 801474a:	7221      	strb	r1, [r4, #8]
 801474c:	7266      	strb	r6, [r4, #9]
 801474e:	60e0      	str	r0, [r4, #12]
 8014750:	8222      	strh	r2, [r4, #16]
 8014752:	82a3      	strh	r3, [r4, #20]
 8014754:	82e5      	strh	r5, [r4, #22]
 8014756:	8325      	strh	r5, [r4, #24]
 8014758:	8365      	strh	r5, [r4, #26]
 801475a:	83a5      	strh	r5, [r4, #28]
 801475c:	83e5      	strh	r5, [r4, #30]
 801475e:	8425      	strh	r5, [r4, #32]
 8014760:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014764:	b32e      	cbz	r6, 80147b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014766:	6803      	ldr	r3, [r0, #0]
 8014768:	695b      	ldr	r3, [r3, #20]
 801476a:	4798      	blx	r3
 801476c:	4606      	mov	r6, r0
 801476e:	b300      	cbz	r0, 80147b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014770:	68e0      	ldr	r0, [r4, #12]
 8014772:	4631      	mov	r1, r6
 8014774:	6803      	ldr	r3, [r0, #0]
 8014776:	68db      	ldr	r3, [r3, #12]
 8014778:	4798      	blx	r3
 801477a:	4605      	mov	r5, r0
 801477c:	b1c8      	cbz	r0, 80147b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801477e:	7b43      	ldrb	r3, [r0, #13]
 8014780:	7a82      	ldrb	r2, [r0, #10]
 8014782:	005b      	lsls	r3, r3, #1
 8014784:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014788:	4313      	orrs	r3, r2
 801478a:	8423      	strh	r3, [r4, #32]
 801478c:	7a63      	ldrb	r3, [r4, #9]
 801478e:	2b06      	cmp	r3, #6
 8014790:	d10f      	bne.n	80147b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014792:	68e0      	ldr	r0, [r4, #12]
 8014794:	462a      	mov	r2, r5
 8014796:	4631      	mov	r1, r6
 8014798:	6803      	ldr	r3, [r0, #0]
 801479a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801479c:	4798      	blx	r3
 801479e:	7b6b      	ldrb	r3, [r5, #13]
 80147a0:	005b      	lsls	r3, r3, #1
 80147a2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80147a6:	7aab      	ldrb	r3, [r5, #10]
 80147a8:	4313      	orrs	r3, r2
 80147aa:	4418      	add	r0, r3
 80147ac:	8c23      	ldrh	r3, [r4, #32]
 80147ae:	4418      	add	r0, r3
 80147b0:	8420      	strh	r0, [r4, #32]
 80147b2:	4620      	mov	r0, r4
 80147b4:	bd70      	pop	{r4, r5, r6, pc}

080147b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80147b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147ba:	2400      	movs	r4, #0
 80147bc:	b085      	sub	sp, #20
 80147be:	4681      	mov	r9, r0
 80147c0:	4688      	mov	r8, r1
 80147c2:	4692      	mov	sl, r2
 80147c4:	469b      	mov	fp, r3
 80147c6:	4627      	mov	r7, r4
 80147c8:	4625      	mov	r5, r4
 80147ca:	4626      	mov	r6, r4
 80147cc:	4554      	cmp	r4, sl
 80147ce:	da2a      	bge.n	8014826 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80147d0:	2300      	movs	r3, #0
 80147d2:	9303      	str	r3, [sp, #12]
 80147d4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80147d8:	429d      	cmp	r5, r3
 80147da:	d004      	beq.n	80147e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80147dc:	f242 030b 	movw	r3, #8203	; 0x200b
 80147e0:	429d      	cmp	r5, r3
 80147e2:	bf18      	it	ne
 80147e4:	462f      	movne	r7, r5
 80147e6:	ab03      	add	r3, sp, #12
 80147e8:	4642      	mov	r2, r8
 80147ea:	4659      	mov	r1, fp
 80147ec:	4648      	mov	r0, r9
 80147ee:	f002 ff79 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80147f2:	4605      	mov	r5, r0
 80147f4:	b1b8      	cbz	r0, 8014826 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80147f6:	280a      	cmp	r0, #10
 80147f8:	d015      	beq.n	8014826 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80147fa:	9a03      	ldr	r2, [sp, #12]
 80147fc:	b18a      	cbz	r2, 8014822 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80147fe:	7b50      	ldrb	r0, [r2, #13]
 8014800:	4639      	mov	r1, r7
 8014802:	7a93      	ldrb	r3, [r2, #10]
 8014804:	0040      	lsls	r0, r0, #1
 8014806:	8895      	ldrh	r5, [r2, #4]
 8014808:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801480c:	4303      	orrs	r3, r0
 801480e:	4640      	mov	r0, r8
 8014810:	9301      	str	r3, [sp, #4]
 8014812:	f8d8 3000 	ldr.w	r3, [r8]
 8014816:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014818:	4798      	blx	r3
 801481a:	9b01      	ldr	r3, [sp, #4]
 801481c:	4418      	add	r0, r3
 801481e:	4406      	add	r6, r0
 8014820:	b2b6      	uxth	r6, r6
 8014822:	3401      	adds	r4, #1
 8014824:	e7d2      	b.n	80147cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014826:	4630      	mov	r0, r6
 8014828:	b005      	add	sp, #20
 801482a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801482e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801482e:	2a02      	cmp	r2, #2
 8014830:	b530      	push	{r4, r5, lr}
 8014832:	d011      	beq.n	8014858 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014834:	2a03      	cmp	r2, #3
 8014836:	d01c      	beq.n	8014872 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014838:	2a01      	cmp	r2, #1
 801483a:	d10c      	bne.n	8014856 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801483c:	888b      	ldrh	r3, [r1, #4]
 801483e:	8801      	ldrh	r1, [r0, #0]
 8014840:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014844:	1a5b      	subs	r3, r3, r1
 8014846:	8844      	ldrh	r4, [r0, #2]
 8014848:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801484c:	1a9b      	subs	r3, r3, r2
 801484e:	8004      	strh	r4, [r0, #0]
 8014850:	8081      	strh	r1, [r0, #4]
 8014852:	8043      	strh	r3, [r0, #2]
 8014854:	80c2      	strh	r2, [r0, #6]
 8014856:	bd30      	pop	{r4, r5, pc}
 8014858:	88cb      	ldrh	r3, [r1, #6]
 801485a:	8842      	ldrh	r2, [r0, #2]
 801485c:	1a9b      	subs	r3, r3, r2
 801485e:	88c2      	ldrh	r2, [r0, #6]
 8014860:	1a9b      	subs	r3, r3, r2
 8014862:	888a      	ldrh	r2, [r1, #4]
 8014864:	8801      	ldrh	r1, [r0, #0]
 8014866:	8043      	strh	r3, [r0, #2]
 8014868:	1a52      	subs	r2, r2, r1
 801486a:	8881      	ldrh	r1, [r0, #4]
 801486c:	1a52      	subs	r2, r2, r1
 801486e:	8002      	strh	r2, [r0, #0]
 8014870:	e7f1      	b.n	8014856 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014872:	88cb      	ldrh	r3, [r1, #6]
 8014874:	8841      	ldrh	r1, [r0, #2]
 8014876:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801487a:	1a5b      	subs	r3, r3, r1
 801487c:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014880:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014884:	1a9b      	subs	r3, r3, r2
 8014886:	8045      	strh	r5, [r0, #2]
 8014888:	8082      	strh	r2, [r0, #4]
 801488a:	8003      	strh	r3, [r0, #0]
 801488c:	80c4      	strh	r4, [r0, #6]
 801488e:	e7e2      	b.n	8014856 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014890 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014894:	b09f      	sub	sp, #124	; 0x7c
 8014896:	9116      	str	r1, [sp, #88]	; 0x58
 8014898:	9317      	str	r3, [sp, #92]	; 0x5c
 801489a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801489c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801489e:	8809      	ldrh	r1, [r1, #0]
 80148a0:	889b      	ldrh	r3, [r3, #4]
 80148a2:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80148a6:	440b      	add	r3, r1
 80148a8:	9212      	str	r2, [sp, #72]	; 0x48
 80148aa:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80148ae:	b21b      	sxth	r3, r3
 80148b0:	9011      	str	r0, [sp, #68]	; 0x44
 80148b2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80148b6:	9310      	str	r3, [sp, #64]	; 0x40
 80148b8:	f8d8 3000 	ldr.w	r3, [r8]
 80148bc:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80148c0:	7b19      	ldrb	r1, [r3, #12]
 80148c2:	7adb      	ldrb	r3, [r3, #11]
 80148c4:	9114      	str	r1, [sp, #80]	; 0x50
 80148c6:	9315      	str	r3, [sp, #84]	; 0x54
 80148c8:	2a00      	cmp	r2, #0
 80148ca:	d06a      	beq.n	80149a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80148cc:	f898 3010 	ldrb.w	r3, [r8, #16]
 80148d0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80148d2:	2b06      	cmp	r3, #6
 80148d4:	bf14      	ite	ne
 80148d6:	2301      	movne	r3, #1
 80148d8:	2302      	moveq	r3, #2
 80148da:	4413      	add	r3, r2
 80148dc:	f04f 0900 	mov.w	r9, #0
 80148e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80148e2:	464c      	mov	r4, r9
 80148e4:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80148e8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80148ec:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80148f0:	4293      	cmp	r3, r2
 80148f2:	f280 808f 	bge.w	8014a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80148f6:	2300      	movs	r3, #0
 80148f8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80148fc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014900:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014904:	429c      	cmp	r4, r3
 8014906:	d006      	beq.n	8014916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801490a:	f242 020b 	movw	r2, #8203	; 0x200b
 801490e:	4294      	cmp	r4, r2
 8014910:	bf18      	it	ne
 8014912:	4623      	movne	r3, r4
 8014914:	930d      	str	r3, [sp, #52]	; 0x34
 8014916:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014918:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801491a:	f8d8 2000 	ldr.w	r2, [r8]
 801491e:	428b      	cmp	r3, r1
 8014920:	db41      	blt.n	80149a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014922:	6813      	ldr	r3, [r2, #0]
 8014924:	4610      	mov	r0, r2
 8014926:	695b      	ldr	r3, [r3, #20]
 8014928:	4798      	blx	r3
 801492a:	4604      	mov	r4, r0
 801492c:	f8d8 0000 	ldr.w	r0, [r8]
 8014930:	aa1d      	add	r2, sp, #116	; 0x74
 8014932:	4621      	mov	r1, r4
 8014934:	6803      	ldr	r3, [r0, #0]
 8014936:	689d      	ldr	r5, [r3, #8]
 8014938:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801493c:	47a8      	blx	r5
 801493e:	901c      	str	r0, [sp, #112]	; 0x70
 8014940:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014944:	429c      	cmp	r4, r3
 8014946:	f000 80ec 	beq.w	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 801494a:	f242 030b 	movw	r3, #8203	; 0x200b
 801494e:	429c      	cmp	r4, r3
 8014950:	f000 80e7 	beq.w	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014954:	2c00      	cmp	r4, #0
 8014956:	f000 80f9 	beq.w	8014b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 801495a:	2c0a      	cmp	r4, #10
 801495c:	d060      	beq.n	8014a20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801495e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014960:	b36a      	cbz	r2, 80149be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014962:	8894      	ldrh	r4, [r2, #4]
 8014964:	f1bb 0f00 	cmp.w	fp, #0
 8014968:	d03b      	beq.n	80149e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801496a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801496e:	f1bb 0f01 	cmp.w	fp, #1
 8014972:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014976:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801497a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801497e:	ea49 0903 	orr.w	r9, r9, r3
 8014982:	d134      	bne.n	80149ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014984:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014986:	eba6 0609 	sub.w	r6, r6, r9
 801498a:	2b00      	cmp	r3, #0
 801498c:	d14f      	bne.n	8014a2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801498e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014990:	eb09 0306 	add.w	r3, r9, r6
 8014994:	4413      	add	r3, r2
 8014996:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014998:	f9b2 2000 	ldrsh.w	r2, [r2]
 801499c:	4293      	cmp	r3, r2
 801499e:	da51      	bge.n	8014a44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80149a0:	e038      	b.n	8014a14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80149a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80149a4:	e79a      	b.n	80148dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80149a6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80149aa:	4659      	mov	r1, fp
 80149ac:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80149ae:	9301      	str	r3, [sp, #4]
 80149b0:	ab1d      	add	r3, sp, #116	; 0x74
 80149b2:	9300      	str	r3, [sp, #0]
 80149b4:	ab1c      	add	r3, sp, #112	; 0x70
 80149b6:	f002 fede 	bl	8017776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80149ba:	4604      	mov	r4, r0
 80149bc:	e7c0      	b.n	8014940 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80149be:	f8d8 0000 	ldr.w	r0, [r8]
 80149c2:	6803      	ldr	r3, [r0, #0]
 80149c4:	691b      	ldr	r3, [r3, #16]
 80149c6:	4798      	blx	r3
 80149c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80149cc:	4298      	cmp	r0, r3
 80149ce:	f000 80a8 	beq.w	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80149d2:	f242 030b 	movw	r3, #8203	; 0x200b
 80149d6:	4298      	cmp	r0, r3
 80149d8:	f000 80a3 	beq.w	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80149dc:	f1bb 0f00 	cmp.w	fp, #0
 80149e0:	d100      	bne.n	80149e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80149e2:	444e      	add	r6, r9
 80149e4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80149e6:	2a00      	cmp	r2, #0
 80149e8:	d1bf      	bne.n	801496a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80149ea:	4691      	mov	r9, r2
 80149ec:	e099      	b.n	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80149ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149f0:	2b00      	cmp	r3, #0
 80149f2:	f000 80ad 	beq.w	8014b50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 80149f6:	f1bb 0f00 	cmp.w	fp, #0
 80149fa:	d118      	bne.n	8014a2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80149fc:	f8d8 0000 	ldr.w	r0, [r8]
 8014a00:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014a02:	6803      	ldr	r3, [r0, #0]
 8014a04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014a06:	4798      	blx	r3
 8014a08:	4406      	add	r6, r0
 8014a0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014a0c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a0e:	1af3      	subs	r3, r6, r3
 8014a10:	4293      	cmp	r3, r2
 8014a12:	dd17      	ble.n	8014a44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014a14:	2c00      	cmp	r4, #0
 8014a16:	f000 8099 	beq.w	8014b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8014a1a:	2c0a      	cmp	r4, #10
 8014a1c:	f040 8087 	bne.w	8014b2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014a20:	240a      	movs	r4, #10
 8014a22:	fab4 f084 	clz	r0, r4
 8014a26:	0940      	lsrs	r0, r0, #5
 8014a28:	b01f      	add	sp, #124	; 0x7c
 8014a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a2e:	f8d8 0000 	ldr.w	r0, [r8]
 8014a32:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014a34:	6803      	ldr	r3, [r0, #0]
 8014a36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014a38:	4798      	blx	r3
 8014a3a:	f1bb 0f01 	cmp.w	fp, #1
 8014a3e:	eba6 0600 	sub.w	r6, r6, r0
 8014a42:	d0a4      	beq.n	801498e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014a44:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014a46:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014a48:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014a4c:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014a50:	7b43      	ldrb	r3, [r0, #13]
 8014a52:	4431      	add	r1, r6
 8014a54:	015b      	lsls	r3, r3, #5
 8014a56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014a5a:	7983      	ldrb	r3, [r0, #6]
 8014a5c:	4313      	orrs	r3, r2
 8014a5e:	440b      	add	r3, r1
 8014a60:	42bb      	cmp	r3, r7
 8014a62:	db5e      	blt.n	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014a64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014a66:	4299      	cmp	r1, r3
 8014a68:	da5b      	bge.n	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014a6a:	f8d8 0000 	ldr.w	r0, [r8]
 8014a6e:	42b7      	cmp	r7, r6
 8014a70:	6803      	ldr	r3, [r0, #0]
 8014a72:	bfcc      	ite	gt
 8014a74:	1bbf      	subgt	r7, r7, r6
 8014a76:	2700      	movle	r7, #0
 8014a78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014a7a:	bfc8      	it	gt
 8014a7c:	b2bf      	uxthgt	r7, r7
 8014a7e:	4798      	blx	r3
 8014a80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014a82:	7b5a      	ldrb	r2, [r3, #13]
 8014a84:	00d1      	lsls	r1, r2, #3
 8014a86:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014a8a:	7a19      	ldrb	r1, [r3, #8]
 8014a8c:	4329      	orrs	r1, r5
 8014a8e:	0655      	lsls	r5, r2, #25
 8014a90:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014a92:	bf48      	it	mi
 8014a94:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014a98:	4405      	add	r5, r0
 8014a9a:	bf48      	it	mi
 8014a9c:	b209      	sxthmi	r1, r1
 8014a9e:	1a6d      	subs	r5, r5, r1
 8014aa0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014aa2:	b2ad      	uxth	r5, r5
 8014aa4:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014aa8:	fa0f fa85 	sxth.w	sl, r5
 8014aac:	4551      	cmp	r1, sl
 8014aae:	dd3c      	ble.n	8014b2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8014ab0:	0112      	lsls	r2, r2, #4
 8014ab2:	79d8      	ldrb	r0, [r3, #7]
 8014ab4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014ab8:	4302      	orrs	r2, r0
 8014aba:	4492      	add	sl, r2
 8014abc:	4551      	cmp	r1, sl
 8014abe:	dc30      	bgt.n	8014b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014ac0:	1b4d      	subs	r5, r1, r5
 8014ac2:	468a      	mov	sl, r1
 8014ac4:	b22d      	sxth	r5, r5
 8014ac6:	9319      	str	r3, [sp, #100]	; 0x64
 8014ac8:	b2ad      	uxth	r5, r5
 8014aca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014acc:	f8d8 0000 	ldr.w	r0, [r8]
 8014ad0:	681a      	ldr	r2, [r3, #0]
 8014ad2:	6801      	ldr	r1, [r0, #0]
 8014ad4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014ad6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014ad8:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ada:	9218      	str	r2, [sp, #96]	; 0x60
 8014adc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8014ade:	4788      	blx	r1
 8014ae0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014ae4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014ae6:	910b      	str	r1, [sp, #44]	; 0x2c
 8014ae8:	f898 100e 	ldrb.w	r1, [r8, #14]
 8014aec:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8014aee:	910a      	str	r1, [sp, #40]	; 0x28
 8014af0:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014af4:	9109      	str	r1, [sp, #36]	; 0x24
 8014af6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014afa:	9305      	str	r3, [sp, #20]
 8014afc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014afe:	9206      	str	r2, [sp, #24]
 8014b00:	9304      	str	r3, [sp, #16]
 8014b02:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b04:	f8cd a004 	str.w	sl, [sp, #4]
 8014b08:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014b0c:	4437      	add	r7, r6
 8014b0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014b10:	b23f      	sxth	r7, r7
 8014b12:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014b16:	9700      	str	r7, [sp, #0]
 8014b18:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014b1a:	681a      	ldr	r2, [r3, #0]
 8014b1c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014b1e:	685b      	ldr	r3, [r3, #4]
 8014b20:	47a8      	blx	r5
 8014b22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014b24:	3301      	adds	r3, #1
 8014b26:	930e      	str	r3, [sp, #56]	; 0x38
 8014b28:	e6e0      	b.n	80148ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8014b2a:	2500      	movs	r5, #0
 8014b2c:	e7cb      	b.n	8014ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 8014b2e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014b30:	3501      	adds	r5, #1
 8014b32:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014b34:	429d      	cmp	r5, r3
 8014b36:	f6bf af74 	bge.w	8014a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014b3a:	4659      	mov	r1, fp
 8014b3c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014b3e:	f7fa fd4b 	bl	800f5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014b42:	4604      	mov	r4, r0
 8014b44:	b110      	cbz	r0, 8014b4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8014b46:	280a      	cmp	r0, #10
 8014b48:	d1f2      	bne.n	8014b30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 8014b4a:	e769      	b.n	8014a20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014b4c:	2400      	movs	r4, #0
 8014b4e:	e768      	b.n	8014a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014b50:	f1bb 0f00 	cmp.w	fp, #0
 8014b54:	f43f af59 	beq.w	8014a0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014b58:	e774      	b.n	8014a44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014b5a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014b5a:	b530      	push	{r4, r5, lr}
 8014b5c:	8ac4      	ldrh	r4, [r0, #22]
 8014b5e:	8b45      	ldrh	r5, [r0, #26]
 8014b60:	8343      	strh	r3, [r0, #26]
 8014b62:	442c      	add	r4, r5
 8014b64:	1ae4      	subs	r4, r4, r3
 8014b66:	8b83      	ldrh	r3, [r0, #28]
 8014b68:	82c4      	strh	r4, [r0, #22]
 8014b6a:	8b04      	ldrh	r4, [r0, #24]
 8014b6c:	4422      	add	r2, r4
 8014b6e:	440c      	add	r4, r1
 8014b70:	1a59      	subs	r1, r3, r1
 8014b72:	83c2      	strh	r2, [r0, #30]
 8014b74:	8304      	strh	r4, [r0, #24]
 8014b76:	8381      	strh	r1, [r0, #28]
 8014b78:	bd30      	pop	{r4, r5, pc}

08014b7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8014b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b7e:	4604      	mov	r4, r0
 8014b80:	8a47      	ldrh	r7, [r0, #18]
 8014b82:	68c0      	ldr	r0, [r0, #12]
 8014b84:	b085      	sub	sp, #20
 8014b86:	6803      	ldr	r3, [r0, #0]
 8014b88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b8a:	4798      	blx	r3
 8014b8c:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014b90:	7a63      	ldrb	r3, [r4, #9]
 8014b92:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014b96:	3b01      	subs	r3, #1
 8014b98:	42b7      	cmp	r7, r6
 8014b9a:	bfac      	ite	ge
 8014b9c:	f04f 0900 	movge.w	r9, #0
 8014ba0:	f04f 0901 	movlt.w	r9, #1
 8014ba4:	2b05      	cmp	r3, #5
 8014ba6:	d804      	bhi.n	8014bb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8014ba8:	e8df f003 	tbb	[pc, r3]
 8014bac:	470f0854 	.word	0x470f0854
 8014bb0:	4c4c      	.short	0x4c4c
 8014bb2:	2500      	movs	r5, #0
 8014bb4:	46a9      	mov	r9, r5
 8014bb6:	462e      	mov	r6, r5
 8014bb8:	462f      	mov	r7, r5
 8014bba:	e00e      	b.n	8014bda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014bbc:	42b7      	cmp	r7, r6
 8014bbe:	f04f 0500 	mov.w	r5, #0
 8014bc2:	bfb4      	ite	lt
 8014bc4:	2600      	movlt	r6, #0
 8014bc6:	2601      	movge	r6, #1
 8014bc8:	e7f6      	b.n	8014bb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8014bca:	42b7      	cmp	r7, r6
 8014bcc:	464d      	mov	r5, r9
 8014bce:	f04f 0900 	mov.w	r9, #0
 8014bd2:	bfb4      	ite	lt
 8014bd4:	2600      	movlt	r6, #0
 8014bd6:	2601      	movge	r6, #1
 8014bd8:	464f      	mov	r7, r9
 8014bda:	f04f 0800 	mov.w	r8, #0
 8014bde:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014be2:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014be6:	f8cd 8004 	str.w	r8, [sp, #4]
 8014bea:	2300      	movs	r3, #0
 8014bec:	9303      	str	r3, [sp, #12]
 8014bee:	8823      	ldrh	r3, [r4, #0]
 8014bf0:	2b20      	cmp	r3, #32
 8014bf2:	d033      	beq.n	8014c5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8014bf4:	f242 010b 	movw	r1, #8203	; 0x200b
 8014bf8:	1a5a      	subs	r2, r3, r1
 8014bfa:	f1d2 0a00 	rsbs	sl, r2, #0
 8014bfe:	eb4a 0a02 	adc.w	sl, sl, r2
 8014c02:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014c06:	4293      	cmp	r3, r2
 8014c08:	d008      	beq.n	8014c1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8014c0a:	428b      	cmp	r3, r1
 8014c0c:	9a01      	ldr	r2, [sp, #4]
 8014c0e:	bf0e      	itee	eq
 8014c10:	f04f 0a01 	moveq.w	sl, #1
 8014c14:	461a      	movne	r2, r3
 8014c16:	f04f 0a00 	movne.w	sl, #0
 8014c1a:	9201      	str	r2, [sp, #4]
 8014c1c:	ab03      	add	r3, sp, #12
 8014c1e:	68e2      	ldr	r2, [r4, #12]
 8014c20:	7a21      	ldrb	r1, [r4, #8]
 8014c22:	6860      	ldr	r0, [r4, #4]
 8014c24:	f002 fd5e 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014c28:	8020      	strh	r0, [r4, #0]
 8014c2a:	b9d8      	cbnz	r0, 8014c64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8014c2c:	8ba2      	ldrh	r2, [r4, #28]
 8014c2e:	2300      	movs	r3, #0
 8014c30:	4611      	mov	r1, r2
 8014c32:	4620      	mov	r0, r4
 8014c34:	f7ff ff91 	bl	8014b5a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014c38:	e06e      	b.n	8014d18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8014c3a:	2500      	movs	r5, #0
 8014c3c:	2701      	movs	r7, #1
 8014c3e:	46a9      	mov	r9, r5
 8014c40:	462e      	mov	r6, r5
 8014c42:	e7ca      	b.n	8014bda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014c44:	42b7      	cmp	r7, r6
 8014c46:	f04f 0500 	mov.w	r5, #0
 8014c4a:	bfb4      	ite	lt
 8014c4c:	2700      	movlt	r7, #0
 8014c4e:	2701      	movge	r7, #1
 8014c50:	462e      	mov	r6, r5
 8014c52:	e7c2      	b.n	8014bda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014c54:	2500      	movs	r5, #0
 8014c56:	2601      	movs	r6, #1
 8014c58:	46a9      	mov	r9, r5
 8014c5a:	e7ad      	b.n	8014bb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8014c5c:	9301      	str	r3, [sp, #4]
 8014c5e:	f04f 0a01 	mov.w	sl, #1
 8014c62:	e7db      	b.n	8014c1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8014c64:	8b63      	ldrh	r3, [r4, #26]
 8014c66:	280a      	cmp	r0, #10
 8014c68:	f103 0301 	add.w	r3, r3, #1
 8014c6c:	8363      	strh	r3, [r4, #26]
 8014c6e:	d0dd      	beq.n	8014c2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8014c70:	9a03      	ldr	r2, [sp, #12]
 8014c72:	bb62      	cbnz	r2, 8014cce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8014c74:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014c78:	4298      	cmp	r0, r3
 8014c7a:	d003      	beq.n	8014c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8014c7c:	f242 030b 	movw	r3, #8203	; 0x200b
 8014c80:	4298      	cmp	r0, r3
 8014c82:	d1b2      	bne.n	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014c84:	8823      	ldrh	r3, [r4, #0]
 8014c86:	8ba1      	ldrh	r1, [r4, #28]
 8014c88:	2b20      	cmp	r3, #32
 8014c8a:	d003      	beq.n	8014c94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8014c8c:	f242 000b 	movw	r0, #8203	; 0x200b
 8014c90:	4283      	cmp	r3, r0
 8014c92:	d131      	bne.n	8014cf8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8014c94:	f1ba 0f00 	cmp.w	sl, #0
 8014c98:	bf0a      	itet	eq
 8014c9a:	4688      	moveq	r8, r1
 8014c9c:	4650      	movne	r0, sl
 8014c9e:	2001      	moveq	r0, #1
 8014ca0:	440a      	add	r2, r1
 8014ca2:	8b23      	ldrh	r3, [r4, #24]
 8014ca4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014ca8:	b292      	uxth	r2, r2
 8014caa:	83a2      	strh	r2, [r4, #28]
 8014cac:	4413      	add	r3, r2
 8014cae:	f1b9 0f00 	cmp.w	r9, #0
 8014cb2:	d102      	bne.n	8014cba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8014cb4:	2d00      	cmp	r5, #0
 8014cb6:	d042      	beq.n	8014d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8014cb8:	b300      	cbz	r0, 8014cfc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8014cba:	8c21      	ldrh	r1, [r4, #32]
 8014cbc:	4419      	add	r1, r3
 8014cbe:	458c      	cmp	ip, r1
 8014cc0:	da37      	bge.n	8014d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8014cc2:	8ae1      	ldrh	r1, [r4, #22]
 8014cc4:	2900      	cmp	r1, #0
 8014cc6:	d034      	beq.n	8014d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8014cc8:	4563      	cmp	r3, ip
 8014cca:	dd8e      	ble.n	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014ccc:	e01d      	b.n	8014d0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8014cce:	8893      	ldrh	r3, [r2, #4]
 8014cd0:	9901      	ldr	r1, [sp, #4]
 8014cd2:	8023      	strh	r3, [r4, #0]
 8014cd4:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8014cd8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014cdc:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014ce0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014ce4:	ea4b 0b00 	orr.w	fp, fp, r0
 8014ce8:	68e0      	ldr	r0, [r4, #12]
 8014cea:	6803      	ldr	r3, [r0, #0]
 8014cec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014cee:	4798      	blx	r3
 8014cf0:	eb0b 0200 	add.w	r2, fp, r0
 8014cf4:	b292      	uxth	r2, r2
 8014cf6:	e7c5      	b.n	8014c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8014cf8:	2000      	movs	r0, #0
 8014cfa:	e7d1      	b.n	8014ca0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8014cfc:	4563      	cmp	r3, ip
 8014cfe:	f77f af74 	ble.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d02:	8ae3      	ldrh	r3, [r4, #22]
 8014d04:	2b00      	cmp	r3, #0
 8014d06:	f43f af70 	beq.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d0a:	2301      	movs	r3, #1
 8014d0c:	8c22      	ldrh	r2, [r4, #32]
 8014d0e:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014d12:	8be3      	ldrh	r3, [r4, #30]
 8014d14:	4413      	add	r3, r2
 8014d16:	83e3      	strh	r3, [r4, #30]
 8014d18:	68e0      	ldr	r0, [r4, #12]
 8014d1a:	6803      	ldr	r3, [r0, #0]
 8014d1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014d1e:	4798      	blx	r3
 8014d20:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014d24:	4418      	add	r0, r3
 8014d26:	8a63      	ldrh	r3, [r4, #18]
 8014d28:	1a18      	subs	r0, r3, r0
 8014d2a:	8260      	strh	r0, [r4, #18]
 8014d2c:	b005      	add	sp, #20
 8014d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d32:	2300      	movs	r3, #0
 8014d34:	4611      	mov	r1, r2
 8014d36:	4620      	mov	r0, r4
 8014d38:	f7ff ff0f 	bl	8014b5a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014d3c:	e755      	b.n	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d3e:	4563      	cmp	r3, ip
 8014d40:	dd14      	ble.n	8014d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8014d42:	b117      	cbz	r7, 8014d4a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8014d44:	2301      	movs	r3, #1
 8014d46:	460a      	mov	r2, r1
 8014d48:	e772      	b.n	8014c30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8014d4a:	2e00      	cmp	r6, #0
 8014d4c:	f43f af4d 	beq.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d50:	2800      	cmp	r0, #0
 8014d52:	f47f af4a 	bne.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d56:	f1ba 0f00 	cmp.w	sl, #0
 8014d5a:	d002      	beq.n	8014d62 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8014d5c:	2301      	movs	r3, #1
 8014d5e:	4642      	mov	r2, r8
 8014d60:	e767      	b.n	8014c32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014d62:	8ae3      	ldrh	r3, [r4, #22]
 8014d64:	2b00      	cmp	r3, #0
 8014d66:	f43f af40 	beq.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d6a:	e7d5      	b.n	8014d18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8014d6c:	2800      	cmp	r0, #0
 8014d6e:	f47f af3c 	bne.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d72:	f1ba 0f00 	cmp.w	sl, #0
 8014d76:	f43f af38 	beq.w	8014bea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014d7a:	2301      	movs	r3, #1
 8014d7c:	4642      	mov	r2, r8
 8014d7e:	e7da      	b.n	8014d36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08014d80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d82:	4605      	mov	r5, r0
 8014d84:	b08f      	sub	sp, #60	; 0x3c
 8014d86:	4617      	mov	r7, r2
 8014d88:	461c      	mov	r4, r3
 8014d8a:	460e      	mov	r6, r1
 8014d8c:	b1d1      	cbz	r1, 8014dc4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014d8e:	681b      	ldr	r3, [r3, #0]
 8014d90:	4620      	mov	r0, r4
 8014d92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014d94:	4798      	blx	r3
 8014d96:	4240      	negs	r0, r0
 8014d98:	9603      	str	r6, [sp, #12]
 8014d9a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014d9e:	b200      	sxth	r0, r0
 8014da0:	9700      	str	r7, [sp, #0]
 8014da2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014da6:	4629      	mov	r1, r5
 8014da8:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014dac:	2401      	movs	r4, #1
 8014dae:	a805      	add	r0, sp, #20
 8014db0:	f7ff fcbe 	bl	8014730 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014db4:	a805      	add	r0, sp, #20
 8014db6:	f7ff fee0 	bl	8014b7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014dba:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014dbe:	b163      	cbz	r3, 8014dda <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014dc0:	3401      	adds	r4, #1
 8014dc2:	e7f7      	b.n	8014db4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014dc4:	2401      	movs	r4, #1
 8014dc6:	f002 fd59 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014dca:	280a      	cmp	r0, #10
 8014dcc:	4628      	mov	r0, r5
 8014dce:	bf08      	it	eq
 8014dd0:	3401      	addeq	r4, #1
 8014dd2:	f002 fd53 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014dd6:	2800      	cmp	r0, #0
 8014dd8:	d1f7      	bne.n	8014dca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014dda:	b2a0      	uxth	r0, r4
 8014ddc:	b00f      	add	sp, #60	; 0x3c
 8014dde:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014de0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de4:	b0e3      	sub	sp, #396	; 0x18c
 8014de6:	461c      	mov	r4, r3
 8014de8:	4683      	mov	fp, r0
 8014dea:	4688      	mov	r8, r1
 8014dec:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014dee:	2b00      	cmp	r3, #0
 8014df0:	f000 8112 	beq.w	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014df4:	6823      	ldr	r3, [r4, #0]
 8014df6:	2b00      	cmp	r3, #0
 8014df8:	f000 810e 	beq.w	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014dfc:	7ba3      	ldrb	r3, [r4, #14]
 8014dfe:	2b00      	cmp	r3, #0
 8014e00:	f000 810a 	beq.w	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014e04:	ad0a      	add	r5, sp, #40	; 0x28
 8014e06:	6810      	ldr	r0, [r2, #0]
 8014e08:	6851      	ldr	r1, [r2, #4]
 8014e0a:	462b      	mov	r3, r5
 8014e0c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014e10:	c303      	stmia	r3!, {r0, r1}
 8014e12:	2100      	movs	r1, #0
 8014e14:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014e18:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014e1c:	4628      	mov	r0, r5
 8014e1e:	910c      	str	r1, [sp, #48]	; 0x30
 8014e20:	a90c      	add	r1, sp, #48	; 0x30
 8014e22:	79a2      	ldrb	r2, [r4, #6]
 8014e24:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014e28:	f7ff fd01 	bl	801482e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014e2c:	a90c      	add	r1, sp, #48	; 0x30
 8014e2e:	79a2      	ldrb	r2, [r4, #6]
 8014e30:	4608      	mov	r0, r1
 8014e32:	f7ff fcfc 	bl	801482e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014e36:	a817      	add	r0, sp, #92	; 0x5c
 8014e38:	f002 f8f4 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8014e3c:	6820      	ldr	r0, [r4, #0]
 8014e3e:	6803      	ldr	r3, [r0, #0]
 8014e40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e42:	4798      	blx	r3
 8014e44:	4606      	mov	r6, r0
 8014e46:	6820      	ldr	r0, [r4, #0]
 8014e48:	6803      	ldr	r3, [r0, #0]
 8014e4a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e4c:	4798      	blx	r3
 8014e4e:	4633      	mov	r3, r6
 8014e50:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014e52:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014e54:	9000      	str	r0, [sp, #0]
 8014e56:	a817      	add	r0, sp, #92	; 0x5c
 8014e58:	f002 f93f 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e5c:	6820      	ldr	r0, [r4, #0]
 8014e5e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014e62:	6803      	ldr	r3, [r0, #0]
 8014e64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e66:	4798      	blx	r3
 8014e68:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014e6c:	6823      	ldr	r3, [r4, #0]
 8014e6e:	4607      	mov	r7, r0
 8014e70:	4406      	add	r6, r0
 8014e72:	a830      	add	r0, sp, #192	; 0xc0
 8014e74:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014e78:	f002 f8d4 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8014e7c:	7c23      	ldrb	r3, [r4, #16]
 8014e7e:	b17b      	cbz	r3, 8014ea0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014e80:	6820      	ldr	r0, [r4, #0]
 8014e82:	6803      	ldr	r3, [r0, #0]
 8014e84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e86:	4798      	blx	r3
 8014e88:	9009      	str	r0, [sp, #36]	; 0x24
 8014e8a:	6820      	ldr	r0, [r4, #0]
 8014e8c:	6802      	ldr	r2, [r0, #0]
 8014e8e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014e90:	4790      	blx	r2
 8014e92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e94:	9000      	str	r0, [sp, #0]
 8014e96:	a830      	add	r0, sp, #192	; 0xc0
 8014e98:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014e9a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014e9c:	f002 f91d 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ea0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014ea4:	a80e      	add	r0, sp, #56	; 0x38
 8014ea6:	7be2      	ldrb	r2, [r4, #15]
 8014ea8:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014eac:	1a8a      	subs	r2, r1, r2
 8014eae:	7c21      	ldrb	r1, [r4, #16]
 8014eb0:	9103      	str	r1, [sp, #12]
 8014eb2:	b292      	uxth	r2, r2
 8014eb4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014eb8:	9102      	str	r1, [sp, #8]
 8014eba:	6821      	ldr	r1, [r4, #0]
 8014ebc:	9101      	str	r1, [sp, #4]
 8014ebe:	7961      	ldrb	r1, [r4, #5]
 8014ec0:	9100      	str	r1, [sp, #0]
 8014ec2:	a930      	add	r1, sp, #192	; 0xc0
 8014ec4:	f7ff fc34 	bl	8014730 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014ec8:	2e00      	cmp	r6, #0
 8014eca:	dc5b      	bgt.n	8014f84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014ecc:	af17      	add	r7, sp, #92	; 0x5c
 8014ece:	f04f 0900 	mov.w	r9, #0
 8014ed2:	7c23      	ldrb	r3, [r4, #16]
 8014ed4:	2b00      	cmp	r3, #0
 8014ed6:	f000 80b1 	beq.w	801503c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014eda:	a80e      	add	r0, sp, #56	; 0x38
 8014edc:	f7ff fe4d 	bl	8014b7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014ee0:	f1ba 0f00 	cmp.w	sl, #0
 8014ee4:	f000 80a5 	beq.w	8015032 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014ee8:	7c23      	ldrb	r3, [r4, #16]
 8014eea:	2264      	movs	r2, #100	; 0x64
 8014eec:	4639      	mov	r1, r7
 8014eee:	a849      	add	r0, sp, #292	; 0x124
 8014ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8014ef2:	f010 fff4 	bl	8025ede <memcpy>
 8014ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ef8:	2b00      	cmp	r3, #0
 8014efa:	f000 80a7 	beq.w	801504c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014efe:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014f02:	7922      	ldrb	r2, [r4, #4]
 8014f04:	2a01      	cmp	r2, #1
 8014f06:	f040 808a 	bne.w	801501e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014f0a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014f0e:	1ac0      	subs	r0, r0, r3
 8014f10:	2302      	movs	r3, #2
 8014f12:	fb90 f0f3 	sdiv	r0, r0, r3
 8014f16:	b200      	sxth	r0, r0
 8014f18:	7c23      	ldrb	r3, [r4, #16]
 8014f1a:	2b00      	cmp	r3, #0
 8014f1c:	f000 808b 	beq.w	8015036 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014f20:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014f24:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014f28:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014f2c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014f30:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014f34:	2100      	movs	r1, #0
 8014f36:	4410      	add	r0, r2
 8014f38:	4642      	mov	r2, r8
 8014f3a:	b200      	sxth	r0, r0
 8014f3c:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014f40:	9000      	str	r0, [sp, #0]
 8014f42:	4658      	mov	r0, fp
 8014f44:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014f48:	f7ff fca2 	bl	8014890 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014f4c:	2800      	cmp	r0, #0
 8014f4e:	d163      	bne.n	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014f50:	b2b2      	uxth	r2, r6
 8014f52:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014f56:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014f5a:	4413      	add	r3, r2
 8014f5c:	1a8a      	subs	r2, r1, r2
 8014f5e:	b21b      	sxth	r3, r3
 8014f60:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014f64:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014f68:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014f6c:	2a00      	cmp	r2, #0
 8014f6e:	d153      	bne.n	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014f70:	6822      	ldr	r2, [r4, #0]
 8014f72:	8869      	ldrh	r1, [r5, #2]
 8014f74:	7a12      	ldrb	r2, [r2, #8]
 8014f76:	1a9b      	subs	r3, r3, r2
 8014f78:	88ea      	ldrh	r2, [r5, #6]
 8014f7a:	440a      	add	r2, r1
 8014f7c:	b212      	sxth	r2, r2
 8014f7e:	4293      	cmp	r3, r2
 8014f80:	dda7      	ble.n	8014ed2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014f82:	e049      	b.n	8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014f84:	7c23      	ldrb	r3, [r4, #16]
 8014f86:	444f      	add	r7, r9
 8014f88:	b1c3      	cbz	r3, 8014fbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014f8a:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014f8e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014f92:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014f96:	443b      	add	r3, r7
 8014f98:	4293      	cmp	r3, r2
 8014f9a:	da97      	bge.n	8014ecc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014f9c:	a80e      	add	r0, sp, #56	; 0x38
 8014f9e:	f7ff fdec 	bl	8014b7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014fa2:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014fa6:	3b01      	subs	r3, #1
 8014fa8:	b29b      	uxth	r3, r3
 8014faa:	454b      	cmp	r3, r9
 8014fac:	9309      	str	r3, [sp, #36]	; 0x24
 8014fae:	d021      	beq.n	8014ff4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014fb0:	7961      	ldrb	r1, [r4, #5]
 8014fb2:	a817      	add	r0, sp, #92	; 0x5c
 8014fb4:	f7fa fb10 	bl	800f5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014fb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014fba:	e7f4      	b.n	8014fa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014fbc:	fa1f f986 	uxth.w	r9, r6
 8014fc0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014fc4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014fc8:	443b      	add	r3, r7
 8014fca:	4293      	cmp	r3, r2
 8014fcc:	f6bf af7e 	bge.w	8014ecc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014fd0:	a817      	add	r0, sp, #92	; 0x5c
 8014fd2:	f002 fc53 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014fd6:	b1f8      	cbz	r0, 8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014fd8:	280a      	cmp	r0, #10
 8014fda:	d1f1      	bne.n	8014fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014fdc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014fe0:	444b      	add	r3, r9
 8014fe2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014fe6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014fea:	eba3 0309 	sub.w	r3, r3, r9
 8014fee:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014ff2:	e7e5      	b.n	8014fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014ff4:	b2b3      	uxth	r3, r6
 8014ff6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014ffa:	441a      	add	r2, r3
 8014ffc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015000:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015004:	1ad3      	subs	r3, r2, r3
 8015006:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801500a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801500e:	b11b      	cbz	r3, 8015018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015010:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015014:	2b00      	cmp	r3, #0
 8015016:	d0ba      	beq.n	8014f8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015018:	b063      	add	sp, #396	; 0x18c
 801501a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801501e:	2a02      	cmp	r2, #2
 8015020:	d105      	bne.n	801502e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015022:	7be2      	ldrb	r2, [r4, #15]
 8015024:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015028:	1a80      	subs	r0, r0, r2
 801502a:	1ac0      	subs	r0, r0, r3
 801502c:	e773      	b.n	8014f16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801502e:	2000      	movs	r0, #0
 8015030:	e772      	b.n	8014f18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015032:	7be0      	ldrb	r0, [r4, #15]
 8015034:	e770      	b.n	8014f18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015036:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801503a:	e773      	b.n	8014f24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801503c:	f1ba 0f00 	cmp.w	sl, #0
 8015040:	d0f7      	beq.n	8015032 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015042:	2264      	movs	r2, #100	; 0x64
 8015044:	4639      	mov	r1, r7
 8015046:	a849      	add	r0, sp, #292	; 0x124
 8015048:	f010 ff49 	bl	8025ede <memcpy>
 801504c:	2300      	movs	r3, #0
 801504e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015052:	6821      	ldr	r1, [r4, #0]
 8015054:	a849      	add	r0, sp, #292	; 0x124
 8015056:	f7ff fbae 	bl	80147b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801505a:	b203      	sxth	r3, r0
 801505c:	e751      	b.n	8014f02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801505e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801505e:	2b03      	cmp	r3, #3
 8015060:	d818      	bhi.n	8015094 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015062:	e8df f003 	tbb	[pc, r3]
 8015066:	0602      	.short	0x0602
 8015068:	130d      	.short	0x130d
 801506a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801506e:	1850      	adds	r0, r2, r1
 8015070:	4770      	bx	lr
 8015072:	8803      	ldrh	r3, [r0, #0]
 8015074:	8880      	ldrh	r0, [r0, #4]
 8015076:	4418      	add	r0, r3
 8015078:	b200      	sxth	r0, r0
 801507a:	1a80      	subs	r0, r0, r2
 801507c:	3801      	subs	r0, #1
 801507e:	4770      	bx	lr
 8015080:	8803      	ldrh	r3, [r0, #0]
 8015082:	8880      	ldrh	r0, [r0, #4]
 8015084:	4418      	add	r0, r3
 8015086:	b200      	sxth	r0, r0
 8015088:	1a40      	subs	r0, r0, r1
 801508a:	e7f7      	b.n	801507c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801508c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015090:	4410      	add	r0, r2
 8015092:	4770      	bx	lr
 8015094:	2000      	movs	r0, #0
 8015096:	4770      	bx	lr

08015098 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015098:	2b03      	cmp	r3, #3
 801509a:	d817      	bhi.n	80150cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801509c:	e8df f003 	tbb	[pc, r3]
 80150a0:	10090602 	.word	0x10090602
 80150a4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80150a8:	1850      	adds	r0, r2, r1
 80150aa:	4770      	bx	lr
 80150ac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80150b0:	e7fa      	b.n	80150a8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80150b2:	8843      	ldrh	r3, [r0, #2]
 80150b4:	88c0      	ldrh	r0, [r0, #6]
 80150b6:	4418      	add	r0, r3
 80150b8:	b200      	sxth	r0, r0
 80150ba:	1a80      	subs	r0, r0, r2
 80150bc:	3801      	subs	r0, #1
 80150be:	4770      	bx	lr
 80150c0:	8843      	ldrh	r3, [r0, #2]
 80150c2:	88c0      	ldrh	r0, [r0, #6]
 80150c4:	4418      	add	r0, r3
 80150c6:	b200      	sxth	r0, r0
 80150c8:	1a40      	subs	r0, r0, r1
 80150ca:	e7f7      	b.n	80150bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80150cc:	2000      	movs	r0, #0
 80150ce:	4770      	bx	lr

080150d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80150d0:	4b01      	ldr	r3, [pc, #4]	; (80150d8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80150d2:	2200      	movs	r2, #0
 80150d4:	601a      	str	r2, [r3, #0]
 80150d6:	4770      	bx	lr
 80150d8:	24002fac 	.word	0x24002fac

080150dc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80150dc:	4603      	mov	r3, r0
 80150de:	b1c8      	cbz	r0, 8015114 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80150e0:	0c02      	lsrs	r2, r0, #16
 80150e2:	0412      	lsls	r2, r2, #16
 80150e4:	b9a2      	cbnz	r2, 8015110 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80150e6:	0403      	lsls	r3, r0, #16
 80150e8:	2010      	movs	r0, #16
 80150ea:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80150ee:	bf04      	itt	eq
 80150f0:	021b      	lsleq	r3, r3, #8
 80150f2:	3008      	addeq	r0, #8
 80150f4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80150f8:	bf04      	itt	eq
 80150fa:	011b      	lsleq	r3, r3, #4
 80150fc:	3004      	addeq	r0, #4
 80150fe:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015102:	bf04      	itt	eq
 8015104:	009b      	lsleq	r3, r3, #2
 8015106:	3002      	addeq	r0, #2
 8015108:	2b00      	cmp	r3, #0
 801510a:	db04      	blt.n	8015116 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801510c:	3001      	adds	r0, #1
 801510e:	4770      	bx	lr
 8015110:	2000      	movs	r0, #0
 8015112:	e7ea      	b.n	80150ea <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015114:	2020      	movs	r0, #32
 8015116:	4770      	bx	lr

08015118 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8015118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801511c:	b087      	sub	sp, #28
 801511e:	460d      	mov	r5, r1
 8015120:	4616      	mov	r6, r2
 8015122:	4698      	mov	r8, r3
 8015124:	4601      	mov	r1, r0
 8015126:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801512a:	b120      	cbz	r0, 8015136 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801512c:	b11a      	cbz	r2, 8015136 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801512e:	2d1f      	cmp	r5, #31
 8015130:	d801      	bhi.n	8015136 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015132:	2b1f      	cmp	r3, #31
 8015134:	d904      	bls.n	8015140 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8015136:	2000      	movs	r0, #0
 8015138:	6038      	str	r0, [r7, #0]
 801513a:	b007      	add	sp, #28
 801513c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015140:	b97d      	cbnz	r5, 8015162 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015142:	b143      	cbz	r3, 8015156 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015144:	4602      	mov	r2, r0
 8015146:	462b      	mov	r3, r5
 8015148:	4641      	mov	r1, r8
 801514a:	4630      	mov	r0, r6
 801514c:	e9cd 4700 	strd	r4, r7, [sp]
 8015150:	f7ff ffe2 	bl	8015118 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015154:	e7f1      	b.n	801513a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015156:	f04f 33ff 	mov.w	r3, #4294967295
 801515a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801515e:	603b      	str	r3, [r7, #0]
 8015160:	e7eb      	b.n	801513a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015162:	fa32 fa05 	lsrs.w	sl, r2, r5
 8015166:	d106      	bne.n	8015176 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8015168:	4346      	muls	r6, r0
 801516a:	fbb6 f0f4 	udiv	r0, r6, r4
 801516e:	fb04 6610 	mls	r6, r4, r0, r6
 8015172:	603e      	str	r6, [r7, #0]
 8015174:	e7e1      	b.n	801513a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015176:	2201      	movs	r2, #1
 8015178:	fa00 fb05 	lsl.w	fp, r0, r5
 801517c:	40aa      	lsls	r2, r5
 801517e:	fbbb f9f4 	udiv	r9, fp, r4
 8015182:	3a01      	subs	r2, #1
 8015184:	fb0a f309 	mul.w	r3, sl, r9
 8015188:	fb04 b919 	mls	r9, r4, r9, fp
 801518c:	4016      	ands	r6, r2
 801518e:	9303      	str	r3, [sp, #12]
 8015190:	4630      	mov	r0, r6
 8015192:	f7ff ffa3 	bl	80150dc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015196:	462b      	mov	r3, r5
 8015198:	460a      	mov	r2, r1
 801519a:	4601      	mov	r1, r0
 801519c:	4630      	mov	r0, r6
 801519e:	e9cd 4700 	strd	r4, r7, [sp]
 80151a2:	f7ff ffb9 	bl	8015118 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80151a6:	4606      	mov	r6, r0
 80151a8:	4648      	mov	r0, r9
 80151aa:	eb05 0108 	add.w	r1, r5, r8
 80151ae:	f7ff ff95 	bl	80150dc <_ZN8touchgfx16TouchCalibration4clzuEm>
 80151b2:	ab05      	add	r3, sp, #20
 80151b4:	464a      	mov	r2, r9
 80151b6:	e9cd 4300 	strd	r4, r3, [sp]
 80151ba:	4603      	mov	r3, r0
 80151bc:	4650      	mov	r0, sl
 80151be:	f7ff ffab 	bl	8015118 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80151c2:	6839      	ldr	r1, [r7, #0]
 80151c4:	9a05      	ldr	r2, [sp, #20]
 80151c6:	9b03      	ldr	r3, [sp, #12]
 80151c8:	4411      	add	r1, r2
 80151ca:	fbb1 f2f4 	udiv	r2, r1, r4
 80151ce:	18d3      	adds	r3, r2, r3
 80151d0:	fb04 1412 	mls	r4, r4, r2, r1
 80151d4:	441e      	add	r6, r3
 80151d6:	603c      	str	r4, [r7, #0]
 80151d8:	4430      	add	r0, r6
 80151da:	e7ae      	b.n	801513a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080151dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80151dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80151e0:	b085      	sub	sp, #20
 80151e2:	f1b0 0900 	subs.w	r9, r0, #0
 80151e6:	461d      	mov	r5, r3
 80151e8:	4617      	mov	r7, r2
 80151ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80151ec:	bfbb      	ittet	lt
 80151ee:	f1c9 0900 	rsblt	r9, r9, #0
 80151f2:	f04f 36ff 	movlt.w	r6, #4294967295
 80151f6:	2601      	movge	r6, #1
 80151f8:	6823      	ldrlt	r3, [r4, #0]
 80151fa:	bfbc      	itt	lt
 80151fc:	425b      	neglt	r3, r3
 80151fe:	6023      	strlt	r3, [r4, #0]
 8015200:	2a00      	cmp	r2, #0
 8015202:	da04      	bge.n	801520e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015204:	6823      	ldr	r3, [r4, #0]
 8015206:	4257      	negs	r7, r2
 8015208:	4276      	negs	r6, r6
 801520a:	425b      	negs	r3, r3
 801520c:	6023      	str	r3, [r4, #0]
 801520e:	2d00      	cmp	r5, #0
 8015210:	4638      	mov	r0, r7
 8015212:	bfba      	itte	lt
 8015214:	426d      	neglt	r5, r5
 8015216:	f04f 38ff 	movlt.w	r8, #4294967295
 801521a:	f04f 0801 	movge.w	r8, #1
 801521e:	f7ff ff5d 	bl	80150dc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015222:	ab03      	add	r3, sp, #12
 8015224:	463a      	mov	r2, r7
 8015226:	e9cd 5300 	strd	r5, r3, [sp]
 801522a:	4603      	mov	r3, r0
 801522c:	4648      	mov	r0, r9
 801522e:	f7ff ff73 	bl	8015118 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015232:	6823      	ldr	r3, [r4, #0]
 8015234:	9a03      	ldr	r2, [sp, #12]
 8015236:	4546      	cmp	r6, r8
 8015238:	441a      	add	r2, r3
 801523a:	fb92 f3f5 	sdiv	r3, r2, r5
 801523e:	4418      	add	r0, r3
 8015240:	fb05 2313 	mls	r3, r5, r3, r2
 8015244:	bf18      	it	ne
 8015246:	4240      	negne	r0, r0
 8015248:	1c72      	adds	r2, r6, #1
 801524a:	6023      	str	r3, [r4, #0]
 801524c:	d105      	bne.n	801525a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801524e:	2b00      	cmp	r3, #0
 8015250:	f1c3 0200 	rsb	r2, r3, #0
 8015254:	db0b      	blt.n	801526e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015256:	6022      	str	r2, [r4, #0]
 8015258:	e006      	b.n	8015268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801525a:	2e01      	cmp	r6, #1
 801525c:	d104      	bne.n	8015268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801525e:	2b00      	cmp	r3, #0
 8015260:	da02      	bge.n	8015268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015262:	442b      	add	r3, r5
 8015264:	3801      	subs	r0, #1
 8015266:	6023      	str	r3, [r4, #0]
 8015268:	b005      	add	sp, #20
 801526a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801526e:	3801      	subs	r0, #1
 8015270:	1b52      	subs	r2, r2, r5
 8015272:	e7f0      	b.n	8015256 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015274 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015274:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015278:	4c1c      	ldr	r4, [pc, #112]	; (80152ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801527a:	4605      	mov	r5, r0
 801527c:	6807      	ldr	r7, [r0, #0]
 801527e:	69a3      	ldr	r3, [r4, #24]
 8015280:	b92b      	cbnz	r3, 801528e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015282:	6840      	ldr	r0, [r0, #4]
 8015284:	e9c5 7000 	strd	r7, r0, [r5]
 8015288:	b004      	add	sp, #16
 801528a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801528e:	f04f 0802 	mov.w	r8, #2
 8015292:	68a2      	ldr	r2, [r4, #8]
 8015294:	ae04      	add	r6, sp, #16
 8015296:	6820      	ldr	r0, [r4, #0]
 8015298:	fb93 f1f8 	sdiv	r1, r3, r8
 801529c:	440a      	add	r2, r1
 801529e:	69e1      	ldr	r1, [r4, #28]
 80152a0:	f846 2d04 	str.w	r2, [r6, #-4]!
 80152a4:	463a      	mov	r2, r7
 80152a6:	9600      	str	r6, [sp, #0]
 80152a8:	f7ff ff98 	bl	80151dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80152ac:	69a3      	ldr	r3, [r4, #24]
 80152ae:	4607      	mov	r7, r0
 80152b0:	686a      	ldr	r2, [r5, #4]
 80152b2:	6a21      	ldr	r1, [r4, #32]
 80152b4:	9600      	str	r6, [sp, #0]
 80152b6:	6860      	ldr	r0, [r4, #4]
 80152b8:	f7ff ff90 	bl	80151dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80152bc:	69a3      	ldr	r3, [r4, #24]
 80152be:	6962      	ldr	r2, [r4, #20]
 80152c0:	4407      	add	r7, r0
 80152c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80152c4:	9600      	str	r6, [sp, #0]
 80152c6:	68e0      	ldr	r0, [r4, #12]
 80152c8:	fb93 f8f8 	sdiv	r8, r3, r8
 80152cc:	4442      	add	r2, r8
 80152ce:	9203      	str	r2, [sp, #12]
 80152d0:	682a      	ldr	r2, [r5, #0]
 80152d2:	f7ff ff83 	bl	80151dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80152d6:	4680      	mov	r8, r0
 80152d8:	9600      	str	r6, [sp, #0]
 80152da:	69a3      	ldr	r3, [r4, #24]
 80152dc:	686a      	ldr	r2, [r5, #4]
 80152de:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80152e0:	6920      	ldr	r0, [r4, #16]
 80152e2:	f7ff ff7b 	bl	80151dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80152e6:	4440      	add	r0, r8
 80152e8:	e7cc      	b.n	8015284 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80152ea:	bf00      	nop
 80152ec:	24002fb0 	.word	0x24002fb0

080152f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80152f0:	4b07      	ldr	r3, [pc, #28]	; (8015310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80152f2:	781b      	ldrb	r3, [r3, #0]
 80152f4:	2b01      	cmp	r3, #1
 80152f6:	d109      	bne.n	801530c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80152f8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80152fc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015300:	8003      	strh	r3, [r0, #0]
 8015302:	4b04      	ldr	r3, [pc, #16]	; (8015314 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015304:	881b      	ldrh	r3, [r3, #0]
 8015306:	3b01      	subs	r3, #1
 8015308:	1a9b      	subs	r3, r3, r2
 801530a:	800b      	strh	r3, [r1, #0]
 801530c:	4770      	bx	lr
 801530e:	bf00      	nop
 8015310:	24002f9c 	.word	0x24002f9c
 8015314:	24002f98 	.word	0x24002f98

08015318 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8015318:	4b07      	ldr	r3, [pc, #28]	; (8015338 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801531a:	b510      	push	{r4, lr}
 801531c:	781b      	ldrb	r3, [r3, #0]
 801531e:	2b01      	cmp	r3, #1
 8015320:	d108      	bne.n	8015334 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015322:	4b06      	ldr	r3, [pc, #24]	; (801533c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015324:	880c      	ldrh	r4, [r1, #0]
 8015326:	881b      	ldrh	r3, [r3, #0]
 8015328:	f9b0 2000 	ldrsh.w	r2, [r0]
 801532c:	3b01      	subs	r3, #1
 801532e:	1b1b      	subs	r3, r3, r4
 8015330:	8003      	strh	r3, [r0, #0]
 8015332:	800a      	strh	r2, [r1, #0]
 8015334:	bd10      	pop	{r4, pc}
 8015336:	bf00      	nop
 8015338:	24002f9c 	.word	0x24002f9c
 801533c:	24002f98 	.word	0x24002f98

08015340 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015340:	4b0a      	ldr	r3, [pc, #40]	; (801536c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015342:	b510      	push	{r4, lr}
 8015344:	781b      	ldrb	r3, [r3, #0]
 8015346:	2b01      	cmp	r3, #1
 8015348:	d10e      	bne.n	8015368 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801534a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801534e:	8843      	ldrh	r3, [r0, #2]
 8015350:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015354:	18ca      	adds	r2, r1, r3
 8015356:	4b06      	ldr	r3, [pc, #24]	; (8015370 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015358:	8044      	strh	r4, [r0, #2]
 801535a:	881b      	ldrh	r3, [r3, #0]
 801535c:	1a9b      	subs	r3, r3, r2
 801535e:	8003      	strh	r3, [r0, #0]
 8015360:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015364:	8081      	strh	r1, [r0, #4]
 8015366:	80c3      	strh	r3, [r0, #6]
 8015368:	bd10      	pop	{r4, pc}
 801536a:	bf00      	nop
 801536c:	24002f9c 	.word	0x24002f9c
 8015370:	24002f98 	.word	0x24002f98

08015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015374:	4b08      	ldr	r3, [pc, #32]	; (8015398 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015376:	781b      	ldrb	r3, [r3, #0]
 8015378:	2b01      	cmp	r3, #1
 801537a:	d10c      	bne.n	8015396 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801537c:	8803      	ldrh	r3, [r0, #0]
 801537e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015382:	8842      	ldrh	r2, [r0, #2]
 8015384:	8002      	strh	r2, [r0, #0]
 8015386:	185a      	adds	r2, r3, r1
 8015388:	4b04      	ldr	r3, [pc, #16]	; (801539c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801538a:	881b      	ldrh	r3, [r3, #0]
 801538c:	1a9b      	subs	r3, r3, r2
 801538e:	8043      	strh	r3, [r0, #2]
 8015390:	88c3      	ldrh	r3, [r0, #6]
 8015392:	80c1      	strh	r1, [r0, #6]
 8015394:	8083      	strh	r3, [r0, #4]
 8015396:	4770      	bx	lr
 8015398:	24002f9c 	.word	0x24002f9c
 801539c:	24002f98 	.word	0x24002f98

080153a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80153a0:	4b07      	ldr	r3, [pc, #28]	; (80153c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80153a2:	b510      	push	{r4, lr}
 80153a4:	781b      	ldrb	r3, [r3, #0]
 80153a6:	2b01      	cmp	r3, #1
 80153a8:	d108      	bne.n	80153bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80153aa:	f9b1 3000 	ldrsh.w	r3, [r1]
 80153ae:	f9b0 4000 	ldrsh.w	r4, [r0]
 80153b2:	8003      	strh	r3, [r0, #0]
 80153b4:	8893      	ldrh	r3, [r2, #4]
 80153b6:	3b01      	subs	r3, #1
 80153b8:	1b1b      	subs	r3, r3, r4
 80153ba:	800b      	strh	r3, [r1, #0]
 80153bc:	bd10      	pop	{r4, pc}
 80153be:	bf00      	nop
 80153c0:	24002f9c 	.word	0x24002f9c

080153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80153c4:	4b0a      	ldr	r3, [pc, #40]	; (80153f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80153c6:	460a      	mov	r2, r1
 80153c8:	b510      	push	{r4, lr}
 80153ca:	781b      	ldrb	r3, [r3, #0]
 80153cc:	2b01      	cmp	r3, #1
 80153ce:	d10d      	bne.n	80153ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80153d0:	8881      	ldrh	r1, [r0, #4]
 80153d2:	8803      	ldrh	r3, [r0, #0]
 80153d4:	440b      	add	r3, r1
 80153d6:	4601      	mov	r1, r0
 80153d8:	3b01      	subs	r3, #1
 80153da:	f821 3b02 	strh.w	r3, [r1], #2
 80153de:	f7ff ffdf 	bl	80153a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80153e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80153e6:	88c2      	ldrh	r2, [r0, #6]
 80153e8:	80c3      	strh	r3, [r0, #6]
 80153ea:	8082      	strh	r2, [r0, #4]
 80153ec:	bd10      	pop	{r4, pc}
 80153ee:	bf00      	nop
 80153f0:	24002f9c 	.word	0x24002f9c

080153f4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80153f4:	4b06      	ldr	r3, [pc, #24]	; (8015410 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80153f6:	2100      	movs	r1, #0
 80153f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80153fc:	4b05      	ldr	r3, [pc, #20]	; (8015414 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80153fe:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015402:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015406:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801540a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801540e:	4770      	bx	lr
 8015410:	24002f98 	.word	0x24002f98
 8015414:	24002f9a 	.word	0x24002f9a

08015418 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015418:	4b03      	ldr	r3, [pc, #12]	; (8015428 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801541a:	6818      	ldr	r0, [r3, #0]
 801541c:	b110      	cbz	r0, 8015424 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801541e:	6803      	ldr	r3, [r0, #0]
 8015420:	699b      	ldr	r3, [r3, #24]
 8015422:	4718      	bx	r3
 8015424:	4770      	bx	lr
 8015426:	bf00      	nop
 8015428:	24002fe0 	.word	0x24002fe0

0801542c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801542c:	4770      	bx	lr
	...

08015430 <_ZN8touchgfx11Application4drawEv>:
 8015430:	4b09      	ldr	r3, [pc, #36]	; (8015458 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015432:	b507      	push	{r0, r1, r2, lr}
 8015434:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015438:	2100      	movs	r1, #0
 801543a:	4b08      	ldr	r3, [pc, #32]	; (801545c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801543c:	9100      	str	r1, [sp, #0]
 801543e:	4669      	mov	r1, sp
 8015440:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015444:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015448:	f8ad 3006 	strh.w	r3, [sp, #6]
 801544c:	6803      	ldr	r3, [r0, #0]
 801544e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015450:	4798      	blx	r3
 8015452:	b003      	add	sp, #12
 8015454:	f85d fb04 	ldr.w	pc, [sp], #4
 8015458:	24002f98 	.word	0x24002f98
 801545c:	24002f9a 	.word	0x24002f9a

08015460 <_ZN8touchgfx11Application10invalidateEv>:
 8015460:	4b09      	ldr	r3, [pc, #36]	; (8015488 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015462:	b082      	sub	sp, #8
 8015464:	2100      	movs	r1, #0
 8015466:	f9b3 2000 	ldrsh.w	r2, [r3]
 801546a:	4b08      	ldr	r3, [pc, #32]	; (801548c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801546c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015470:	aa02      	add	r2, sp, #8
 8015472:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015476:	9100      	str	r1, [sp, #0]
 8015478:	f8ad 3006 	strh.w	r3, [sp, #6]
 801547c:	6803      	ldr	r3, [r0, #0]
 801547e:	e912 0006 	ldmdb	r2, {r1, r2}
 8015482:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015484:	b002      	add	sp, #8
 8015486:	4718      	bx	r3
 8015488:	24002f98 	.word	0x24002f98
 801548c:	24002f9a 	.word	0x24002f9a

08015490 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015490:	4b03      	ldr	r3, [pc, #12]	; (80154a0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015492:	6818      	ldr	r0, [r3, #0]
 8015494:	b110      	cbz	r0, 801549c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015496:	6803      	ldr	r3, [r0, #0]
 8015498:	69db      	ldr	r3, [r3, #28]
 801549a:	4718      	bx	r3
 801549c:	4770      	bx	lr
 801549e:	bf00      	nop
 80154a0:	24002fe0 	.word	0x24002fe0

080154a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80154a4:	4b03      	ldr	r3, [pc, #12]	; (80154b4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80154a6:	6818      	ldr	r0, [r3, #0]
 80154a8:	b110      	cbz	r0, 80154b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80154aa:	6803      	ldr	r3, [r0, #0]
 80154ac:	6a1b      	ldr	r3, [r3, #32]
 80154ae:	4718      	bx	r3
 80154b0:	4770      	bx	lr
 80154b2:	bf00      	nop
 80154b4:	24002fe0 	.word	0x24002fe0

080154b8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80154b8:	2300      	movs	r3, #0
 80154ba:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80154be:	4770      	bx	lr

080154c0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80154c0:	4b03      	ldr	r3, [pc, #12]	; (80154d0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80154c2:	6818      	ldr	r0, [r3, #0]
 80154c4:	b110      	cbz	r0, 80154cc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80154c6:	6803      	ldr	r3, [r0, #0]
 80154c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80154ca:	4718      	bx	r3
 80154cc:	4770      	bx	lr
 80154ce:	bf00      	nop
 80154d0:	24002fe0 	.word	0x24002fe0

080154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80154d4:	b510      	push	{r4, lr}
 80154d6:	f9b1 4000 	ldrsh.w	r4, [r1]
 80154da:	888a      	ldrh	r2, [r1, #4]
 80154dc:	f9b0 3000 	ldrsh.w	r3, [r0]
 80154e0:	4422      	add	r2, r4
 80154e2:	b212      	sxth	r2, r2
 80154e4:	4293      	cmp	r3, r2
 80154e6:	da15      	bge.n	8015514 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80154e8:	8882      	ldrh	r2, [r0, #4]
 80154ea:	4413      	add	r3, r2
 80154ec:	b21b      	sxth	r3, r3
 80154ee:	429c      	cmp	r4, r3
 80154f0:	da10      	bge.n	8015514 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80154f2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80154f6:	88c9      	ldrh	r1, [r1, #6]
 80154f8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80154fc:	4419      	add	r1, r3
 80154fe:	b209      	sxth	r1, r1
 8015500:	428a      	cmp	r2, r1
 8015502:	da07      	bge.n	8015514 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015504:	88c0      	ldrh	r0, [r0, #6]
 8015506:	4410      	add	r0, r2
 8015508:	b200      	sxth	r0, r0
 801550a:	4283      	cmp	r3, r0
 801550c:	bfac      	ite	ge
 801550e:	2000      	movge	r0, #0
 8015510:	2001      	movlt	r0, #1
 8015512:	bd10      	pop	{r4, pc}
 8015514:	2000      	movs	r0, #0
 8015516:	e7fc      	b.n	8015512 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015518 <_ZN8touchgfx4Rect10restrictToEss>:
 8015518:	f9b0 3000 	ldrsh.w	r3, [r0]
 801551c:	2b00      	cmp	r3, #0
 801551e:	b510      	push	{r4, lr}
 8015520:	da04      	bge.n	801552c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015522:	8884      	ldrh	r4, [r0, #4]
 8015524:	4423      	add	r3, r4
 8015526:	8083      	strh	r3, [r0, #4]
 8015528:	2300      	movs	r3, #0
 801552a:	8003      	strh	r3, [r0, #0]
 801552c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015530:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015534:	1b09      	subs	r1, r1, r4
 8015536:	428b      	cmp	r3, r1
 8015538:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801553c:	bfc8      	it	gt
 801553e:	8081      	strhgt	r1, [r0, #4]
 8015540:	2b00      	cmp	r3, #0
 8015542:	da04      	bge.n	801554e <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015544:	88c1      	ldrh	r1, [r0, #6]
 8015546:	440b      	add	r3, r1
 8015548:	80c3      	strh	r3, [r0, #6]
 801554a:	2300      	movs	r3, #0
 801554c:	8043      	strh	r3, [r0, #2]
 801554e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015552:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015556:	1a52      	subs	r2, r2, r1
 8015558:	4293      	cmp	r3, r2
 801555a:	bfc8      	it	gt
 801555c:	80c2      	strhgt	r2, [r0, #6]
 801555e:	bd10      	pop	{r4, pc}

08015560 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015560:	4b10      	ldr	r3, [pc, #64]	; (80155a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015562:	b510      	push	{r4, lr}
 8015564:	460c      	mov	r4, r1
 8015566:	f9b3 2000 	ldrsh.w	r2, [r3]
 801556a:	4b0f      	ldr	r3, [pc, #60]	; (80155a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801556c:	4620      	mov	r0, r4
 801556e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015572:	f7ff ffd1 	bl	8015518 <_ZN8touchgfx4Rect10restrictToEss>
 8015576:	4b0d      	ldr	r3, [pc, #52]	; (80155ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015578:	6818      	ldr	r0, [r3, #0]
 801557a:	b190      	cbz	r0, 80155a2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801557c:	6803      	ldr	r3, [r0, #0]
 801557e:	4621      	mov	r1, r4
 8015580:	689b      	ldr	r3, [r3, #8]
 8015582:	4798      	blx	r3
 8015584:	4b0a      	ldr	r3, [pc, #40]	; (80155b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015586:	6818      	ldr	r0, [r3, #0]
 8015588:	b118      	cbz	r0, 8015592 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801558a:	6803      	ldr	r3, [r0, #0]
 801558c:	4621      	mov	r1, r4
 801558e:	689b      	ldr	r3, [r3, #8]
 8015590:	4798      	blx	r3
 8015592:	4b08      	ldr	r3, [pc, #32]	; (80155b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015594:	4621      	mov	r1, r4
 8015596:	6818      	ldr	r0, [r3, #0]
 8015598:	6803      	ldr	r3, [r0, #0]
 801559a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801559e:	69db      	ldr	r3, [r3, #28]
 80155a0:	4718      	bx	r3
 80155a2:	bd10      	pop	{r4, pc}
 80155a4:	24002f9a 	.word	0x24002f9a
 80155a8:	24002f98 	.word	0x24002f98
 80155ac:	24002fe0 	.word	0x24002fe0
 80155b0:	24002fdc 	.word	0x24002fdc
 80155b4:	24002fa4 	.word	0x24002fa4

080155b8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80155b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80155ba:	4606      	mov	r6, r0
 80155bc:	4608      	mov	r0, r1
 80155be:	460f      	mov	r7, r1
 80155c0:	f7fc fdf7 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80155c4:	b9e8      	cbnz	r0, 8015602 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80155c6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80155ca:	f9b6 4000 	ldrsh.w	r4, [r6]
 80155ce:	42a5      	cmp	r5, r4
 80155d0:	db17      	blt.n	8015602 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80155d2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80155d6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80155da:	429a      	cmp	r2, r3
 80155dc:	db11      	blt.n	8015602 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80155de:	88b9      	ldrh	r1, [r7, #4]
 80155e0:	440d      	add	r5, r1
 80155e2:	88b1      	ldrh	r1, [r6, #4]
 80155e4:	440c      	add	r4, r1
 80155e6:	b22d      	sxth	r5, r5
 80155e8:	b224      	sxth	r4, r4
 80155ea:	42a5      	cmp	r5, r4
 80155ec:	dc09      	bgt.n	8015602 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80155ee:	88f8      	ldrh	r0, [r7, #6]
 80155f0:	4410      	add	r0, r2
 80155f2:	88f2      	ldrh	r2, [r6, #6]
 80155f4:	4413      	add	r3, r2
 80155f6:	b200      	sxth	r0, r0
 80155f8:	b21b      	sxth	r3, r3
 80155fa:	4298      	cmp	r0, r3
 80155fc:	bfcc      	ite	gt
 80155fe:	2000      	movgt	r0, #0
 8015600:	2001      	movle	r0, #1
 8015602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015604 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015606:	4604      	mov	r4, r0
 8015608:	4608      	mov	r0, r1
 801560a:	460d      	mov	r5, r1
 801560c:	f7fc fdd1 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015610:	b978      	cbnz	r0, 8015632 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015612:	4620      	mov	r0, r4
 8015614:	f7fc fdcd 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015618:	f9b5 6000 	ldrsh.w	r6, [r5]
 801561c:	b150      	cbz	r0, 8015634 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801561e:	8026      	strh	r6, [r4, #0]
 8015620:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015624:	8063      	strh	r3, [r4, #2]
 8015626:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801562a:	80a3      	strh	r3, [r4, #4]
 801562c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015630:	80e3      	strh	r3, [r4, #6]
 8015632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015634:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015638:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801563c:	42b1      	cmp	r1, r6
 801563e:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015642:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015646:	460f      	mov	r7, r1
 8015648:	88ed      	ldrh	r5, [r5, #6]
 801564a:	bfa8      	it	ge
 801564c:	4637      	movge	r7, r6
 801564e:	4293      	cmp	r3, r2
 8015650:	4618      	mov	r0, r3
 8015652:	4466      	add	r6, ip
 8015654:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015658:	bfa8      	it	ge
 801565a:	4610      	movge	r0, r2
 801565c:	442a      	add	r2, r5
 801565e:	88e5      	ldrh	r5, [r4, #6]
 8015660:	4461      	add	r1, ip
 8015662:	b236      	sxth	r6, r6
 8015664:	8027      	strh	r7, [r4, #0]
 8015666:	442b      	add	r3, r5
 8015668:	b209      	sxth	r1, r1
 801566a:	b212      	sxth	r2, r2
 801566c:	8060      	strh	r0, [r4, #2]
 801566e:	b21b      	sxth	r3, r3
 8015670:	428e      	cmp	r6, r1
 8015672:	bfac      	ite	ge
 8015674:	ebc7 0106 	rsbge	r1, r7, r6
 8015678:	ebc7 0101 	rsblt	r1, r7, r1
 801567c:	429a      	cmp	r2, r3
 801567e:	bfac      	ite	ge
 8015680:	ebc0 0202 	rsbge	r2, r0, r2
 8015684:	ebc0 0203 	rsblt	r2, r0, r3
 8015688:	80a1      	strh	r1, [r4, #4]
 801568a:	80e2      	strh	r2, [r4, #6]
 801568c:	e7d1      	b.n	8015632 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015690 <_ZN8touchgfx11Application11getInstanceEv>:
 8015690:	4b01      	ldr	r3, [pc, #4]	; (8015698 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015692:	6818      	ldr	r0, [r3, #0]
 8015694:	4770      	bx	lr
 8015696:	bf00      	nop
 8015698:	24002ff0 	.word	0x24002ff0

0801569c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801569c:	2300      	movs	r3, #0
 801569e:	b510      	push	{r4, lr}
 80156a0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80156a4:	4604      	mov	r4, r0
 80156a6:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80156aa:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80156ae:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80156b2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80156b6:	429a      	cmp	r2, r3
 80156b8:	d90e      	bls.n	80156d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80156ba:	18e2      	adds	r2, r4, r3
 80156bc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80156c0:	b122      	cbz	r2, 80156cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80156c2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80156c6:	6803      	ldr	r3, [r0, #0]
 80156c8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80156ca:	4798      	blx	r3
 80156cc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80156d0:	3301      	adds	r3, #1
 80156d2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80156d6:	e7ea      	b.n	80156ae <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80156d8:	bd10      	pop	{r4, pc}

080156da <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80156da:	2300      	movs	r3, #0
 80156dc:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80156e0:	30a4      	adds	r0, #164	; 0xa4
 80156e2:	f820 3c24 	strh.w	r3, [r0, #-36]
 80156e6:	f802 3b01 	strb.w	r3, [r2], #1
 80156ea:	4282      	cmp	r2, r0
 80156ec:	d1fb      	bne.n	80156e6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80156ee:	4770      	bx	lr

080156f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80156f0:	b570      	push	{r4, r5, r6, lr}
 80156f2:	4c0b      	ldr	r4, [pc, #44]	; (8015720 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80156f4:	4605      	mov	r5, r0
 80156f6:	460e      	mov	r6, r1
 80156f8:	6820      	ldr	r0, [r4, #0]
 80156fa:	b110      	cbz	r0, 8015702 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80156fc:	6803      	ldr	r3, [r0, #0]
 80156fe:	695b      	ldr	r3, [r3, #20]
 8015700:	4798      	blx	r3
 8015702:	1d28      	adds	r0, r5, #4
 8015704:	f7ff ffe9 	bl	80156da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015708:	6026      	str	r6, [r4, #0]
 801570a:	6833      	ldr	r3, [r6, #0]
 801570c:	4630      	mov	r0, r6
 801570e:	68db      	ldr	r3, [r3, #12]
 8015710:	4798      	blx	r3
 8015712:	682b      	ldr	r3, [r5, #0]
 8015714:	4628      	mov	r0, r5
 8015716:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015718:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801571c:	4718      	bx	r3
 801571e:	bf00      	nop
 8015720:	24002fe0 	.word	0x24002fe0

08015724 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015724:	2300      	movs	r3, #0
 8015726:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801572a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801572e:	461a      	mov	r2, r3
 8015730:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015732:	461c      	mov	r4, r3
 8015734:	461d      	mov	r5, r3
 8015736:	459c      	cmp	ip, r3
 8015738:	dd1a      	ble.n	8015770 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801573a:	18c6      	adds	r6, r0, r3
 801573c:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015740:	b16e      	cbz	r6, 801575e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015742:	429a      	cmp	r2, r3
 8015744:	d008      	beq.n	8015758 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015746:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801574a:	fa1f fe82 	uxth.w	lr, r2
 801574e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015752:	1887      	adds	r7, r0, r2
 8015754:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015758:	3201      	adds	r2, #1
 801575a:	3301      	adds	r3, #1
 801575c:	e7eb      	b.n	8015736 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801575e:	4299      	cmp	r1, r3
 8015760:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015764:	bfa8      	it	ge
 8015766:	3501      	addge	r5, #1
 8015768:	429e      	cmp	r6, r3
 801576a:	bfc8      	it	gt
 801576c:	3401      	addgt	r4, #1
 801576e:	e7f4      	b.n	801575a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015770:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015774:	1b49      	subs	r1, r1, r5
 8015776:	1b1b      	subs	r3, r3, r4
 8015778:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 801577c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015780:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015784:	4293      	cmp	r3, r2
 8015786:	dd03      	ble.n	8015790 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015788:	3b01      	subs	r3, #1
 801578a:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801578e:	e7f7      	b.n	8015780 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015790:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015794 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015794:	b570      	push	{r4, r5, r6, lr}
 8015796:	4d16      	ldr	r5, [pc, #88]	; (80157f0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015798:	4604      	mov	r4, r0
 801579a:	6828      	ldr	r0, [r5, #0]
 801579c:	b140      	cbz	r0, 80157b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801579e:	7a03      	ldrb	r3, [r0, #8]
 80157a0:	b933      	cbnz	r3, 80157b0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80157a2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80157a6:	6803      	ldr	r3, [r0, #0]
 80157a8:	689b      	ldr	r3, [r3, #8]
 80157aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80157ae:	4718      	bx	r3
 80157b0:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80157b4:	4e0f      	ldr	r6, [pc, #60]	; (80157f4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80157b6:	b973      	cbnz	r3, 80157d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80157b8:	b168      	cbz	r0, 80157d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80157ba:	7a03      	ldrb	r3, [r0, #8]
 80157bc:	b15b      	cbz	r3, 80157d6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80157be:	6830      	ldr	r0, [r6, #0]
 80157c0:	b110      	cbz	r0, 80157c8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80157c2:	6803      	ldr	r3, [r0, #0]
 80157c4:	691b      	ldr	r3, [r3, #16]
 80157c6:	4798      	blx	r3
 80157c8:	6828      	ldr	r0, [r5, #0]
 80157ca:	6803      	ldr	r3, [r0, #0]
 80157cc:	68db      	ldr	r3, [r3, #12]
 80157ce:	4798      	blx	r3
 80157d0:	2301      	movs	r3, #1
 80157d2:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80157d6:	3404      	adds	r4, #4
 80157d8:	4620      	mov	r0, r4
 80157da:	f7ff ff5f 	bl	801569c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80157de:	4620      	mov	r0, r4
 80157e0:	f7ff ffa0 	bl	8015724 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80157e4:	6830      	ldr	r0, [r6, #0]
 80157e6:	b110      	cbz	r0, 80157ee <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80157e8:	6803      	ldr	r3, [r0, #0]
 80157ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80157ec:	e7dd      	b.n	80157aa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80157ee:	bd70      	pop	{r4, r5, r6, pc}
 80157f0:	24002fe4 	.word	0x24002fe4
 80157f4:	24002fe0 	.word	0x24002fe0

080157f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80157f8:	4603      	mov	r3, r0
 80157fa:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80157fe:	2200      	movs	r2, #0
 8015800:	801a      	strh	r2, [r3, #0]
 8015802:	3308      	adds	r3, #8
 8015804:	f823 2c06 	strh.w	r2, [r3, #-6]
 8015808:	f823 2c04 	strh.w	r2, [r3, #-4]
 801580c:	f823 2c02 	strh.w	r2, [r3, #-2]
 8015810:	428b      	cmp	r3, r1
 8015812:	d1f5      	bne.n	8015800 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015814:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015818:	4770      	bx	lr
	...

0801581c <_ZN8touchgfx11ApplicationC1Ev>:
 801581c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801581e:	4b1d      	ldr	r3, [pc, #116]	; (8015894 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015820:	4606      	mov	r6, r0
 8015822:	4604      	mov	r4, r0
 8015824:	2500      	movs	r5, #0
 8015826:	f846 3b04 	str.w	r3, [r6], #4
 801582a:	22a8      	movs	r2, #168	; 0xa8
 801582c:	2100      	movs	r1, #0
 801582e:	4630      	mov	r0, r6
 8015830:	f010 fa85 	bl	8025d3e <memset>
 8015834:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015838:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801583c:	4f16      	ldr	r7, [pc, #88]	; (8015898 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801583e:	f7ff ffdb 	bl	80157f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015842:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015846:	f7ff ffd7 	bl	80157f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801584a:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801584e:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015852:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015856:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 801585a:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 801585e:	490f      	ldr	r1, [pc, #60]	; (801589c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015860:	480f      	ldr	r0, [pc, #60]	; (80158a0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015862:	f00f ff2f 	bl	80256c4 <CRC_Lock>
 8015866:	4b0f      	ldr	r3, [pc, #60]	; (80158a4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015868:	b158      	cbz	r0, 8015882 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801586a:	801d      	strh	r5, [r3, #0]
 801586c:	2300      	movs	r3, #0
 801586e:	4a0e      	ldr	r2, [pc, #56]	; (80158a8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015870:	4630      	mov	r0, r6
 8015872:	6013      	str	r3, [r2, #0]
 8015874:	4a0d      	ldr	r2, [pc, #52]	; (80158ac <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015876:	603b      	str	r3, [r7, #0]
 8015878:	6013      	str	r3, [r2, #0]
 801587a:	f7ff ff2e 	bl	80156da <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801587e:	4620      	mov	r0, r4
 8015880:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015882:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015886:	2002      	movs	r0, #2
 8015888:	801a      	strh	r2, [r3, #0]
 801588a:	6038      	str	r0, [r7, #0]
 801588c:	f001 fa50 	bl	8016d30 <_ZN8touchgfx6Screen4drawEv>
 8015890:	e7ec      	b.n	801586c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015892:	bf00      	nop
 8015894:	08028b00 	.word	0x08028b00
 8015898:	24002fe0 	.word	0x24002fe0
 801589c:	b5e8b5cd 	.word	0xb5e8b5cd
 80158a0:	f407a5c2 	.word	0xf407a5c2
 80158a4:	2400001c 	.word	0x2400001c
 80158a8:	24002ff0 	.word	0x24002ff0
 80158ac:	24002fe4 	.word	0x24002fe4

080158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80158b0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80158b4:	3b01      	subs	r3, #1
 80158b6:	b29b      	uxth	r3, r3
 80158b8:	428b      	cmp	r3, r1
 80158ba:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80158be:	b510      	push	{r4, lr}
 80158c0:	d908      	bls.n	80158d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80158c2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80158c6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80158ca:	681a      	ldr	r2, [r3, #0]
 80158cc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80158d0:	685a      	ldr	r2, [r3, #4]
 80158d2:	6062      	str	r2, [r4, #4]
 80158d4:	bd10      	pop	{r4, pc}
	...

080158d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80158d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158dc:	b08f      	sub	sp, #60	; 0x3c
 80158de:	4b8f      	ldr	r3, [pc, #572]	; (8015b1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80158e0:	4683      	mov	fp, r0
 80158e2:	ac0a      	add	r4, sp, #40	; 0x28
 80158e4:	e884 0006 	stmia.w	r4, {r1, r2}
 80158e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158ec:	4620      	mov	r0, r4
 80158ee:	4b8c      	ldr	r3, [pc, #560]	; (8015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80158f0:	f9b3 1000 	ldrsh.w	r1, [r3]
 80158f4:	f7ff fe10 	bl	8015518 <_ZN8touchgfx4Rect10restrictToEss>
 80158f8:	4620      	mov	r0, r4
 80158fa:	f7fc fc5a 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158fe:	2800      	cmp	r0, #0
 8015900:	d16a      	bne.n	80159d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015902:	9403      	str	r4, [sp, #12]
 8015904:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015908:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801590c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015910:	9301      	str	r3, [sp, #4]
 8015912:	35a4      	adds	r5, #164	; 0xa4
 8015914:	b15c      	cbz	r4, 801592e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015916:	4629      	mov	r1, r5
 8015918:	9803      	ldr	r0, [sp, #12]
 801591a:	f7ff fe4d 	bl	80155b8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801591e:	3c01      	subs	r4, #1
 8015920:	b118      	cbz	r0, 801592a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015922:	b2a1      	uxth	r1, r4
 8015924:	9801      	ldr	r0, [sp, #4]
 8015926:	f7ff ffc3 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801592a:	3d08      	subs	r5, #8
 801592c:	e7f2      	b.n	8015914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801592e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015932:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015936:	f8cd a010 	str.w	sl, [sp, #16]
 801593a:	9302      	str	r3, [sp, #8]
 801593c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015940:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015944:	9306      	str	r3, [sp, #24]
 8015946:	445c      	add	r4, fp
 8015948:	2500      	movs	r5, #0
 801594a:	4626      	mov	r6, r4
 801594c:	f8cd a014 	str.w	sl, [sp, #20]
 8015950:	462f      	mov	r7, r5
 8015952:	9b05      	ldr	r3, [sp, #20]
 8015954:	2b00      	cmp	r3, #0
 8015956:	d073      	beq.n	8015a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015958:	9903      	ldr	r1, [sp, #12]
 801595a:	4630      	mov	r0, r6
 801595c:	f7ff fdba 	bl	80154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015960:	b350      	cbz	r0, 80159b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015962:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015966:	f9b6 c000 	ldrsh.w	ip, [r6]
 801596a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801596e:	45e6      	cmp	lr, ip
 8015970:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015974:	db33      	blt.n	80159de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015976:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801597a:	88b3      	ldrh	r3, [r6, #4]
 801597c:	4472      	add	r2, lr
 801597e:	4463      	add	r3, ip
 8015980:	b212      	sxth	r2, r2
 8015982:	b21b      	sxth	r3, r3
 8015984:	429a      	cmp	r2, r3
 8015986:	dc2a      	bgt.n	80159de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015988:	fa1f f289 	uxth.w	r2, r9
 801598c:	88f3      	ldrh	r3, [r6, #6]
 801598e:	45c8      	cmp	r8, r9
 8015990:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015994:	4413      	add	r3, r2
 8015996:	fa1f fc88 	uxth.w	ip, r8
 801599a:	b29b      	uxth	r3, r3
 801599c:	fa0f fe83 	sxth.w	lr, r3
 80159a0:	db0f      	blt.n	80159c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80159a2:	eba3 030c 	sub.w	r3, r3, ip
 80159a6:	1ac9      	subs	r1, r1, r3
 80159a8:	b209      	sxth	r1, r1
 80159aa:	2900      	cmp	r1, #0
 80159ac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80159b0:	dd12      	ble.n	80159d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80159b2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80159b6:	4605      	mov	r5, r0
 80159b8:	9b05      	ldr	r3, [sp, #20]
 80159ba:	3e08      	subs	r6, #8
 80159bc:	3b01      	subs	r3, #1
 80159be:	9305      	str	r3, [sp, #20]
 80159c0:	e7c7      	b.n	8015952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80159c2:	4461      	add	r1, ip
 80159c4:	b209      	sxth	r1, r1
 80159c6:	4571      	cmp	r1, lr
 80159c8:	dc38      	bgt.n	8015a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80159ca:	eba2 020c 	sub.w	r2, r2, ip
 80159ce:	b212      	sxth	r2, r2
 80159d0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80159d4:	2a00      	cmp	r2, #0
 80159d6:	dcee      	bgt.n	80159b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80159d8:	b00f      	add	sp, #60	; 0x3c
 80159da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159de:	45c8      	cmp	r8, r9
 80159e0:	db2c      	blt.n	8015a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80159e2:	88f3      	ldrh	r3, [r6, #6]
 80159e4:	4499      	add	r9, r3
 80159e6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80159ea:	4498      	add	r8, r3
 80159ec:	fa0f f989 	sxth.w	r9, r9
 80159f0:	fa0f f888 	sxth.w	r8, r8
 80159f4:	45c1      	cmp	r9, r8
 80159f6:	db21      	blt.n	8015a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80159f8:	fa1f f28c 	uxth.w	r2, ip
 80159fc:	88b3      	ldrh	r3, [r6, #4]
 80159fe:	45e6      	cmp	lr, ip
 8015a00:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8015a04:	4413      	add	r3, r2
 8015a06:	fa1f f88e 	uxth.w	r8, lr
 8015a0a:	b29b      	uxth	r3, r3
 8015a0c:	fa0f f983 	sxth.w	r9, r3
 8015a10:	db0a      	blt.n	8015a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8015a12:	eba3 0308 	sub.w	r3, r3, r8
 8015a16:	1ac9      	subs	r1, r1, r3
 8015a18:	b209      	sxth	r1, r1
 8015a1a:	2900      	cmp	r1, #0
 8015a1c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015a20:	ddda      	ble.n	80159d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015a22:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015a26:	e7c6      	b.n	80159b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015a28:	4441      	add	r1, r8
 8015a2a:	b209      	sxth	r1, r1
 8015a2c:	4549      	cmp	r1, r9
 8015a2e:	dc05      	bgt.n	8015a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015a30:	eba2 0208 	sub.w	r2, r2, r8
 8015a34:	b212      	sxth	r2, r2
 8015a36:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015a3a:	e7cb      	b.n	80159d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015a3c:	4607      	mov	r7, r0
 8015a3e:	e7bb      	b.n	80159b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015a40:	2d00      	cmp	r5, #0
 8015a42:	d181      	bne.n	8015948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015a44:	2f00      	cmp	r7, #0
 8015a46:	f000 81dd 	beq.w	8015e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015a4a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015a4e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8015a52:	b2b3      	uxth	r3, r6
 8015a54:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015a58:	9305      	str	r3, [sp, #20]
 8015a5a:	9a05      	ldr	r2, [sp, #20]
 8015a5c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015a60:	4413      	add	r3, r2
 8015a62:	b2ba      	uxth	r2, r7
 8015a64:	4492      	add	sl, r2
 8015a66:	b29b      	uxth	r3, r3
 8015a68:	fa1f fa8a 	uxth.w	sl, sl
 8015a6c:	fa0f f883 	sxth.w	r8, r3
 8015a70:	fa0f f98a 	sxth.w	r9, sl
 8015a74:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015a78:	9b04      	ldr	r3, [sp, #16]
 8015a7a:	2b00      	cmp	r3, #0
 8015a7c:	d052      	beq.n	8015b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8015a7e:	9903      	ldr	r1, [sp, #12]
 8015a80:	4620      	mov	r0, r4
 8015a82:	f7ff fd27 	bl	80154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015a86:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015a8a:	b1c0      	cbz	r0, 8015abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015a8c:	f9b4 e000 	ldrsh.w	lr, [r4]
 8015a90:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015a94:	4576      	cmp	r6, lr
 8015a96:	dc22      	bgt.n	8015ade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015a98:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015a9c:	44f4      	add	ip, lr
 8015a9e:	fa0f fc8c 	sxth.w	ip, ip
 8015aa2:	45e0      	cmp	r8, ip
 8015aa4:	db1b      	blt.n	8015ade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015aa6:	428f      	cmp	r7, r1
 8015aa8:	fa1f fc81 	uxth.w	ip, r1
 8015aac:	88e1      	ldrh	r1, [r4, #6]
 8015aae:	dc0d      	bgt.n	8015acc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8015ab0:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015ab4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015ab8:	eba1 010c 	sub.w	r1, r1, ip
 8015abc:	80e1      	strh	r1, [r4, #6]
 8015abe:	4628      	mov	r0, r5
 8015ac0:	9904      	ldr	r1, [sp, #16]
 8015ac2:	3c08      	subs	r4, #8
 8015ac4:	4605      	mov	r5, r0
 8015ac6:	3901      	subs	r1, #1
 8015ac8:	9104      	str	r1, [sp, #16]
 8015aca:	e7d3      	b.n	8015a74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015acc:	4461      	add	r1, ip
 8015ace:	b209      	sxth	r1, r1
 8015ad0:	4549      	cmp	r1, r9
 8015ad2:	dcf5      	bgt.n	8015ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015ad4:	eba2 0c0c 	sub.w	ip, r2, ip
 8015ad8:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015adc:	e7ef      	b.n	8015abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015ade:	428f      	cmp	r7, r1
 8015ae0:	dcee      	bgt.n	8015ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015ae2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8015ae6:	4461      	add	r1, ip
 8015ae8:	b209      	sxth	r1, r1
 8015aea:	4589      	cmp	r9, r1
 8015aec:	dbe8      	blt.n	8015ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015aee:	4576      	cmp	r6, lr
 8015af0:	fa1f fc8e 	uxth.w	ip, lr
 8015af4:	88a1      	ldrh	r1, [r4, #4]
 8015af6:	dc07      	bgt.n	8015b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015af8:	eba3 0c0c 	sub.w	ip, r3, ip
 8015afc:	f8a4 8000 	strh.w	r8, [r4]
 8015b00:	eba1 010c 	sub.w	r1, r1, ip
 8015b04:	80a1      	strh	r1, [r4, #4]
 8015b06:	e7da      	b.n	8015abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015b08:	4461      	add	r1, ip
 8015b0a:	b209      	sxth	r1, r1
 8015b0c:	4588      	cmp	r8, r1
 8015b0e:	dbd7      	blt.n	8015ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015b10:	9905      	ldr	r1, [sp, #20]
 8015b12:	eba1 0c0c 	sub.w	ip, r1, ip
 8015b16:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015b1a:	e7d0      	b.n	8015abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015b1c:	24002f9a 	.word	0x24002f9a
 8015b20:	24002f98 	.word	0x24002f98
 8015b24:	2d00      	cmp	r5, #0
 8015b26:	f000 816d 	beq.w	8015e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015b2a:	9b06      	ldr	r3, [sp, #24]
 8015b2c:	445b      	add	r3, fp
 8015b2e:	461c      	mov	r4, r3
 8015b30:	9b02      	ldr	r3, [sp, #8]
 8015b32:	3301      	adds	r3, #1
 8015b34:	f000 8166 	beq.w	8015e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015b38:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015b3c:	9803      	ldr	r0, [sp, #12]
 8015b3e:	4629      	mov	r1, r5
 8015b40:	f7ff fd3a 	bl	80155b8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015b44:	b120      	cbz	r0, 8015b50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015b46:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015b4a:	9801      	ldr	r0, [sp, #4]
 8015b4c:	f7ff feb0 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015b50:	9903      	ldr	r1, [sp, #12]
 8015b52:	4628      	mov	r0, r5
 8015b54:	f7ff fcbe 	bl	80154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015b58:	2800      	cmp	r0, #0
 8015b5a:	f000 809c 	beq.w	8015c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015b5e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8015b62:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015b66:	fa1f f189 	uxth.w	r1, r9
 8015b6a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015b6e:	9309      	str	r3, [sp, #36]	; 0x24
 8015b70:	eb01 0c03 	add.w	ip, r1, r3
 8015b74:	b283      	uxth	r3, r0
 8015b76:	4548      	cmp	r0, r9
 8015b78:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8015b7c:	fa1f fa8c 	uxth.w	sl, ip
 8015b80:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015b84:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015b88:	eb03 050c 	add.w	r5, r3, ip
 8015b8c:	b2ad      	uxth	r5, r5
 8015b8e:	9505      	str	r5, [sp, #20]
 8015b90:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8015b94:	9504      	str	r5, [sp, #16]
 8015b96:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015b9a:	f340 8099 	ble.w	8015cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8015b9e:	1a5b      	subs	r3, r3, r1
 8015ba0:	4596      	cmp	lr, r2
 8015ba2:	fa0f f08a 	sxth.w	r0, sl
 8015ba6:	b29b      	uxth	r3, r3
 8015ba8:	b21e      	sxth	r6, r3
 8015baa:	dd2e      	ble.n	8015c0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015bac:	9f02      	ldr	r7, [sp, #8]
 8015bae:	fa1f fe8e 	uxth.w	lr, lr
 8015bb2:	b292      	uxth	r2, r2
 8015bb4:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8015bb8:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015bbc:	9f04      	ldr	r7, [sp, #16]
 8015bbe:	ebae 0102 	sub.w	r1, lr, r2
 8015bc2:	44a6      	add	lr, r4
 8015bc4:	1a3f      	subs	r7, r7, r0
 8015bc6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8015bca:	b289      	uxth	r1, r1
 8015bcc:	4402      	add	r2, r0
 8015bce:	fa0f fe8e 	sxth.w	lr, lr
 8015bd2:	b20d      	sxth	r5, r1
 8015bd4:	b212      	sxth	r2, r2
 8015bd6:	436f      	muls	r7, r5
 8015bd8:	ebae 0202 	sub.w	r2, lr, r2
 8015bdc:	4372      	muls	r2, r6
 8015bde:	4297      	cmp	r7, r2
 8015be0:	db09      	blt.n	8015bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8015be2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015be6:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015bea:	449c      	add	ip, r3
 8015bec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015bf0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015bf4:	e686      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015bf6:	4421      	add	r1, r4
 8015bf8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015bfc:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8015c00:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015c04:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015c08:	e67c      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015c0a:	9f04      	ldr	r7, [sp, #16]
 8015c0c:	42b8      	cmp	r0, r7
 8015c0e:	da27      	bge.n	8015c60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015c10:	9902      	ldr	r1, [sp, #8]
 8015c12:	1a3f      	subs	r7, r7, r0
 8015c14:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015c18:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015c1c:	eb05 010e 	add.w	r1, r5, lr
 8015c20:	fa1f f881 	uxth.w	r8, r1
 8015c24:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015c28:	4411      	add	r1, r2
 8015c2a:	fa0f f988 	sxth.w	r9, r8
 8015c2e:	eba2 020e 	sub.w	r2, r2, lr
 8015c32:	eba1 0108 	sub.w	r1, r1, r8
 8015c36:	4372      	muls	r2, r6
 8015c38:	b289      	uxth	r1, r1
 8015c3a:	fa0f f881 	sxth.w	r8, r1
 8015c3e:	fb08 f707 	mul.w	r7, r8, r7
 8015c42:	42ba      	cmp	r2, r7
 8015c44:	dc06      	bgt.n	8015c54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015c46:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015c4a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015c4e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015c52:	e7ca      	b.n	8015bea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015c54:	4429      	add	r1, r5
 8015c56:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015c5a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015c5e:	e651      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015c60:	9805      	ldr	r0, [sp, #20]
 8015c62:	2d06      	cmp	r5, #6
 8015c64:	ebaa 0000 	sub.w	r0, sl, r0
 8015c68:	b280      	uxth	r0, r0
 8015c6a:	fa0f fe80 	sxth.w	lr, r0
 8015c6e:	d817      	bhi.n	8015ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015c70:	9b04      	ldr	r3, [sp, #16]
 8015c72:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015c76:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015c7a:	1c6b      	adds	r3, r5, #1
 8015c7c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015c80:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015c84:	9b01      	ldr	r3, [sp, #4]
 8015c86:	9801      	ldr	r0, [sp, #4]
 8015c88:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015c8c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015c90:	805a      	strh	r2, [r3, #2]
 8015c92:	809e      	strh	r6, [r3, #4]
 8015c94:	80d9      	strh	r1, [r3, #6]
 8015c96:	9b02      	ldr	r3, [sp, #8]
 8015c98:	3c08      	subs	r4, #8
 8015c9a:	3b01      	subs	r3, #1
 8015c9c:	9302      	str	r3, [sp, #8]
 8015c9e:	e747      	b.n	8015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015ca0:	9a02      	ldr	r2, [sp, #8]
 8015ca2:	45b6      	cmp	lr, r6
 8015ca4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015ca8:	db0d      	blt.n	8015cc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015caa:	449c      	add	ip, r3
 8015cac:	445a      	add	r2, fp
 8015cae:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015cb2:	fa1f fc8c 	uxth.w	ip, ip
 8015cb6:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015cba:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015cbe:	448c      	add	ip, r1
 8015cc0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015cc4:	e61e      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015cc6:	445a      	add	r2, fp
 8015cc8:	4484      	add	ip, r0
 8015cca:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015cce:	e78f      	b.n	8015bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015cd0:	fa1f f18e 	uxth.w	r1, lr
 8015cd4:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015cd8:	b293      	uxth	r3, r2
 8015cda:	4596      	cmp	lr, r2
 8015cdc:	eb01 0806 	add.w	r8, r1, r6
 8015ce0:	9306      	str	r3, [sp, #24]
 8015ce2:	fa1f f888 	uxth.w	r8, r8
 8015ce6:	9f06      	ldr	r7, [sp, #24]
 8015ce8:	fa0f f388 	sxth.w	r3, r8
 8015cec:	9307      	str	r3, [sp, #28]
 8015cee:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015cf2:	443b      	add	r3, r7
 8015cf4:	b29b      	uxth	r3, r3
 8015cf6:	9308      	str	r3, [sp, #32]
 8015cf8:	da24      	bge.n	8015d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015cfa:	9905      	ldr	r1, [sp, #20]
 8015cfc:	eba3 0308 	sub.w	r3, r3, r8
 8015d00:	eba2 020e 	sub.w	r2, r2, lr
 8015d04:	eba9 0000 	sub.w	r0, r9, r0
 8015d08:	ebaa 0401 	sub.w	r4, sl, r1
 8015d0c:	b29b      	uxth	r3, r3
 8015d0e:	b2a4      	uxth	r4, r4
 8015d10:	b219      	sxth	r1, r3
 8015d12:	b225      	sxth	r5, r4
 8015d14:	4348      	muls	r0, r1
 8015d16:	436a      	muls	r2, r5
 8015d18:	4282      	cmp	r2, r0
 8015d1a:	9a02      	ldr	r2, [sp, #8]
 8015d1c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015d20:	445a      	add	r2, fp
 8015d22:	dc06      	bgt.n	8015d32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015d24:	9b07      	ldr	r3, [sp, #28]
 8015d26:	44a4      	add	ip, r4
 8015d28:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015d2c:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015d30:	e75e      	b.n	8015bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015d32:	9904      	ldr	r1, [sp, #16]
 8015d34:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015d38:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015d3c:	4433      	add	r3, r6
 8015d3e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015d42:	e5df      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015d44:	9f06      	ldr	r7, [sp, #24]
 8015d46:	9b04      	ldr	r3, [sp, #16]
 8015d48:	1bc9      	subs	r1, r1, r7
 8015d4a:	fa0f f78a 	sxth.w	r7, sl
 8015d4e:	b289      	uxth	r1, r1
 8015d50:	429f      	cmp	r7, r3
 8015d52:	fa0f fe81 	sxth.w	lr, r1
 8015d56:	dd23      	ble.n	8015da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015d58:	9a05      	ldr	r2, [sp, #20]
 8015d5a:	eba9 0000 	sub.w	r0, r9, r0
 8015d5e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015d62:	ebaa 0202 	sub.w	r2, sl, r2
 8015d66:	9d07      	ldr	r5, [sp, #28]
 8015d68:	fb0e f000 	mul.w	r0, lr, r0
 8015d6c:	b292      	uxth	r2, r2
 8015d6e:	eba5 0a03 	sub.w	sl, r5, r3
 8015d72:	9b02      	ldr	r3, [sp, #8]
 8015d74:	b214      	sxth	r4, r2
 8015d76:	00db      	lsls	r3, r3, #3
 8015d78:	fb04 fa0a 	mul.w	sl, r4, sl
 8015d7c:	445b      	add	r3, fp
 8015d7e:	4550      	cmp	r0, sl
 8015d80:	db03      	blt.n	8015d8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015d82:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015d86:	4494      	add	ip, r2
 8015d88:	e732      	b.n	8015bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015d8a:	9a04      	ldr	r2, [sp, #16]
 8015d8c:	4431      	add	r1, r6
 8015d8e:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015d92:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015d96:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015d9a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015d9e:	e75c      	b.n	8015c5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015da0:	9b08      	ldr	r3, [sp, #32]
 8015da2:	2d06      	cmp	r5, #6
 8015da4:	eba3 0308 	sub.w	r3, r3, r8
 8015da8:	b29b      	uxth	r3, r3
 8015daa:	b218      	sxth	r0, r3
 8015dac:	d813      	bhi.n	8015dd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015dae:	9b07      	ldr	r3, [sp, #28]
 8015db0:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015db4:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015db8:	1c6b      	adds	r3, r5, #1
 8015dba:	9901      	ldr	r1, [sp, #4]
 8015dbc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015dc0:	9b01      	ldr	r3, [sp, #4]
 8015dc2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015dc6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015dca:	805a      	strh	r2, [r3, #2]
 8015dcc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015dce:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015dd2:	809a      	strh	r2, [r3, #4]
 8015dd4:	e75f      	b.n	8015c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015dd6:	9c02      	ldr	r4, [sp, #8]
 8015dd8:	4570      	cmp	r0, lr
 8015dda:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015dde:	db0d      	blt.n	8015dfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015de0:	4431      	add	r1, r6
 8015de2:	9b06      	ldr	r3, [sp, #24]
 8015de4:	445c      	add	r4, fp
 8015de6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015dea:	b289      	uxth	r1, r1
 8015dec:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015df0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015df4:	4419      	add	r1, r3
 8015df6:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015dfa:	e583      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015dfc:	445c      	add	r4, fp
 8015dfe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015e02:	e79b      	b.n	8015d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015e04:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015e08:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015e0c:	1e65      	subs	r5, r4, #1
 8015e0e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015e12:	b2ad      	uxth	r5, r5
 8015e14:	42b5      	cmp	r5, r6
 8015e16:	d044      	beq.n	8015ea2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015e18:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015e1c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015e20:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015e24:	4282      	cmp	r2, r0
 8015e26:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015e2a:	d11f      	bne.n	8015e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015e2c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015e30:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015e34:	459c      	cmp	ip, r3
 8015e36:	d119      	bne.n	8015e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015e38:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015e3c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015e40:	19d8      	adds	r0, r3, r7
 8015e42:	b200      	sxth	r0, r0
 8015e44:	4288      	cmp	r0, r1
 8015e46:	d109      	bne.n	8015e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015e48:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015e4c:	4413      	add	r3, r2
 8015e4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015e52:	4629      	mov	r1, r5
 8015e54:	9801      	ldr	r0, [sp, #4]
 8015e56:	f7ff fd2b 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e5a:	e003      	b.n	8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015e5c:	4411      	add	r1, r2
 8015e5e:	b209      	sxth	r1, r1
 8015e60:	42b9      	cmp	r1, r7
 8015e62:	d0f3      	beq.n	8015e4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015e64:	3d01      	subs	r5, #1
 8015e66:	3c08      	subs	r4, #8
 8015e68:	b2ad      	uxth	r5, r5
 8015e6a:	e7d3      	b.n	8015e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015e6c:	42b9      	cmp	r1, r7
 8015e6e:	d1f9      	bne.n	8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015e70:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015e74:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015e78:	4299      	cmp	r1, r3
 8015e7a:	d1f3      	bne.n	8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015e7c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015e80:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015e84:	181f      	adds	r7, r3, r0
 8015e86:	b23f      	sxth	r7, r7
 8015e88:	42ba      	cmp	r2, r7
 8015e8a:	d105      	bne.n	8015e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015e8c:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015e90:	440b      	add	r3, r1
 8015e92:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015e96:	e7dc      	b.n	8015e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015e98:	440a      	add	r2, r1
 8015e9a:	b212      	sxth	r2, r2
 8015e9c:	4290      	cmp	r0, r2
 8015e9e:	d1e1      	bne.n	8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015ea0:	e7f6      	b.n	8015e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015ea2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015ea6:	2e07      	cmp	r6, #7
 8015ea8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015eac:	d812      	bhi.n	8015ed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015eae:	1c75      	adds	r5, r6, #1
 8015eb0:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015eb4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015eb8:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015ebc:	9d01      	ldr	r5, [sp, #4]
 8015ebe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015ec2:	442c      	add	r4, r5
 8015ec4:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015ec8:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015ecc:	8061      	strh	r1, [r4, #2]
 8015ece:	80a2      	strh	r2, [r4, #4]
 8015ed0:	80e3      	strh	r3, [r4, #6]
 8015ed2:	e581      	b.n	80159d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015ed4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015ed8:	3e01      	subs	r6, #1
 8015eda:	445c      	add	r4, fp
 8015edc:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015ee0:	f04f 37ff 	mov.w	r7, #4294967295
 8015ee4:	2500      	movs	r5, #0
 8015ee6:	9305      	str	r3, [sp, #20]
 8015ee8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015eec:	1e72      	subs	r2, r6, #1
 8015eee:	9302      	str	r3, [sp, #8]
 8015ef0:	4691      	mov	r9, r2
 8015ef2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015ef6:	9304      	str	r3, [sp, #16]
 8015ef8:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015efc:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015f00:	6818      	ldr	r0, [r3, #0]
 8015f02:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015f06:	9207      	str	r2, [sp, #28]
 8015f08:	bf16      	itet	ne
 8015f0a:	9905      	ldrne	r1, [sp, #20]
 8015f0c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015f10:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015f14:	9306      	str	r3, [sp, #24]
 8015f16:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015f1a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015f1e:	fb18 f801 	smulbb	r8, r8, r1
 8015f22:	6859      	ldr	r1, [r3, #4]
 8015f24:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015f28:	4671      	mov	r1, lr
 8015f2a:	a80c      	add	r0, sp, #48	; 0x30
 8015f2c:	f7ff fb6a 	bl	8015604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015f30:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015f34:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015f38:	f04f 0c08 	mov.w	ip, #8
 8015f3c:	9b04      	ldr	r3, [sp, #16]
 8015f3e:	9a02      	ldr	r2, [sp, #8]
 8015f40:	fb10 f001 	smulbb	r0, r0, r1
 8015f44:	fb02 8803 	mla	r8, r2, r3, r8
 8015f48:	eba0 0108 	sub.w	r1, r0, r8
 8015f4c:	fb90 f0fc 	sdiv	r0, r0, ip
 8015f50:	4288      	cmp	r0, r1
 8015f52:	dc20      	bgt.n	8015f96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8015f54:	4551      	cmp	r1, sl
 8015f56:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015f5a:	da03      	bge.n	8015f64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8015f5c:	b1d9      	cbz	r1, 8015f96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8015f5e:	468a      	mov	sl, r1
 8015f60:	464f      	mov	r7, r9
 8015f62:	4635      	mov	r5, r6
 8015f64:	f109 39ff 	add.w	r9, r9, #4294967295
 8015f68:	f119 0f02 	cmn.w	r9, #2
 8015f6c:	d1c6      	bne.n	8015efc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015f6e:	4616      	mov	r6, r2
 8015f70:	3201      	adds	r2, #1
 8015f72:	f1a4 0408 	sub.w	r4, r4, #8
 8015f76:	d1b7      	bne.n	8015ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015f78:	9b01      	ldr	r3, [sp, #4]
 8015f7a:	b2ac      	uxth	r4, r5
 8015f7c:	00ed      	lsls	r5, r5, #3
 8015f7e:	1958      	adds	r0, r3, r5
 8015f80:	1c7b      	adds	r3, r7, #1
 8015f82:	d10b      	bne.n	8015f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8015f84:	4601      	mov	r1, r0
 8015f86:	9803      	ldr	r0, [sp, #12]
 8015f88:	f7ff fb3c 	bl	8015604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015f8c:	4621      	mov	r1, r4
 8015f8e:	9801      	ldr	r0, [sp, #4]
 8015f90:	f7ff fc8e 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015f94:	e4b6      	b.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015f96:	464f      	mov	r7, r9
 8015f98:	4635      	mov	r5, r6
 8015f9a:	e7ed      	b.n	8015f78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8015f9c:	9b01      	ldr	r3, [sp, #4]
 8015f9e:	00ff      	lsls	r7, r7, #3
 8015fa0:	445d      	add	r5, fp
 8015fa2:	19d9      	adds	r1, r3, r7
 8015fa4:	445f      	add	r7, fp
 8015fa6:	f7ff fb2d 	bl	8015604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015faa:	9b03      	ldr	r3, [sp, #12]
 8015fac:	cb03      	ldmia	r3!, {r0, r1}
 8015fae:	9b03      	ldr	r3, [sp, #12]
 8015fb0:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015fb4:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015fb8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015fbc:	6869      	ldr	r1, [r5, #4]
 8015fbe:	c303      	stmia	r3!, {r0, r1}
 8015fc0:	e7e4      	b.n	8015f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8015fc2:	bf00      	nop

08015fc4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fc8:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015fcc:	b09b      	sub	sp, #108	; 0x6c
 8015fce:	4604      	mov	r4, r0
 8015fd0:	4630      	mov	r0, r6
 8015fd2:	f7fc f8ee 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fd6:	4605      	mov	r5, r0
 8015fd8:	b948      	cbnz	r0, 8015fee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015fda:	6823      	ldr	r3, [r4, #0]
 8015fdc:	4620      	mov	r0, r4
 8015fde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015fe0:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015fe4:	4798      	blx	r3
 8015fe6:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015fea:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015fee:	4bc5      	ldr	r3, [pc, #788]	; (8016304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8015ff0:	681b      	ldr	r3, [r3, #0]
 8015ff2:	2b00      	cmp	r3, #0
 8015ff4:	d03f      	beq.n	8016076 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015ff6:	4dc4      	ldr	r5, [pc, #784]	; (8016308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015ff8:	4628      	mov	r0, r5
 8015ffa:	f7fc f8da 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ffe:	4606      	mov	r6, r0
 8016000:	2800      	cmp	r0, #0
 8016002:	d138      	bne.n	8016076 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016004:	4628      	mov	r0, r5
 8016006:	f7ff f99b 	bl	8015340 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801600a:	6823      	ldr	r3, [r4, #0]
 801600c:	6829      	ldr	r1, [r5, #0]
 801600e:	4620      	mov	r0, r4
 8016010:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016012:	686a      	ldr	r2, [r5, #4]
 8016014:	4798      	blx	r3
 8016016:	802e      	strh	r6, [r5, #0]
 8016018:	806e      	strh	r6, [r5, #2]
 801601a:	80ae      	strh	r6, [r5, #4]
 801601c:	80ee      	strh	r6, [r5, #6]
 801601e:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8016022:	4dba      	ldr	r5, [pc, #744]	; (801630c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016024:	4640      	mov	r0, r8
 8016026:	f7ff fbe7 	bl	80157f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801602a:	882e      	ldrh	r6, [r5, #0]
 801602c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016030:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016034:	4633      	mov	r3, r6
 8016036:	42bb      	cmp	r3, r7
 8016038:	d224      	bcs.n	8016084 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801603a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801603e:	2907      	cmp	r1, #7
 8016040:	d816      	bhi.n	8016070 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8016042:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016046:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801604a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801604e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016052:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016056:	1c4a      	adds	r2, r1, #1
 8016058:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801605c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8016060:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016064:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016068:	f8a2 e004 	strh.w	lr, [r2, #4]
 801606c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016070:	3301      	adds	r3, #1
 8016072:	b29b      	uxth	r3, r3
 8016074:	e7df      	b.n	8016036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016076:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801607a:	2b00      	cmp	r3, #0
 801607c:	d1cf      	bne.n	801601e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801607e:	b01b      	add	sp, #108	; 0x6c
 8016080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016084:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016088:	42b3      	cmp	r3, r6
 801608a:	d90c      	bls.n	80160a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 801608c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016090:	6822      	ldr	r2, [r4, #0]
 8016092:	3601      	adds	r6, #1
 8016094:	4620      	mov	r0, r4
 8016096:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016098:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 801609c:	b2b6      	uxth	r6, r6
 801609e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80160a2:	47b8      	blx	r7
 80160a4:	e7ee      	b.n	8016084 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80160a6:	4a9a      	ldr	r2, [pc, #616]	; (8016310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80160a8:	6813      	ldr	r3, [r2, #0]
 80160aa:	4691      	mov	r9, r2
 80160ac:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80160b0:	2b01      	cmp	r3, #1
 80160b2:	f040 80e0 	bne.w	8016276 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 80160b6:	8829      	ldrh	r1, [r5, #0]
 80160b8:	2600      	movs	r6, #0
 80160ba:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80160be:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80160c2:	33ae      	adds	r3, #174	; 0xae
 80160c4:	428f      	cmp	r7, r1
 80160c6:	f103 0308 	add.w	r3, r3, #8
 80160ca:	dd0a      	ble.n	80160e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80160cc:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80160d0:	3101      	adds	r1, #1
 80160d2:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80160d6:	4402      	add	r2, r0
 80160d8:	b212      	sxth	r2, r2
 80160da:	4296      	cmp	r6, r2
 80160dc:	bfb8      	it	lt
 80160de:	4616      	movlt	r6, r2
 80160e0:	e7f0      	b.n	80160c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80160e2:	4b8c      	ldr	r3, [pc, #560]	; (8016314 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80160e4:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8016310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 80160e8:	881b      	ldrh	r3, [r3, #0]
 80160ea:	2b0f      	cmp	r3, #15
 80160ec:	bf8c      	ite	hi
 80160ee:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80160f2:	f04f 0b01 	movls.w	fp, #1
 80160f6:	2300      	movs	r3, #0
 80160f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80160fc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016100:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016104:	4b82      	ldr	r3, [pc, #520]	; (8016310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016106:	4438      	add	r0, r7
 8016108:	b207      	sxth	r7, r0
 801610a:	6818      	ldr	r0, [r3, #0]
 801610c:	42b7      	cmp	r7, r6
 801610e:	6803      	ldr	r3, [r0, #0]
 8016110:	f280 8083 	bge.w	801621a <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8016114:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016118:	4798      	blx	r3
 801611a:	eb07 030b 	add.w	r3, r7, fp
 801611e:	4298      	cmp	r0, r3
 8016120:	da07      	bge.n	8016132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016122:	42b0      	cmp	r0, r6
 8016124:	da05      	bge.n	8016132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016126:	4287      	cmp	r7, r0
 8016128:	dd6c      	ble.n	8016204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801612a:	2f00      	cmp	r7, #0
 801612c:	dd6a      	ble.n	8016204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801612e:	4630      	mov	r0, r6
 8016130:	e004      	b.n	801613c <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8016132:	4287      	cmp	r7, r0
 8016134:	dcfb      	bgt.n	801612e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8016136:	42b0      	cmp	r0, r6
 8016138:	bfa8      	it	ge
 801613a:	4630      	movge	r0, r6
 801613c:	4b76      	ldr	r3, [pc, #472]	; (8016318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801613e:	1bc0      	subs	r0, r0, r7
 8016140:	2200      	movs	r2, #0
 8016142:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016146:	f9b3 3000 	ldrsh.w	r3, [r3]
 801614a:	882f      	ldrh	r7, [r5, #0]
 801614c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016150:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016154:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016158:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801615c:	42bb      	cmp	r3, r7
 801615e:	d9cd      	bls.n	80160fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8016160:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016164:	ab07      	add	r3, sp, #28
 8016166:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801616a:	6851      	ldr	r1, [r2, #4]
 801616c:	c303      	stmia	r3!, {r0, r1}
 801616e:	a905      	add	r1, sp, #20
 8016170:	a807      	add	r0, sp, #28
 8016172:	f7ff f9af 	bl	80154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016176:	2800      	cmp	r0, #0
 8016178:	d04c      	beq.n	8016214 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 801617a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801617e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016182:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016186:	4686      	mov	lr, r0
 8016188:	4290      	cmp	r0, r2
 801618a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801618e:	4450      	add	r0, sl
 8016190:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8016194:	bfb8      	it	lt
 8016196:	4696      	movlt	lr, r2
 8016198:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801619c:	4452      	add	r2, sl
 801619e:	b280      	uxth	r0, r0
 80161a0:	4299      	cmp	r1, r3
 80161a2:	468c      	mov	ip, r1
 80161a4:	b292      	uxth	r2, r2
 80161a6:	9302      	str	r3, [sp, #8]
 80161a8:	bfb8      	it	lt
 80161aa:	469c      	movlt	ip, r3
 80161ac:	b203      	sxth	r3, r0
 80161ae:	fa0f fa82 	sxth.w	sl, r2
 80161b2:	f8ad e01c 	strh.w	lr, [sp, #28]
 80161b6:	f8ad c01e 	strh.w	ip, [sp, #30]
 80161ba:	4553      	cmp	r3, sl
 80161bc:	bfb8      	it	lt
 80161be:	4602      	movlt	r2, r0
 80161c0:	9b02      	ldr	r3, [sp, #8]
 80161c2:	eba2 020e 	sub.w	r2, r2, lr
 80161c6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80161ca:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80161ce:	4411      	add	r1, r2
 80161d0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80161d4:	4413      	add	r3, r2
 80161d6:	b289      	uxth	r1, r1
 80161d8:	b29b      	uxth	r3, r3
 80161da:	b208      	sxth	r0, r1
 80161dc:	b21a      	sxth	r2, r3
 80161de:	4290      	cmp	r0, r2
 80161e0:	bfb8      	it	lt
 80161e2:	460b      	movlt	r3, r1
 80161e4:	eba3 030c 	sub.w	r3, r3, ip
 80161e8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80161ec:	a807      	add	r0, sp, #28
 80161ee:	f7fb ffe0 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80161f2:	b920      	cbnz	r0, 80161fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 80161f4:	6823      	ldr	r3, [r4, #0]
 80161f6:	a907      	add	r1, sp, #28
 80161f8:	4620      	mov	r0, r4
 80161fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80161fc:	4798      	blx	r3
 80161fe:	3701      	adds	r7, #1
 8016200:	b2bf      	uxth	r7, r7
 8016202:	e7a9      	b.n	8016158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8016204:	f8d9 0000 	ldr.w	r0, [r9]
 8016208:	2101      	movs	r1, #1
 801620a:	6803      	ldr	r3, [r0, #0]
 801620c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016210:	4798      	blx	r3
 8016212:	e773      	b.n	80160fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8016214:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016218:	e7e8      	b.n	80161ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 801621a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801621c:	4798      	blx	r3
 801621e:	4b3f      	ldr	r3, [pc, #252]	; (801631c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016220:	781b      	ldrb	r3, [r3, #0]
 8016222:	2b00      	cmp	r3, #0
 8016224:	f43f af2b 	beq.w	801607e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016228:	2300      	movs	r3, #0
 801622a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801622e:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8016232:	882b      	ldrh	r3, [r5, #0]
 8016234:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016238:	42ab      	cmp	r3, r5
 801623a:	f4bf af20 	bcs.w	801607e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801623e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016242:	2907      	cmp	r1, #7
 8016244:	d814      	bhi.n	8016270 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8016246:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801624a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801624e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016252:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016256:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801625a:	1c4a      	adds	r2, r1, #1
 801625c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016260:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016264:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016268:	f8a2 c002 	strh.w	ip, [r2, #2]
 801626c:	8097      	strh	r7, [r2, #4]
 801626e:	80d6      	strh	r6, [r2, #6]
 8016270:	3301      	adds	r3, #1
 8016272:	b29b      	uxth	r3, r3
 8016274:	e7e0      	b.n	8016238 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8016276:	2b02      	cmp	r3, #2
 8016278:	f040 8133 	bne.w	80164e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 801627c:	4b28      	ldr	r3, [pc, #160]	; (8016320 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801627e:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016282:	781b      	ldrb	r3, [r3, #0]
 8016284:	2b01      	cmp	r3, #1
 8016286:	f000 8098 	beq.w	80163ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801628a:	882a      	ldrh	r2, [r5, #0]
 801628c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016290:	3201      	adds	r2, #1
 8016292:	b292      	uxth	r2, r2
 8016294:	2900      	cmp	r1, #0
 8016296:	d0c2      	beq.n	801621e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016298:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801629c:	4694      	mov	ip, r2
 801629e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80162a2:	f04f 0900 	mov.w	r9, #0
 80162a6:	441e      	add	r6, r3
 80162a8:	b236      	sxth	r6, r6
 80162aa:	fa1f f38c 	uxth.w	r3, ip
 80162ae:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80162b2:	4299      	cmp	r1, r3
 80162b4:	f240 80be 	bls.w	8016434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 80162b8:	4427      	add	r7, r4
 80162ba:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80162be:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80162c2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80162c6:	4283      	cmp	r3, r0
 80162c8:	f340 80a0 	ble.w	801640c <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 80162cc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80162d0:	46e1      	mov	r9, ip
 80162d2:	4406      	add	r6, r0
 80162d4:	b236      	sxth	r6, r6
 80162d6:	429e      	cmp	r6, r3
 80162d8:	bfa8      	it	ge
 80162da:	461e      	movge	r6, r3
 80162dc:	f10c 0c01 	add.w	ip, ip, #1
 80162e0:	e7e3      	b.n	80162aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 80162e2:	d10a      	bne.n	80162fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 80162e4:	4562      	cmp	r2, ip
 80162e6:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80162ea:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80162ee:	bfb8      	it	lt
 80162f0:	4662      	movlt	r2, ip
 80162f2:	4288      	cmp	r0, r1
 80162f4:	bfb8      	it	lt
 80162f6:	461f      	movlt	r7, r3
 80162f8:	e086      	b.n	8016408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80162fa:	428a      	cmp	r2, r1
 80162fc:	bfb8      	it	lt
 80162fe:	460a      	movlt	r2, r1
 8016300:	e082      	b.n	8016408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8016302:	bf00      	nop
 8016304:	24002fdc 	.word	0x24002fdc
 8016308:	24002fe8 	.word	0x24002fe8
 801630c:	2400001c 	.word	0x2400001c
 8016310:	24002fa4 	.word	0x24002fa4
 8016314:	24002f9a 	.word	0x24002f9a
 8016318:	24002f98 	.word	0x24002f98
 801631c:	24002fa2 	.word	0x24002fa2
 8016320:	24002f9c 	.word	0x24002f9c
 8016324:	19a1      	adds	r1, r4, r6
 8016326:	ab07      	add	r3, sp, #28
 8016328:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801632c:	6849      	ldr	r1, [r1, #4]
 801632e:	c303      	stmia	r3!, {r0, r1}
 8016330:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016334:	a807      	add	r0, sp, #28
 8016336:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801633a:	2b13      	cmp	r3, #19
 801633c:	440b      	add	r3, r1
 801633e:	bfd8      	it	le
 8016340:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016344:	1a9b      	subs	r3, r3, r2
 8016346:	f8ad 201c 	strh.w	r2, [sp, #28]
 801634a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801634e:	f7ff f811 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016352:	a807      	add	r0, sp, #28
 8016354:	f7fb ff2d 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016358:	bb78      	cbnz	r0, 80163ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801635a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801635e:	4426      	add	r6, r4
 8016360:	f8d9 0000 	ldr.w	r0, [r9]
 8016364:	f1bc 0f14 	cmp.w	ip, #20
 8016368:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801636c:	f8d0 e000 	ldr.w	lr, [r0]
 8016370:	bfa8      	it	ge
 8016372:	f04f 0c14 	movge.w	ip, #20
 8016376:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801637a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801637e:	fa1f fc8c 	uxth.w	ip, ip
 8016382:	f8cd c000 	str.w	ip, [sp]
 8016386:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801638a:	47d8      	blx	fp
 801638c:	4683      	mov	fp, r0
 801638e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016392:	a807      	add	r0, sp, #28
 8016394:	f7fe ffd4 	bl	8015340 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016398:	6823      	ldr	r3, [r4, #0]
 801639a:	4620      	mov	r0, r4
 801639c:	a907      	add	r1, sp, #28
 801639e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80163a0:	4798      	blx	r3
 80163a2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80163a6:	eba0 000b 	sub.w	r0, r0, fp
 80163aa:	b200      	sxth	r0, r0
 80163ac:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80163b0:	b918      	cbnz	r0, 80163ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80163b2:	b2b9      	uxth	r1, r7
 80163b4:	4650      	mov	r0, sl
 80163b6:	f7ff fa7b 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80163ba:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80163be:	f1bb 0f00 	cmp.w	fp, #0
 80163c2:	f43f af2c 	beq.w	801621e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80163c6:	882b      	ldrh	r3, [r5, #0]
 80163c8:	2700      	movs	r7, #0
 80163ca:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80163ce:	3301      	adds	r3, #1
 80163d0:	b29b      	uxth	r3, r3
 80163d2:	b299      	uxth	r1, r3
 80163d4:	00fe      	lsls	r6, r7, #3
 80163d6:	458b      	cmp	fp, r1
 80163d8:	d9a4      	bls.n	8016324 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 80163da:	4426      	add	r6, r4
 80163dc:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80163e0:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80163e4:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80163e8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80163ec:	4408      	add	r0, r1
 80163ee:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80163f2:	4461      	add	r1, ip
 80163f4:	b200      	sxth	r0, r0
 80163f6:	b209      	sxth	r1, r1
 80163f8:	4288      	cmp	r0, r1
 80163fa:	f6bf af72 	bge.w	80162e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 80163fe:	4584      	cmp	ip, r0
 8016400:	4662      	mov	r2, ip
 8016402:	461f      	mov	r7, r3
 8016404:	bfb8      	it	lt
 8016406:	4602      	movlt	r2, r0
 8016408:	3301      	adds	r3, #1
 801640a:	e7e2      	b.n	80163d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 801640c:	d10e      	bne.n	801642c <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 801640e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016412:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016416:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801641a:	4473      	add	r3, lr
 801641c:	b21b      	sxth	r3, r3
 801641e:	429e      	cmp	r6, r3
 8016420:	bfa8      	it	ge
 8016422:	461e      	movge	r6, r3
 8016424:	4287      	cmp	r7, r0
 8016426:	bfb8      	it	lt
 8016428:	46e1      	movlt	r9, ip
 801642a:	e757      	b.n	80162dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801642c:	4286      	cmp	r6, r0
 801642e:	bfa8      	it	ge
 8016430:	4606      	movge	r6, r0
 8016432:	e753      	b.n	80162dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8016434:	eb0a 0007 	add.w	r0, sl, r7
 8016438:	4427      	add	r7, r4
 801643a:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 801643e:	f1bb 0f13 	cmp.w	fp, #19
 8016442:	bfdc      	itt	le
 8016444:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016448:	445e      	addle	r6, fp
 801644a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801644e:	bfd8      	it	le
 8016450:	b236      	sxthle	r6, r6
 8016452:	f7fb feae 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016456:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801645a:	2800      	cmp	r0, #0
 801645c:	f47f af1a 	bne.w	8016294 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8016460:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016464:	fa1f fb8b 	uxth.w	fp, fp
 8016468:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801646c:	1ab6      	subs	r6, r6, r2
 801646e:	4829      	ldr	r0, [pc, #164]	; (8016514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8016470:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016474:	2e14      	cmp	r6, #20
 8016476:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801647a:	6800      	ldr	r0, [r0, #0]
 801647c:	bfa8      	it	ge
 801647e:	2614      	movge	r6, #20
 8016480:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016484:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016488:	b289      	uxth	r1, r1
 801648a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801648e:	b2b6      	uxth	r6, r6
 8016490:	f8d0 c000 	ldr.w	ip, [r0]
 8016494:	b292      	uxth	r2, r2
 8016496:	455e      	cmp	r6, fp
 8016498:	bf94      	ite	ls
 801649a:	9600      	strls	r6, [sp, #0]
 801649c:	f8cd b000 	strhi.w	fp, [sp]
 80164a0:	b29b      	uxth	r3, r3
 80164a2:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80164a6:	47b0      	blx	r6
 80164a8:	6823      	ldr	r3, [r4, #0]
 80164aa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80164ae:	a907      	add	r1, sp, #28
 80164b0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80164b2:	4620      	mov	r0, r4
 80164b4:	4798      	blx	r3
 80164b6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80164ba:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80164be:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80164c2:	1a5b      	subs	r3, r3, r1
 80164c4:	440a      	add	r2, r1
 80164c6:	b21b      	sxth	r3, r3
 80164c8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80164cc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80164d0:	2b00      	cmp	r3, #0
 80164d2:	f47f aeda 	bne.w	801628a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80164d6:	fa1f f189 	uxth.w	r1, r9
 80164da:	4650      	mov	r0, sl
 80164dc:	f7ff f9e8 	bl	80158b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80164e0:	e6d3      	b.n	801628a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80164e2:	882e      	ldrh	r6, [r5, #0]
 80164e4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80164e8:	42b3      	cmp	r3, r6
 80164ea:	f67f ae98 	bls.w	801621e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80164ee:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80164f2:	ab07      	add	r3, sp, #28
 80164f4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80164f8:	6851      	ldr	r1, [r2, #4]
 80164fa:	c303      	stmia	r3!, {r0, r1}
 80164fc:	a807      	add	r0, sp, #28
 80164fe:	f7fb fe58 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016502:	b920      	cbnz	r0, 801650e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8016504:	6823      	ldr	r3, [r4, #0]
 8016506:	a907      	add	r1, sp, #28
 8016508:	4620      	mov	r0, r4
 801650a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801650c:	4798      	blx	r3
 801650e:	3601      	adds	r6, #1
 8016510:	b2b6      	uxth	r6, r6
 8016512:	e7e7      	b.n	80164e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8016514:	24002fa4 	.word	0x24002fa4

08016518 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016518:	4b03      	ldr	r3, [pc, #12]	; (8016528 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801651a:	2200      	movs	r2, #0
 801651c:	801a      	strh	r2, [r3, #0]
 801651e:	805a      	strh	r2, [r3, #2]
 8016520:	809a      	strh	r2, [r3, #4]
 8016522:	80da      	strh	r2, [r3, #6]
 8016524:	4770      	bx	lr
 8016526:	bf00      	nop
 8016528:	24002fe8 	.word	0x24002fe8

0801652c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801652c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016530:	b09d      	sub	sp, #116	; 0x74
 8016532:	4606      	mov	r6, r0
 8016534:	4614      	mov	r4, r2
 8016536:	468a      	mov	sl, r1
 8016538:	a803      	add	r0, sp, #12
 801653a:	461d      	mov	r5, r3
 801653c:	f000 fd72 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8016540:	6833      	ldr	r3, [r6, #0]
 8016542:	4630      	mov	r0, r6
 8016544:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016548:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801654a:	4798      	blx	r3
 801654c:	6833      	ldr	r3, [r6, #0]
 801654e:	4607      	mov	r7, r0
 8016550:	4630      	mov	r0, r6
 8016552:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016554:	4798      	blx	r3
 8016556:	462a      	mov	r2, r5
 8016558:	2500      	movs	r5, #0
 801655a:	4621      	mov	r1, r4
 801655c:	9000      	str	r0, [sp, #0]
 801655e:	463b      	mov	r3, r7
 8016560:	462c      	mov	r4, r5
 8016562:	46a9      	mov	r9, r5
 8016564:	46a8      	mov	r8, r5
 8016566:	a803      	add	r0, sp, #12
 8016568:	f000 fdb7 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801656c:	2300      	movs	r3, #0
 801656e:	9302      	str	r3, [sp, #8]
 8016570:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016574:	429c      	cmp	r4, r3
 8016576:	d002      	beq.n	801657e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016578:	455c      	cmp	r4, fp
 801657a:	bf18      	it	ne
 801657c:	4625      	movne	r5, r4
 801657e:	ab02      	add	r3, sp, #8
 8016580:	4632      	mov	r2, r6
 8016582:	4651      	mov	r1, sl
 8016584:	a803      	add	r0, sp, #12
 8016586:	f001 f8ad 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801658a:	4604      	mov	r4, r0
 801658c:	b108      	cbz	r0, 8016592 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801658e:	280a      	cmp	r0, #10
 8016590:	d10a      	bne.n	80165a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016592:	45c1      	cmp	r9, r8
 8016594:	bf38      	it	cc
 8016596:	46c1      	movcc	r9, r8
 8016598:	f04f 0800 	mov.w	r8, #0
 801659c:	2c00      	cmp	r4, #0
 801659e:	d1e5      	bne.n	801656c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80165a0:	4648      	mov	r0, r9
 80165a2:	b01d      	add	sp, #116	; 0x74
 80165a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165a8:	9a02      	ldr	r2, [sp, #8]
 80165aa:	2a00      	cmp	r2, #0
 80165ac:	d0de      	beq.n	801656c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80165ae:	7b57      	ldrb	r7, [r2, #13]
 80165b0:	4629      	mov	r1, r5
 80165b2:	6833      	ldr	r3, [r6, #0]
 80165b4:	007f      	lsls	r7, r7, #1
 80165b6:	8894      	ldrh	r4, [r2, #4]
 80165b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80165ba:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80165be:	7a97      	ldrb	r7, [r2, #10]
 80165c0:	4307      	orrs	r7, r0
 80165c2:	4630      	mov	r0, r6
 80165c4:	4798      	blx	r3
 80165c6:	4438      	add	r0, r7
 80165c8:	4480      	add	r8, r0
 80165ca:	fa1f f888 	uxth.w	r8, r8
 80165ce:	e7e5      	b.n	801659c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080165d0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80165d0:	b508      	push	{r3, lr}
 80165d2:	6803      	ldr	r3, [r0, #0]
 80165d4:	68db      	ldr	r3, [r3, #12]
 80165d6:	4798      	blx	r3
 80165d8:	b128      	cbz	r0, 80165e6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80165da:	7b43      	ldrb	r3, [r0, #13]
 80165dc:	7a80      	ldrb	r0, [r0, #10]
 80165de:	005b      	lsls	r3, r3, #1
 80165e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80165e4:	4318      	orrs	r0, r3
 80165e6:	bd08      	pop	{r3, pc}

080165e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80165e8:	b40e      	push	{r1, r2, r3}
 80165ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80165ec:	b09e      	sub	sp, #120	; 0x78
 80165ee:	4605      	mov	r5, r0
 80165f0:	ab23      	add	r3, sp, #140	; 0x8c
 80165f2:	a805      	add	r0, sp, #20
 80165f4:	f853 4b04 	ldr.w	r4, [r3], #4
 80165f8:	9303      	str	r3, [sp, #12]
 80165fa:	f000 fd13 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 80165fe:	682b      	ldr	r3, [r5, #0]
 8016600:	4628      	mov	r0, r5
 8016602:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016604:	4798      	blx	r3
 8016606:	682b      	ldr	r3, [r5, #0]
 8016608:	4606      	mov	r6, r0
 801660a:	4628      	mov	r0, r5
 801660c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801660e:	4798      	blx	r3
 8016610:	4633      	mov	r3, r6
 8016612:	4621      	mov	r1, r4
 8016614:	ae1e      	add	r6, sp, #120	; 0x78
 8016616:	2400      	movs	r4, #0
 8016618:	9000      	str	r0, [sp, #0]
 801661a:	9a03      	ldr	r2, [sp, #12]
 801661c:	a805      	add	r0, sp, #20
 801661e:	f000 fd5c 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016622:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016626:	462a      	mov	r2, r5
 8016628:	4633      	mov	r3, r6
 801662a:	4621      	mov	r1, r4
 801662c:	a805      	add	r0, sp, #20
 801662e:	f001 f859 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016632:	b300      	cbz	r0, 8016676 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8016634:	280a      	cmp	r0, #10
 8016636:	d01a      	beq.n	801666e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8016638:	9f04      	ldr	r7, [sp, #16]
 801663a:	b1c7      	cbz	r7, 801666e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 801663c:	7b78      	ldrb	r0, [r7, #13]
 801663e:	7a3b      	ldrb	r3, [r7, #8]
 8016640:	00c1      	lsls	r1, r0, #3
 8016642:	88ea      	ldrh	r2, [r5, #6]
 8016644:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016648:	4319      	orrs	r1, r3
 801664a:	0643      	lsls	r3, r0, #25
 801664c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8016650:	bf48      	it	mi
 8016652:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016656:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801665a:	bf48      	it	mi
 801665c:	b219      	sxthmi	r1, r3
 801665e:	79fb      	ldrb	r3, [r7, #7]
 8016660:	4303      	orrs	r3, r0
 8016662:	4413      	add	r3, r2
 8016664:	1a5b      	subs	r3, r3, r1
 8016666:	b21b      	sxth	r3, r3
 8016668:	429c      	cmp	r4, r3
 801666a:	bfb8      	it	lt
 801666c:	461c      	movlt	r4, r3
 801666e:	4633      	mov	r3, r6
 8016670:	462a      	mov	r2, r5
 8016672:	2100      	movs	r1, #0
 8016674:	e7da      	b.n	801662c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016676:	b2a0      	uxth	r0, r4
 8016678:	b01e      	add	sp, #120	; 0x78
 801667a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801667e:	b003      	add	sp, #12
 8016680:	4770      	bx	lr

08016682 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016682:	7a43      	ldrb	r3, [r0, #9]
 8016684:	8880      	ldrh	r0, [r0, #4]
 8016686:	4418      	add	r0, r3
 8016688:	b280      	uxth	r0, r0
 801668a:	4770      	bx	lr

0801668c <_ZNK8touchgfx4Font13getFontHeightEv>:
 801668c:	6803      	ldr	r3, [r0, #0]
 801668e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016690:	4718      	bx	r3

08016692 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016692:	b40e      	push	{r1, r2, r3}
 8016694:	b570      	push	{r4, r5, r6, lr}
 8016696:	b09d      	sub	sp, #116	; 0x74
 8016698:	4604      	mov	r4, r0
 801669a:	ab21      	add	r3, sp, #132	; 0x84
 801669c:	a803      	add	r0, sp, #12
 801669e:	f853 5b04 	ldr.w	r5, [r3], #4
 80166a2:	9302      	str	r3, [sp, #8]
 80166a4:	f000 fcbe 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 80166a8:	6823      	ldr	r3, [r4, #0]
 80166aa:	4620      	mov	r0, r4
 80166ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80166ae:	4798      	blx	r3
 80166b0:	6823      	ldr	r3, [r4, #0]
 80166b2:	4606      	mov	r6, r0
 80166b4:	4620      	mov	r0, r4
 80166b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80166b8:	2401      	movs	r4, #1
 80166ba:	4798      	blx	r3
 80166bc:	4633      	mov	r3, r6
 80166be:	9000      	str	r0, [sp, #0]
 80166c0:	4629      	mov	r1, r5
 80166c2:	9a02      	ldr	r2, [sp, #8]
 80166c4:	a803      	add	r0, sp, #12
 80166c6:	f000 fd08 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80166ca:	a803      	add	r0, sp, #12
 80166cc:	f001 f8d6 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80166d0:	b2a3      	uxth	r3, r4
 80166d2:	b138      	cbz	r0, 80166e4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80166d4:	280a      	cmp	r0, #10
 80166d6:	a803      	add	r0, sp, #12
 80166d8:	bf04      	itt	eq
 80166da:	3301      	addeq	r3, #1
 80166dc:	b21c      	sxtheq	r4, r3
 80166de:	f001 f8cd 	bl	801787c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80166e2:	e7f5      	b.n	80166d0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80166e4:	4618      	mov	r0, r3
 80166e6:	b01d      	add	sp, #116	; 0x74
 80166e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80166ec:	b003      	add	sp, #12
 80166ee:	4770      	bx	lr

080166f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80166f0:	b40e      	push	{r1, r2, r3}
 80166f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80166f4:	b09e      	sub	sp, #120	; 0x78
 80166f6:	4604      	mov	r4, r0
 80166f8:	ab23      	add	r3, sp, #140	; 0x8c
 80166fa:	a805      	add	r0, sp, #20
 80166fc:	f853 5b04 	ldr.w	r5, [r3], #4
 8016700:	9303      	str	r3, [sp, #12]
 8016702:	f000 fc8f 	bl	8017024 <_ZN8touchgfx12TextProviderC1Ev>
 8016706:	6823      	ldr	r3, [r4, #0]
 8016708:	4620      	mov	r0, r4
 801670a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801670c:	4798      	blx	r3
 801670e:	6823      	ldr	r3, [r4, #0]
 8016710:	4606      	mov	r6, r0
 8016712:	4620      	mov	r0, r4
 8016714:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016716:	4798      	blx	r3
 8016718:	4633      	mov	r3, r6
 801671a:	4629      	mov	r1, r5
 801671c:	9000      	str	r0, [sp, #0]
 801671e:	9a03      	ldr	r2, [sp, #12]
 8016720:	a805      	add	r0, sp, #20
 8016722:	f000 fcda 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016726:	ad1e      	add	r5, sp, #120	; 0x78
 8016728:	2100      	movs	r1, #0
 801672a:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801672e:	4622      	mov	r2, r4
 8016730:	a805      	add	r0, sp, #20
 8016732:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016736:	462b      	mov	r3, r5
 8016738:	f000 ffd4 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801673c:	b1d8      	cbz	r0, 8016776 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801673e:	280a      	cmp	r0, #10
 8016740:	d012      	beq.n	8016768 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016742:	9804      	ldr	r0, [sp, #16]
 8016744:	b180      	cbz	r0, 8016768 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016746:	7b47      	ldrb	r7, [r0, #13]
 8016748:	88e2      	ldrh	r2, [r4, #6]
 801674a:	00fb      	lsls	r3, r7, #3
 801674c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016750:	7a03      	ldrb	r3, [r0, #8]
 8016752:	430b      	orrs	r3, r1
 8016754:	0679      	lsls	r1, r7, #25
 8016756:	bf44      	itt	mi
 8016758:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801675c:	b21b      	sxthmi	r3, r3
 801675e:	1ad3      	subs	r3, r2, r3
 8016760:	b21b      	sxth	r3, r3
 8016762:	429e      	cmp	r6, r3
 8016764:	bfa8      	it	ge
 8016766:	461e      	movge	r6, r3
 8016768:	462b      	mov	r3, r5
 801676a:	4622      	mov	r2, r4
 801676c:	2100      	movs	r1, #0
 801676e:	a805      	add	r0, sp, #20
 8016770:	f000 ffb8 	bl	80176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016774:	e7e2      	b.n	801673c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016776:	4630      	mov	r0, r6
 8016778:	b01e      	add	sp, #120	; 0x78
 801677a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801677e:	b003      	add	sp, #12
 8016780:	4770      	bx	lr

08016782 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016782:	b513      	push	{r0, r1, r4, lr}
 8016784:	6803      	ldr	r3, [r0, #0]
 8016786:	2400      	movs	r4, #0
 8016788:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801678c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016790:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016794:	4669      	mov	r1, sp
 8016796:	691b      	ldr	r3, [r3, #16]
 8016798:	9400      	str	r4, [sp, #0]
 801679a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801679e:	4798      	blx	r3
 80167a0:	b002      	add	sp, #8
 80167a2:	bd10      	pop	{r4, pc}

080167a4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80167a4:	b538      	push	{r3, r4, r5, lr}
 80167a6:	680b      	ldr	r3, [r1, #0]
 80167a8:	460c      	mov	r4, r1
 80167aa:	4605      	mov	r5, r0
 80167ac:	68db      	ldr	r3, [r3, #12]
 80167ae:	4798      	blx	r3
 80167b0:	6823      	ldr	r3, [r4, #0]
 80167b2:	4620      	mov	r0, r4
 80167b4:	4629      	mov	r1, r5
 80167b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80167b8:	4798      	blx	r3
 80167ba:	4628      	mov	r0, r5
 80167bc:	bd38      	pop	{r3, r4, r5, pc}

080167be <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80167be:	b410      	push	{r4}
 80167c0:	880a      	ldrh	r2, [r1, #0]
 80167c2:	8884      	ldrh	r4, [r0, #4]
 80167c4:	4422      	add	r2, r4
 80167c6:	800a      	strh	r2, [r1, #0]
 80167c8:	884a      	ldrh	r2, [r1, #2]
 80167ca:	88c4      	ldrh	r4, [r0, #6]
 80167cc:	4422      	add	r2, r4
 80167ce:	804a      	strh	r2, [r1, #2]
 80167d0:	6940      	ldr	r0, [r0, #20]
 80167d2:	b120      	cbz	r0, 80167de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80167d4:	6803      	ldr	r3, [r0, #0]
 80167d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80167da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80167dc:	4718      	bx	r3
 80167de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80167e2:	4770      	bx	lr

080167e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80167e4:	b570      	push	{r4, r5, r6, lr}
 80167e6:	8882      	ldrh	r2, [r0, #4]
 80167e8:	460c      	mov	r4, r1
 80167ea:	880b      	ldrh	r3, [r1, #0]
 80167ec:	4605      	mov	r5, r0
 80167ee:	4413      	add	r3, r2
 80167f0:	800b      	strh	r3, [r1, #0]
 80167f2:	884b      	ldrh	r3, [r1, #2]
 80167f4:	88c2      	ldrh	r2, [r0, #6]
 80167f6:	4413      	add	r3, r2
 80167f8:	804b      	strh	r3, [r1, #2]
 80167fa:	1d01      	adds	r1, r0, #4
 80167fc:	4620      	mov	r0, r4
 80167fe:	f7fb fc95 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016802:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016806:	2b00      	cmp	r3, #0
 8016808:	dd0b      	ble.n	8016822 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801680a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801680e:	2b00      	cmp	r3, #0
 8016810:	dd07      	ble.n	8016822 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016812:	6968      	ldr	r0, [r5, #20]
 8016814:	b128      	cbz	r0, 8016822 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016816:	6803      	ldr	r3, [r0, #0]
 8016818:	4621      	mov	r1, r4
 801681a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801681c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016820:	4718      	bx	r3
 8016822:	bd70      	pop	{r4, r5, r6, pc}

08016824 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016824:	b570      	push	{r4, r5, r6, lr}
 8016826:	8882      	ldrh	r2, [r0, #4]
 8016828:	460c      	mov	r4, r1
 801682a:	880b      	ldrh	r3, [r1, #0]
 801682c:	4605      	mov	r5, r0
 801682e:	4413      	add	r3, r2
 8016830:	800b      	strh	r3, [r1, #0]
 8016832:	884b      	ldrh	r3, [r1, #2]
 8016834:	88c2      	ldrh	r2, [r0, #6]
 8016836:	4413      	add	r3, r2
 8016838:	804b      	strh	r3, [r1, #2]
 801683a:	1d01      	adds	r1, r0, #4
 801683c:	4620      	mov	r0, r4
 801683e:	f7fb fc75 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016842:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016846:	2b00      	cmp	r3, #0
 8016848:	dd19      	ble.n	801687e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801684a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801684e:	2b00      	cmp	r3, #0
 8016850:	dd15      	ble.n	801687e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016852:	6968      	ldr	r0, [r5, #20]
 8016854:	b128      	cbz	r0, 8016862 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016856:	6803      	ldr	r3, [r0, #0]
 8016858:	4621      	mov	r1, r4
 801685a:	691b      	ldr	r3, [r3, #16]
 801685c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016860:	4718      	bx	r3
 8016862:	4b07      	ldr	r3, [pc, #28]	; (8016880 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016864:	681b      	ldr	r3, [r3, #0]
 8016866:	3304      	adds	r3, #4
 8016868:	429d      	cmp	r5, r3
 801686a:	d108      	bne.n	801687e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801686c:	f7fe ff10 	bl	8015690 <_ZN8touchgfx11Application11getInstanceEv>
 8016870:	6803      	ldr	r3, [r0, #0]
 8016872:	6821      	ldr	r1, [r4, #0]
 8016874:	6862      	ldr	r2, [r4, #4]
 8016876:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016878:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801687c:	4718      	bx	r3
 801687e:	bd70      	pop	{r4, r5, r6, pc}
 8016880:	24002fe0 	.word	0x24002fe0

08016884 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016884:	b570      	push	{r4, r5, r6, lr}
 8016886:	4604      	mov	r4, r0
 8016888:	4616      	mov	r6, r2
 801688a:	460d      	mov	r5, r1
 801688c:	b901      	cbnz	r1, 8016890 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801688e:	b192      	cbz	r2, 80168b6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016890:	6823      	ldr	r3, [r4, #0]
 8016892:	4620      	mov	r0, r4
 8016894:	699b      	ldr	r3, [r3, #24]
 8016896:	4798      	blx	r3
 8016898:	88e2      	ldrh	r2, [r4, #6]
 801689a:	88a1      	ldrh	r1, [r4, #4]
 801689c:	4620      	mov	r0, r4
 801689e:	4432      	add	r2, r6
 80168a0:	4429      	add	r1, r5
 80168a2:	b212      	sxth	r2, r2
 80168a4:	b209      	sxth	r1, r1
 80168a6:	f7f6 fec4 	bl	800d632 <_ZN8touchgfx8Drawable5setXYEss>
 80168aa:	6823      	ldr	r3, [r4, #0]
 80168ac:	4620      	mov	r0, r4
 80168ae:	699b      	ldr	r3, [r3, #24]
 80168b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80168b4:	4718      	bx	r3
 80168b6:	bd70      	pop	{r4, r5, r6, pc}

080168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80168b8:	b510      	push	{r4, lr}
 80168ba:	2300      	movs	r3, #0
 80168bc:	4604      	mov	r4, r0
 80168be:	4608      	mov	r0, r1
 80168c0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80168c4:	8023      	strh	r3, [r4, #0]
 80168c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80168ca:	8063      	strh	r3, [r4, #2]
 80168cc:	6803      	ldr	r3, [r0, #0]
 80168ce:	80a1      	strh	r1, [r4, #4]
 80168d0:	4621      	mov	r1, r4
 80168d2:	80e2      	strh	r2, [r4, #6]
 80168d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80168d6:	4798      	blx	r3
 80168d8:	4620      	mov	r0, r4
 80168da:	bd10      	pop	{r4, pc}

080168dc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80168dc:	b530      	push	{r4, r5, lr}
 80168de:	8083      	strh	r3, [r0, #4]
 80168e0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80168e4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80168e8:	80c3      	strh	r3, [r0, #6]
 80168ea:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80168ee:	6141      	str	r1, [r0, #20]
 80168f0:	7203      	strb	r3, [r0, #8]
 80168f2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80168f6:	8302      	strh	r2, [r0, #24]
 80168f8:	7243      	strb	r3, [r0, #9]
 80168fa:	7a83      	ldrb	r3, [r0, #10]
 80168fc:	f365 0306 	bfi	r3, r5, #0, #7
 8016900:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016904:	f365 13c7 	bfi	r3, r5, #7, #1
 8016908:	7283      	strb	r3, [r0, #10]
 801690a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801690e:	72c3      	strb	r3, [r0, #11]
 8016910:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016914:	7303      	strb	r3, [r0, #12]
 8016916:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801691a:	81c3      	strh	r3, [r0, #14]
 801691c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016920:	8203      	strh	r3, [r0, #16]
 8016922:	4b01      	ldr	r3, [pc, #4]	; (8016928 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016924:	6003      	str	r3, [r0, #0]
 8016926:	bd30      	pop	{r4, r5, pc}
 8016928:	08028bbc 	.word	0x08028bbc

0801692c <_ZNK8touchgfx9ConstFont4findEt>:
 801692c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801692e:	6944      	ldr	r4, [r0, #20]
 8016930:	b3bc      	cbz	r4, 80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016932:	88a3      	ldrh	r3, [r4, #4]
 8016934:	8b02      	ldrh	r2, [r0, #24]
 8016936:	1acb      	subs	r3, r1, r3
 8016938:	f102 32ff 	add.w	r2, r2, #4294967295
 801693c:	d431      	bmi.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801693e:	4293      	cmp	r3, r2
 8016940:	dd0c      	ble.n	801695c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016942:	230e      	movs	r3, #14
 8016944:	fb03 4302 	mla	r3, r3, r2, r4
 8016948:	889b      	ldrh	r3, [r3, #4]
 801694a:	1a5b      	subs	r3, r3, r1
 801694c:	1ad3      	subs	r3, r2, r3
 801694e:	429a      	cmp	r2, r3
 8016950:	db27      	blt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016952:	2b00      	cmp	r3, #0
 8016954:	bfbc      	itt	lt
 8016956:	2302      	movlt	r3, #2
 8016958:	fb92 f3f3 	sdivlt	r3, r2, r3
 801695c:	2500      	movs	r5, #0
 801695e:	260e      	movs	r6, #14
 8016960:	4295      	cmp	r5, r2
 8016962:	dc1e      	bgt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016964:	fb06 4003 	mla	r0, r6, r3, r4
 8016968:	8887      	ldrh	r7, [r0, #4]
 801696a:	42b9      	cmp	r1, r7
 801696c:	d01a      	beq.n	80169a4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801696e:	d20d      	bcs.n	801698c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016970:	1e5a      	subs	r2, r3, #1
 8016972:	4295      	cmp	r5, r2
 8016974:	dc15      	bgt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016976:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801697a:	1a5b      	subs	r3, r3, r1
 801697c:	1ad3      	subs	r3, r2, r3
 801697e:	429a      	cmp	r2, r3
 8016980:	db0f      	blt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016982:	429d      	cmp	r5, r3
 8016984:	ddec      	ble.n	8016960 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016986:	1953      	adds	r3, r2, r5
 8016988:	105b      	asrs	r3, r3, #1
 801698a:	e7e9      	b.n	8016960 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801698c:	1c5d      	adds	r5, r3, #1
 801698e:	42aa      	cmp	r2, r5
 8016990:	db07      	blt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016992:	8a43      	ldrh	r3, [r0, #18]
 8016994:	1acb      	subs	r3, r1, r3
 8016996:	442b      	add	r3, r5
 8016998:	429d      	cmp	r5, r3
 801699a:	dc02      	bgt.n	80169a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801699c:	429a      	cmp	r2, r3
 801699e:	dadf      	bge.n	8016960 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80169a0:	e7f1      	b.n	8016986 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80169a2:	2000      	movs	r0, #0
 80169a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080169a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80169a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80169a8:	4604      	mov	r4, r0
 80169aa:	4617      	mov	r7, r2
 80169ac:	461e      	mov	r6, r3
 80169ae:	b911      	cbnz	r1, 80169b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80169b0:	2500      	movs	r5, #0
 80169b2:	4628      	mov	r0, r5
 80169b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80169b6:	290a      	cmp	r1, #10
 80169b8:	d0fa      	beq.n	80169b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80169ba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80169be:	4291      	cmp	r1, r2
 80169c0:	d0f6      	beq.n	80169b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80169c2:	f242 020b 	movw	r2, #8203	; 0x200b
 80169c6:	4291      	cmp	r1, r2
 80169c8:	d0f2      	beq.n	80169b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80169ca:	f7ff ffaf 	bl	801692c <_ZNK8touchgfx9ConstFont4findEt>
 80169ce:	4605      	mov	r5, r0
 80169d0:	b950      	cbnz	r0, 80169e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80169d2:	6823      	ldr	r3, [r4, #0]
 80169d4:	4620      	mov	r0, r4
 80169d6:	691b      	ldr	r3, [r3, #16]
 80169d8:	4798      	blx	r3
 80169da:	4601      	mov	r1, r0
 80169dc:	4620      	mov	r0, r4
 80169de:	f7ff ffa5 	bl	801692c <_ZNK8touchgfx9ConstFont4findEt>
 80169e2:	4605      	mov	r5, r0
 80169e4:	2800      	cmp	r0, #0
 80169e6:	d0e3      	beq.n	80169b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80169e8:	6823      	ldr	r3, [r4, #0]
 80169ea:	4629      	mov	r1, r5
 80169ec:	4620      	mov	r0, r4
 80169ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80169f0:	4798      	blx	r3
 80169f2:	6038      	str	r0, [r7, #0]
 80169f4:	6823      	ldr	r3, [r4, #0]
 80169f6:	4620      	mov	r0, r4
 80169f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80169fa:	4798      	blx	r3
 80169fc:	7030      	strb	r0, [r6, #0]
 80169fe:	e7d8      	b.n	80169b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016a00 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8016a00:	2000      	movs	r0, #0
 8016a02:	4770      	bx	lr

08016a04 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016a04:	2001      	movs	r0, #1
 8016a06:	4770      	bx	lr

08016a08 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016a08:	2002      	movs	r0, #2
 8016a0a:	4770      	bx	lr

08016a0c <_ZN8touchgfx12GestureEventD1Ev>:
 8016a0c:	4770      	bx	lr

08016a0e <_ZN8touchgfx9DragEventD1Ev>:
 8016a0e:	4770      	bx	lr

08016a10 <_ZN8touchgfx10ClickEventD1Ev>:
 8016a10:	4770      	bx	lr

08016a12 <_ZN8touchgfx10ClickEventD0Ev>:
 8016a12:	b510      	push	{r4, lr}
 8016a14:	4604      	mov	r4, r0
 8016a16:	210c      	movs	r1, #12
 8016a18:	f00e ff5d 	bl	80258d6 <_ZdlPvj>
 8016a1c:	4620      	mov	r0, r4
 8016a1e:	bd10      	pop	{r4, pc}

08016a20 <_ZN8touchgfx9DragEventD0Ev>:
 8016a20:	b510      	push	{r4, lr}
 8016a22:	4604      	mov	r4, r0
 8016a24:	2110      	movs	r1, #16
 8016a26:	f00e ff56 	bl	80258d6 <_ZdlPvj>
 8016a2a:	4620      	mov	r0, r4
 8016a2c:	bd10      	pop	{r4, pc}

08016a2e <_ZN8touchgfx12GestureEventD0Ev>:
 8016a2e:	b510      	push	{r4, lr}
 8016a30:	4604      	mov	r4, r0
 8016a32:	210c      	movs	r1, #12
 8016a34:	f00e ff4f 	bl	80258d6 <_ZdlPvj>
 8016a38:	4620      	mov	r0, r4
 8016a3a:	bd10      	pop	{r4, pc}

08016a3c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016a3c:	b530      	push	{r4, r5, lr}
 8016a3e:	460d      	mov	r5, r1
 8016a40:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016a42:	b087      	sub	sp, #28
 8016a44:	4604      	mov	r4, r0
 8016a46:	b301      	cbz	r1, 8016a8a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016a48:	a801      	add	r0, sp, #4
 8016a4a:	f7ff ff35 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a4e:	892a      	ldrh	r2, [r5, #8]
 8016a50:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016a54:	7928      	ldrb	r0, [r5, #4]
 8016a56:	1ad2      	subs	r2, r2, r3
 8016a58:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016a5a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016a5e:	441a      	add	r2, r3
 8016a60:	896b      	ldrh	r3, [r5, #10]
 8016a62:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016a66:	f88d 0010 	strb.w	r0, [sp, #16]
 8016a6a:	1b5b      	subs	r3, r3, r5
 8016a6c:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016a6e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016a70:	442b      	add	r3, r5
 8016a72:	4d07      	ldr	r5, [pc, #28]	; (8016a90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016a74:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016a78:	a903      	add	r1, sp, #12
 8016a7a:	9503      	str	r5, [sp, #12]
 8016a7c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016a80:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a84:	6803      	ldr	r3, [r0, #0]
 8016a86:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a88:	4798      	blx	r3
 8016a8a:	b007      	add	sp, #28
 8016a8c:	bd30      	pop	{r4, r5, pc}
 8016a8e:	bf00      	nop
 8016a90:	08028c44 	.word	0x08028c44

08016a94 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a98:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016a9a:	b08a      	sub	sp, #40	; 0x28
 8016a9c:	4604      	mov	r4, r0
 8016a9e:	460d      	mov	r5, r1
 8016aa0:	b113      	cbz	r3, 8016aa8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016aa2:	790b      	ldrb	r3, [r1, #4]
 8016aa4:	2b00      	cmp	r3, #0
 8016aa6:	d044      	beq.n	8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016aa8:	f104 0804 	add.w	r8, r4, #4
 8016aac:	a803      	add	r0, sp, #12
 8016aae:	4641      	mov	r1, r8
 8016ab0:	f7ff ff02 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ab4:	792b      	ldrb	r3, [r5, #4]
 8016ab6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016aba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016abe:	b983      	cbnz	r3, 8016ae2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016ac0:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016ac4:	892a      	ldrh	r2, [r5, #8]
 8016ac6:	88e9      	ldrh	r1, [r5, #6]
 8016ac8:	4640      	mov	r0, r8
 8016aca:	1b92      	subs	r2, r2, r6
 8016acc:	9301      	str	r3, [sp, #4]
 8016ace:	1bc9      	subs	r1, r1, r7
 8016ad0:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016ad4:	b212      	sxth	r2, r2
 8016ad6:	9300      	str	r3, [sp, #0]
 8016ad8:	b209      	sxth	r1, r1
 8016ada:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016ade:	f7fb fa43 	bl	8011f68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016ae2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016ae4:	b329      	cbz	r1, 8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016ae6:	a805      	add	r0, sp, #20
 8016ae8:	f7ff fee6 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016aec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016af0:	792b      	ldrb	r3, [r5, #4]
 8016af2:	a907      	add	r1, sp, #28
 8016af4:	1abf      	subs	r7, r7, r2
 8016af6:	88ea      	ldrh	r2, [r5, #6]
 8016af8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016afa:	4417      	add	r7, r2
 8016afc:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016afe:	f88d 3020 	strb.w	r3, [sp, #32]
 8016b02:	4417      	add	r7, r2
 8016b04:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016b08:	1ab6      	subs	r6, r6, r2
 8016b0a:	892a      	ldrh	r2, [r5, #8]
 8016b0c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016b10:	4416      	add	r6, r2
 8016b12:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016b14:	4416      	add	r6, r2
 8016b16:	4a08      	ldr	r2, [pc, #32]	; (8016b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016b18:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016b1c:	2600      	movs	r6, #0
 8016b1e:	9207      	str	r2, [sp, #28]
 8016b20:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016b24:	6803      	ldr	r3, [r0, #0]
 8016b26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b28:	4798      	blx	r3
 8016b2a:	792b      	ldrb	r3, [r5, #4]
 8016b2c:	b10b      	cbz	r3, 8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016b2e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016b32:	b00a      	add	sp, #40	; 0x28
 8016b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016b38:	08028c1c 	.word	0x08028c1c

08016b3c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016b40:	460c      	mov	r4, r1
 8016b42:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016b44:	b088      	sub	sp, #32
 8016b46:	4605      	mov	r5, r0
 8016b48:	2900      	cmp	r1, #0
 8016b4a:	d06d      	beq.n	8016c28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016b4c:	4668      	mov	r0, sp
 8016b4e:	f7ff feb3 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b52:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016b54:	88e3      	ldrh	r3, [r4, #6]
 8016b56:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016b5a:	440b      	add	r3, r1
 8016b5c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016b60:	b21b      	sxth	r3, r3
 8016b62:	4543      	cmp	r3, r8
 8016b64:	db31      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b66:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016b6a:	44c4      	add	ip, r8
 8016b6c:	fa0f fc8c 	sxth.w	ip, ip
 8016b70:	4563      	cmp	r3, ip
 8016b72:	da2a      	bge.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b74:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016b76:	8926      	ldrh	r6, [r4, #8]
 8016b78:	4416      	add	r6, r2
 8016b7a:	b236      	sxth	r6, r6
 8016b7c:	42be      	cmp	r6, r7
 8016b7e:	db24      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b80:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016b84:	4438      	add	r0, r7
 8016b86:	b200      	sxth	r0, r0
 8016b88:	4286      	cmp	r6, r0
 8016b8a:	da1e      	bge.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b8c:	8963      	ldrh	r3, [r4, #10]
 8016b8e:	4419      	add	r1, r3
 8016b90:	b209      	sxth	r1, r1
 8016b92:	4541      	cmp	r1, r8
 8016b94:	db08      	blt.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b96:	4561      	cmp	r1, ip
 8016b98:	da06      	bge.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b9a:	89a3      	ldrh	r3, [r4, #12]
 8016b9c:	441a      	add	r2, r3
 8016b9e:	b212      	sxth	r2, r2
 8016ba0:	42ba      	cmp	r2, r7
 8016ba2:	db01      	blt.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016ba4:	4282      	cmp	r2, r0
 8016ba6:	db10      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ba8:	4b21      	ldr	r3, [pc, #132]	; (8016c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016baa:	a904      	add	r1, sp, #16
 8016bac:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016bae:	9304      	str	r3, [sp, #16]
 8016bb0:	2302      	movs	r3, #2
 8016bb2:	f88d 3014 	strb.w	r3, [sp, #20]
 8016bb6:	2300      	movs	r3, #0
 8016bb8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016bbc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016bc0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016bc4:	6803      	ldr	r3, [r0, #0]
 8016bc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016bc8:	4798      	blx	r3
 8016bca:	1d29      	adds	r1, r5, #4
 8016bcc:	a802      	add	r0, sp, #8
 8016bce:	f7ff fe73 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016bd2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016bd6:	88e0      	ldrh	r0, [r4, #6]
 8016bd8:	eba3 0808 	sub.w	r8, r3, r8
 8016bdc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016be0:	7921      	ldrb	r1, [r4, #4]
 8016be2:	fa1f f888 	uxth.w	r8, r8
 8016be6:	1bdf      	subs	r7, r3, r7
 8016be8:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016bec:	b2bb      	uxth	r3, r7
 8016bee:	4440      	add	r0, r8
 8016bf0:	8922      	ldrh	r2, [r4, #8]
 8016bf2:	8967      	ldrh	r7, [r4, #10]
 8016bf4:	4460      	add	r0, ip
 8016bf6:	89a4      	ldrh	r4, [r4, #12]
 8016bf8:	441a      	add	r2, r3
 8016bfa:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016bfc:	44b8      	add	r8, r7
 8016bfe:	4423      	add	r3, r4
 8016c00:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016c04:	4432      	add	r2, r6
 8016c06:	44e0      	add	r8, ip
 8016c08:	4433      	add	r3, r6
 8016c0a:	4c0a      	ldr	r4, [pc, #40]	; (8016c34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016c0c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016c0e:	f88d 1014 	strb.w	r1, [sp, #20]
 8016c12:	a904      	add	r1, sp, #16
 8016c14:	9404      	str	r4, [sp, #16]
 8016c16:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016c1a:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016c1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016c22:	6803      	ldr	r3, [r0, #0]
 8016c24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c26:	4798      	blx	r3
 8016c28:	b008      	add	sp, #32
 8016c2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c2e:	bf00      	nop
 8016c30:	08028c1c 	.word	0x08028c1c
 8016c34:	08028c30 	.word	0x08028c30

08016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016c38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016c3a:	4604      	mov	r4, r0
 8016c3c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016c40:	3201      	adds	r2, #1
 8016c42:	d112      	bne.n	8016c6a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016c44:	2500      	movs	r5, #0
 8016c46:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016c4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016c4e:	6803      	ldr	r3, [r0, #0]
 8016c50:	9500      	str	r5, [sp, #0]
 8016c52:	466d      	mov	r5, sp
 8016c54:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016c58:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016c5c:	4629      	mov	r1, r5
 8016c5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c60:	4798      	blx	r3
 8016c62:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016c66:	e884 0003 	stmia.w	r4, {r0, r1}
 8016c6a:	4620      	mov	r0, r4
 8016c6c:	b003      	add	sp, #12
 8016c6e:	bd30      	pop	{r4, r5, pc}

08016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016c70:	b513      	push	{r0, r1, r4, lr}
 8016c72:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016c76:	4604      	mov	r4, r0
 8016c78:	3301      	adds	r3, #1
 8016c7a:	d109      	bne.n	8016c90 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016c7c:	4601      	mov	r1, r0
 8016c7e:	4668      	mov	r0, sp
 8016c80:	f7ff fe1a 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016c84:	f8bd 3000 	ldrh.w	r3, [sp]
 8016c88:	8423      	strh	r3, [r4, #32]
 8016c8a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016c8e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016c90:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016c94:	b002      	add	sp, #8
 8016c96:	bd10      	pop	{r4, pc}

08016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016c98:	b513      	push	{r0, r1, r4, lr}
 8016c9a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016c9e:	4604      	mov	r4, r0
 8016ca0:	3301      	adds	r3, #1
 8016ca2:	d109      	bne.n	8016cb8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016ca4:	4601      	mov	r1, r0
 8016ca6:	4668      	mov	r0, sp
 8016ca8:	f7ff fe06 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016cac:	f8bd 3000 	ldrh.w	r3, [sp]
 8016cb0:	8423      	strh	r3, [r4, #32]
 8016cb2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016cb6:	8463      	strh	r3, [r4, #34]	; 0x22
 8016cb8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016cbc:	b002      	add	sp, #8
 8016cbe:	bd10      	pop	{r4, pc}

08016cc0 <_ZN8touchgfx6ScreenC1Ev>:
 8016cc0:	b570      	push	{r4, r5, r6, lr}
 8016cc2:	4b17      	ldr	r3, [pc, #92]	; (8016d20 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016cc4:	4605      	mov	r5, r0
 8016cc6:	4a17      	ldr	r2, [pc, #92]	; (8016d24 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016cc8:	2101      	movs	r1, #1
 8016cca:	f845 3b04 	str.w	r3, [r5], #4
 8016cce:	2300      	movs	r3, #0
 8016cd0:	6042      	str	r2, [r0, #4]
 8016cd2:	4604      	mov	r4, r0
 8016cd4:	8103      	strh	r3, [r0, #8]
 8016cd6:	8143      	strh	r3, [r0, #10]
 8016cd8:	8183      	strh	r3, [r0, #12]
 8016cda:	81c3      	strh	r3, [r0, #14]
 8016cdc:	8203      	strh	r3, [r0, #16]
 8016cde:	8243      	strh	r3, [r0, #18]
 8016ce0:	8283      	strh	r3, [r0, #20]
 8016ce2:	82c3      	strh	r3, [r0, #22]
 8016ce4:	6203      	str	r3, [r0, #32]
 8016ce6:	8483      	strh	r3, [r0, #36]	; 0x24
 8016ce8:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016cea:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016cee:	6343      	str	r3, [r0, #52]	; 0x34
 8016cf0:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016cf4:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016cf8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016cfc:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016d00:	4b09      	ldr	r3, [pc, #36]	; (8016d28 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016d02:	4628      	mov	r0, r5
 8016d04:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016d08:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016d0a:	4a08      	ldr	r2, [pc, #32]	; (8016d2c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016d0c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016d10:	4798      	blx	r3
 8016d12:	6863      	ldr	r3, [r4, #4]
 8016d14:	4628      	mov	r0, r5
 8016d16:	4631      	mov	r1, r6
 8016d18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016d1a:	4798      	blx	r3
 8016d1c:	4620      	mov	r0, r4
 8016d1e:	bd70      	pop	{r4, r5, r6, pc}
 8016d20:	08028c58 	.word	0x08028c58
 8016d24:	08028670 	.word	0x08028670
 8016d28:	24002f9a 	.word	0x24002f9a
 8016d2c:	24002f98 	.word	0x24002f98

08016d30 <_ZN8touchgfx6Screen4drawEv>:
 8016d30:	4b09      	ldr	r3, [pc, #36]	; (8016d58 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016d32:	b507      	push	{r0, r1, r2, lr}
 8016d34:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016d38:	2100      	movs	r1, #0
 8016d3a:	4b08      	ldr	r3, [pc, #32]	; (8016d5c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016d3c:	9100      	str	r1, [sp, #0]
 8016d3e:	4669      	mov	r1, sp
 8016d40:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016d44:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016d48:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016d4c:	6803      	ldr	r3, [r0, #0]
 8016d4e:	689b      	ldr	r3, [r3, #8]
 8016d50:	4798      	blx	r3
 8016d52:	b003      	add	sp, #12
 8016d54:	f85d fb04 	ldr.w	pc, [sp], #4
 8016d58:	24002f98 	.word	0x24002f98
 8016d5c:	24002f9a 	.word	0x24002f9a

08016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d64:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016d68:	b089      	sub	sp, #36	; 0x24
 8016d6a:	4680      	mov	r8, r0
 8016d6c:	460c      	mov	r4, r1
 8016d6e:	2b00      	cmp	r3, #0
 8016d70:	4615      	mov	r5, r2
 8016d72:	dd0e      	ble.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d74:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016d78:	2b00      	cmp	r3, #0
 8016d7a:	dd0a      	ble.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d7c:	4628      	mov	r0, r5
 8016d7e:	f7ff ff5b 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016d82:	4621      	mov	r1, r4
 8016d84:	f7fe fba6 	bl	80154d4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d88:	69eb      	ldr	r3, [r5, #28]
 8016d8a:	b928      	cbnz	r0, 8016d98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016d8c:	461d      	mov	r5, r3
 8016d8e:	2b00      	cmp	r3, #0
 8016d90:	d1f4      	bne.n	8016d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016d92:	b009      	add	sp, #36	; 0x24
 8016d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d98:	ae04      	add	r6, sp, #16
 8016d9a:	2b00      	cmp	r3, #0
 8016d9c:	f000 80b5 	beq.w	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016da0:	682b      	ldr	r3, [r5, #0]
 8016da2:	4629      	mov	r1, r5
 8016da4:	a802      	add	r0, sp, #8
 8016da6:	68db      	ldr	r3, [r3, #12]
 8016da8:	4798      	blx	r3
 8016daa:	4628      	mov	r0, r5
 8016dac:	f7ff ff60 	bl	8016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016db0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016db4:	4407      	add	r7, r0
 8016db6:	4628      	mov	r0, r5
 8016db8:	f7ff ff6e 	bl	8016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016dbc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016dc0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016dc4:	b23f      	sxth	r7, r7
 8016dc6:	4418      	add	r0, r3
 8016dc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016dcc:	4621      	mov	r1, r4
 8016dce:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016dd2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016dd6:	4630      	mov	r0, r6
 8016dd8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016ddc:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016de0:	f7fb f9a4 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016de4:	4628      	mov	r0, r5
 8016de6:	f7ff ff27 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016dea:	ab06      	add	r3, sp, #24
 8016dec:	4602      	mov	r2, r0
 8016dee:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016df2:	e883 0003 	stmia.w	r3, {r0, r1}
 8016df6:	4611      	mov	r1, r2
 8016df8:	4618      	mov	r0, r3
 8016dfa:	f7fb f997 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016dfe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016e02:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016e06:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016e0a:	4299      	cmp	r1, r3
 8016e0c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016e10:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016e14:	d10b      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e16:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016e1a:	4552      	cmp	r2, sl
 8016e1c:	d107      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e1e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016e22:	455a      	cmp	r2, fp
 8016e24:	d103      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e26:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016e2a:	454a      	cmp	r2, r9
 8016e2c:	d06d      	beq.n	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016e2e:	f1bb 0f00 	cmp.w	fp, #0
 8016e32:	dd65      	ble.n	8016f00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016e34:	f1b9 0f00 	cmp.w	r9, #0
 8016e38:	dd62      	ble.n	8016f00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016e3a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016e3e:	fa1f f08a 	uxth.w	r0, sl
 8016e42:	4552      	cmp	r2, sl
 8016e44:	9000      	str	r0, [sp, #0]
 8016e46:	da12      	bge.n	8016e6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016e48:	9301      	str	r3, [sp, #4]
 8016e4a:	9b00      	ldr	r3, [sp, #0]
 8016e4c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016e50:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016e54:	1a9a      	subs	r2, r3, r2
 8016e56:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016e5a:	4631      	mov	r1, r6
 8016e5c:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016e60:	4640      	mov	r0, r8
 8016e62:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016e66:	69ea      	ldr	r2, [r5, #28]
 8016e68:	f7ff ff7a 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e6c:	9b01      	ldr	r3, [sp, #4]
 8016e6e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016e72:	b29f      	uxth	r7, r3
 8016e74:	429a      	cmp	r2, r3
 8016e76:	da0d      	bge.n	8016e94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016e78:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016e7c:	1aba      	subs	r2, r7, r2
 8016e7e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016e82:	4631      	mov	r1, r6
 8016e84:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016e88:	4640      	mov	r0, r8
 8016e8a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016e8e:	69ea      	ldr	r2, [r5, #28]
 8016e90:	f7ff ff66 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e94:	8822      	ldrh	r2, [r4, #0]
 8016e96:	445f      	add	r7, fp
 8016e98:	88a3      	ldrh	r3, [r4, #4]
 8016e9a:	b2bf      	uxth	r7, r7
 8016e9c:	4413      	add	r3, r2
 8016e9e:	b23a      	sxth	r2, r7
 8016ea0:	b29b      	uxth	r3, r3
 8016ea2:	b219      	sxth	r1, r3
 8016ea4:	4291      	cmp	r1, r2
 8016ea6:	dd0d      	ble.n	8016ec4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016ea8:	1bdb      	subs	r3, r3, r7
 8016eaa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016eae:	f8ad a012 	strh.w	sl, [sp, #18]
 8016eb2:	4631      	mov	r1, r6
 8016eb4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016eb8:	4640      	mov	r0, r8
 8016eba:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016ebe:	69ea      	ldr	r2, [r5, #28]
 8016ec0:	f7ff ff4e 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016ec4:	88e2      	ldrh	r2, [r4, #6]
 8016ec6:	8863      	ldrh	r3, [r4, #2]
 8016ec8:	4413      	add	r3, r2
 8016eca:	9a00      	ldr	r2, [sp, #0]
 8016ecc:	444a      	add	r2, r9
 8016ece:	b29b      	uxth	r3, r3
 8016ed0:	fa1f f982 	uxth.w	r9, r2
 8016ed4:	b219      	sxth	r1, r3
 8016ed6:	fa0f f289 	sxth.w	r2, r9
 8016eda:	428a      	cmp	r2, r1
 8016edc:	da15      	bge.n	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016ede:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016ee2:	eba3 0309 	sub.w	r3, r3, r9
 8016ee6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016eea:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016eee:	4631      	mov	r1, r6
 8016ef0:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016ef4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016ef8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016efc:	69ea      	ldr	r2, [r5, #28]
 8016efe:	e001      	b.n	8016f04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016f00:	69ea      	ldr	r2, [r5, #28]
 8016f02:	4621      	mov	r1, r4
 8016f04:	4640      	mov	r0, r8
 8016f06:	f7ff ff2b 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f0a:	4628      	mov	r0, r5
 8016f0c:	f7ff fe94 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016f10:	6861      	ldr	r1, [r4, #4]
 8016f12:	4602      	mov	r2, r0
 8016f14:	4633      	mov	r3, r6
 8016f16:	6820      	ldr	r0, [r4, #0]
 8016f18:	c303      	stmia	r3!, {r0, r1}
 8016f1a:	4611      	mov	r1, r2
 8016f1c:	4630      	mov	r0, r6
 8016f1e:	f7fb f905 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016f22:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	f77f af33 	ble.w	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016f2c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016f30:	2b00      	cmp	r3, #0
 8016f32:	f77f af2e 	ble.w	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016f36:	4628      	mov	r0, r5
 8016f38:	f7ff fe9a 	bl	8016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016f3c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016f40:	1a18      	subs	r0, r3, r0
 8016f42:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016f46:	4628      	mov	r0, r5
 8016f48:	f7ff fea6 	bl	8016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016f4c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016f50:	4631      	mov	r1, r6
 8016f52:	1a18      	subs	r0, r3, r0
 8016f54:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016f58:	4628      	mov	r0, r5
 8016f5a:	682b      	ldr	r3, [r5, #0]
 8016f5c:	689b      	ldr	r3, [r3, #8]
 8016f5e:	4798      	blx	r3
 8016f60:	e717      	b.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016f62 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016f62:	b570      	push	{r4, r5, r6, lr}
 8016f64:	1d06      	adds	r6, r0, #4
 8016f66:	b086      	sub	sp, #24
 8016f68:	460c      	mov	r4, r1
 8016f6a:	2300      	movs	r3, #0
 8016f6c:	4631      	mov	r1, r6
 8016f6e:	4605      	mov	r5, r0
 8016f70:	a802      	add	r0, sp, #8
 8016f72:	9301      	str	r3, [sp, #4]
 8016f74:	f7ff fca0 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016f78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f7c:	8822      	ldrh	r2, [r4, #0]
 8016f7e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016f82:	1ad2      	subs	r2, r2, r3
 8016f84:	8863      	ldrh	r3, [r4, #2]
 8016f86:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016f8a:	1a5b      	subs	r3, r3, r1
 8016f8c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016f90:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016f94:	aa01      	add	r2, sp, #4
 8016f96:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016f9a:	4630      	mov	r0, r6
 8016f9c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016fa0:	a904      	add	r1, sp, #16
 8016fa2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016fa6:	f7fb f999 	bl	80122dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016faa:	9a01      	ldr	r2, [sp, #4]
 8016fac:	b11a      	cbz	r2, 8016fb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016fae:	4621      	mov	r1, r4
 8016fb0:	4628      	mov	r0, r5
 8016fb2:	f7ff fed5 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016fb6:	b006      	add	sp, #24
 8016fb8:	bd70      	pop	{r4, r5, r6, pc}

08016fba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016fba:	4602      	mov	r2, r0
 8016fbc:	b530      	push	{r4, r5, lr}
 8016fbe:	4604      	mov	r4, r0
 8016fc0:	b085      	sub	sp, #20
 8016fc2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016fc6:	460d      	mov	r5, r1
 8016fc8:	466b      	mov	r3, sp
 8016fca:	6851      	ldr	r1, [r2, #4]
 8016fcc:	c303      	stmia	r3!, {r0, r1}
 8016fce:	4629      	mov	r1, r5
 8016fd0:	4668      	mov	r0, sp
 8016fd2:	f7fb f8ab 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 8016fd6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016fda:	b12b      	cbz	r3, 8016fe8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016fdc:	4669      	mov	r1, sp
 8016fde:	4620      	mov	r0, r4
 8016fe0:	f7ff ffbf 	bl	8016f62 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016fe4:	b005      	add	sp, #20
 8016fe6:	bd30      	pop	{r4, r5, pc}
 8016fe8:	3404      	adds	r4, #4
 8016fea:	a802      	add	r0, sp, #8
 8016fec:	4621      	mov	r1, r4
 8016fee:	f7ff fc63 	bl	80168b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ff2:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ff6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016ffa:	4669      	mov	r1, sp
 8016ffc:	4620      	mov	r0, r4
 8016ffe:	1a9b      	subs	r3, r3, r2
 8017000:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017004:	f8ad 3000 	strh.w	r3, [sp]
 8017008:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801700c:	1a9b      	subs	r3, r3, r2
 801700e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017012:	f7fb f92a 	bl	801226a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017016:	e7e5      	b.n	8016fe4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017018:	460b      	mov	r3, r1
 801701a:	680a      	ldr	r2, [r1, #0]
 801701c:	1d01      	adds	r1, r0, #4
 801701e:	6992      	ldr	r2, [r2, #24]
 8017020:	4618      	mov	r0, r3
 8017022:	4710      	bx	r2

08017024 <_ZN8touchgfx12TextProviderC1Ev>:
 8017024:	b538      	push	{r3, r4, r5, lr}
 8017026:	2500      	movs	r5, #0
 8017028:	2302      	movs	r3, #2
 801702a:	4604      	mov	r4, r0
 801702c:	220e      	movs	r2, #14
 801702e:	7403      	strb	r3, [r0, #16]
 8017030:	4629      	mov	r1, r5
 8017032:	6145      	str	r5, [r0, #20]
 8017034:	7605      	strb	r5, [r0, #24]
 8017036:	83c5      	strh	r5, [r0, #30]
 8017038:	8405      	strh	r5, [r0, #32]
 801703a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801703c:	8705      	strh	r5, [r0, #56]	; 0x38
 801703e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017040:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017044:	e9c0 5500 	strd	r5, r5, [r0]
 8017048:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801704c:	304c      	adds	r0, #76	; 0x4c
 801704e:	f00e fe76 	bl	8025d3e <memset>
 8017052:	2301      	movs	r3, #1
 8017054:	4620      	mov	r0, r4
 8017056:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801705a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801705e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017062:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017066:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801706a:	f7f8 fb5b 	bl	800f724 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801706e:	4620      	mov	r0, r4
 8017070:	bd38      	pop	{r3, r4, r5, pc}

08017072 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017072:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017074:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017078:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801707a:	fab0 f080 	clz	r0, r0
 801707e:	0940      	lsrs	r0, r0, #5
 8017080:	4770      	bx	lr

08017082 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017082:	b530      	push	{r4, r5, lr}
 8017084:	2500      	movs	r5, #0
 8017086:	2401      	movs	r4, #1
 8017088:	6843      	ldr	r3, [r0, #4]
 801708a:	b913      	cbnz	r3, 8017092 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801708c:	6803      	ldr	r3, [r0, #0]
 801708e:	b313      	cbz	r3, 80170d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017090:	6043      	str	r3, [r0, #4]
 8017092:	7e03      	ldrb	r3, [r0, #24]
 8017094:	b143      	cbz	r3, 80170a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017096:	6943      	ldr	r3, [r0, #20]
 8017098:	b12b      	cbz	r3, 80170a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801709a:	881a      	ldrh	r2, [r3, #0]
 801709c:	b11a      	cbz	r2, 80170a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801709e:	1c9a      	adds	r2, r3, #2
 80170a0:	6142      	str	r2, [r0, #20]
 80170a2:	8818      	ldrh	r0, [r3, #0]
 80170a4:	bd30      	pop	{r4, r5, pc}
 80170a6:	7605      	strb	r5, [r0, #24]
 80170a8:	6843      	ldr	r3, [r0, #4]
 80170aa:	8819      	ldrh	r1, [r3, #0]
 80170ac:	b199      	cbz	r1, 80170d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80170ae:	1c9a      	adds	r2, r3, #2
 80170b0:	2902      	cmp	r1, #2
 80170b2:	6042      	str	r2, [r0, #4]
 80170b4:	d1f5      	bne.n	80170a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80170b6:	7c03      	ldrb	r3, [r0, #16]
 80170b8:	2b01      	cmp	r3, #1
 80170ba:	d8e5      	bhi.n	8017088 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170bc:	1c5a      	adds	r2, r3, #1
 80170be:	3302      	adds	r3, #2
 80170c0:	7402      	strb	r2, [r0, #16]
 80170c2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80170c6:	6143      	str	r3, [r0, #20]
 80170c8:	2b00      	cmp	r3, #0
 80170ca:	d0dd      	beq.n	8017088 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170cc:	881b      	ldrh	r3, [r3, #0]
 80170ce:	2b00      	cmp	r3, #0
 80170d0:	d0da      	beq.n	8017088 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170d2:	7604      	strb	r4, [r0, #24]
 80170d4:	e7d8      	b.n	8017088 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80170d6:	2000      	movs	r0, #0
 80170d8:	e7e4      	b.n	80170a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80170da:	6001      	str	r1, [r0, #0]
 80170dc:	2100      	movs	r1, #0
 80170de:	b430      	push	{r4, r5}
 80170e0:	6041      	str	r1, [r0, #4]
 80170e2:	6815      	ldr	r5, [r2, #0]
 80170e4:	6085      	str	r5, [r0, #8]
 80170e6:	6852      	ldr	r2, [r2, #4]
 80170e8:	6443      	str	r3, [r0, #68]	; 0x44
 80170ea:	9b02      	ldr	r3, [sp, #8]
 80170ec:	60c2      	str	r2, [r0, #12]
 80170ee:	7401      	strb	r1, [r0, #16]
 80170f0:	6141      	str	r1, [r0, #20]
 80170f2:	7601      	strb	r1, [r0, #24]
 80170f4:	8701      	strh	r1, [r0, #56]	; 0x38
 80170f6:	8401      	strh	r1, [r0, #32]
 80170f8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80170fc:	6483      	str	r3, [r0, #72]	; 0x48
 80170fe:	bc30      	pop	{r4, r5}
 8017100:	f7f8 bb10 	b.w	800f724 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017104 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017104:	b408      	push	{r3}
 8017106:	b510      	push	{r4, lr}
 8017108:	b085      	sub	sp, #20
 801710a:	ac07      	add	r4, sp, #28
 801710c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017110:	9300      	str	r3, [sp, #0]
 8017112:	4613      	mov	r3, r2
 8017114:	4622      	mov	r2, r4
 8017116:	9403      	str	r4, [sp, #12]
 8017118:	f7ff ffdf 	bl	80170da <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801711c:	b005      	add	sp, #20
 801711e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017122:	b001      	add	sp, #4
 8017124:	4770      	bx	lr

08017126 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017126:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017128:	4605      	mov	r5, r0
 801712a:	4608      	mov	r0, r1
 801712c:	b1f1      	cbz	r1, 801716c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 801712e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017132:	460b      	mov	r3, r1
 8017134:	f101 0708 	add.w	r7, r1, #8
 8017138:	4622      	mov	r2, r4
 801713a:	6818      	ldr	r0, [r3, #0]
 801713c:	3308      	adds	r3, #8
 801713e:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8017142:	4626      	mov	r6, r4
 8017144:	42bb      	cmp	r3, r7
 8017146:	c603      	stmia	r6!, {r0, r1}
 8017148:	4634      	mov	r4, r6
 801714a:	d1f6      	bne.n	801713a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801714c:	6818      	ldr	r0, [r3, #0]
 801714e:	6030      	str	r0, [r6, #0]
 8017150:	4610      	mov	r0, r2
 8017152:	889b      	ldrh	r3, [r3, #4]
 8017154:	80b3      	strh	r3, [r6, #4]
 8017156:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801715a:	015b      	lsls	r3, r3, #5
 801715c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017160:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017164:	430b      	orrs	r3, r1
 8017166:	425b      	negs	r3, r3
 8017168:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801716c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801716e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801716e:	b538      	push	{r3, r4, r5, lr}
 8017170:	460c      	mov	r4, r1
 8017172:	6811      	ldr	r1, [r2, #0]
 8017174:	4610      	mov	r0, r2
 8017176:	68cd      	ldr	r5, [r1, #12]
 8017178:	4619      	mov	r1, r3
 801717a:	47a8      	blx	r5
 801717c:	2800      	cmp	r0, #0
 801717e:	bf08      	it	eq
 8017180:	4620      	moveq	r0, r4
 8017182:	bd38      	pop	{r3, r4, r5, pc}

08017184 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017184:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017186:	4604      	mov	r4, r0
 8017188:	4615      	mov	r5, r2
 801718a:	4608      	mov	r0, r1
 801718c:	b93a      	cbnz	r2, 801719e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801718e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017192:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017196:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801719a:	4628      	mov	r0, r5
 801719c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801719e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80171a2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80171a6:	8893      	ldrh	r3, [r2, #4]
 80171a8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80171ac:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80171b0:	79ee      	ldrb	r6, [r5, #7]
 80171b2:	4316      	orrs	r6, r2
 80171b4:	19da      	adds	r2, r3, r7
 80171b6:	b291      	uxth	r1, r2
 80171b8:	b2b7      	uxth	r7, r6
 80171ba:	291d      	cmp	r1, #29
 80171bc:	d87b      	bhi.n	80172b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80171be:	2201      	movs	r2, #1
 80171c0:	10f6      	asrs	r6, r6, #3
 80171c2:	408a      	lsls	r2, r1
 80171c4:	4974      	ldr	r1, [pc, #464]	; (8017398 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80171c6:	420a      	tst	r2, r1
 80171c8:	d12e      	bne.n	8017228 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80171ca:	f412 7f60 	tst.w	r2, #896	; 0x380
 80171ce:	d072      	beq.n	80172b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80171d0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80171d4:	462b      	mov	r3, r5
 80171d6:	f105 0e08 	add.w	lr, r5, #8
 80171da:	4615      	mov	r5, r2
 80171dc:	6818      	ldr	r0, [r3, #0]
 80171de:	3308      	adds	r3, #8
 80171e0:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80171e4:	4694      	mov	ip, r2
 80171e6:	4573      	cmp	r3, lr
 80171e8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80171ec:	4662      	mov	r2, ip
 80171ee:	d1f5      	bne.n	80171dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80171f0:	6818      	ldr	r0, [r3, #0]
 80171f2:	f8cc 0000 	str.w	r0, [ip]
 80171f6:	889b      	ldrh	r3, [r3, #4]
 80171f8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80171fc:	b2b3      	uxth	r3, r6
 80171fe:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017202:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017206:	1aca      	subs	r2, r1, r3
 8017208:	1bcf      	subs	r7, r1, r7
 801720a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801720e:	b292      	uxth	r2, r2
 8017210:	1afb      	subs	r3, r7, r3
 8017212:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017216:	10d2      	asrs	r2, r2, #3
 8017218:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801721c:	4302      	orrs	r2, r0
 801721e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017222:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017226:	e7b8      	b.n	801719a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017228:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801722a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801722e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017230:	f640 6333 	movw	r3, #3635	; 0xe33
 8017234:	4299      	cmp	r1, r3
 8017236:	d110      	bne.n	801725a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017238:	6803      	ldr	r3, [r0, #0]
 801723a:	68db      	ldr	r3, [r3, #12]
 801723c:	4798      	blx	r3
 801723e:	7b41      	ldrb	r1, [r0, #13]
 8017240:	00cb      	lsls	r3, r1, #3
 8017242:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017246:	7a03      	ldrb	r3, [r0, #8]
 8017248:	0648      	lsls	r0, r1, #25
 801724a:	ea43 0302 	orr.w	r3, r3, r2
 801724e:	bf44      	itt	mi
 8017250:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017254:	b21b      	sxthmi	r3, r3
 8017256:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801725a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801725e:	462a      	mov	r2, r5
 8017260:	f105 0c08 	add.w	ip, r5, #8
 8017264:	443b      	add	r3, r7
 8017266:	4433      	add	r3, r6
 8017268:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801726c:	b29b      	uxth	r3, r3
 801726e:	4635      	mov	r5, r6
 8017270:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017274:	6810      	ldr	r0, [r2, #0]
 8017276:	3208      	adds	r2, #8
 8017278:	f852 1c04 	ldr.w	r1, [r2, #-4]
 801727c:	4637      	mov	r7, r6
 801727e:	4562      	cmp	r2, ip
 8017280:	c703      	stmia	r7!, {r0, r1}
 8017282:	463e      	mov	r6, r7
 8017284:	d1f6      	bne.n	8017274 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017286:	6810      	ldr	r0, [r2, #0]
 8017288:	6038      	str	r0, [r7, #0]
 801728a:	8892      	ldrh	r2, [r2, #4]
 801728c:	80ba      	strh	r2, [r7, #4]
 801728e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017292:	10db      	asrs	r3, r3, #3
 8017294:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017298:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801729c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80172a0:	4313      	orrs	r3, r2
 80172a2:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80172a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80172aa:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80172ae:	1a9b      	subs	r3, r3, r2
 80172b0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80172b4:	e771      	b.n	801719a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80172b6:	f023 0204 	bic.w	r2, r3, #4
 80172ba:	f640 611b 	movw	r1, #3611	; 0xe1b
 80172be:	428a      	cmp	r2, r1
 80172c0:	d003      	beq.n	80172ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 80172c2:	f640 621d 	movw	r2, #3613	; 0xe1d
 80172c6:	4293      	cmp	r3, r2
 80172c8:	d120      	bne.n	801730c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 80172ca:	3b01      	subs	r3, #1
 80172cc:	4602      	mov	r2, r0
 80172ce:	4629      	mov	r1, r5
 80172d0:	4620      	mov	r0, r4
 80172d2:	b29b      	uxth	r3, r3
 80172d4:	f7ff ff4b 	bl	801716e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80172d8:	7b41      	ldrb	r1, [r0, #13]
 80172da:	00cb      	lsls	r3, r1, #3
 80172dc:	0649      	lsls	r1, r1, #25
 80172de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80172e2:	7a03      	ldrb	r3, [r0, #8]
 80172e4:	ea43 0302 	orr.w	r3, r3, r2
 80172e8:	bf44      	itt	mi
 80172ea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80172ee:	b21b      	sxthmi	r3, r3
 80172f0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80172f4:	7b6b      	ldrb	r3, [r5, #13]
 80172f6:	7aaa      	ldrb	r2, [r5, #10]
 80172f8:	005b      	lsls	r3, r3, #1
 80172fa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80172fe:	4313      	orrs	r3, r2
 8017300:	115a      	asrs	r2, r3, #5
 8017302:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017306:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801730a:	e035      	b.n	8017378 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801730c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017310:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017314:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017318:	7a2a      	ldrb	r2, [r5, #8]
 801731a:	ea42 0201 	orr.w	r2, r2, r1
 801731e:	f640 6109 	movw	r1, #3593	; 0xe09
 8017322:	bf1c      	itt	ne
 8017324:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017328:	b212      	sxthne	r2, r2
 801732a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801732e:	f023 0210 	bic.w	r2, r3, #16
 8017332:	428a      	cmp	r2, r1
 8017334:	d003      	beq.n	801733e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8017336:	f640 6213 	movw	r2, #3603	; 0xe13
 801733a:	4293      	cmp	r3, r2
 801733c:	d129      	bne.n	8017392 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801733e:	7b6e      	ldrb	r6, [r5, #13]
 8017340:	4629      	mov	r1, r5
 8017342:	0076      	lsls	r6, r6, #1
 8017344:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017348:	7aae      	ldrb	r6, [r5, #10]
 801734a:	4316      	orrs	r6, r2
 801734c:	f640 6213 	movw	r2, #3603	; 0xe13
 8017350:	4293      	cmp	r3, r2
 8017352:	4602      	mov	r2, r0
 8017354:	4620      	mov	r0, r4
 8017356:	bf16      	itet	ne
 8017358:	f103 33ff 	addne.w	r3, r3, #4294967295
 801735c:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017360:	b29b      	uxthne	r3, r3
 8017362:	f7ff ff04 	bl	801716e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017366:	7b43      	ldrb	r3, [r0, #13]
 8017368:	7a82      	ldrb	r2, [r0, #10]
 801736a:	005b      	lsls	r3, r3, #1
 801736c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017370:	4313      	orrs	r3, r2
 8017372:	1af6      	subs	r6, r6, r3
 8017374:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017378:	7b69      	ldrb	r1, [r5, #13]
 801737a:	00cb      	lsls	r3, r1, #3
 801737c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017380:	7a2b      	ldrb	r3, [r5, #8]
 8017382:	4313      	orrs	r3, r2
 8017384:	064a      	lsls	r2, r1, #25
 8017386:	bf44      	itt	mi
 8017388:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801738c:	b21b      	sxthmi	r3, r3
 801738e:	1bdb      	subs	r3, r3, r7
 8017390:	e747      	b.n	8017222 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017392:	2300      	movs	r3, #0
 8017394:	e7b7      	b.n	8017306 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8017396:	bf00      	nop
 8017398:	3fc00079 	.word	0x3fc00079

0801739c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801739c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80173a0:	4604      	mov	r4, r0
 80173a2:	b942      	cbnz	r2, 80173b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80173a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80173a8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80173ac:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80173b0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80173b4:	e047      	b.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80173b6:	7b51      	ldrb	r1, [r2, #13]
 80173b8:	8893      	ldrh	r3, [r2, #4]
 80173ba:	010d      	lsls	r5, r1, #4
 80173bc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80173c0:	79d5      	ldrb	r5, [r2, #7]
 80173c2:	4305      	orrs	r5, r0
 80173c4:	2d04      	cmp	r5, #4
 80173c6:	bfcc      	ite	gt
 80173c8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80173cc:	f04f 0e01 	movle.w	lr, #1
 80173d0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80173d4:	f200 80ab 	bhi.w	801752e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80173d8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80173dc:	4283      	cmp	r3, r0
 80173de:	d216      	bcs.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173e0:	f240 605b 	movw	r0, #1627	; 0x65b
 80173e4:	4283      	cmp	r3, r0
 80173e6:	d859      	bhi.n	801749c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80173e8:	f240 6057 	movw	r0, #1623	; 0x657
 80173ec:	4283      	cmp	r3, r0
 80173ee:	d20e      	bcs.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173f0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80173f4:	d24a      	bcs.n	801748c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80173f6:	f240 604e 	movw	r0, #1614	; 0x64e
 80173fa:	4283      	cmp	r3, r0
 80173fc:	d207      	bcs.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173fe:	f240 601a 	movw	r0, #1562	; 0x61a
 8017402:	4283      	cmp	r3, r0
 8017404:	d02a      	beq.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017406:	d821      	bhi.n	801744c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017408:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801740c:	d35b      	bcc.n	80174c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801740e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017412:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017416:	f040 80d0 	bne.w	80175ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801741a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801741e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017422:	f040 80ca 	bne.w	80175ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017426:	00cb      	lsls	r3, r1, #3
 8017428:	0649      	lsls	r1, r1, #25
 801742a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801742e:	7a13      	ldrb	r3, [r2, #8]
 8017430:	ea43 0300 	orr.w	r3, r3, r0
 8017434:	bf44      	itt	mi
 8017436:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801743a:	b21b      	sxthmi	r3, r3
 801743c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017440:	1b5d      	subs	r5, r3, r5
 8017442:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017446:	4610      	mov	r0, r2
 8017448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801744c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017450:	4283      	cmp	r3, r0
 8017452:	d338      	bcc.n	80174c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017454:	f240 604c 	movw	r0, #1612	; 0x64c
 8017458:	4283      	cmp	r3, r0
 801745a:	d9d8      	bls.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801745c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017460:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017464:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017468:	f040 80f3 	bne.w	8017652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801746c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017470:	f040 80ef 	bne.w	8017652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8017474:	00cb      	lsls	r3, r1, #3
 8017476:	064e      	lsls	r6, r1, #25
 8017478:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801747c:	7a13      	ldrb	r3, [r2, #8]
 801747e:	ea43 0300 	orr.w	r3, r3, r0
 8017482:	bf44      	itt	mi
 8017484:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017488:	b21b      	sxthmi	r3, r3
 801748a:	e7d9      	b.n	8017440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801748c:	f240 6054 	movw	r0, #1620	; 0x654
 8017490:	4283      	cmp	r3, r0
 8017492:	d8e3      	bhi.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017494:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017498:	d9e0      	bls.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801749a:	e7b8      	b.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801749c:	f240 6074 	movw	r0, #1652	; 0x674
 80174a0:	4283      	cmp	r3, r0
 80174a2:	d0b4      	beq.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174a4:	d82d      	bhi.n	8017502 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80174a6:	f240 605e 	movw	r0, #1630	; 0x65e
 80174aa:	4283      	cmp	r3, r0
 80174ac:	d804      	bhi.n	80174b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80174ae:	f240 605d 	movw	r0, #1629	; 0x65d
 80174b2:	4283      	cmp	r3, r0
 80174b4:	d3d2      	bcc.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174b6:	e7aa      	b.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174b8:	f240 605f 	movw	r0, #1631	; 0x65f
 80174bc:	4283      	cmp	r3, r0
 80174be:	d0cd      	beq.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174c0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80174c4:	d0a3      	beq.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174c6:	00cb      	lsls	r3, r1, #3
 80174c8:	0649      	lsls	r1, r1, #25
 80174ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80174ce:	7a13      	ldrb	r3, [r2, #8]
 80174d0:	ea43 0300 	orr.w	r3, r3, r0
 80174d4:	bf44      	itt	mi
 80174d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80174da:	b21b      	sxthmi	r3, r3
 80174dc:	1b5d      	subs	r5, r3, r5
 80174de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80174e2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80174e6:	7b53      	ldrb	r3, [r2, #13]
 80174e8:	015b      	lsls	r3, r3, #5
 80174ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80174ee:	7993      	ldrb	r3, [r2, #6]
 80174f0:	430b      	orrs	r3, r1
 80174f2:	2105      	movs	r1, #5
 80174f4:	005b      	lsls	r3, r3, #1
 80174f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80174fa:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80174fe:	440b      	add	r3, r1
 8017500:	e756      	b.n	80173b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017502:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017506:	4283      	cmp	r3, r0
 8017508:	d809      	bhi.n	801751e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801750a:	f240 60df 	movw	r0, #1759	; 0x6df
 801750e:	4283      	cmp	r3, r0
 8017510:	f4bf af7d 	bcs.w	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017514:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017518:	2b05      	cmp	r3, #5
 801751a:	d8d4      	bhi.n	80174c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801751c:	e777      	b.n	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801751e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017522:	4283      	cmp	r3, r0
 8017524:	d09a      	beq.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017526:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801752a:	4283      	cmp	r3, r0
 801752c:	e7ca      	b.n	80174c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801752e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017532:	d22b      	bcs.n	801758c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017534:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017538:	4283      	cmp	r3, r0
 801753a:	d28f      	bcs.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801753c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017540:	4283      	cmp	r3, r0
 8017542:	d816      	bhi.n	8017572 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017544:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017548:	4283      	cmp	r3, r0
 801754a:	f4bf af60 	bcs.w	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801754e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017552:	4283      	cmp	r3, r0
 8017554:	d80a      	bhi.n	801756c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017556:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801755a:	4283      	cmp	r3, r0
 801755c:	f4bf af57 	bcs.w	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017560:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017564:	4283      	cmp	r3, r0
 8017566:	f43f af79 	beq.w	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801756a:	e7ac      	b.n	80174c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801756c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017570:	e7f8      	b.n	8017564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017572:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017576:	4283      	cmp	r3, r0
 8017578:	d802      	bhi.n	8017580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801757a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801757e:	e798      	b.n	80174b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017580:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017584:	4283      	cmp	r3, r0
 8017586:	f47f af42 	bne.w	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801758a:	e767      	b.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801758c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017590:	4283      	cmp	r3, r0
 8017592:	f43f af63 	beq.w	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017596:	d802      	bhi.n	801759e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017598:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801759c:	e7f2      	b.n	8017584 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801759e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80175a2:	4283      	cmp	r3, r0
 80175a4:	d805      	bhi.n	80175b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80175a6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80175aa:	4283      	cmp	r3, r0
 80175ac:	f4ff af2f 	bcc.w	801740e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175b0:	e754      	b.n	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175b2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80175b6:	4283      	cmp	r3, r0
 80175b8:	e7af      	b.n	801751a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80175ba:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80175be:	4617      	mov	r7, r2
 80175c0:	f102 0808 	add.w	r8, r2, #8
 80175c4:	4666      	mov	r6, ip
 80175c6:	6838      	ldr	r0, [r7, #0]
 80175c8:	3708      	adds	r7, #8
 80175ca:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80175ce:	46e6      	mov	lr, ip
 80175d0:	4547      	cmp	r7, r8
 80175d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80175d6:	46f4      	mov	ip, lr
 80175d8:	d1f5      	bne.n	80175c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80175da:	6838      	ldr	r0, [r7, #0]
 80175dc:	f8ce 0000 	str.w	r0, [lr]
 80175e0:	88b9      	ldrh	r1, [r7, #4]
 80175e2:	f8ae 1004 	strh.w	r1, [lr, #4]
 80175e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80175ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80175ee:	d009      	beq.n	8017604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80175f0:	7b51      	ldrb	r1, [r2, #13]
 80175f2:	7992      	ldrb	r2, [r2, #6]
 80175f4:	0149      	lsls	r1, r1, #5
 80175f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80175fa:	4311      	orrs	r1, r2
 80175fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017600:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017604:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017608:	b2ad      	uxth	r5, r5
 801760a:	d00d      	beq.n	8017628 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 801760c:	442b      	add	r3, r5
 801760e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017612:	b29b      	uxth	r3, r3
 8017614:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017618:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801761c:	10db      	asrs	r3, r3, #3
 801761e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017622:	4313      	orrs	r3, r2
 8017624:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017628:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801762c:	00cb      	lsls	r3, r1, #3
 801762e:	064f      	lsls	r7, r1, #25
 8017630:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017634:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017638:	ea43 0302 	orr.w	r3, r3, r2
 801763c:	bf44      	itt	mi
 801763e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017642:	b21b      	sxthmi	r3, r3
 8017644:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017648:	1b5b      	subs	r3, r3, r5
 801764a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801764e:	4632      	mov	r2, r6
 8017650:	e6f9      	b.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017652:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017656:	4617      	mov	r7, r2
 8017658:	f102 0908 	add.w	r9, r2, #8
 801765c:	4666      	mov	r6, ip
 801765e:	6838      	ldr	r0, [r7, #0]
 8017660:	3708      	adds	r7, #8
 8017662:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8017666:	46e0      	mov	r8, ip
 8017668:	454f      	cmp	r7, r9
 801766a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801766e:	46c4      	mov	ip, r8
 8017670:	d1f5      	bne.n	801765e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8017672:	6838      	ldr	r0, [r7, #0]
 8017674:	f8c8 0000 	str.w	r0, [r8]
 8017678:	88b9      	ldrh	r1, [r7, #4]
 801767a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801767e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017682:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017686:	d009      	beq.n	801769c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8017688:	7b51      	ldrb	r1, [r2, #13]
 801768a:	7992      	ldrb	r2, [r2, #6]
 801768c:	0149      	lsls	r1, r1, #5
 801768e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017692:	4311      	orrs	r1, r2
 8017694:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017698:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801769c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80176a0:	d00e      	beq.n	80176c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80176a2:	eba3 030e 	sub.w	r3, r3, lr
 80176a6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80176aa:	b29b      	uxth	r3, r3
 80176ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80176b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80176b4:	10db      	asrs	r3, r3, #3
 80176b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80176ba:	4313      	orrs	r3, r2
 80176bc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80176c0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80176c4:	00cb      	lsls	r3, r1, #3
 80176c6:	0648      	lsls	r0, r1, #25
 80176c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80176cc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80176d0:	ea43 0302 	orr.w	r3, r3, r2
 80176d4:	bf44      	itt	mi
 80176d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80176da:	b21b      	sxthmi	r3, r3
 80176dc:	1b5d      	subs	r5, r3, r5
 80176de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80176e2:	e7b4      	b.n	801764e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080176e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80176e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80176e8:	461e      	mov	r6, r3
 80176ea:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80176ec:	4604      	mov	r4, r0
 80176ee:	4617      	mov	r7, r2
 80176f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80176f4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80176f8:	f7f7 ff6e 	bl	800f5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80176fc:	4605      	mov	r5, r0
 80176fe:	b918      	cbnz	r0, 8017708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017700:	6030      	str	r0, [r6, #0]
 8017702:	4628      	mov	r0, r5
 8017704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017708:	683b      	ldr	r3, [r7, #0]
 801770a:	4601      	mov	r1, r0
 801770c:	4638      	mov	r0, r7
 801770e:	68db      	ldr	r3, [r3, #12]
 8017710:	4798      	blx	r3
 8017712:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017716:	4602      	mov	r2, r0
 8017718:	6030      	str	r0, [r6, #0]
 801771a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801771e:	d213      	bcs.n	8017748 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8017720:	4643      	mov	r3, r8
 8017722:	4639      	mov	r1, r7
 8017724:	4620      	mov	r0, r4
 8017726:	f7ff fe39 	bl	801739c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801772a:	6030      	str	r0, [r6, #0]
 801772c:	6833      	ldr	r3, [r6, #0]
 801772e:	b143      	cbz	r3, 8017742 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8017730:	7b5a      	ldrb	r2, [r3, #13]
 8017732:	7a9b      	ldrb	r3, [r3, #10]
 8017734:	0052      	lsls	r2, r2, #1
 8017736:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801773a:	4313      	orrs	r3, r2
 801773c:	bf0c      	ite	eq
 801773e:	2301      	moveq	r3, #1
 8017740:	2300      	movne	r3, #0
 8017742:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017746:	e7dc      	b.n	8017702 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017748:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801774c:	b29b      	uxth	r3, r3
 801774e:	2b7f      	cmp	r3, #127	; 0x7f
 8017750:	d804      	bhi.n	801775c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8017752:	4639      	mov	r1, r7
 8017754:	4620      	mov	r0, r4
 8017756:	f7ff fd15 	bl	8017184 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801775a:	e7e6      	b.n	801772a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801775c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017760:	2b00      	cmp	r3, #0
 8017762:	d0e3      	beq.n	801772c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017764:	f640 1302 	movw	r3, #2306	; 0x902
 8017768:	429d      	cmp	r5, r3
 801776a:	d1df      	bne.n	801772c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801776c:	4601      	mov	r1, r0
 801776e:	4620      	mov	r0, r4
 8017770:	f7ff fcd9 	bl	8017126 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017774:	e7d9      	b.n	801772a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017776:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801777a:	461e      	mov	r6, r3
 801777c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801777e:	4604      	mov	r4, r0
 8017780:	4617      	mov	r7, r2
 8017782:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017786:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801778a:	f7f7 ff25 	bl	800f5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801778e:	4605      	mov	r5, r0
 8017790:	b918      	cbnz	r0, 801779a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8017792:	6030      	str	r0, [r6, #0]
 8017794:	4628      	mov	r0, r5
 8017796:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801779a:	683b      	ldr	r3, [r7, #0]
 801779c:	4601      	mov	r1, r0
 801779e:	4638      	mov	r0, r7
 80177a0:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80177a4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80177a8:	47c8      	blx	r9
 80177aa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80177ae:	4602      	mov	r2, r0
 80177b0:	6030      	str	r0, [r6, #0]
 80177b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80177b6:	d213      	bcs.n	80177e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80177b8:	4643      	mov	r3, r8
 80177ba:	4639      	mov	r1, r7
 80177bc:	4620      	mov	r0, r4
 80177be:	f7ff fded 	bl	801739c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80177c2:	6030      	str	r0, [r6, #0]
 80177c4:	6833      	ldr	r3, [r6, #0]
 80177c6:	b143      	cbz	r3, 80177da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80177c8:	7b5a      	ldrb	r2, [r3, #13]
 80177ca:	7a9b      	ldrb	r3, [r3, #10]
 80177cc:	0052      	lsls	r2, r2, #1
 80177ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80177d2:	4313      	orrs	r3, r2
 80177d4:	bf0c      	ite	eq
 80177d6:	2301      	moveq	r3, #1
 80177d8:	2300      	movne	r3, #0
 80177da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80177de:	e7d9      	b.n	8017794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80177e0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80177e4:	b29b      	uxth	r3, r3
 80177e6:	2b7f      	cmp	r3, #127	; 0x7f
 80177e8:	d804      	bhi.n	80177f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80177ea:	4639      	mov	r1, r7
 80177ec:	4620      	mov	r0, r4
 80177ee:	f7ff fcc9 	bl	8017184 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80177f2:	e7e6      	b.n	80177c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80177f4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80177f8:	2b00      	cmp	r3, #0
 80177fa:	d0e3      	beq.n	80177c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80177fc:	f640 1302 	movw	r3, #2306	; 0x902
 8017800:	429d      	cmp	r5, r3
 8017802:	d1df      	bne.n	80177c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017804:	4601      	mov	r1, r0
 8017806:	4620      	mov	r0, r4
 8017808:	f7ff fc8d 	bl	8017126 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801780c:	e7d9      	b.n	80177c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801780e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801780e:	b510      	push	{r4, lr}
 8017810:	4604      	mov	r4, r0
 8017812:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017816:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017818:	b1e1      	cbz	r1, 8017854 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801781a:	2b0a      	cmp	r3, #10
 801781c:	d02d      	beq.n	801787a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801781e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8017820:	3901      	subs	r1, #1
 8017822:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017826:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017828:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801782c:	1c51      	adds	r1, r2, #1
 801782e:	b289      	uxth	r1, r1
 8017830:	2901      	cmp	r1, #1
 8017832:	bf8a      	itet	hi
 8017834:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017838:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801783a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801783c:	1c5a      	adds	r2, r3, #1
 801783e:	8722      	strh	r2, [r4, #56]	; 0x38
 8017840:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017842:	4413      	add	r3, r2
 8017844:	b29b      	uxth	r3, r3
 8017846:	2b09      	cmp	r3, #9
 8017848:	bf88      	it	hi
 801784a:	3b0a      	subhi	r3, #10
 801784c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017850:	8458      	strh	r0, [r3, #34]	; 0x22
 8017852:	e7de      	b.n	8017812 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017854:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017856:	2b0a      	cmp	r3, #10
 8017858:	d00f      	beq.n	801787a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801785a:	4620      	mov	r0, r4
 801785c:	f7ff fc11 	bl	8017082 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017860:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017862:	1c5a      	adds	r2, r3, #1
 8017864:	8722      	strh	r2, [r4, #56]	; 0x38
 8017866:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017868:	4413      	add	r3, r2
 801786a:	b29b      	uxth	r3, r3
 801786c:	2b09      	cmp	r3, #9
 801786e:	bf88      	it	hi
 8017870:	3b0a      	subhi	r3, #10
 8017872:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017876:	8458      	strh	r0, [r3, #34]	; 0x22
 8017878:	e7ec      	b.n	8017854 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801787a:	bd10      	pop	{r4, pc}

0801787c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801787c:	b538      	push	{r3, r4, r5, lr}
 801787e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017880:	4604      	mov	r4, r0
 8017882:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017886:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017888:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801788a:	3a01      	subs	r2, #1
 801788c:	8702      	strh	r2, [r0, #56]	; 0x38
 801788e:	1c5a      	adds	r2, r3, #1
 8017890:	b292      	uxth	r2, r2
 8017892:	2a09      	cmp	r2, #9
 8017894:	bf8a      	itet	hi
 8017896:	3b09      	subhi	r3, #9
 8017898:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801789a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801789c:	f7ff ffb7 	bl	801780e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80178a0:	8c23      	ldrh	r3, [r4, #32]
 80178a2:	2b01      	cmp	r3, #1
 80178a4:	bf9c      	itt	ls
 80178a6:	3301      	addls	r3, #1
 80178a8:	8423      	strhls	r3, [r4, #32]
 80178aa:	8be3      	ldrh	r3, [r4, #30]
 80178ac:	b90b      	cbnz	r3, 80178b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80178ae:	2302      	movs	r3, #2
 80178b0:	83e3      	strh	r3, [r4, #30]
 80178b2:	8be3      	ldrh	r3, [r4, #30]
 80178b4:	4628      	mov	r0, r5
 80178b6:	3b01      	subs	r3, #1
 80178b8:	b29b      	uxth	r3, r3
 80178ba:	83e3      	strh	r3, [r4, #30]
 80178bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80178c0:	8365      	strh	r5, [r4, #26]
 80178c2:	bd38      	pop	{r3, r4, r5, pc}

080178c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80178c4:	428a      	cmp	r2, r1
 80178c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178ca:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80178cc:	d932      	bls.n	8017934 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 80178ce:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80178d0:	1a54      	subs	r4, r2, r1
 80178d2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80178d6:	19ee      	adds	r6, r5, r7
 80178d8:	fa1f fe84 	uxth.w	lr, r4
 80178dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80178e0:	3e01      	subs	r6, #1
 80178e2:	b2b4      	uxth	r4, r6
 80178e4:	eba4 090e 	sub.w	r9, r4, lr
 80178e8:	fa1f f989 	uxth.w	r9, r9
 80178ec:	2c09      	cmp	r4, #9
 80178ee:	4626      	mov	r6, r4
 80178f0:	bf88      	it	hi
 80178f2:	f1a4 060a 	subhi.w	r6, r4, #10
 80178f6:	f1bc 0f00 	cmp.w	ip, #0
 80178fa:	f104 34ff 	add.w	r4, r4, #4294967295
 80178fe:	bf08      	it	eq
 8017900:	f04f 0c02 	moveq.w	ip, #2
 8017904:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017908:	b2a4      	uxth	r4, r4
 801790a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801790e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017912:	454c      	cmp	r4, r9
 8017914:	fa1f fc8c 	uxth.w	ip, ip
 8017918:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801791c:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8017920:	d1e4      	bne.n	80178ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017922:	eba5 050e 	sub.w	r5, r5, lr
 8017926:	eb0e 0408 	add.w	r4, lr, r8
 801792a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801792e:	8705      	strh	r5, [r0, #56]	; 0x38
 8017930:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8017934:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017936:	250a      	movs	r5, #10
 8017938:	1a64      	subs	r4, r4, r1
 801793a:	4439      	add	r1, r7
 801793c:	b289      	uxth	r1, r1
 801793e:	8704      	strh	r4, [r0, #56]	; 0x38
 8017940:	2909      	cmp	r1, #9
 8017942:	bf88      	it	hi
 8017944:	390a      	subhi	r1, #10
 8017946:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017948:	b18a      	cbz	r2, 801796e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801794a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801794c:	3a01      	subs	r2, #1
 801794e:	3101      	adds	r1, #1
 8017950:	b292      	uxth	r2, r2
 8017952:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017956:	8701      	strh	r1, [r0, #56]	; 0x38
 8017958:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801795a:	b901      	cbnz	r1, 801795e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 801795c:	86c5      	strh	r5, [r0, #54]	; 0x36
 801795e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017960:	3901      	subs	r1, #1
 8017962:	b289      	uxth	r1, r1
 8017964:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017966:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801796a:	844c      	strh	r4, [r1, #34]	; 0x22
 801796c:	e7ec      	b.n	8017948 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 801796e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017972:	f7ff bf4c 	b.w	801780e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017976 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017976:	b570      	push	{r4, r5, r6, lr}
 8017978:	2500      	movs	r5, #0
 801797a:	4295      	cmp	r5, r2
 801797c:	d011      	beq.n	80179a2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801797e:	8bc4      	ldrh	r4, [r0, #30]
 8017980:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017984:	4414      	add	r4, r2
 8017986:	3c01      	subs	r4, #1
 8017988:	1b64      	subs	r4, r4, r5
 801798a:	b2a4      	uxth	r4, r4
 801798c:	2c01      	cmp	r4, #1
 801798e:	bf88      	it	hi
 8017990:	3c02      	subhi	r4, #2
 8017992:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017996:	8b64      	ldrh	r4, [r4, #26]
 8017998:	42b4      	cmp	r4, r6
 801799a:	d117      	bne.n	80179cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801799c:	3501      	adds	r5, #1
 801799e:	b2ad      	uxth	r5, r5
 80179a0:	e7eb      	b.n	801797a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80179a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80179a6:	2400      	movs	r4, #0
 80179a8:	4413      	add	r3, r2
 80179aa:	b2a2      	uxth	r2, r4
 80179ac:	429a      	cmp	r2, r3
 80179ae:	da0f      	bge.n	80179d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80179b0:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80179b2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80179b6:	3401      	adds	r4, #1
 80179b8:	4432      	add	r2, r6
 80179ba:	b292      	uxth	r2, r2
 80179bc:	2a09      	cmp	r2, #9
 80179be:	bf88      	it	hi
 80179c0:	3a0a      	subhi	r2, #10
 80179c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80179c6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80179c8:	42aa      	cmp	r2, r5
 80179ca:	d0ee      	beq.n	80179aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80179cc:	2000      	movs	r0, #0
 80179ce:	bd70      	pop	{r4, r5, r6, pc}
 80179d0:	2001      	movs	r0, #1
 80179d2:	e7fc      	b.n	80179ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080179d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80179d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179d8:	4605      	mov	r5, r0
 80179da:	4616      	mov	r6, r2
 80179dc:	1c8c      	adds	r4, r1, #2
 80179de:	8809      	ldrh	r1, [r1, #0]
 80179e0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80179e4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80179e8:	42b3      	cmp	r3, r6
 80179ea:	d124      	bne.n	8017a36 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80179ec:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80179f0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80179f4:	f001 070f 	and.w	r7, r1, #15
 80179f8:	4652      	mov	r2, sl
 80179fa:	f8cd 8000 	str.w	r8, [sp]
 80179fe:	464b      	mov	r3, r9
 8017a00:	4621      	mov	r1, r4
 8017a02:	4628      	mov	r0, r5
 8017a04:	f7ff ffb7 	bl	8017976 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017a08:	4683      	mov	fp, r0
 8017a0a:	b168      	cbz	r0, 8017a28 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017a0c:	eb0a 0109 	add.w	r1, sl, r9
 8017a10:	463a      	mov	r2, r7
 8017a12:	4628      	mov	r0, r5
 8017a14:	4441      	add	r1, r8
 8017a16:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017a1a:	4649      	mov	r1, r9
 8017a1c:	f7ff ff52 	bl	80178c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017a20:	4658      	mov	r0, fp
 8017a22:	b003      	add	sp, #12
 8017a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a28:	eb07 010a 	add.w	r1, r7, sl
 8017a2c:	4449      	add	r1, r9
 8017a2e:	4441      	add	r1, r8
 8017a30:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017a34:	e7d2      	b.n	80179dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017a36:	f04f 0b00 	mov.w	fp, #0
 8017a3a:	e7f1      	b.n	8017a20 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017a3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017a3c:	b570      	push	{r4, r5, r6, lr}
 8017a3e:	8810      	ldrh	r0, [r2, #0]
 8017a40:	4298      	cmp	r0, r3
 8017a42:	d817      	bhi.n	8017a74 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a44:	1e48      	subs	r0, r1, #1
 8017a46:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017a4a:	4298      	cmp	r0, r3
 8017a4c:	d312      	bcc.n	8017a74 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a4e:	2400      	movs	r4, #0
 8017a50:	428c      	cmp	r4, r1
 8017a52:	d20f      	bcs.n	8017a74 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017a54:	1860      	adds	r0, r4, r1
 8017a56:	1040      	asrs	r0, r0, #1
 8017a58:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017a5c:	0085      	lsls	r5, r0, #2
 8017a5e:	42b3      	cmp	r3, r6
 8017a60:	d902      	bls.n	8017a68 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017a62:	3001      	adds	r0, #1
 8017a64:	b284      	uxth	r4, r0
 8017a66:	e7f3      	b.n	8017a50 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017a68:	d201      	bcs.n	8017a6e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017a6a:	b281      	uxth	r1, r0
 8017a6c:	e7f0      	b.n	8017a50 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017a6e:	442a      	add	r2, r5
 8017a70:	8850      	ldrh	r0, [r2, #2]
 8017a72:	bd70      	pop	{r4, r5, r6, pc}
 8017a74:	2000      	movs	r0, #0
 8017a76:	e7fc      	b.n	8017a72 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017a78 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017a78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a7c:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017a7e:	4604      	mov	r4, r0
 8017a80:	260b      	movs	r6, #11
 8017a82:	886f      	ldrh	r7, [r5, #2]
 8017a84:	087f      	lsrs	r7, r7, #1
 8017a86:	3e01      	subs	r6, #1
 8017a88:	d013      	beq.n	8017ab2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017a8a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017a8c:	462a      	mov	r2, r5
 8017a8e:	4639      	mov	r1, r7
 8017a90:	4620      	mov	r0, r4
 8017a92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017a96:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017a9a:	4643      	mov	r3, r8
 8017a9c:	f7ff ffce 	bl	8017a3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017aa0:	b138      	cbz	r0, 8017ab2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017aa2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017aa6:	4642      	mov	r2, r8
 8017aa8:	4620      	mov	r0, r4
 8017aaa:	f7ff ff93 	bl	80179d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017aae:	2800      	cmp	r0, #0
 8017ab0:	d1e9      	bne.n	8017a86 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017ab2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08017ab8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017ab8:	b570      	push	{r4, r5, r6, lr}
 8017aba:	694a      	ldr	r2, [r1, #20]
 8017abc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017abe:	684b      	ldr	r3, [r1, #4]
 8017ac0:	1b54      	subs	r4, r2, r5
 8017ac2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017ac4:	f000 8106 	beq.w	8017cd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017ac8:	1b9b      	subs	r3, r3, r6
 8017aca:	d003      	beq.n	8017ad4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017acc:	4363      	muls	r3, r4
 8017ace:	2210      	movs	r2, #16
 8017ad0:	fb93 f3f2 	sdiv	r3, r3, r2
 8017ad4:	680c      	ldr	r4, [r1, #0]
 8017ad6:	698a      	ldr	r2, [r1, #24]
 8017ad8:	1b65      	subs	r5, r4, r5
 8017ada:	f000 80fd 	beq.w	8017cd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017ade:	1b92      	subs	r2, r2, r6
 8017ae0:	d003      	beq.n	8017aea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017ae2:	436a      	muls	r2, r5
 8017ae4:	2410      	movs	r4, #16
 8017ae6:	fb92 f2f4 	sdiv	r2, r2, r4
 8017aea:	1a9b      	subs	r3, r3, r2
 8017aec:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8017d14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017af0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017af4:	460a      	mov	r2, r1
 8017af6:	ee07 3a90 	vmov	s15, r3
 8017afa:	f100 040c 	add.w	r4, r0, #12
 8017afe:	4603      	mov	r3, r0
 8017b00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b04:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017b08:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017b0c:	eeb1 6a43 	vneg.f32	s12, s6
 8017b10:	edd2 7a02 	vldr	s15, [r2, #8]
 8017b14:	3214      	adds	r2, #20
 8017b16:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017b1a:	ece3 6a01 	vstmia	r3!, {s13}
 8017b1e:	429c      	cmp	r4, r3
 8017b20:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017b24:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017b28:	edc3 7a02 	vstr	s15, [r3, #8]
 8017b2c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017b30:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017b34:	edc3 7a05 	vstr	s15, [r3, #20]
 8017b38:	d1ea      	bne.n	8017b10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017b3a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017b3c:	698b      	ldr	r3, [r1, #24]
 8017b3e:	edd0 4a02 	vldr	s9, [r0, #8]
 8017b42:	1a9b      	subs	r3, r3, r2
 8017b44:	edd0 3a00 	vldr	s7, [r0]
 8017b48:	edd0 6a01 	vldr	s13, [r0, #4]
 8017b4c:	ee07 3a90 	vmov	s15, r3
 8017b50:	684b      	ldr	r3, [r1, #4]
 8017b52:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017b56:	ed90 5a05 	vldr	s10, [r0, #20]
 8017b5a:	1a9b      	subs	r3, r3, r2
 8017b5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b60:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017b64:	ed90 2a03 	vldr	s4, [r0, #12]
 8017b68:	ee07 3a10 	vmov	s14, r3
 8017b6c:	edd0 5a04 	vldr	s11, [r0, #16]
 8017b70:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017b74:	ed90 1a07 	vldr	s2, [r0, #28]
 8017b78:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b7c:	edd0 2a06 	vldr	s5, [r0, #24]
 8017b80:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017b84:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017b88:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b8c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017b90:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017b94:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017b98:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017b9c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017b9e:	694a      	ldr	r2, [r1, #20]
 8017ba0:	1b13      	subs	r3, r2, r4
 8017ba2:	ee07 3a10 	vmov	s14, r3
 8017ba6:	680b      	ldr	r3, [r1, #0]
 8017ba8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bac:	1b1b      	subs	r3, r3, r4
 8017bae:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bb2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017bb6:	ee07 3a10 	vmov	s14, r3
 8017bba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bbe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bc2:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017bc6:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017bca:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017bce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017bd0:	698b      	ldr	r3, [r1, #24]
 8017bd2:	1a9b      	subs	r3, r3, r2
 8017bd4:	ee06 3a90 	vmov	s13, r3
 8017bd8:	684b      	ldr	r3, [r1, #4]
 8017bda:	1a9b      	subs	r3, r3, r2
 8017bdc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017be0:	ee07 3a10 	vmov	s14, r3
 8017be4:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017be8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bec:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017bf0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bf4:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017bf8:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017bfc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017c00:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017c02:	694a      	ldr	r2, [r1, #20]
 8017c04:	1b13      	subs	r3, r2, r4
 8017c06:	ee07 3a10 	vmov	s14, r3
 8017c0a:	680b      	ldr	r3, [r1, #0]
 8017c0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c10:	1b1b      	subs	r3, r3, r4
 8017c12:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c16:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017c1a:	ee07 3a10 	vmov	s14, r3
 8017c1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c22:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c26:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017c2a:	edd0 5a08 	vldr	s11, [r0, #32]
 8017c2e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017c32:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017c36:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017c3a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017c3e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017c40:	698b      	ldr	r3, [r1, #24]
 8017c42:	1a9b      	subs	r3, r3, r2
 8017c44:	ee07 3a10 	vmov	s14, r3
 8017c48:	684b      	ldr	r3, [r1, #4]
 8017c4a:	1a9b      	subs	r3, r3, r2
 8017c4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c50:	ee01 3a90 	vmov	s3, r3
 8017c54:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c58:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017c5c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017c60:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017c64:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017c68:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017c6c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017c70:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017c72:	694a      	ldr	r2, [r1, #20]
 8017c74:	1b13      	subs	r3, r2, r4
 8017c76:	ee03 3a10 	vmov	s6, r3
 8017c7a:	680b      	ldr	r3, [r1, #0]
 8017c7c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017c80:	1b1b      	subs	r3, r3, r4
 8017c82:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017c86:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017c8a:	ee03 3a10 	vmov	s6, r3
 8017c8e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017c92:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017c96:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017c9a:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017c9e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017ca2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017ca6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017caa:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017cb2:	dd13      	ble.n	8017cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017cb4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017cb8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017cbc:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017cbe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017cc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017cca:	dd15      	ble.n	8017cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017ccc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017cd0:	6403      	str	r3, [r0, #64]	; 0x40
 8017cd2:	bd70      	pop	{r4, r5, r6, pc}
 8017cd4:	4623      	mov	r3, r4
 8017cd6:	e6fd      	b.n	8017ad4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017cd8:	462a      	mov	r2, r5
 8017cda:	e706      	b.n	8017aea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017cdc:	d502      	bpl.n	8017ce4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017cde:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017ce2:	e7e9      	b.n	8017cb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017ce4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017ce8:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017cec:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017cf4:	dade      	bge.n	8017cb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017cf6:	e7f2      	b.n	8017cde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017cf8:	d502      	bpl.n	8017d00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017cfa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017cfe:	e7e7      	b.n	8017cd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017d00:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017d04:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017d08:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d10:	dadc      	bge.n	8017ccc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017d12:	e7f2      	b.n	8017cfa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017d14:	3d800000 	.word	0x3d800000

08017d18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017d18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017d1c:	2714      	movs	r7, #20
 8017d1e:	435f      	muls	r7, r3
 8017d20:	eb02 0c07 	add.w	ip, r2, r7
 8017d24:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017d28:	f115 0e0f 	adds.w	lr, r5, #15
 8017d2c:	f100 80a2 	bmi.w	8017e74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017d30:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017d34:	9c08      	ldr	r4, [sp, #32]
 8017d36:	2614      	movs	r6, #20
 8017d38:	f8c0 e014 	str.w	lr, [r0, #20]
 8017d3c:	4366      	muls	r6, r4
 8017d3e:	eb02 0806 	add.w	r8, r2, r6
 8017d42:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017d46:	f115 040f 	adds.w	r4, r5, #15
 8017d4a:	f100 809f 	bmi.w	8017e8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017d4e:	1124      	asrs	r4, r4, #4
 8017d50:	eba4 040e 	sub.w	r4, r4, lr
 8017d54:	6184      	str	r4, [r0, #24]
 8017d56:	2c00      	cmp	r4, #0
 8017d58:	f000 808a 	beq.w	8017e70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017d5c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017d60:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017d64:	5995      	ldr	r5, [r2, r6]
 8017d66:	eba4 0809 	sub.w	r8, r4, r9
 8017d6a:	59d4      	ldr	r4, [r2, r7]
 8017d6c:	eba5 0a04 	sub.w	sl, r5, r4
 8017d70:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017d74:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017d78:	fb0e fe05 	mul.w	lr, lr, r5
 8017d7c:	fb0a ee19 	mls	lr, sl, r9, lr
 8017d80:	fb08 e404 	mla	r4, r8, r4, lr
 8017d84:	3c01      	subs	r4, #1
 8017d86:	19a4      	adds	r4, r4, r6
 8017d88:	f100 808c 	bmi.w	8017ea4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017d8c:	fb94 fef6 	sdiv	lr, r4, r6
 8017d90:	fb06 441e 	mls	r4, r6, lr, r4
 8017d94:	f8c0 e000 	str.w	lr, [r0]
 8017d98:	6104      	str	r4, [r0, #16]
 8017d9a:	2d00      	cmp	r5, #0
 8017d9c:	f2c0 8095 	blt.w	8017eca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017da0:	fb95 f4f6 	sdiv	r4, r5, r6
 8017da4:	fb06 5514 	mls	r5, r6, r4, r5
 8017da8:	6044      	str	r4, [r0, #4]
 8017daa:	6085      	str	r5, [r0, #8]
 8017dac:	60c6      	str	r6, [r0, #12]
 8017dae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017db2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017db6:	6945      	ldr	r5, [r0, #20]
 8017db8:	59d2      	ldr	r2, [r2, r7]
 8017dba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017dbe:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8017eec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017dc2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017dc6:	ee07 4a10 	vmov	s14, r4
 8017dca:	6804      	ldr	r4, [r0, #0]
 8017dcc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017dd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017dd4:	ee07 2a90 	vmov	s15, r2
 8017dd8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017ddc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017de0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017de4:	edd3 6a00 	vldr	s13, [r3]
 8017de8:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017dec:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017df0:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017df4:	edc0 6a07 	vstr	s13, [r0, #28]
 8017df8:	edd0 6a01 	vldr	s13, [r0, #4]
 8017dfc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017e00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017e04:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017e08:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017e0c:	ed80 6a08 	vstr	s12, [r0, #32]
 8017e10:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017e12:	6242      	str	r2, [r0, #36]	; 0x24
 8017e14:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017e18:	ed93 6a03 	vldr	s12, [r3, #12]
 8017e1c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017e20:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017e24:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017e28:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017e2c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017e30:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017e34:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017e38:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017e3c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017e3e:	6302      	str	r2, [r0, #48]	; 0x30
 8017e40:	ed93 6a06 	vldr	s12, [r3, #24]
 8017e44:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017e48:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017e4c:	eeb0 7a46 	vmov.f32	s14, s12
 8017e50:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017e54:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017e58:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017e5c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017e60:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017e64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017e68:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017e6c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017e6e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017e70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017e74:	2410      	movs	r4, #16
 8017e76:	f1c5 0501 	rsb	r5, r5, #1
 8017e7a:	fb9e fef4 	sdiv	lr, lr, r4
 8017e7e:	f015 050f 	ands.w	r5, r5, #15
 8017e82:	bf18      	it	ne
 8017e84:	2501      	movne	r5, #1
 8017e86:	ebae 0e05 	sub.w	lr, lr, r5
 8017e8a:	e753      	b.n	8017d34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017e8c:	f04f 0910 	mov.w	r9, #16
 8017e90:	f1c5 0501 	rsb	r5, r5, #1
 8017e94:	fb94 f4f9 	sdiv	r4, r4, r9
 8017e98:	f015 050f 	ands.w	r5, r5, #15
 8017e9c:	bf18      	it	ne
 8017e9e:	2501      	movne	r5, #1
 8017ea0:	1b64      	subs	r4, r4, r5
 8017ea2:	e755      	b.n	8017d50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017ea4:	4264      	negs	r4, r4
 8017ea6:	fb94 fef6 	sdiv	lr, r4, r6
 8017eaa:	f1ce 0800 	rsb	r8, lr, #0
 8017eae:	fb06 441e 	mls	r4, r6, lr, r4
 8017eb2:	f8c0 8000 	str.w	r8, [r0]
 8017eb6:	6104      	str	r4, [r0, #16]
 8017eb8:	2c00      	cmp	r4, #0
 8017eba:	f43f af6e 	beq.w	8017d9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017ebe:	ea6f 0e0e 	mvn.w	lr, lr
 8017ec2:	1b34      	subs	r4, r6, r4
 8017ec4:	f8c0 e000 	str.w	lr, [r0]
 8017ec8:	e766      	b.n	8017d98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017eca:	426d      	negs	r5, r5
 8017ecc:	fb95 f4f6 	sdiv	r4, r5, r6
 8017ed0:	f1c4 0e00 	rsb	lr, r4, #0
 8017ed4:	fb06 5514 	mls	r5, r6, r4, r5
 8017ed8:	f8c0 e004 	str.w	lr, [r0, #4]
 8017edc:	6085      	str	r5, [r0, #8]
 8017ede:	2d00      	cmp	r5, #0
 8017ee0:	f43f af64 	beq.w	8017dac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017ee4:	43e4      	mvns	r4, r4
 8017ee6:	1b75      	subs	r5, r6, r5
 8017ee8:	6044      	str	r4, [r0, #4]
 8017eea:	e75e      	b.n	8017daa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017eec:	3d800000 	.word	0x3d800000

08017ef0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017ef0:	4b01      	ldr	r3, [pc, #4]	; (8017ef8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017ef2:	6018      	str	r0, [r3, #0]
 8017ef4:	4770      	bx	lr
 8017ef6:	bf00      	nop
 8017ef8:	24003004 	.word	0x24003004

08017efc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017efc:	4b06      	ldr	r3, [pc, #24]	; (8017f18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017efe:	881a      	ldrh	r2, [r3, #0]
 8017f00:	4282      	cmp	r2, r0
 8017f02:	d807      	bhi.n	8017f14 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017f04:	4b05      	ldr	r3, [pc, #20]	; (8017f1c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8017f06:	881b      	ldrh	r3, [r3, #0]
 8017f08:	4413      	add	r3, r2
 8017f0a:	4298      	cmp	r0, r3
 8017f0c:	bfac      	ite	ge
 8017f0e:	2000      	movge	r0, #0
 8017f10:	2001      	movlt	r0, #1
 8017f12:	4770      	bx	lr
 8017f14:	2000      	movs	r0, #0
 8017f16:	4770      	bx	lr
 8017f18:	24003024 	.word	0x24003024
 8017f1c:	24003028 	.word	0x24003028

08017f20 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017f20:	b508      	push	{r3, lr}
 8017f22:	4601      	mov	r1, r0
 8017f24:	f7ff ffea 	bl	8017efc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8017f28:	b118      	cbz	r0, 8017f32 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8017f2a:	4b02      	ldr	r3, [pc, #8]	; (8017f34 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017f2c:	681b      	ldr	r3, [r3, #0]
 8017f2e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017f32:	bd08      	pop	{r3, pc}
 8017f34:	24003008 	.word	0x24003008

08017f38 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8017f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f3a:	4c24      	ldr	r4, [pc, #144]	; (8017fcc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017f3c:	6823      	ldr	r3, [r4, #0]
 8017f3e:	2b00      	cmp	r3, #0
 8017f40:	d042      	beq.n	8017fc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017f42:	4a23      	ldr	r2, [pc, #140]	; (8017fd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017f44:	4d23      	ldr	r5, [pc, #140]	; (8017fd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8017f46:	8811      	ldrh	r1, [r2, #0]
 8017f48:	f8b5 c000 	ldrh.w	ip, [r5]
 8017f4c:	4822      	ldr	r0, [pc, #136]	; (8017fd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017f4e:	4461      	add	r1, ip
 8017f50:	1c4a      	adds	r2, r1, #1
 8017f52:	008f      	lsls	r7, r1, #2
 8017f54:	f022 0201 	bic.w	r2, r2, #1
 8017f58:	19de      	adds	r6, r3, r7
 8017f5a:	0412      	lsls	r2, r2, #16
 8017f5c:	6006      	str	r6, [r0, #0]
 8017f5e:	4e1f      	ldr	r6, [pc, #124]	; (8017fdc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017f60:	0c12      	lsrs	r2, r2, #16
 8017f62:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017f66:	19da      	adds	r2, r3, r7
 8017f68:	6032      	str	r2, [r6, #0]
 8017f6a:	220e      	movs	r2, #14
 8017f6c:	fb02 f20c 	mul.w	r2, r2, ip
 8017f70:	3203      	adds	r2, #3
 8017f72:	f022 0203 	bic.w	r2, r2, #3
 8017f76:	443a      	add	r2, r7
 8017f78:	4f19      	ldr	r7, [pc, #100]	; (8017fe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017f7a:	4413      	add	r3, r2
 8017f7c:	603b      	str	r3, [r7, #0]
 8017f7e:	2300      	movs	r3, #0
 8017f80:	4f18      	ldr	r7, [pc, #96]	; (8017fe4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017f82:	469c      	mov	ip, r3
 8017f84:	803b      	strh	r3, [r7, #0]
 8017f86:	4f18      	ldr	r7, [pc, #96]	; (8017fe8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017f88:	683f      	ldr	r7, [r7, #0]
 8017f8a:	1aba      	subs	r2, r7, r2
 8017f8c:	4f17      	ldr	r7, [pc, #92]	; (8017fec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017f8e:	603a      	str	r2, [r7, #0]
 8017f90:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8017f94:	4a16      	ldr	r2, [pc, #88]	; (8017ff0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017f96:	8013      	strh	r3, [r2, #0]
 8017f98:	428b      	cmp	r3, r1
 8017f9a:	d10d      	bne.n	8017fb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017f9c:	882d      	ldrh	r5, [r5, #0]
 8017f9e:	2300      	movs	r3, #0
 8017fa0:	6830      	ldr	r0, [r6, #0]
 8017fa2:	240e      	movs	r4, #14
 8017fa4:	429d      	cmp	r5, r3
 8017fa6:	d90f      	bls.n	8017fc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017fa8:	fb04 0203 	mla	r2, r4, r3, r0
 8017fac:	3301      	adds	r3, #1
 8017fae:	7b11      	ldrb	r1, [r2, #12]
 8017fb0:	f36f 1145 	bfc	r1, #5, #1
 8017fb4:	7311      	strb	r1, [r2, #12]
 8017fb6:	e7f5      	b.n	8017fa4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017fb8:	6822      	ldr	r2, [r4, #0]
 8017fba:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017fbe:	6802      	ldr	r2, [r0, #0]
 8017fc0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017fc4:	3301      	adds	r3, #1
 8017fc6:	e7e7      	b.n	8017f98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017fc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017fca:	bf00      	nop
 8017fcc:	24003008 	.word	0x24003008
 8017fd0:	24003024 	.word	0x24003024
 8017fd4:	24003028 	.word	0x24003028
 8017fd8:	2400301c 	.word	0x2400301c
 8017fdc:	2400300c 	.word	0x2400300c
 8017fe0:	24003014 	.word	0x24003014
 8017fe4:	24003026 	.word	0x24003026
 8017fe8:	24003010 	.word	0x24003010
 8017fec:	24003020 	.word	0x24003020
 8017ff0:	24003018 	.word	0x24003018

08017ff4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017ff4:	4b06      	ldr	r3, [pc, #24]	; (8018010 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8017ff6:	681b      	ldr	r3, [r3, #0]
 8017ff8:	b943      	cbnz	r3, 801800c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017ffa:	b139      	cbz	r1, 801800c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017ffc:	4b05      	ldr	r3, [pc, #20]	; (8018014 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017ffe:	801a      	strh	r2, [r3, #0]
 8018000:	4b05      	ldr	r3, [pc, #20]	; (8018018 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018002:	6019      	str	r1, [r3, #0]
 8018004:	4b05      	ldr	r3, [pc, #20]	; (801801c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018006:	6018      	str	r0, [r3, #0]
 8018008:	f7ff bf96 	b.w	8017f38 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801800c:	4770      	bx	lr
 801800e:	bf00      	nop
 8018010:	24003014 	.word	0x24003014
 8018014:	24003028 	.word	0x24003028
 8018018:	24003010 	.word	0x24003010
 801801c:	24003008 	.word	0x24003008

08018020 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018020:	b470      	push	{r4, r5, r6}
 8018022:	4c07      	ldr	r4, [pc, #28]	; (8018040 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018024:	4605      	mov	r5, r0
 8018026:	4610      	mov	r0, r2
 8018028:	9a03      	ldr	r2, [sp, #12]
 801802a:	6826      	ldr	r6, [r4, #0]
 801802c:	b936      	cbnz	r6, 801803c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801802e:	6025      	str	r5, [r4, #0]
 8018030:	4c04      	ldr	r4, [pc, #16]	; (8018044 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018032:	8021      	strh	r1, [r4, #0]
 8018034:	4619      	mov	r1, r3
 8018036:	bc70      	pop	{r4, r5, r6}
 8018038:	f7ff bfdc 	b.w	8017ff4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801803c:	bc70      	pop	{r4, r5, r6}
 801803e:	4770      	bx	lr
 8018040:	2400302c 	.word	0x2400302c
 8018044:	24003024 	.word	0x24003024

08018048 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018048:	4a12      	ldr	r2, [pc, #72]	; (8018094 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801804a:	8803      	ldrh	r3, [r0, #0]
 801804c:	8812      	ldrh	r2, [r2, #0]
 801804e:	4293      	cmp	r3, r2
 8018050:	d207      	bcs.n	8018062 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018052:	4a11      	ldr	r2, [pc, #68]	; (8018098 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018054:	2114      	movs	r1, #20
 8018056:	6812      	ldr	r2, [r2, #0]
 8018058:	fb01 2303 	mla	r3, r1, r3, r2
 801805c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018060:	4770      	bx	lr
 8018062:	490e      	ldr	r1, [pc, #56]	; (801809c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018064:	8809      	ldrh	r1, [r1, #0]
 8018066:	4411      	add	r1, r2
 8018068:	428b      	cmp	r3, r1
 801806a:	da04      	bge.n	8018076 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801806c:	1a9b      	subs	r3, r3, r2
 801806e:	4a0c      	ldr	r2, [pc, #48]	; (80180a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018070:	210e      	movs	r1, #14
 8018072:	6812      	ldr	r2, [r2, #0]
 8018074:	e7f0      	b.n	8018058 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018076:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801807a:	4293      	cmp	r3, r2
 801807c:	d108      	bne.n	8018090 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801807e:	4b09      	ldr	r3, [pc, #36]	; (80180a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018080:	781b      	ldrb	r3, [r3, #0]
 8018082:	b91b      	cbnz	r3, 801808c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018084:	4b08      	ldr	r3, [pc, #32]	; (80180a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018086:	f9b3 0000 	ldrsh.w	r0, [r3]
 801808a:	4770      	bx	lr
 801808c:	4b07      	ldr	r3, [pc, #28]	; (80180ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801808e:	e7fa      	b.n	8018086 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018090:	2000      	movs	r0, #0
 8018092:	4770      	bx	lr
 8018094:	24003024 	.word	0x24003024
 8018098:	2400302c 	.word	0x2400302c
 801809c:	24003028 	.word	0x24003028
 80180a0:	2400300c 	.word	0x2400300c
 80180a4:	24002f9c 	.word	0x24002f9c
 80180a8:	24002f9e 	.word	0x24002f9e
 80180ac:	24002fa0 	.word	0x24002fa0

080180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80180b0:	4a12      	ldr	r2, [pc, #72]	; (80180fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80180b2:	8803      	ldrh	r3, [r0, #0]
 80180b4:	8812      	ldrh	r2, [r2, #0]
 80180b6:	4293      	cmp	r3, r2
 80180b8:	d207      	bcs.n	80180ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80180ba:	4a11      	ldr	r2, [pc, #68]	; (8018100 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80180bc:	2114      	movs	r1, #20
 80180be:	6812      	ldr	r2, [r2, #0]
 80180c0:	fb01 2303 	mla	r3, r1, r3, r2
 80180c4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80180c8:	4770      	bx	lr
 80180ca:	490e      	ldr	r1, [pc, #56]	; (8018104 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80180cc:	8809      	ldrh	r1, [r1, #0]
 80180ce:	4411      	add	r1, r2
 80180d0:	428b      	cmp	r3, r1
 80180d2:	da04      	bge.n	80180de <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80180d4:	1a9b      	subs	r3, r3, r2
 80180d6:	4a0c      	ldr	r2, [pc, #48]	; (8018108 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80180d8:	210e      	movs	r1, #14
 80180da:	6812      	ldr	r2, [r2, #0]
 80180dc:	e7f0      	b.n	80180c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80180de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80180e2:	4293      	cmp	r3, r2
 80180e4:	d108      	bne.n	80180f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80180e6:	4b09      	ldr	r3, [pc, #36]	; (801810c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80180e8:	781b      	ldrb	r3, [r3, #0]
 80180ea:	b91b      	cbnz	r3, 80180f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80180ec:	4b08      	ldr	r3, [pc, #32]	; (8018110 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80180ee:	f9b3 0000 	ldrsh.w	r0, [r3]
 80180f2:	4770      	bx	lr
 80180f4:	4b07      	ldr	r3, [pc, #28]	; (8018114 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80180f6:	e7fa      	b.n	80180ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80180f8:	2000      	movs	r0, #0
 80180fa:	4770      	bx	lr
 80180fc:	24003024 	.word	0x24003024
 8018100:	2400302c 	.word	0x2400302c
 8018104:	24003028 	.word	0x24003028
 8018108:	2400300c 	.word	0x2400300c
 801810c:	24002f9c 	.word	0x24002f9c
 8018110:	24002fa0 	.word	0x24002fa0
 8018114:	24002f9e 	.word	0x24002f9e

08018118 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018118:	4a1f      	ldr	r2, [pc, #124]	; (8018198 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801811a:	b510      	push	{r4, lr}
 801811c:	880b      	ldrh	r3, [r1, #0]
 801811e:	8812      	ldrh	r2, [r2, #0]
 8018120:	4293      	cmp	r3, r2
 8018122:	d213      	bcs.n	801814c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018124:	4a1d      	ldr	r2, [pc, #116]	; (801819c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018126:	2114      	movs	r1, #20
 8018128:	6812      	ldr	r2, [r2, #0]
 801812a:	fb01 2303 	mla	r3, r1, r3, r2
 801812e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018132:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018136:	8a1a      	ldrh	r2, [r3, #16]
 8018138:	8a5b      	ldrh	r3, [r3, #18]
 801813a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801813e:	8004      	strh	r4, [r0, #0]
 8018140:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018144:	8041      	strh	r1, [r0, #2]
 8018146:	8082      	strh	r2, [r0, #4]
 8018148:	80c3      	strh	r3, [r0, #6]
 801814a:	e00e      	b.n	801816a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801814c:	4914      	ldr	r1, [pc, #80]	; (80181a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801814e:	8809      	ldrh	r1, [r1, #0]
 8018150:	4411      	add	r1, r2
 8018152:	428b      	cmp	r3, r1
 8018154:	da0a      	bge.n	801816c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018156:	1a9b      	subs	r3, r3, r2
 8018158:	4a12      	ldr	r2, [pc, #72]	; (80181a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801815a:	210e      	movs	r1, #14
 801815c:	6812      	ldr	r2, [r2, #0]
 801815e:	fb01 2303 	mla	r3, r1, r3, r2
 8018162:	681a      	ldr	r2, [r3, #0]
 8018164:	6002      	str	r2, [r0, #0]
 8018166:	685a      	ldr	r2, [r3, #4]
 8018168:	6042      	str	r2, [r0, #4]
 801816a:	bd10      	pop	{r4, pc}
 801816c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018170:	4293      	cmp	r3, r2
 8018172:	d10b      	bne.n	801818c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018174:	4b0c      	ldr	r3, [pc, #48]	; (80181a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018176:	f9b3 1000 	ldrsh.w	r1, [r3]
 801817a:	4b0c      	ldr	r3, [pc, #48]	; (80181ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801817c:	8081      	strh	r1, [r0, #4]
 801817e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018182:	2300      	movs	r3, #0
 8018184:	80c2      	strh	r2, [r0, #6]
 8018186:	8003      	strh	r3, [r0, #0]
 8018188:	8043      	strh	r3, [r0, #2]
 801818a:	e7ee      	b.n	801816a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801818c:	2300      	movs	r3, #0
 801818e:	8003      	strh	r3, [r0, #0]
 8018190:	8043      	strh	r3, [r0, #2]
 8018192:	8083      	strh	r3, [r0, #4]
 8018194:	e7d8      	b.n	8018148 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018196:	bf00      	nop
 8018198:	24003024 	.word	0x24003024
 801819c:	2400302c 	.word	0x2400302c
 80181a0:	24003028 	.word	0x24003028
 80181a4:	2400300c 	.word	0x2400300c
 80181a8:	24002f98 	.word	0x24002f98
 80181ac:	24002f9a 	.word	0x24002f9a

080181b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80181b0:	4a17      	ldr	r2, [pc, #92]	; (8018210 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80181b2:	8803      	ldrh	r3, [r0, #0]
 80181b4:	8812      	ldrh	r2, [r2, #0]
 80181b6:	4293      	cmp	r3, r2
 80181b8:	d213      	bcs.n	80181e2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80181ba:	4a16      	ldr	r2, [pc, #88]	; (8018214 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80181bc:	2114      	movs	r1, #20
 80181be:	6812      	ldr	r2, [r2, #0]
 80181c0:	fb01 2303 	mla	r3, r1, r3, r2
 80181c4:	8a1a      	ldrh	r2, [r3, #16]
 80181c6:	8919      	ldrh	r1, [r3, #8]
 80181c8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80181cc:	428a      	cmp	r2, r1
 80181ce:	db1d      	blt.n	801820c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80181d0:	8a58      	ldrh	r0, [r3, #18]
 80181d2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80181d6:	895b      	ldrh	r3, [r3, #10]
 80181d8:	4298      	cmp	r0, r3
 80181da:	bfac      	ite	ge
 80181dc:	2000      	movge	r0, #0
 80181de:	2001      	movlt	r0, #1
 80181e0:	4770      	bx	lr
 80181e2:	490d      	ldr	r1, [pc, #52]	; (8018218 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80181e4:	8809      	ldrh	r1, [r1, #0]
 80181e6:	4411      	add	r1, r2
 80181e8:	428b      	cmp	r3, r1
 80181ea:	da0d      	bge.n	8018208 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80181ec:	1a9b      	subs	r3, r3, r2
 80181ee:	4a0b      	ldr	r2, [pc, #44]	; (801821c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80181f0:	210e      	movs	r1, #14
 80181f2:	6812      	ldr	r2, [r2, #0]
 80181f4:	fb01 2303 	mla	r3, r1, r3, r2
 80181f8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80181fc:	891a      	ldrh	r2, [r3, #8]
 80181fe:	4291      	cmp	r1, r2
 8018200:	db04      	blt.n	801820c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018202:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018206:	e7e6      	b.n	80181d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018208:	2000      	movs	r0, #0
 801820a:	4770      	bx	lr
 801820c:	2001      	movs	r0, #1
 801820e:	4770      	bx	lr
 8018210:	24003024 	.word	0x24003024
 8018214:	2400302c 	.word	0x2400302c
 8018218:	24003028 	.word	0x24003028
 801821c:	2400300c 	.word	0x2400300c

08018220 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018220:	4a12      	ldr	r2, [pc, #72]	; (801826c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018222:	8803      	ldrh	r3, [r0, #0]
 8018224:	8811      	ldrh	r1, [r2, #0]
 8018226:	428b      	cmp	r3, r1
 8018228:	d20b      	bcs.n	8018242 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801822a:	4a11      	ldr	r2, [pc, #68]	; (8018270 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801822c:	6812      	ldr	r2, [r2, #0]
 801822e:	b112      	cbz	r2, 8018236 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018230:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018234:	b9c0      	cbnz	r0, 8018268 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018236:	4a0f      	ldr	r2, [pc, #60]	; (8018274 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018238:	6811      	ldr	r1, [r2, #0]
 801823a:	2214      	movs	r2, #20
 801823c:	4353      	muls	r3, r2
 801823e:	58c8      	ldr	r0, [r1, r3]
 8018240:	4770      	bx	lr
 8018242:	4a0d      	ldr	r2, [pc, #52]	; (8018278 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018244:	8812      	ldrh	r2, [r2, #0]
 8018246:	440a      	add	r2, r1
 8018248:	4293      	cmp	r3, r2
 801824a:	da04      	bge.n	8018256 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801824c:	4a08      	ldr	r2, [pc, #32]	; (8018270 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801824e:	6812      	ldr	r2, [r2, #0]
 8018250:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018254:	4770      	bx	lr
 8018256:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801825a:	4293      	cmp	r3, r2
 801825c:	d103      	bne.n	8018266 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801825e:	4b07      	ldr	r3, [pc, #28]	; (801827c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018260:	681b      	ldr	r3, [r3, #0]
 8018262:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018264:	4770      	bx	lr
 8018266:	2000      	movs	r0, #0
 8018268:	4770      	bx	lr
 801826a:	bf00      	nop
 801826c:	24003024 	.word	0x24003024
 8018270:	24003008 	.word	0x24003008
 8018274:	2400302c 	.word	0x2400302c
 8018278:	24003028 	.word	0x24003028
 801827c:	24002fa4 	.word	0x24002fa4

08018280 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018280:	4b24      	ldr	r3, [pc, #144]	; (8018314 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018282:	8802      	ldrh	r2, [r0, #0]
 8018284:	8818      	ldrh	r0, [r3, #0]
 8018286:	4282      	cmp	r2, r0
 8018288:	d221      	bcs.n	80182ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801828a:	4b23      	ldr	r3, [pc, #140]	; (8018318 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801828c:	6819      	ldr	r1, [r3, #0]
 801828e:	2314      	movs	r3, #20
 8018290:	fb03 1302 	mla	r3, r3, r2, r1
 8018294:	6858      	ldr	r0, [r3, #4]
 8018296:	2800      	cmp	r0, #0
 8018298:	d03a      	beq.n	8018310 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801829a:	4920      	ldr	r1, [pc, #128]	; (801831c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801829c:	6809      	ldr	r1, [r1, #0]
 801829e:	2900      	cmp	r1, #0
 80182a0:	d036      	beq.n	8018310 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80182a2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80182a6:	2900      	cmp	r1, #0
 80182a8:	d032      	beq.n	8018310 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80182aa:	891a      	ldrh	r2, [r3, #8]
 80182ac:	8958      	ldrh	r0, [r3, #10]
 80182ae:	4350      	muls	r0, r2
 80182b0:	7c5a      	ldrb	r2, [r3, #17]
 80182b2:	7cdb      	ldrb	r3, [r3, #19]
 80182b4:	0952      	lsrs	r2, r2, #5
 80182b6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80182ba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80182be:	2b0b      	cmp	r3, #11
 80182c0:	bf18      	it	ne
 80182c2:	0040      	lslne	r0, r0, #1
 80182c4:	3003      	adds	r0, #3
 80182c6:	f020 0003 	bic.w	r0, r0, #3
 80182ca:	4408      	add	r0, r1
 80182cc:	4770      	bx	lr
 80182ce:	4b14      	ldr	r3, [pc, #80]	; (8018320 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80182d0:	881b      	ldrh	r3, [r3, #0]
 80182d2:	4403      	add	r3, r0
 80182d4:	429a      	cmp	r2, r3
 80182d6:	da1a      	bge.n	801830e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80182d8:	4b12      	ldr	r3, [pc, #72]	; (8018324 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80182da:	1a10      	subs	r0, r2, r0
 80182dc:	210e      	movs	r1, #14
 80182de:	681b      	ldr	r3, [r3, #0]
 80182e0:	fb01 3000 	mla	r0, r1, r0, r3
 80182e4:	7b03      	ldrb	r3, [r0, #12]
 80182e6:	f003 031f 	and.w	r3, r3, #31
 80182ea:	2b0b      	cmp	r3, #11
 80182ec:	d10b      	bne.n	8018306 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80182ee:	8903      	ldrh	r3, [r0, #8]
 80182f0:	8940      	ldrh	r0, [r0, #10]
 80182f2:	4358      	muls	r0, r3
 80182f4:	4b09      	ldr	r3, [pc, #36]	; (801831c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80182f6:	3003      	adds	r0, #3
 80182f8:	6819      	ldr	r1, [r3, #0]
 80182fa:	f020 0303 	bic.w	r3, r0, #3
 80182fe:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018302:	4418      	add	r0, r3
 8018304:	4770      	bx	lr
 8018306:	2b0d      	cmp	r3, #13
 8018308:	d101      	bne.n	801830e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801830a:	300d      	adds	r0, #13
 801830c:	4770      	bx	lr
 801830e:	2000      	movs	r0, #0
 8018310:	4770      	bx	lr
 8018312:	bf00      	nop
 8018314:	24003024 	.word	0x24003024
 8018318:	2400302c 	.word	0x2400302c
 801831c:	24003008 	.word	0x24003008
 8018320:	24003028 	.word	0x24003028
 8018324:	2400300c 	.word	0x2400300c

08018328 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018328:	4a17      	ldr	r2, [pc, #92]	; (8018388 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801832a:	b510      	push	{r4, lr}
 801832c:	8803      	ldrh	r3, [r0, #0]
 801832e:	8812      	ldrh	r2, [r2, #0]
 8018330:	4293      	cmp	r3, r2
 8018332:	d20c      	bcs.n	801834e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018334:	4a15      	ldr	r2, [pc, #84]	; (801838c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018336:	2114      	movs	r1, #20
 8018338:	6812      	ldr	r2, [r2, #0]
 801833a:	fb01 2303 	mla	r3, r1, r3, r2
 801833e:	7c58      	ldrb	r0, [r3, #17]
 8018340:	0942      	lsrs	r2, r0, #5
 8018342:	7cd8      	ldrb	r0, [r3, #19]
 8018344:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018348:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801834c:	bd10      	pop	{r4, pc}
 801834e:	4910      	ldr	r1, [pc, #64]	; (8018390 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018350:	8809      	ldrh	r1, [r1, #0]
 8018352:	4411      	add	r1, r2
 8018354:	428b      	cmp	r3, r1
 8018356:	da09      	bge.n	801836c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018358:	1a9b      	subs	r3, r3, r2
 801835a:	4a0e      	ldr	r2, [pc, #56]	; (8018394 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801835c:	210e      	movs	r1, #14
 801835e:	6812      	ldr	r2, [r2, #0]
 8018360:	fb01 2303 	mla	r3, r1, r3, r2
 8018364:	7b18      	ldrb	r0, [r3, #12]
 8018366:	f000 001f 	and.w	r0, r0, #31
 801836a:	e7ef      	b.n	801834c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801836c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018370:	4293      	cmp	r3, r2
 8018372:	d106      	bne.n	8018382 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018374:	f7f4 f8b4 	bl	800c4e0 <_ZN8touchgfx3HAL3lcdEv>
 8018378:	6803      	ldr	r3, [r0, #0]
 801837a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801837e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018380:	4718      	bx	r3
 8018382:	2000      	movs	r0, #0
 8018384:	e7e2      	b.n	801834c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018386:	bf00      	nop
 8018388:	24003024 	.word	0x24003024
 801838c:	2400302c 	.word	0x2400302c
 8018390:	24003028 	.word	0x24003028
 8018394:	2400300c 	.word	0x2400300c

08018398 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018398:	2010      	movs	r0, #16
 801839a:	4770      	bx	lr

0801839c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801839c:	2000      	movs	r0, #0
 801839e:	4770      	bx	lr

080183a0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80183a0:	4b02      	ldr	r3, [pc, #8]	; (80183ac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80183a2:	8818      	ldrh	r0, [r3, #0]
 80183a4:	0040      	lsls	r0, r0, #1
 80183a6:	b280      	uxth	r0, r0
 80183a8:	4770      	bx	lr
 80183aa:	bf00      	nop
 80183ac:	24002f9e 	.word	0x24002f9e

080183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80183b0:	2bff      	cmp	r3, #255	; 0xff
 80183b2:	d050      	beq.n	8018456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80183b4:	2a0b      	cmp	r2, #11
 80183b6:	d04a      	beq.n	801844e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80183b8:	d80e      	bhi.n	80183d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80183ba:	2a03      	cmp	r2, #3
 80183bc:	d03f      	beq.n	801843e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80183be:	d804      	bhi.n	80183ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80183c0:	2a01      	cmp	r2, #1
 80183c2:	d03e      	beq.n	8018442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80183c4:	d93f      	bls.n	8018446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80183c6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80183c8:	4770      	bx	lr
 80183ca:	2a09      	cmp	r2, #9
 80183cc:	d03f      	beq.n	801844e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80183ce:	d83c      	bhi.n	801844a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80183d0:	2a08      	cmp	r2, #8
 80183d2:	d03a      	beq.n	801844a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80183d4:	2000      	movs	r0, #0
 80183d6:	4770      	bx	lr
 80183d8:	2a2f      	cmp	r2, #47	; 0x2f
 80183da:	d024      	beq.n	8018426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80183dc:	d80d      	bhi.n	80183fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80183de:	2a2d      	cmp	r2, #45	; 0x2d
 80183e0:	d014      	beq.n	801840c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80183e2:	d826      	bhi.n	8018432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80183e4:	2a2c      	cmp	r2, #44	; 0x2c
 80183e6:	d1f5      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183e8:	684b      	ldr	r3, [r1, #4]
 80183ea:	781b      	ldrb	r3, [r3, #0]
 80183ec:	2b01      	cmp	r3, #1
 80183ee:	d018      	beq.n	8018422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80183f0:	d323      	bcc.n	801843a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80183f2:	2b02      	cmp	r3, #2
 80183f4:	d1ee      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80183f6:	6880      	ldr	r0, [r0, #8]
 80183f8:	4770      	bx	lr
 80183fa:	2a31      	cmp	r2, #49	; 0x31
 80183fc:	d004      	beq.n	8018408 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80183fe:	d328      	bcc.n	8018452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018400:	2a32      	cmp	r2, #50	; 0x32
 8018402:	d026      	beq.n	8018452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018404:	2a33      	cmp	r2, #51	; 0x33
 8018406:	d1e5      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018408:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801840a:	4770      	bx	lr
 801840c:	684b      	ldr	r3, [r1, #4]
 801840e:	781b      	ldrb	r3, [r3, #0]
 8018410:	2b01      	cmp	r3, #1
 8018412:	d004      	beq.n	801841e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018414:	d30b      	bcc.n	801842e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018416:	2b02      	cmp	r3, #2
 8018418:	d1dc      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801841a:	6900      	ldr	r0, [r0, #16]
 801841c:	4770      	bx	lr
 801841e:	6a00      	ldr	r0, [r0, #32]
 8018420:	4770      	bx	lr
 8018422:	6980      	ldr	r0, [r0, #24]
 8018424:	4770      	bx	lr
 8018426:	684b      	ldr	r3, [r1, #4]
 8018428:	781b      	ldrb	r3, [r3, #0]
 801842a:	2b00      	cmp	r3, #0
 801842c:	d1d2      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801842e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018430:	4770      	bx	lr
 8018432:	684b      	ldr	r3, [r1, #4]
 8018434:	781b      	ldrb	r3, [r3, #0]
 8018436:	2b00      	cmp	r3, #0
 8018438:	d1cc      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801843a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801843c:	4770      	bx	lr
 801843e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018440:	4770      	bx	lr
 8018442:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018444:	4770      	bx	lr
 8018446:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018448:	4770      	bx	lr
 801844a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801844c:	4770      	bx	lr
 801844e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018450:	4770      	bx	lr
 8018452:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018454:	4770      	bx	lr
 8018456:	2a0b      	cmp	r2, #11
 8018458:	d049      	beq.n	80184ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801845a:	d80e      	bhi.n	801847a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801845c:	2a03      	cmp	r2, #3
 801845e:	d040      	beq.n	80184e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018460:	d804      	bhi.n	801846c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018462:	2a01      	cmp	r2, #1
 8018464:	d03f      	beq.n	80184e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018466:	d940      	bls.n	80184ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018468:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801846a:	4770      	bx	lr
 801846c:	2a09      	cmp	r2, #9
 801846e:	d03e      	beq.n	80184ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018470:	d801      	bhi.n	8018476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018472:	2a08      	cmp	r2, #8
 8018474:	d1ae      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018476:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018478:	4770      	bx	lr
 801847a:	2a2f      	cmp	r2, #47	; 0x2f
 801847c:	d024      	beq.n	80184c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801847e:	d80d      	bhi.n	801849c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018480:	2a2d      	cmp	r2, #45	; 0x2d
 8018482:	d014      	beq.n	80184ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018484:	d826      	bhi.n	80184d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018486:	2a2c      	cmp	r2, #44	; 0x2c
 8018488:	d1a4      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801848a:	684b      	ldr	r3, [r1, #4]
 801848c:	781b      	ldrb	r3, [r3, #0]
 801848e:	2b01      	cmp	r3, #1
 8018490:	d018      	beq.n	80184c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018492:	d324      	bcc.n	80184de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018494:	2b02      	cmp	r3, #2
 8018496:	d19d      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018498:	68c0      	ldr	r0, [r0, #12]
 801849a:	4770      	bx	lr
 801849c:	2a31      	cmp	r2, #49	; 0x31
 801849e:	d004      	beq.n	80184aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80184a0:	d327      	bcc.n	80184f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80184a2:	2a32      	cmp	r2, #50	; 0x32
 80184a4:	d025      	beq.n	80184f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80184a6:	2a33      	cmp	r2, #51	; 0x33
 80184a8:	d194      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80184aa:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80184ac:	4770      	bx	lr
 80184ae:	684b      	ldr	r3, [r1, #4]
 80184b0:	781b      	ldrb	r3, [r3, #0]
 80184b2:	2b01      	cmp	r3, #1
 80184b4:	d004      	beq.n	80184c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80184b6:	d30b      	bcc.n	80184d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80184b8:	2b02      	cmp	r3, #2
 80184ba:	d18b      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80184bc:	6940      	ldr	r0, [r0, #20]
 80184be:	4770      	bx	lr
 80184c0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80184c2:	4770      	bx	lr
 80184c4:	69c0      	ldr	r0, [r0, #28]
 80184c6:	4770      	bx	lr
 80184c8:	684b      	ldr	r3, [r1, #4]
 80184ca:	781b      	ldrb	r3, [r3, #0]
 80184cc:	2b00      	cmp	r3, #0
 80184ce:	d181      	bne.n	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80184d0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80184d2:	4770      	bx	lr
 80184d4:	684b      	ldr	r3, [r1, #4]
 80184d6:	781b      	ldrb	r3, [r3, #0]
 80184d8:	2b00      	cmp	r3, #0
 80184da:	f47f af7b 	bne.w	80183d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80184de:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80184e0:	4770      	bx	lr
 80184e2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80184e4:	4770      	bx	lr
 80184e6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80184e8:	4770      	bx	lr
 80184ea:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80184ec:	4770      	bx	lr
 80184ee:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80184f0:	4770      	bx	lr
 80184f2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80184f4:	4770      	bx	lr

080184f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184fa:	b087      	sub	sp, #28
 80184fc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80184fe:	9205      	str	r2, [sp, #20]
 8018500:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018504:	9101      	str	r1, [sp, #4]
 8018506:	9202      	str	r2, [sp, #8]
 8018508:	6841      	ldr	r1, [r0, #4]
 801850a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801850e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018512:	fb01 2404 	mla	r4, r1, r4, r2
 8018516:	6802      	ldr	r2, [r0, #0]
 8018518:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801851c:	f8de 2000 	ldr.w	r2, [lr]
 8018520:	9203      	str	r2, [sp, #12]
 8018522:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018526:	3204      	adds	r2, #4
 8018528:	9204      	str	r2, [sp, #16]
 801852a:	9a02      	ldr	r2, [sp, #8]
 801852c:	43d6      	mvns	r6, r2
 801852e:	b2f6      	uxtb	r6, r6
 8018530:	9a01      	ldr	r2, [sp, #4]
 8018532:	2a00      	cmp	r2, #0
 8018534:	dc03      	bgt.n	801853e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018536:	9a05      	ldr	r2, [sp, #20]
 8018538:	2a00      	cmp	r2, #0
 801853a:	f340 8129 	ble.w	8018790 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801853e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018540:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018544:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018548:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801854a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801854e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018552:	2b00      	cmp	r3, #0
 8018554:	dd0e      	ble.n	8018574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018556:	1408      	asrs	r0, r1, #16
 8018558:	d405      	bmi.n	8018566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801855a:	4560      	cmp	r0, ip
 801855c:	da03      	bge.n	8018566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801855e:	1410      	asrs	r0, r2, #16
 8018560:	d401      	bmi.n	8018566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018562:	42b8      	cmp	r0, r7
 8018564:	db07      	blt.n	8018576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018566:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018568:	3b01      	subs	r3, #1
 801856a:	3402      	adds	r4, #2
 801856c:	4401      	add	r1, r0
 801856e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018570:	4402      	add	r2, r0
 8018572:	e7ee      	b.n	8018552 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018574:	d071      	beq.n	801865a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018576:	1e58      	subs	r0, r3, #1
 8018578:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801857a:	fb05 1500 	mla	r5, r5, r0, r1
 801857e:	142d      	asrs	r5, r5, #16
 8018580:	d45f      	bmi.n	8018642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018582:	4565      	cmp	r5, ip
 8018584:	da5d      	bge.n	8018642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018586:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018588:	fb05 2000 	mla	r0, r5, r0, r2
 801858c:	1400      	asrs	r0, r0, #16
 801858e:	d458      	bmi.n	8018642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018590:	42b8      	cmp	r0, r7
 8018592:	da56      	bge.n	8018642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018594:	4699      	mov	r9, r3
 8018596:	46a2      	mov	sl, r4
 8018598:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801859c:	f1b9 0f00 	cmp.w	r9, #0
 80185a0:	dd57      	ble.n	8018652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80185a2:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80185a6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80185aa:	9803      	ldr	r0, [sp, #12]
 80185ac:	140d      	asrs	r5, r1, #16
 80185ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80185b2:	fb07 000c 	mla	r0, r7, ip, r0
 80185b6:	5d40      	ldrb	r0, [r0, r5]
 80185b8:	9d04      	ldr	r5, [sp, #16]
 80185ba:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80185be:	f8ba 5000 	ldrh.w	r5, [sl]
 80185c2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80185c6:	122f      	asrs	r7, r5, #8
 80185c8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80185cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80185d4:	00ed      	lsls	r5, r5, #3
 80185d6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80185da:	fb17 f706 	smulbb	r7, r7, r6
 80185de:	b2ed      	uxtb	r5, r5
 80185e0:	fb18 f806 	smulbb	r8, r8, r6
 80185e4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80185e8:	10c7      	asrs	r7, r0, #3
 80185ea:	fb15 f506 	smulbb	r5, r5, r6
 80185ee:	00c0      	lsls	r0, r0, #3
 80185f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80185f4:	fa1f fc8c 	uxth.w	ip, ip
 80185f8:	b2c0      	uxtb	r0, r0
 80185fa:	fb07 870b 	mla	r7, r7, fp, r8
 80185fe:	fb00 500b 	mla	r0, r0, fp, r5
 8018602:	f10c 0501 	add.w	r5, ip, #1
 8018606:	b2bf      	uxth	r7, r7
 8018608:	b280      	uxth	r0, r0
 801860a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801860e:	f107 0801 	add.w	r8, r7, #1
 8018612:	1c45      	adds	r5, r0, #1
 8018614:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018618:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801861c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018620:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018622:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018626:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801862a:	4401      	add	r1, r0
 801862c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018630:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018632:	ea45 0c0c 	orr.w	ip, r5, ip
 8018636:	4402      	add	r2, r0
 8018638:	ea4c 0c08 	orr.w	ip, ip, r8
 801863c:	f82a cb02 	strh.w	ip, [sl], #2
 8018640:	e7ac      	b.n	801859c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018642:	f04f 0800 	mov.w	r8, #0
 8018646:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801864a:	eb03 0008 	add.w	r0, r3, r8
 801864e:	2800      	cmp	r0, #0
 8018650:	dc41      	bgt.n	80186d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018652:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018656:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801865a:	9b01      	ldr	r3, [sp, #4]
 801865c:	2b00      	cmp	r3, #0
 801865e:	f340 8097 	ble.w	8018790 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018662:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018666:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018668:	ee30 0a04 	vadd.f32	s0, s0, s8
 801866c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018670:	eef0 6a62 	vmov.f32	s13, s5
 8018674:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018678:	ee31 1a05 	vadd.f32	s2, s2, s10
 801867c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018680:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018684:	eef0 6a43 	vmov.f32	s13, s6
 8018688:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801868c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018690:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018694:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018698:	ee77 2a62 	vsub.f32	s5, s14, s5
 801869c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80186a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80186a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80186a8:	ee12 2a90 	vmov	r2, s5
 80186ac:	eef0 2a47 	vmov.f32	s5, s14
 80186b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80186b4:	ee13 2a10 	vmov	r2, s6
 80186b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80186ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186bc:	eeb0 3a67 	vmov.f32	s6, s15
 80186c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80186c4:	9314      	str	r3, [sp, #80]	; 0x50
 80186c6:	9b01      	ldr	r3, [sp, #4]
 80186c8:	9a05      	ldr	r2, [sp, #20]
 80186ca:	3b01      	subs	r3, #1
 80186cc:	9301      	str	r3, [sp, #4]
 80186ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186d0:	bf08      	it	eq
 80186d2:	4613      	moveq	r3, r2
 80186d4:	e72c      	b.n	8018530 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80186d6:	140f      	asrs	r7, r1, #16
 80186d8:	d453      	bmi.n	8018782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80186da:	f8de 5008 	ldr.w	r5, [lr, #8]
 80186de:	42bd      	cmp	r5, r7
 80186e0:	dd4f      	ble.n	8018782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80186e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80186e6:	d44c      	bmi.n	8018782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80186e8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80186ec:	4560      	cmp	r0, ip
 80186ee:	dd48      	ble.n	8018782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80186f0:	9803      	ldr	r0, [sp, #12]
 80186f2:	b22d      	sxth	r5, r5
 80186f4:	fb0c 0505 	mla	r5, ip, r5, r0
 80186f8:	5de8      	ldrb	r0, [r5, r7]
 80186fa:	9d04      	ldr	r5, [sp, #16]
 80186fc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018700:	f06f 0501 	mvn.w	r5, #1
 8018704:	fb05 fb08 	mul.w	fp, r5, r8
 8018708:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801870c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018710:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018714:	122f      	asrs	r7, r5, #8
 8018716:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801871a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801871e:	00ed      	lsls	r5, r5, #3
 8018720:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018724:	fb17 f706 	smulbb	r7, r7, r6
 8018728:	b2ed      	uxtb	r5, r5
 801872a:	fb19 f906 	smulbb	r9, r9, r6
 801872e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018732:	10c7      	asrs	r7, r0, #3
 8018734:	fb15 f506 	smulbb	r5, r5, r6
 8018738:	00c0      	lsls	r0, r0, #3
 801873a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801873e:	fa1f fc8c 	uxth.w	ip, ip
 8018742:	b2c0      	uxtb	r0, r0
 8018744:	fb07 970a 	mla	r7, r7, sl, r9
 8018748:	fb00 500a 	mla	r0, r0, sl, r5
 801874c:	f10c 0501 	add.w	r5, ip, #1
 8018750:	b2bf      	uxth	r7, r7
 8018752:	b280      	uxth	r0, r0
 8018754:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018758:	f107 0901 	add.w	r9, r7, #1
 801875c:	1c45      	adds	r5, r0, #1
 801875e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018762:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018766:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801876a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801876e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018772:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018776:	ea45 0c0c 	orr.w	ip, r5, ip
 801877a:	ea4c 0c09 	orr.w	ip, ip, r9
 801877e:	f824 c00b 	strh.w	ip, [r4, fp]
 8018782:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018784:	f108 38ff 	add.w	r8, r8, #4294967295
 8018788:	4401      	add	r1, r0
 801878a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801878c:	4402      	add	r2, r0
 801878e:	e75c      	b.n	801864a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018790:	b007      	add	sp, #28
 8018792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018796 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018796:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801879a:	b085      	sub	sp, #20
 801879c:	4693      	mov	fp, r2
 801879e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80187a2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80187a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80187a6:	6870      	ldr	r0, [r6, #4]
 80187a8:	9100      	str	r1, [sp, #0]
 80187aa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80187ae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80187b2:	fb00 2404 	mla	r4, r0, r4, r2
 80187b6:	6832      	ldr	r2, [r6, #0]
 80187b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80187bc:	682a      	ldr	r2, [r5, #0]
 80187be:	9201      	str	r2, [sp, #4]
 80187c0:	686a      	ldr	r2, [r5, #4]
 80187c2:	3204      	adds	r2, #4
 80187c4:	9202      	str	r2, [sp, #8]
 80187c6:	9a00      	ldr	r2, [sp, #0]
 80187c8:	2a00      	cmp	r2, #0
 80187ca:	dc03      	bgt.n	80187d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80187cc:	f1bb 0f00 	cmp.w	fp, #0
 80187d0:	f340 80a0 	ble.w	8018914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80187d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80187d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80187da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80187de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80187e0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80187e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80187e8:	2b00      	cmp	r3, #0
 80187ea:	dd0c      	ble.n	8018806 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80187ec:	1406      	asrs	r6, r0, #16
 80187ee:	d405      	bmi.n	80187fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187f0:	454e      	cmp	r6, r9
 80187f2:	da03      	bge.n	80187fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187f4:	1416      	asrs	r6, r2, #16
 80187f6:	d401      	bmi.n	80187fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187f8:	4546      	cmp	r6, r8
 80187fa:	db05      	blt.n	8018808 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80187fc:	4470      	add	r0, lr
 80187fe:	4462      	add	r2, ip
 8018800:	3b01      	subs	r3, #1
 8018802:	3402      	adds	r4, #2
 8018804:	e7f0      	b.n	80187e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018806:	d00f      	beq.n	8018828 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018808:	1e5e      	subs	r6, r3, #1
 801880a:	fb0e 0706 	mla	r7, lr, r6, r0
 801880e:	143f      	asrs	r7, r7, #16
 8018810:	d541      	bpl.n	8018896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018812:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018816:	4698      	mov	r8, r3
 8018818:	9603      	str	r6, [sp, #12]
 801881a:	f1b8 0f00 	cmp.w	r8, #0
 801881e:	dc59      	bgt.n	80188d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018820:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018824:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018828:	9b00      	ldr	r3, [sp, #0]
 801882a:	2b00      	cmp	r3, #0
 801882c:	dd72      	ble.n	8018914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801882e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018832:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018838:	eeb0 6a62 	vmov.f32	s12, s5
 801883c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018840:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018844:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018848:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801884c:	eeb0 6a43 	vmov.f32	s12, s6
 8018850:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018854:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018858:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801885c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018860:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018864:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018868:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801886c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018870:	ee12 2a90 	vmov	r2, s5
 8018874:	eef0 2a47 	vmov.f32	s5, s14
 8018878:	fb92 fef3 	sdiv	lr, r2, r3
 801887c:	ee13 2a10 	vmov	r2, s6
 8018880:	eeb0 3a67 	vmov.f32	s6, s15
 8018884:	fb92 fcf3 	sdiv	ip, r2, r3
 8018888:	9b00      	ldr	r3, [sp, #0]
 801888a:	3b01      	subs	r3, #1
 801888c:	9300      	str	r3, [sp, #0]
 801888e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018890:	bf08      	it	eq
 8018892:	465b      	moveq	r3, fp
 8018894:	e797      	b.n	80187c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018896:	454f      	cmp	r7, r9
 8018898:	dabb      	bge.n	8018812 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801889a:	fb0c 2606 	mla	r6, ip, r6, r2
 801889e:	1436      	asrs	r6, r6, #16
 80188a0:	d4b7      	bmi.n	8018812 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80188a2:	4546      	cmp	r6, r8
 80188a4:	dab5      	bge.n	8018812 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80188a6:	461e      	mov	r6, r3
 80188a8:	46a0      	mov	r8, r4
 80188aa:	2e00      	cmp	r6, #0
 80188ac:	ddb8      	ble.n	8018820 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80188ae:	1417      	asrs	r7, r2, #16
 80188b0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80188b4:	9901      	ldr	r1, [sp, #4]
 80188b6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80188ba:	4462      	add	r2, ip
 80188bc:	4470      	add	r0, lr
 80188be:	fb0a 1707 	mla	r7, sl, r7, r1
 80188c2:	9902      	ldr	r1, [sp, #8]
 80188c4:	3e01      	subs	r6, #1
 80188c6:	f817 7009 	ldrb.w	r7, [r7, r9]
 80188ca:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80188ce:	f828 7b02 	strh.w	r7, [r8], #2
 80188d2:	e7ea      	b.n	80188aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80188d4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80188d8:	d417      	bmi.n	801890a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80188da:	68ae      	ldr	r6, [r5, #8]
 80188dc:	454e      	cmp	r6, r9
 80188de:	dd14      	ble.n	801890a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80188e0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80188e4:	d411      	bmi.n	801890a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80188e6:	68ef      	ldr	r7, [r5, #12]
 80188e8:	4557      	cmp	r7, sl
 80188ea:	dd0e      	ble.n	801890a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80188ec:	9f01      	ldr	r7, [sp, #4]
 80188ee:	b236      	sxth	r6, r6
 80188f0:	f06f 0101 	mvn.w	r1, #1
 80188f4:	fb0a 7606 	mla	r6, sl, r6, r7
 80188f8:	9f02      	ldr	r7, [sp, #8]
 80188fa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80188fe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018902:	fb01 f608 	mul.w	r6, r1, r8
 8018906:	9903      	ldr	r1, [sp, #12]
 8018908:	538f      	strh	r7, [r1, r6]
 801890a:	4470      	add	r0, lr
 801890c:	4462      	add	r2, ip
 801890e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018912:	e782      	b.n	801881a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018914:	b005      	add	sp, #20
 8018916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801891a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801891a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801891e:	b087      	sub	sp, #28
 8018920:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018922:	9205      	str	r2, [sp, #20]
 8018924:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018928:	9102      	str	r1, [sp, #8]
 801892a:	9203      	str	r2, [sp, #12]
 801892c:	6861      	ldr	r1, [r4, #4]
 801892e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018932:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018936:	fb01 2000 	mla	r0, r1, r0, r2
 801893a:	6822      	ldr	r2, [r4, #0]
 801893c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018940:	9200      	str	r2, [sp, #0]
 8018942:	f8dc 2000 	ldr.w	r2, [ip]
 8018946:	9204      	str	r2, [sp, #16]
 8018948:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801894c:	3204      	adds	r2, #4
 801894e:	9201      	str	r2, [sp, #4]
 8018950:	9a03      	ldr	r2, [sp, #12]
 8018952:	43d5      	mvns	r5, r2
 8018954:	b2ed      	uxtb	r5, r5
 8018956:	9a02      	ldr	r2, [sp, #8]
 8018958:	2a00      	cmp	r2, #0
 801895a:	dc03      	bgt.n	8018964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801895c:	9a05      	ldr	r2, [sp, #20]
 801895e:	2a00      	cmp	r2, #0
 8018960:	f340 812c 	ble.w	8018bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018964:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018966:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801896a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801896e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018970:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018974:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018978:	2b00      	cmp	r3, #0
 801897a:	dd10      	ble.n	801899e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801897c:	140c      	asrs	r4, r1, #16
 801897e:	d405      	bmi.n	801898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018980:	4574      	cmp	r4, lr
 8018982:	da03      	bge.n	801898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018984:	1414      	asrs	r4, r2, #16
 8018986:	d401      	bmi.n	801898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018988:	42bc      	cmp	r4, r7
 801898a:	db09      	blt.n	80189a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801898c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801898e:	3b01      	subs	r3, #1
 8018990:	9800      	ldr	r0, [sp, #0]
 8018992:	4421      	add	r1, r4
 8018994:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018996:	3002      	adds	r0, #2
 8018998:	4422      	add	r2, r4
 801899a:	9000      	str	r0, [sp, #0]
 801899c:	e7ec      	b.n	8018978 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801899e:	d071      	beq.n	8018a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80189a0:	1e5c      	subs	r4, r3, #1
 80189a2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80189a4:	fb06 1604 	mla	r6, r6, r4, r1
 80189a8:	1436      	asrs	r6, r6, #16
 80189aa:	d45d      	bmi.n	8018a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80189ac:	4576      	cmp	r6, lr
 80189ae:	da5b      	bge.n	8018a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80189b0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80189b2:	fb06 2404 	mla	r4, r6, r4, r2
 80189b6:	1424      	asrs	r4, r4, #16
 80189b8:	d456      	bmi.n	8018a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80189ba:	42bc      	cmp	r4, r7
 80189bc:	da54      	bge.n	8018a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80189be:	4698      	mov	r8, r3
 80189c0:	f8dd 9000 	ldr.w	r9, [sp]
 80189c4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80189c8:	f1b8 0f00 	cmp.w	r8, #0
 80189cc:	dd54      	ble.n	8018a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80189ce:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80189d2:	1414      	asrs	r4, r2, #16
 80189d4:	9804      	ldr	r0, [sp, #16]
 80189d6:	140e      	asrs	r6, r1, #16
 80189d8:	f108 38ff 	add.w	r8, r8, #4294967295
 80189dc:	fb07 0404 	mla	r4, r7, r4, r0
 80189e0:	9801      	ldr	r0, [sp, #4]
 80189e2:	f814 e006 	ldrb.w	lr, [r4, r6]
 80189e6:	f8b9 4000 	ldrh.w	r4, [r9]
 80189ea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80189ee:	1227      	asrs	r7, r4, #8
 80189f0:	eb00 0b0e 	add.w	fp, r0, lr
 80189f4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80189f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80189fe:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018a02:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018a06:	4401      	add	r1, r0
 8018a08:	fb16 f60a 	smulbb	r6, r6, sl
 8018a0c:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a0e:	fb1b fb0a 	smulbb	fp, fp, sl
 8018a12:	fb07 6705 	mla	r7, r7, r5, r6
 8018a16:	10e6      	asrs	r6, r4, #3
 8018a18:	00e4      	lsls	r4, r4, #3
 8018a1a:	4402      	add	r2, r0
 8018a1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018a20:	b2bf      	uxth	r7, r7
 8018a22:	b2e4      	uxtb	r4, r4
 8018a24:	fb06 b605 	mla	r6, r6, r5, fp
 8018a28:	fb14 f405 	smulbb	r4, r4, r5
 8018a2c:	b2b6      	uxth	r6, r6
 8018a2e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018a32:	1c7c      	adds	r4, r7, #1
 8018a34:	f106 0b01 	add.w	fp, r6, #1
 8018a38:	fa1f fe8e 	uxth.w	lr, lr
 8018a3c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018a40:	f10e 0401 	add.w	r4, lr, #1
 8018a44:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018a48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018a4c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018a50:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018a54:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018a58:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018a5c:	4327      	orrs	r7, r4
 8018a5e:	ea47 070b 	orr.w	r7, r7, fp
 8018a62:	f829 7b02 	strh.w	r7, [r9], #2
 8018a66:	e7af      	b.n	80189c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018a68:	f04f 0e00 	mov.w	lr, #0
 8018a6c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018a70:	eb03 040e 	add.w	r4, r3, lr
 8018a74:	2c00      	cmp	r4, #0
 8018a76:	dc43      	bgt.n	8018b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018a78:	9a00      	ldr	r2, [sp, #0]
 8018a7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018a7e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018a82:	9300      	str	r3, [sp, #0]
 8018a84:	9b02      	ldr	r3, [sp, #8]
 8018a86:	2b00      	cmp	r3, #0
 8018a88:	f340 8098 	ble.w	8018bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018a8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a9a:	eef0 6a62 	vmov.f32	s13, s5
 8018a9e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018aa2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018aa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018aaa:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018aae:	eef0 6a43 	vmov.f32	s13, s6
 8018ab2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ab6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018aba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018abe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ac2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ac6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018aca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ace:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ad2:	ee12 2a90 	vmov	r2, s5
 8018ad6:	eef0 2a47 	vmov.f32	s5, s14
 8018ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ade:	ee13 2a10 	vmov	r2, s6
 8018ae2:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ae4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ae6:	eeb0 3a67 	vmov.f32	s6, s15
 8018aea:	fb92 f3f3 	sdiv	r3, r2, r3
 8018aee:	9314      	str	r3, [sp, #80]	; 0x50
 8018af0:	9b02      	ldr	r3, [sp, #8]
 8018af2:	9a05      	ldr	r2, [sp, #20]
 8018af4:	3b01      	subs	r3, #1
 8018af6:	9302      	str	r3, [sp, #8]
 8018af8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018afa:	bf08      	it	eq
 8018afc:	4613      	moveq	r3, r2
 8018afe:	e72a      	b.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018b00:	140f      	asrs	r7, r1, #16
 8018b02:	d454      	bmi.n	8018bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018b04:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018b08:	42be      	cmp	r6, r7
 8018b0a:	dd50      	ble.n	8018bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018b0c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018b10:	d44d      	bmi.n	8018bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018b12:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018b16:	4544      	cmp	r4, r8
 8018b18:	dd49      	ble.n	8018bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018b1a:	9c04      	ldr	r4, [sp, #16]
 8018b1c:	b236      	sxth	r6, r6
 8018b1e:	f06f 0001 	mvn.w	r0, #1
 8018b22:	fb08 4606 	mla	r6, r8, r6, r4
 8018b26:	9c01      	ldr	r4, [sp, #4]
 8018b28:	fb00 fa0e 	mul.w	sl, r0, lr
 8018b2c:	9800      	ldr	r0, [sp, #0]
 8018b2e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018b32:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018b36:	eb04 0b08 	add.w	fp, r4, r8
 8018b3a:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018b3e:	9801      	ldr	r0, [sp, #4]
 8018b40:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018b44:	1227      	asrs	r7, r4, #8
 8018b46:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018b4a:	fb16 f609 	smulbb	r6, r6, r9
 8018b4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018b52:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018b56:	fb1b fb09 	smulbb	fp, fp, r9
 8018b5a:	fb07 6705 	mla	r7, r7, r5, r6
 8018b5e:	10e6      	asrs	r6, r4, #3
 8018b60:	00e4      	lsls	r4, r4, #3
 8018b62:	9800      	ldr	r0, [sp, #0]
 8018b64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018b68:	b2bf      	uxth	r7, r7
 8018b6a:	b2e4      	uxtb	r4, r4
 8018b6c:	fb06 b605 	mla	r6, r6, r5, fp
 8018b70:	fb14 f405 	smulbb	r4, r4, r5
 8018b74:	b2b6      	uxth	r6, r6
 8018b76:	fb08 4809 	mla	r8, r8, r9, r4
 8018b7a:	1c7c      	adds	r4, r7, #1
 8018b7c:	f106 0b01 	add.w	fp, r6, #1
 8018b80:	fa1f f888 	uxth.w	r8, r8
 8018b84:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018b88:	f108 0401 	add.w	r4, r8, #1
 8018b8c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018b90:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018b94:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018b98:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018b9c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018ba0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018ba4:	4327      	orrs	r7, r4
 8018ba6:	ea47 070b 	orr.w	r7, r7, fp
 8018baa:	f820 700a 	strh.w	r7, [r0, sl]
 8018bae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018bb0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018bb4:	4401      	add	r1, r0
 8018bb6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018bb8:	4402      	add	r2, r0
 8018bba:	e759      	b.n	8018a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018bbc:	b007      	add	sp, #28
 8018bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bc8:	b085      	sub	sp, #20
 8018bca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018bce:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018bd0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018bd2:	9203      	str	r2, [sp, #12]
 8018bd4:	6870      	ldr	r0, [r6, #4]
 8018bd6:	686f      	ldr	r7, [r5, #4]
 8018bd8:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018bdc:	3704      	adds	r7, #4
 8018bde:	9101      	str	r1, [sp, #4]
 8018be0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018be4:	fb00 2404 	mla	r4, r0, r4, r2
 8018be8:	6832      	ldr	r2, [r6, #0]
 8018bea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018bee:	682a      	ldr	r2, [r5, #0]
 8018bf0:	9202      	str	r2, [sp, #8]
 8018bf2:	9a01      	ldr	r2, [sp, #4]
 8018bf4:	2a00      	cmp	r2, #0
 8018bf6:	dc03      	bgt.n	8018c00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018bf8:	9a03      	ldr	r2, [sp, #12]
 8018bfa:	2a00      	cmp	r2, #0
 8018bfc:	f340 80cc 	ble.w	8018d98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018c00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018c02:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018c06:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018c0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018c0c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018c10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018c14:	2b00      	cmp	r3, #0
 8018c16:	dd0d      	ble.n	8018c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018c18:	1406      	asrs	r6, r0, #16
 8018c1a:	d405      	bmi.n	8018c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018c1c:	454e      	cmp	r6, r9
 8018c1e:	da03      	bge.n	8018c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018c20:	1416      	asrs	r6, r2, #16
 8018c22:	d401      	bmi.n	8018c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018c24:	4546      	cmp	r6, r8
 8018c26:	db06      	blt.n	8018c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c28:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018c2a:	4460      	add	r0, ip
 8018c2c:	3b01      	subs	r3, #1
 8018c2e:	3402      	adds	r4, #2
 8018c30:	4432      	add	r2, r6
 8018c32:	e7ef      	b.n	8018c14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018c34:	d00f      	beq.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018c36:	1e5e      	subs	r6, r3, #1
 8018c38:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018c3c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018c40:	d543      	bpl.n	8018cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018c42:	4698      	mov	r8, r3
 8018c44:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018c48:	f1b8 0f00 	cmp.w	r8, #0
 8018c4c:	dc71      	bgt.n	8018d32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018c4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c56:	9b01      	ldr	r3, [sp, #4]
 8018c58:	2b00      	cmp	r3, #0
 8018c5a:	f340 809d 	ble.w	8018d98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018c5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c68:	eeb0 6a62 	vmov.f32	s12, s5
 8018c6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018c70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c78:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018c7c:	eeb0 6a43 	vmov.f32	s12, s6
 8018c80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c84:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018c88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ca0:	ee12 2a90 	vmov	r2, s5
 8018ca4:	eef0 2a47 	vmov.f32	s5, s14
 8018ca8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018cac:	ee13 2a10 	vmov	r2, s6
 8018cb0:	eeb0 3a67 	vmov.f32	s6, s15
 8018cb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cb8:	9312      	str	r3, [sp, #72]	; 0x48
 8018cba:	9b01      	ldr	r3, [sp, #4]
 8018cbc:	9a03      	ldr	r2, [sp, #12]
 8018cbe:	3b01      	subs	r3, #1
 8018cc0:	9301      	str	r3, [sp, #4]
 8018cc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018cc4:	bf08      	it	eq
 8018cc6:	4613      	moveq	r3, r2
 8018cc8:	e793      	b.n	8018bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018cca:	45ce      	cmp	lr, r9
 8018ccc:	dab9      	bge.n	8018c42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018cce:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018cd0:	fb01 2606 	mla	r6, r1, r6, r2
 8018cd4:	1436      	asrs	r6, r6, #16
 8018cd6:	d4b4      	bmi.n	8018c42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018cd8:	4546      	cmp	r6, r8
 8018cda:	dab2      	bge.n	8018c42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018cdc:	4698      	mov	r8, r3
 8018cde:	46a2      	mov	sl, r4
 8018ce0:	f1b8 0f00 	cmp.w	r8, #0
 8018ce4:	ddb3      	ble.n	8018c4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018ce6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018cea:	1416      	asrs	r6, r2, #16
 8018cec:	9902      	ldr	r1, [sp, #8]
 8018cee:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018cf2:	f108 38ff 	add.w	r8, r8, #4294967295
 8018cf6:	4460      	add	r0, ip
 8018cf8:	fb09 1606 	mla	r6, r9, r6, r1
 8018cfc:	4928      	ldr	r1, [pc, #160]	; (8018da0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018cfe:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018d02:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018d06:	eb07 0b0e 	add.w	fp, r7, lr
 8018d0a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018d0e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018d12:	00f6      	lsls	r6, r6, #3
 8018d14:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018d18:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018d1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018d1e:	440a      	add	r2, r1
 8018d20:	ea49 0606 	orr.w	r6, r9, r6
 8018d24:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018d28:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018d2c:	f82a 6b02 	strh.w	r6, [sl], #2
 8018d30:	e7d6      	b.n	8018ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018d32:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018d36:	d429      	bmi.n	8018d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018d38:	68ae      	ldr	r6, [r5, #8]
 8018d3a:	454e      	cmp	r6, r9
 8018d3c:	dd26      	ble.n	8018d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018d3e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018d42:	d423      	bmi.n	8018d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018d44:	68e9      	ldr	r1, [r5, #12]
 8018d46:	4559      	cmp	r1, fp
 8018d48:	dd20      	ble.n	8018d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018d4a:	fa0f fe86 	sxth.w	lr, r6
 8018d4e:	9902      	ldr	r1, [sp, #8]
 8018d50:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018d54:	f06f 0101 	mvn.w	r1, #1
 8018d58:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018d5c:	fb01 f908 	mul.w	r9, r1, r8
 8018d60:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8018d64:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018d68:	eb07 060e 	add.w	r6, r7, lr
 8018d6c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018d70:	7876      	ldrb	r6, [r6, #1]
 8018d72:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018d76:	00f6      	lsls	r6, r6, #3
 8018d78:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018d7c:	ea4b 0606 	orr.w	r6, fp, r6
 8018d80:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018d84:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018d88:	f82a 6009 	strh.w	r6, [sl, r9]
 8018d8c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018d8e:	4460      	add	r0, ip
 8018d90:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d94:	440a      	add	r2, r1
 8018d96:	e757      	b.n	8018c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018d98:	b005      	add	sp, #20
 8018d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d9e:	bf00      	nop
 8018da0:	fffff800 	.word	0xfffff800

08018da4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018da8:	b087      	sub	sp, #28
 8018daa:	468b      	mov	fp, r1
 8018dac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018db0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018db2:	9204      	str	r2, [sp, #16]
 8018db4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018db8:	6841      	ldr	r1, [r0, #4]
 8018dba:	9205      	str	r2, [sp, #20]
 8018dbc:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018dc0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018dc4:	fb01 2404 	mla	r4, r1, r4, r2
 8018dc8:	6802      	ldr	r2, [r0, #0]
 8018dca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018dce:	f8dc 2000 	ldr.w	r2, [ip]
 8018dd2:	9201      	str	r2, [sp, #4]
 8018dd4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018dd8:	3204      	adds	r2, #4
 8018dda:	9202      	str	r2, [sp, #8]
 8018ddc:	f1bb 0f00 	cmp.w	fp, #0
 8018de0:	dc03      	bgt.n	8018dea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018de2:	9a04      	ldr	r2, [sp, #16]
 8018de4:	2a00      	cmp	r2, #0
 8018de6:	f340 8138 	ble.w	801905a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018dea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018dec:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018df0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018df4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018df6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018dfa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018dfe:	2b00      	cmp	r3, #0
 8018e00:	dd0e      	ble.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018e02:	1402      	asrs	r2, r0, #16
 8018e04:	d405      	bmi.n	8018e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018e06:	42ba      	cmp	r2, r7
 8018e08:	da03      	bge.n	8018e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018e0a:	140a      	asrs	r2, r1, #16
 8018e0c:	d401      	bmi.n	8018e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018e0e:	42b2      	cmp	r2, r6
 8018e10:	db07      	blt.n	8018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018e12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018e14:	3b01      	subs	r3, #1
 8018e16:	3402      	adds	r4, #2
 8018e18:	4410      	add	r0, r2
 8018e1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018e1c:	4411      	add	r1, r2
 8018e1e:	e7ee      	b.n	8018dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018e20:	d019      	beq.n	8018e56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018e22:	1e5a      	subs	r2, r3, #1
 8018e24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018e26:	fb05 0502 	mla	r5, r5, r2, r0
 8018e2a:	142d      	asrs	r5, r5, #16
 8018e2c:	d409      	bmi.n	8018e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018e2e:	42bd      	cmp	r5, r7
 8018e30:	da07      	bge.n	8018e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018e32:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018e34:	fb05 1202 	mla	r2, r5, r2, r1
 8018e38:	1412      	asrs	r2, r2, #16
 8018e3a:	d402      	bmi.n	8018e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018e3c:	42b2      	cmp	r2, r6
 8018e3e:	f2c0 80ac 	blt.w	8018f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018e42:	f04f 0e00 	mov.w	lr, #0
 8018e46:	eb03 020e 	add.w	r2, r3, lr
 8018e4a:	2a00      	cmp	r2, #0
 8018e4c:	dc3e      	bgt.n	8018ecc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018e4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e56:	f1bb 0f00 	cmp.w	fp, #0
 8018e5a:	f340 80fe 	ble.w	801905a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018e5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e68:	f1bb 0b01 	subs.w	fp, fp, #1
 8018e6c:	eeb0 6a62 	vmov.f32	s12, s5
 8018e70:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e7c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018e80:	eeb0 6a43 	vmov.f32	s12, s6
 8018e84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e88:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018e8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ea0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ea4:	ee12 2a90 	vmov	r2, s5
 8018ea8:	eef0 2a47 	vmov.f32	s5, s14
 8018eac:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eb0:	ee13 2a10 	vmov	r2, s6
 8018eb4:	9313      	str	r3, [sp, #76]	; 0x4c
 8018eb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018eb8:	eeb0 3a67 	vmov.f32	s6, s15
 8018ebc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ec0:	9a04      	ldr	r2, [sp, #16]
 8018ec2:	9314      	str	r3, [sp, #80]	; 0x50
 8018ec4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ec6:	bf08      	it	eq
 8018ec8:	4613      	moveq	r3, r2
 8018eca:	e787      	b.n	8018ddc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018ecc:	1406      	asrs	r6, r0, #16
 8018ece:	d45d      	bmi.n	8018f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018ed0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018ed4:	42b5      	cmp	r5, r6
 8018ed6:	dd59      	ble.n	8018f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018ed8:	140f      	asrs	r7, r1, #16
 8018eda:	d457      	bmi.n	8018f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018edc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018ee0:	42ba      	cmp	r2, r7
 8018ee2:	dd53      	ble.n	8018f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018ee4:	9a01      	ldr	r2, [sp, #4]
 8018ee6:	b22d      	sxth	r5, r5
 8018ee8:	fb07 2505 	mla	r5, r7, r5, r2
 8018eec:	5daa      	ldrb	r2, [r5, r6]
 8018eee:	9d02      	ldr	r5, [sp, #8]
 8018ef0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018ef4:	0e2e      	lsrs	r6, r5, #24
 8018ef6:	d049      	beq.n	8018f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018ef8:	f06f 0201 	mvn.w	r2, #1
 8018efc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018f00:	fb02 f20e 	mul.w	r2, r2, lr
 8018f04:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018f08:	9203      	str	r2, [sp, #12]
 8018f0a:	9a05      	ldr	r2, [sp, #20]
 8018f0c:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018f10:	4356      	muls	r6, r2
 8018f12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018f16:	1c72      	adds	r2, r6, #1
 8018f18:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018f1c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018f20:	b2ed      	uxtb	r5, r5
 8018f22:	1212      	asrs	r2, r2, #8
 8018f24:	fa1f f982 	uxth.w	r9, r2
 8018f28:	43d2      	mvns	r2, r2
 8018f2a:	fb16 f609 	smulbb	r6, r6, r9
 8018f2e:	b2d2      	uxtb	r2, r2
 8018f30:	fb15 f509 	smulbb	r5, r5, r9
 8018f34:	fb07 6702 	mla	r7, r7, r2, r6
 8018f38:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018f3c:	fb1a fa09 	smulbb	sl, sl, r9
 8018f40:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018f44:	b2bf      	uxth	r7, r7
 8018f46:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f4a:	fa5f f888 	uxtb.w	r8, r8
 8018f4e:	fb06 a602 	mla	r6, r6, r2, sl
 8018f52:	fb08 5502 	mla	r5, r8, r2, r5
 8018f56:	1c7a      	adds	r2, r7, #1
 8018f58:	b2b6      	uxth	r6, r6
 8018f5a:	b2ad      	uxth	r5, r5
 8018f5c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018f60:	9a03      	ldr	r2, [sp, #12]
 8018f62:	f105 0a01 	add.w	sl, r5, #1
 8018f66:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018f6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018f6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018f72:	ea4a 0707 	orr.w	r7, sl, r7
 8018f76:	f106 0a01 	add.w	sl, r6, #1
 8018f7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018f7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018f82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018f86:	ea47 070a 	orr.w	r7, r7, sl
 8018f8a:	52a7      	strh	r7, [r4, r2]
 8018f8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018f8e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018f92:	4410      	add	r0, r2
 8018f94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f96:	4411      	add	r1, r2
 8018f98:	e755      	b.n	8018e46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018f9a:	f04f 0800 	mov.w	r8, #0
 8018f9e:	eba3 0208 	sub.w	r2, r3, r8
 8018fa2:	2a00      	cmp	r2, #0
 8018fa4:	f77f af53 	ble.w	8018e4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018fa8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018fac:	140a      	asrs	r2, r1, #16
 8018fae:	9f01      	ldr	r7, [sp, #4]
 8018fb0:	1405      	asrs	r5, r0, #16
 8018fb2:	fb06 7202 	mla	r2, r6, r2, r7
 8018fb6:	5d52      	ldrb	r2, [r2, r5]
 8018fb8:	9d02      	ldr	r5, [sp, #8]
 8018fba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018fbe:	0e2e      	lsrs	r6, r5, #24
 8018fc0:	d044      	beq.n	801904c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018fc2:	9a05      	ldr	r2, [sp, #20]
 8018fc4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018fc8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018fcc:	4356      	muls	r6, r2
 8018fce:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018fd2:	1c72      	adds	r2, r6, #1
 8018fd4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018fd8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018fdc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018fe0:	b2ed      	uxtb	r5, r5
 8018fe2:	1212      	asrs	r2, r2, #8
 8018fe4:	fa1f f982 	uxth.w	r9, r2
 8018fe8:	43d2      	mvns	r2, r2
 8018fea:	fb16 f609 	smulbb	r6, r6, r9
 8018fee:	b2d2      	uxtb	r2, r2
 8018ff0:	fb15 f509 	smulbb	r5, r5, r9
 8018ff4:	fb07 6702 	mla	r7, r7, r2, r6
 8018ff8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018ffc:	fb1a fa09 	smulbb	sl, sl, r9
 8019000:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019004:	b2bf      	uxth	r7, r7
 8019006:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801900a:	fa5f fe8e 	uxtb.w	lr, lr
 801900e:	fb06 a602 	mla	r6, r6, r2, sl
 8019012:	fb0e 5502 	mla	r5, lr, r2, r5
 8019016:	1c7a      	adds	r2, r7, #1
 8019018:	b2b6      	uxth	r6, r6
 801901a:	b2ad      	uxth	r5, r5
 801901c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019020:	f105 0a01 	add.w	sl, r5, #1
 8019024:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019028:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801902c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019030:	ea4a 0707 	orr.w	r7, sl, r7
 8019034:	f106 0a01 	add.w	sl, r6, #1
 8019038:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801903c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019040:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019044:	ea47 070a 	orr.w	r7, r7, sl
 8019048:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801904c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801904e:	f108 0801 	add.w	r8, r8, #1
 8019052:	4410      	add	r0, r2
 8019054:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019056:	4411      	add	r1, r2
 8019058:	e7a1      	b.n	8018f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801905a:	b007      	add	sp, #28
 801905c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019064:	b085      	sub	sp, #20
 8019066:	468b      	mov	fp, r1
 8019068:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801906c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801906e:	9203      	str	r2, [sp, #12]
 8019070:	6841      	ldr	r1, [r0, #4]
 8019072:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019076:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801907a:	fb01 2404 	mla	r4, r1, r4, r2
 801907e:	6802      	ldr	r2, [r0, #0]
 8019080:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019084:	f8de 2000 	ldr.w	r2, [lr]
 8019088:	9200      	str	r2, [sp, #0]
 801908a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801908e:	3204      	adds	r2, #4
 8019090:	9201      	str	r2, [sp, #4]
 8019092:	f1bb 0f00 	cmp.w	fp, #0
 8019096:	dc03      	bgt.n	80190a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019098:	9a03      	ldr	r2, [sp, #12]
 801909a:	2a00      	cmp	r2, #0
 801909c:	f340 8153 	ble.w	8019346 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80190a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80190a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80190a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80190aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190ac:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80190b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80190b4:	2b00      	cmp	r3, #0
 80190b6:	dd0e      	ble.n	80190d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80190b8:	1408      	asrs	r0, r1, #16
 80190ba:	d405      	bmi.n	80190c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190bc:	42b8      	cmp	r0, r7
 80190be:	da03      	bge.n	80190c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190c0:	1410      	asrs	r0, r2, #16
 80190c2:	d401      	bmi.n	80190c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190c4:	42b0      	cmp	r0, r6
 80190c6:	db07      	blt.n	80190d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80190c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80190ca:	3b01      	subs	r3, #1
 80190cc:	3402      	adds	r4, #2
 80190ce:	4401      	add	r1, r0
 80190d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80190d2:	4402      	add	r2, r0
 80190d4:	e7ee      	b.n	80190b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80190d6:	d017      	beq.n	8019108 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80190d8:	1e58      	subs	r0, r3, #1
 80190da:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80190dc:	fb05 1500 	mla	r5, r5, r0, r1
 80190e0:	142d      	asrs	r5, r5, #16
 80190e2:	d409      	bmi.n	80190f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80190e4:	42bd      	cmp	r5, r7
 80190e6:	da07      	bge.n	80190f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80190e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80190ea:	fb05 2000 	mla	r0, r5, r0, r2
 80190ee:	1400      	asrs	r0, r0, #16
 80190f0:	d402      	bmi.n	80190f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80190f2:	42b0      	cmp	r0, r6
 80190f4:	f2c0 80bc 	blt.w	8019270 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80190f8:	2600      	movs	r6, #0
 80190fa:	1998      	adds	r0, r3, r6
 80190fc:	2800      	cmp	r0, #0
 80190fe:	dc3e      	bgt.n	801917e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019100:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019104:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019108:	f1bb 0f00 	cmp.w	fp, #0
 801910c:	f340 811b 	ble.w	8019346 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019110:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019116:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801911a:	f1bb 0b01 	subs.w	fp, fp, #1
 801911e:	eeb0 6a62 	vmov.f32	s12, s5
 8019122:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019126:	ee31 1a05 	vadd.f32	s2, s2, s10
 801912a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801912e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019132:	eeb0 6a43 	vmov.f32	s12, s6
 8019136:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801913a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801913e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019142:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019146:	ee77 2a62 	vsub.f32	s5, s14, s5
 801914a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801914e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019152:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019156:	ee12 2a90 	vmov	r2, s5
 801915a:	eef0 2a47 	vmov.f32	s5, s14
 801915e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019162:	ee13 2a10 	vmov	r2, s6
 8019166:	9311      	str	r3, [sp, #68]	; 0x44
 8019168:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801916a:	eeb0 3a67 	vmov.f32	s6, s15
 801916e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019172:	9a03      	ldr	r2, [sp, #12]
 8019174:	9312      	str	r3, [sp, #72]	; 0x48
 8019176:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019178:	bf08      	it	eq
 801917a:	4613      	moveq	r3, r2
 801917c:	e789      	b.n	8019092 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801917e:	140f      	asrs	r7, r1, #16
 8019180:	d426      	bmi.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019182:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019186:	42bd      	cmp	r5, r7
 8019188:	dd22      	ble.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801918a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801918e:	d41f      	bmi.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019190:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019194:	4560      	cmp	r0, ip
 8019196:	dd1b      	ble.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019198:	9800      	ldr	r0, [sp, #0]
 801919a:	b22d      	sxth	r5, r5
 801919c:	fb0c 0505 	mla	r5, ip, r5, r0
 80191a0:	5de8      	ldrb	r0, [r5, r7]
 80191a2:	9d01      	ldr	r5, [sp, #4]
 80191a4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80191a8:	0e07      	lsrs	r7, r0, #24
 80191aa:	2fff      	cmp	r7, #255	; 0xff
 80191ac:	d116      	bne.n	80191dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80191ae:	f06f 0501 	mvn.w	r5, #1
 80191b2:	fb05 f706 	mul.w	r7, r5, r6
 80191b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80191ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80191be:	0945      	lsrs	r5, r0, #5
 80191c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80191c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80191c8:	ea4c 0505 	orr.w	r5, ip, r5
 80191cc:	4305      	orrs	r5, r0
 80191ce:	53e5      	strh	r5, [r4, r7]
 80191d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80191d2:	3e01      	subs	r6, #1
 80191d4:	4401      	add	r1, r0
 80191d6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80191d8:	4402      	add	r2, r0
 80191da:	e78e      	b.n	80190fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80191dc:	b2fd      	uxtb	r5, r7
 80191de:	2f00      	cmp	r7, #0
 80191e0:	d0f6      	beq.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80191e2:	f06f 0701 	mvn.w	r7, #1
 80191e6:	fa1f f985 	uxth.w	r9, r5
 80191ea:	43ed      	mvns	r5, r5
 80191ec:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80191f0:	4377      	muls	r7, r6
 80191f2:	fb1a fa09 	smulbb	sl, sl, r9
 80191f6:	b2ed      	uxtb	r5, r5
 80191f8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80191fc:	9702      	str	r7, [sp, #8]
 80191fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019202:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019206:	fb17 f709 	smulbb	r7, r7, r9
 801920a:	b2c0      	uxtb	r0, r0
 801920c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019210:	fb10 f009 	smulbb	r0, r0, r9
 8019214:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019218:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801921c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019220:	fa1f fc8c 	uxth.w	ip, ip
 8019224:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019228:	fa5f f888 	uxtb.w	r8, r8
 801922c:	fb07 a705 	mla	r7, r7, r5, sl
 8019230:	fb08 0005 	mla	r0, r8, r5, r0
 8019234:	f10c 0501 	add.w	r5, ip, #1
 8019238:	b2bf      	uxth	r7, r7
 801923a:	b280      	uxth	r0, r0
 801923c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019240:	f100 0a01 	add.w	sl, r0, #1
 8019244:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019248:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801924c:	9802      	ldr	r0, [sp, #8]
 801924e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019252:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019256:	f107 0a01 	add.w	sl, r7, #1
 801925a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801925e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019262:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019266:	ea4c 0c0a 	orr.w	ip, ip, sl
 801926a:	f824 c000 	strh.w	ip, [r4, r0]
 801926e:	e7af      	b.n	80191d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019270:	f04f 0800 	mov.w	r8, #0
 8019274:	eba3 0008 	sub.w	r0, r3, r8
 8019278:	2800      	cmp	r0, #0
 801927a:	f77f af41 	ble.w	8019100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801927e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019282:	1410      	asrs	r0, r2, #16
 8019284:	9f00      	ldr	r7, [sp, #0]
 8019286:	140d      	asrs	r5, r1, #16
 8019288:	fb06 7000 	mla	r0, r6, r0, r7
 801928c:	5d40      	ldrb	r0, [r0, r5]
 801928e:	9d01      	ldr	r5, [sp, #4]
 8019290:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019294:	0e2e      	lsrs	r6, r5, #24
 8019296:	2eff      	cmp	r6, #255	; 0xff
 8019298:	d112      	bne.n	80192c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801929a:	482c      	ldr	r0, [pc, #176]	; (801934c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801929c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80192a0:	0968      	lsrs	r0, r5, #5
 80192a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80192a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80192aa:	4330      	orrs	r0, r6
 80192ac:	4328      	orrs	r0, r5
 80192ae:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80192b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80192b4:	f108 0801 	add.w	r8, r8, #1
 80192b8:	4401      	add	r1, r0
 80192ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 80192bc:	4402      	add	r2, r0
 80192be:	e7d9      	b.n	8019274 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192c0:	b2f0      	uxtb	r0, r6
 80192c2:	2e00      	cmp	r6, #0
 80192c4:	d0f5      	beq.n	80192b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80192c6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80192ca:	fa1f f980 	uxth.w	r9, r0
 80192ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80192d2:	43c0      	mvns	r0, r0
 80192d4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80192d8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80192dc:	fb16 f609 	smulbb	r6, r6, r9
 80192e0:	b2c0      	uxtb	r0, r0
 80192e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192e6:	b2ed      	uxtb	r5, r5
 80192e8:	fb1a fa09 	smulbb	sl, sl, r9
 80192ec:	fb07 6700 	mla	r7, r7, r0, r6
 80192f0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80192f4:	fb15 f509 	smulbb	r5, r5, r9
 80192f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80192fc:	b2bf      	uxth	r7, r7
 80192fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019302:	fa5f fc8c 	uxtb.w	ip, ip
 8019306:	fb06 a600 	mla	r6, r6, r0, sl
 801930a:	fb0c 5500 	mla	r5, ip, r0, r5
 801930e:	1c78      	adds	r0, r7, #1
 8019310:	b2b6      	uxth	r6, r6
 8019312:	b2ad      	uxth	r5, r5
 8019314:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019318:	f105 0a01 	add.w	sl, r5, #1
 801931c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019320:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019324:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019328:	ea4a 0707 	orr.w	r7, sl, r7
 801932c:	f106 0a01 	add.w	sl, r6, #1
 8019330:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019334:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019338:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801933c:	ea47 070a 	orr.w	r7, r7, sl
 8019340:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019344:	e7b5      	b.n	80192b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019346:	b005      	add	sp, #20
 8019348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801934c:	fffff800 	.word	0xfffff800

08019350 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019354:	b087      	sub	sp, #28
 8019356:	468b      	mov	fp, r1
 8019358:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801935c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801935e:	9204      	str	r2, [sp, #16]
 8019360:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019364:	6861      	ldr	r1, [r4, #4]
 8019366:	9205      	str	r2, [sp, #20]
 8019368:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801936c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019370:	fb01 2000 	mla	r0, r1, r0, r2
 8019374:	6822      	ldr	r2, [r4, #0]
 8019376:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801937a:	f8de 2000 	ldr.w	r2, [lr]
 801937e:	9201      	str	r2, [sp, #4]
 8019380:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019384:	9202      	str	r2, [sp, #8]
 8019386:	f1bb 0f00 	cmp.w	fp, #0
 801938a:	dc03      	bgt.n	8019394 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801938c:	9a04      	ldr	r2, [sp, #16]
 801938e:	2a00      	cmp	r2, #0
 8019390:	f340 8142 	ble.w	8019618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019394:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019396:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801939a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801939e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80193a0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80193a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80193a8:	2b00      	cmp	r3, #0
 80193aa:	dd0e      	ble.n	80193ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193ac:	140c      	asrs	r4, r1, #16
 80193ae:	d405      	bmi.n	80193bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80193b0:	42bc      	cmp	r4, r7
 80193b2:	da03      	bge.n	80193bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80193b4:	1414      	asrs	r4, r2, #16
 80193b6:	d401      	bmi.n	80193bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80193b8:	42b4      	cmp	r4, r6
 80193ba:	db07      	blt.n	80193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80193bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80193be:	3b01      	subs	r3, #1
 80193c0:	3002      	adds	r0, #2
 80193c2:	4421      	add	r1, r4
 80193c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80193c6:	4422      	add	r2, r4
 80193c8:	e7ee      	b.n	80193a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80193ca:	d019      	beq.n	8019400 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80193cc:	1e5c      	subs	r4, r3, #1
 80193ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80193d0:	fb05 1504 	mla	r5, r5, r4, r1
 80193d4:	142d      	asrs	r5, r5, #16
 80193d6:	d409      	bmi.n	80193ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80193d8:	42bd      	cmp	r5, r7
 80193da:	da07      	bge.n	80193ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80193dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80193de:	fb05 2404 	mla	r4, r5, r4, r2
 80193e2:	1424      	asrs	r4, r4, #16
 80193e4:	d402      	bmi.n	80193ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80193e6:	42b4      	cmp	r4, r6
 80193e8:	f2c0 80b1 	blt.w	801954e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80193ec:	f04f 0800 	mov.w	r8, #0
 80193f0:	eb03 0408 	add.w	r4, r3, r8
 80193f4:	2c00      	cmp	r4, #0
 80193f6:	dc3e      	bgt.n	8019476 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80193f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80193fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019400:	f1bb 0f00 	cmp.w	fp, #0
 8019404:	f340 8108 	ble.w	8019618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019408:	ee30 0a04 	vadd.f32	s0, s0, s8
 801940c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801940e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019412:	f1bb 0b01 	subs.w	fp, fp, #1
 8019416:	eeb0 6a62 	vmov.f32	s12, s5
 801941a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801941e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019422:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019426:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801942a:	eeb0 6a43 	vmov.f32	s12, s6
 801942e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019432:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801943a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801943e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019442:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019446:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801944a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801944e:	ee12 2a90 	vmov	r2, s5
 8019452:	eef0 2a47 	vmov.f32	s5, s14
 8019456:	fb92 f3f3 	sdiv	r3, r2, r3
 801945a:	ee13 2a10 	vmov	r2, s6
 801945e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019462:	eeb0 3a67 	vmov.f32	s6, s15
 8019466:	fb92 f3f3 	sdiv	r3, r2, r3
 801946a:	9a04      	ldr	r2, [sp, #16]
 801946c:	9314      	str	r3, [sp, #80]	; 0x50
 801946e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019470:	bf08      	it	eq
 8019472:	4613      	moveq	r3, r2
 8019474:	e787      	b.n	8019386 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019476:	140e      	asrs	r6, r1, #16
 8019478:	d462      	bmi.n	8019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801947a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801947e:	42b5      	cmp	r5, r6
 8019480:	dd5e      	ble.n	8019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019482:	1417      	asrs	r7, r2, #16
 8019484:	d45c      	bmi.n	8019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019486:	f8de 400c 	ldr.w	r4, [lr, #12]
 801948a:	42bc      	cmp	r4, r7
 801948c:	dd58      	ble.n	8019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801948e:	b22d      	sxth	r5, r5
 8019490:	9c02      	ldr	r4, [sp, #8]
 8019492:	fb07 6505 	mla	r5, r7, r5, r6
 8019496:	5d66      	ldrb	r6, [r4, r5]
 8019498:	2e00      	cmp	r6, #0
 801949a:	d051      	beq.n	8019540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801949c:	9c01      	ldr	r4, [sp, #4]
 801949e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80194a2:	f06f 0401 	mvn.w	r4, #1
 80194a6:	fb04 f408 	mul.w	r4, r4, r8
 80194aa:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80194ae:	5b05      	ldrh	r5, [r0, r4]
 80194b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80194b4:	9403      	str	r4, [sp, #12]
 80194b6:	9c05      	ldr	r4, [sp, #20]
 80194b8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80194bc:	4366      	muls	r6, r4
 80194be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80194c2:	1c74      	adds	r4, r6, #1
 80194c4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80194c8:	122e      	asrs	r6, r5, #8
 80194ca:	1224      	asrs	r4, r4, #8
 80194cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80194d0:	00ed      	lsls	r5, r5, #3
 80194d2:	b2a7      	uxth	r7, r4
 80194d4:	43e4      	mvns	r4, r4
 80194d6:	b2ed      	uxtb	r5, r5
 80194d8:	b2e4      	uxtb	r4, r4
 80194da:	fb16 f604 	smulbb	r6, r6, r4
 80194de:	fb15 f504 	smulbb	r5, r5, r4
 80194e2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80194e6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80194ea:	fb1a fa04 	smulbb	sl, sl, r4
 80194ee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80194f2:	fa1f fc8c 	uxth.w	ip, ip
 80194f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80194fa:	fa5f f989 	uxtb.w	r9, r9
 80194fe:	fb06 a607 	mla	r6, r6, r7, sl
 8019502:	f10c 0401 	add.w	r4, ip, #1
 8019506:	fb09 5507 	mla	r5, r9, r7, r5
 801950a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801950e:	9c03      	ldr	r4, [sp, #12]
 8019510:	b2ad      	uxth	r5, r5
 8019512:	b2b6      	uxth	r6, r6
 8019514:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019518:	f105 0a01 	add.w	sl, r5, #1
 801951c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019520:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019524:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019528:	f106 0a01 	add.w	sl, r6, #1
 801952c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019530:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019534:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019538:	ea4c 0c0a 	orr.w	ip, ip, sl
 801953c:	f820 c004 	strh.w	ip, [r0, r4]
 8019540:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019542:	f108 38ff 	add.w	r8, r8, #4294967295
 8019546:	4421      	add	r1, r4
 8019548:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801954a:	4422      	add	r2, r4
 801954c:	e750      	b.n	80193f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801954e:	f04f 0900 	mov.w	r9, #0
 8019552:	eba3 0409 	sub.w	r4, r3, r9
 8019556:	2c00      	cmp	r4, #0
 8019558:	f77f af4e 	ble.w	80193f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801955c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019560:	140d      	asrs	r5, r1, #16
 8019562:	1414      	asrs	r4, r2, #16
 8019564:	fb06 5404 	mla	r4, r6, r4, r5
 8019568:	9d02      	ldr	r5, [sp, #8]
 801956a:	5d2e      	ldrb	r6, [r5, r4]
 801956c:	2e00      	cmp	r6, #0
 801956e:	d04c      	beq.n	801960a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019570:	9d01      	ldr	r5, [sp, #4]
 8019572:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019576:	9c05      	ldr	r4, [sp, #20]
 8019578:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801957c:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019580:	4366      	muls	r6, r4
 8019582:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019586:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801958a:	1c74      	adds	r4, r6, #1
 801958c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019590:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019594:	122e      	asrs	r6, r5, #8
 8019596:	1224      	asrs	r4, r4, #8
 8019598:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801959c:	00ed      	lsls	r5, r5, #3
 801959e:	b2a7      	uxth	r7, r4
 80195a0:	43e4      	mvns	r4, r4
 80195a2:	b2ed      	uxtb	r5, r5
 80195a4:	b2e4      	uxtb	r4, r4
 80195a6:	fb16 f604 	smulbb	r6, r6, r4
 80195aa:	fb15 f504 	smulbb	r5, r5, r4
 80195ae:	fb0c 6c07 	mla	ip, ip, r7, r6
 80195b2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80195b6:	fb1a fa04 	smulbb	sl, sl, r4
 80195ba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80195be:	fa1f fc8c 	uxth.w	ip, ip
 80195c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195c6:	fa5f f888 	uxtb.w	r8, r8
 80195ca:	fb06 a607 	mla	r6, r6, r7, sl
 80195ce:	f10c 0401 	add.w	r4, ip, #1
 80195d2:	fb08 5507 	mla	r5, r8, r7, r5
 80195d6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80195da:	b2ad      	uxth	r5, r5
 80195dc:	b2b6      	uxth	r6, r6
 80195de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80195e2:	f105 0a01 	add.w	sl, r5, #1
 80195e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80195ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195ee:	ea4a 0c0c 	orr.w	ip, sl, ip
 80195f2:	f106 0a01 	add.w	sl, r6, #1
 80195f6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019602:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019606:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801960a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801960c:	f109 0901 	add.w	r9, r9, #1
 8019610:	4421      	add	r1, r4
 8019612:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019614:	4422      	add	r2, r4
 8019616:	e79c      	b.n	8019552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019618:	b007      	add	sp, #28
 801961a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801961e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801961e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019622:	b085      	sub	sp, #20
 8019624:	468b      	mov	fp, r1
 8019626:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801962a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801962c:	9203      	str	r2, [sp, #12]
 801962e:	6861      	ldr	r1, [r4, #4]
 8019630:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019634:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019638:	fb01 2000 	mla	r0, r1, r0, r2
 801963c:	6822      	ldr	r2, [r4, #0]
 801963e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019642:	f8d8 2000 	ldr.w	r2, [r8]
 8019646:	9200      	str	r2, [sp, #0]
 8019648:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801964c:	9201      	str	r2, [sp, #4]
 801964e:	f1bb 0f00 	cmp.w	fp, #0
 8019652:	dc03      	bgt.n	801965c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019654:	9a03      	ldr	r2, [sp, #12]
 8019656:	2a00      	cmp	r2, #0
 8019658:	f340 8146 	ble.w	80198e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801965c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801965e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019662:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019666:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019668:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801966c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019670:	2b00      	cmp	r3, #0
 8019672:	dd0e      	ble.n	8019692 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019674:	140c      	asrs	r4, r1, #16
 8019676:	d405      	bmi.n	8019684 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019678:	42bc      	cmp	r4, r7
 801967a:	da03      	bge.n	8019684 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801967c:	1414      	asrs	r4, r2, #16
 801967e:	d401      	bmi.n	8019684 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019680:	42b4      	cmp	r4, r6
 8019682:	db07      	blt.n	8019694 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019684:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019686:	3b01      	subs	r3, #1
 8019688:	3002      	adds	r0, #2
 801968a:	4421      	add	r1, r4
 801968c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801968e:	4422      	add	r2, r4
 8019690:	e7ee      	b.n	8019670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019692:	d017      	beq.n	80196c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019694:	1e5c      	subs	r4, r3, #1
 8019696:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019698:	fb05 1504 	mla	r5, r5, r4, r1
 801969c:	142d      	asrs	r5, r5, #16
 801969e:	d409      	bmi.n	80196b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196a0:	42bd      	cmp	r5, r7
 80196a2:	da07      	bge.n	80196b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80196a6:	fb05 2404 	mla	r4, r5, r4, r2
 80196aa:	1424      	asrs	r4, r4, #16
 80196ac:	d402      	bmi.n	80196b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196ae:	42b4      	cmp	r4, r6
 80196b0:	f2c0 80b3 	blt.w	801981a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80196b4:	2600      	movs	r6, #0
 80196b6:	199c      	adds	r4, r3, r6
 80196b8:	2c00      	cmp	r4, #0
 80196ba:	dc3e      	bgt.n	801973a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80196bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80196c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80196c4:	f1bb 0f00 	cmp.w	fp, #0
 80196c8:	f340 810e 	ble.w	80198e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80196cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80196d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80196d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80196d6:	f1bb 0b01 	subs.w	fp, fp, #1
 80196da:	eeb0 6a62 	vmov.f32	s12, s5
 80196de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80196e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80196ea:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80196ee:	eeb0 6a43 	vmov.f32	s12, s6
 80196f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80196f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80196fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80196fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019702:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019706:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801970a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801970e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019712:	ee12 2a90 	vmov	r2, s5
 8019716:	eef0 2a47 	vmov.f32	s5, s14
 801971a:	fb92 f3f3 	sdiv	r3, r2, r3
 801971e:	ee13 2a10 	vmov	r2, s6
 8019722:	9311      	str	r3, [sp, #68]	; 0x44
 8019724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019726:	eeb0 3a67 	vmov.f32	s6, s15
 801972a:	fb92 f3f3 	sdiv	r3, r2, r3
 801972e:	9a03      	ldr	r2, [sp, #12]
 8019730:	9312      	str	r3, [sp, #72]	; 0x48
 8019732:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019734:	bf08      	it	eq
 8019736:	4613      	moveq	r3, r2
 8019738:	e789      	b.n	801964e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801973a:	140f      	asrs	r7, r1, #16
 801973c:	d418      	bmi.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801973e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019742:	42bd      	cmp	r5, r7
 8019744:	dd14      	ble.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019746:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801974a:	d411      	bmi.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801974c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019750:	4564      	cmp	r4, ip
 8019752:	dd0d      	ble.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019754:	b22d      	sxth	r5, r5
 8019756:	9c01      	ldr	r4, [sp, #4]
 8019758:	fb0c 7505 	mla	r5, ip, r5, r7
 801975c:	5d64      	ldrb	r4, [r4, r5]
 801975e:	2cff      	cmp	r4, #255	; 0xff
 8019760:	d10c      	bne.n	801977c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019762:	9c00      	ldr	r4, [sp, #0]
 8019764:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019768:	f06f 0401 	mvn.w	r4, #1
 801976c:	4374      	muls	r4, r6
 801976e:	5305      	strh	r5, [r0, r4]
 8019770:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019772:	3e01      	subs	r6, #1
 8019774:	4421      	add	r1, r4
 8019776:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019778:	4422      	add	r2, r4
 801977a:	e79c      	b.n	80196b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801977c:	2c00      	cmp	r4, #0
 801977e:	d0f7      	beq.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019780:	9f00      	ldr	r7, [sp, #0]
 8019782:	fa1f fc84 	uxth.w	ip, r4
 8019786:	43e4      	mvns	r4, r4
 8019788:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801978c:	f06f 0501 	mvn.w	r5, #1
 8019790:	b2e4      	uxtb	r4, r4
 8019792:	4375      	muls	r5, r6
 8019794:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019798:	9502      	str	r5, [sp, #8]
 801979a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801979e:	5b45      	ldrh	r5, [r0, r5]
 80197a0:	122f      	asrs	r7, r5, #8
 80197a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80197a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80197aa:	00ed      	lsls	r5, r5, #3
 80197ac:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80197b0:	fb17 f704 	smulbb	r7, r7, r4
 80197b4:	b2ed      	uxtb	r5, r5
 80197b6:	fb1a fa04 	smulbb	sl, sl, r4
 80197ba:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80197be:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80197c2:	fb15 f504 	smulbb	r5, r5, r4
 80197c6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80197ca:	fa1f fe8e 	uxth.w	lr, lr
 80197ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80197d2:	fa5f f989 	uxtb.w	r9, r9
 80197d6:	fb07 a70c 	mla	r7, r7, ip, sl
 80197da:	f10e 0401 	add.w	r4, lr, #1
 80197de:	fb09 550c 	mla	r5, r9, ip, r5
 80197e2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80197e6:	9c02      	ldr	r4, [sp, #8]
 80197e8:	b2ad      	uxth	r5, r5
 80197ea:	b2bf      	uxth	r7, r7
 80197ec:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80197f0:	f105 0a01 	add.w	sl, r5, #1
 80197f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80197f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80197fc:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019800:	f107 0a01 	add.w	sl, r7, #1
 8019804:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019808:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801980c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019810:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019814:	f820 e004 	strh.w	lr, [r0, r4]
 8019818:	e7aa      	b.n	8019770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801981a:	f04f 0900 	mov.w	r9, #0
 801981e:	eba3 0409 	sub.w	r4, r3, r9
 8019822:	2c00      	cmp	r4, #0
 8019824:	f77f af4a 	ble.w	80196bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019828:	1414      	asrs	r4, r2, #16
 801982a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801982e:	140d      	asrs	r5, r1, #16
 8019830:	fb06 5504 	mla	r5, r6, r4, r5
 8019834:	9c01      	ldr	r4, [sp, #4]
 8019836:	5d64      	ldrb	r4, [r4, r5]
 8019838:	2cff      	cmp	r4, #255	; 0xff
 801983a:	d10b      	bne.n	8019854 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801983c:	9c00      	ldr	r4, [sp, #0]
 801983e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019842:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019846:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019848:	f109 0901 	add.w	r9, r9, #1
 801984c:	4421      	add	r1, r4
 801984e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019850:	4422      	add	r2, r4
 8019852:	e7e4      	b.n	801981e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019854:	2c00      	cmp	r4, #0
 8019856:	d0f6      	beq.n	8019846 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019858:	9e00      	ldr	r6, [sp, #0]
 801985a:	b2a7      	uxth	r7, r4
 801985c:	43e4      	mvns	r4, r4
 801985e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019862:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019866:	b2e4      	uxtb	r4, r4
 8019868:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801986c:	122e      	asrs	r6, r5, #8
 801986e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019872:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019876:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801987a:	00ed      	lsls	r5, r5, #3
 801987c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019880:	fb16 f604 	smulbb	r6, r6, r4
 8019884:	b2ed      	uxtb	r5, r5
 8019886:	fb1a fa04 	smulbb	sl, sl, r4
 801988a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801988e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019892:	fb15 f504 	smulbb	r5, r5, r4
 8019896:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801989a:	fa1f fc8c 	uxth.w	ip, ip
 801989e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80198a2:	fa5f fe8e 	uxtb.w	lr, lr
 80198a6:	fb06 a607 	mla	r6, r6, r7, sl
 80198aa:	f10c 0401 	add.w	r4, ip, #1
 80198ae:	fb0e 5507 	mla	r5, lr, r7, r5
 80198b2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80198b6:	b2ad      	uxth	r5, r5
 80198b8:	b2b6      	uxth	r6, r6
 80198ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198be:	f105 0a01 	add.w	sl, r5, #1
 80198c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80198c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198ca:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198ce:	f106 0a01 	add.w	sl, r6, #1
 80198d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80198d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198de:	ea4c 0c0a 	orr.w	ip, ip, sl
 80198e2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80198e6:	e7ae      	b.n	8019846 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80198e8:	b005      	add	sp, #20
 80198ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080198ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198f2:	b085      	sub	sp, #20
 80198f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80198f6:	9203      	str	r2, [sp, #12]
 80198f8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80198fc:	9100      	str	r1, [sp, #0]
 80198fe:	9201      	str	r2, [sp, #4]
 8019900:	6841      	ldr	r1, [r0, #4]
 8019902:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019906:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801990a:	fb01 2404 	mla	r4, r1, r4, r2
 801990e:	6802      	ldr	r2, [r0, #0]
 8019910:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019914:	f8de 2000 	ldr.w	r2, [lr]
 8019918:	9202      	str	r2, [sp, #8]
 801991a:	9a01      	ldr	r2, [sp, #4]
 801991c:	43d6      	mvns	r6, r2
 801991e:	b2f6      	uxtb	r6, r6
 8019920:	9a00      	ldr	r2, [sp, #0]
 8019922:	2a00      	cmp	r2, #0
 8019924:	dc03      	bgt.n	801992e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019926:	9a03      	ldr	r2, [sp, #12]
 8019928:	2a00      	cmp	r2, #0
 801992a:	f340 8124 	ble.w	8019b76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801992e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019930:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019934:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019938:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801993a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801993e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019942:	2b00      	cmp	r3, #0
 8019944:	dd0e      	ble.n	8019964 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019946:	1408      	asrs	r0, r1, #16
 8019948:	d405      	bmi.n	8019956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801994a:	4560      	cmp	r0, ip
 801994c:	da03      	bge.n	8019956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801994e:	1410      	asrs	r0, r2, #16
 8019950:	d401      	bmi.n	8019956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019952:	42b8      	cmp	r0, r7
 8019954:	db07      	blt.n	8019966 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019956:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019958:	3b01      	subs	r3, #1
 801995a:	3402      	adds	r4, #2
 801995c:	4401      	add	r1, r0
 801995e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019960:	4402      	add	r2, r0
 8019962:	e7ee      	b.n	8019942 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019964:	d06e      	beq.n	8019a44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019966:	1e58      	subs	r0, r3, #1
 8019968:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801996a:	fb05 1500 	mla	r5, r5, r0, r1
 801996e:	142d      	asrs	r5, r5, #16
 8019970:	d45c      	bmi.n	8019a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019972:	4565      	cmp	r5, ip
 8019974:	da5a      	bge.n	8019a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019976:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019978:	fb05 2000 	mla	r0, r5, r0, r2
 801997c:	1400      	asrs	r0, r0, #16
 801997e:	d455      	bmi.n	8019a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019980:	42b8      	cmp	r0, r7
 8019982:	da53      	bge.n	8019a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019984:	4699      	mov	r9, r3
 8019986:	46a2      	mov	sl, r4
 8019988:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801998c:	f1b9 0f00 	cmp.w	r9, #0
 8019990:	dd54      	ble.n	8019a3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019992:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019996:	140d      	asrs	r5, r1, #16
 8019998:	1410      	asrs	r0, r2, #16
 801999a:	f109 39ff 	add.w	r9, r9, #4294967295
 801999e:	fb07 5000 	mla	r0, r7, r0, r5
 80199a2:	9d02      	ldr	r5, [sp, #8]
 80199a4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80199a8:	f8ba 5000 	ldrh.w	r5, [sl]
 80199ac:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80199b0:	122f      	asrs	r7, r5, #8
 80199b2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80199b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80199ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80199be:	00ed      	lsls	r5, r5, #3
 80199c0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80199c4:	fb17 f706 	smulbb	r7, r7, r6
 80199c8:	b2ed      	uxtb	r5, r5
 80199ca:	fb18 f806 	smulbb	r8, r8, r6
 80199ce:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80199d2:	10c7      	asrs	r7, r0, #3
 80199d4:	fb15 f506 	smulbb	r5, r5, r6
 80199d8:	00c0      	lsls	r0, r0, #3
 80199da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199de:	fa1f fc8c 	uxth.w	ip, ip
 80199e2:	b2c0      	uxtb	r0, r0
 80199e4:	fb07 870b 	mla	r7, r7, fp, r8
 80199e8:	fb00 500b 	mla	r0, r0, fp, r5
 80199ec:	f10c 0501 	add.w	r5, ip, #1
 80199f0:	b2bf      	uxth	r7, r7
 80199f2:	b280      	uxth	r0, r0
 80199f4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80199f8:	f107 0801 	add.w	r8, r7, #1
 80199fc:	1c45      	adds	r5, r0, #1
 80199fe:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019a02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a06:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019a0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019a0c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019a10:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019a14:	4401      	add	r1, r0
 8019a16:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019a1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019a1c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019a20:	4402      	add	r2, r0
 8019a22:	ea4c 0c08 	orr.w	ip, ip, r8
 8019a26:	f82a cb02 	strh.w	ip, [sl], #2
 8019a2a:	e7af      	b.n	801998c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019a2c:	f04f 0800 	mov.w	r8, #0
 8019a30:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019a34:	eb03 0008 	add.w	r0, r3, r8
 8019a38:	2800      	cmp	r0, #0
 8019a3a:	dc41      	bgt.n	8019ac0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019a3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a40:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019a44:	9b00      	ldr	r3, [sp, #0]
 8019a46:	2b00      	cmp	r3, #0
 8019a48:	f340 8095 	ble.w	8019b76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019a4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019a50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a5a:	eef0 6a62 	vmov.f32	s13, s5
 8019a5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019a62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a6a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019a6e:	eef0 6a43 	vmov.f32	s13, s6
 8019a72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a76:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019a7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a92:	ee12 2a90 	vmov	r2, s5
 8019a96:	eef0 2a47 	vmov.f32	s5, s14
 8019a9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a9e:	ee13 2a10 	vmov	r2, s6
 8019aa2:	9311      	str	r3, [sp, #68]	; 0x44
 8019aa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aa6:	eeb0 3a67 	vmov.f32	s6, s15
 8019aaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8019aae:	9312      	str	r3, [sp, #72]	; 0x48
 8019ab0:	9b00      	ldr	r3, [sp, #0]
 8019ab2:	9a03      	ldr	r2, [sp, #12]
 8019ab4:	3b01      	subs	r3, #1
 8019ab6:	9300      	str	r3, [sp, #0]
 8019ab8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aba:	bf08      	it	eq
 8019abc:	4613      	moveq	r3, r2
 8019abe:	e72f      	b.n	8019920 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019ac0:	140f      	asrs	r7, r1, #16
 8019ac2:	d451      	bmi.n	8019b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ac4:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019ac8:	42bd      	cmp	r5, r7
 8019aca:	dd4d      	ble.n	8019b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019acc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019ad0:	d44a      	bmi.n	8019b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ad2:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ad6:	4560      	cmp	r0, ip
 8019ad8:	dd46      	ble.n	8019b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ada:	b22d      	sxth	r5, r5
 8019adc:	9802      	ldr	r0, [sp, #8]
 8019ade:	fb0c 7505 	mla	r5, ip, r5, r7
 8019ae2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019ae6:	f06f 0501 	mvn.w	r5, #1
 8019aea:	fb05 fb08 	mul.w	fp, r5, r8
 8019aee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019af2:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019af6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019afa:	122f      	asrs	r7, r5, #8
 8019afc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019b00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b04:	00ed      	lsls	r5, r5, #3
 8019b06:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019b0a:	fb17 f706 	smulbb	r7, r7, r6
 8019b0e:	b2ed      	uxtb	r5, r5
 8019b10:	fb19 f906 	smulbb	r9, r9, r6
 8019b14:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019b18:	10c7      	asrs	r7, r0, #3
 8019b1a:	fb15 f506 	smulbb	r5, r5, r6
 8019b1e:	00c0      	lsls	r0, r0, #3
 8019b20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b24:	fa1f fc8c 	uxth.w	ip, ip
 8019b28:	b2c0      	uxtb	r0, r0
 8019b2a:	fb07 970a 	mla	r7, r7, sl, r9
 8019b2e:	fb00 500a 	mla	r0, r0, sl, r5
 8019b32:	f10c 0501 	add.w	r5, ip, #1
 8019b36:	b2bf      	uxth	r7, r7
 8019b38:	b280      	uxth	r0, r0
 8019b3a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b3e:	f107 0901 	add.w	r9, r7, #1
 8019b42:	1c45      	adds	r5, r0, #1
 8019b44:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019b48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019b50:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019b54:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019b5c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019b60:	ea4c 0c09 	orr.w	ip, ip, r9
 8019b64:	f824 c00b 	strh.w	ip, [r4, fp]
 8019b68:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b6a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b6e:	4401      	add	r1, r0
 8019b70:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019b72:	4402      	add	r2, r0
 8019b74:	e75e      	b.n	8019a34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019b76:	b005      	add	sp, #20
 8019b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b80:	b085      	sub	sp, #20
 8019b82:	4693      	mov	fp, r2
 8019b84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b88:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019b8a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019b8c:	6870      	ldr	r0, [r6, #4]
 8019b8e:	9101      	str	r1, [sp, #4]
 8019b90:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019b94:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019b98:	fb00 2404 	mla	r4, r0, r4, r2
 8019b9c:	6832      	ldr	r2, [r6, #0]
 8019b9e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ba2:	682a      	ldr	r2, [r5, #0]
 8019ba4:	9202      	str	r2, [sp, #8]
 8019ba6:	9a01      	ldr	r2, [sp, #4]
 8019ba8:	2a00      	cmp	r2, #0
 8019baa:	dc03      	bgt.n	8019bb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019bac:	f1bb 0f00 	cmp.w	fp, #0
 8019bb0:	f340 809a 	ble.w	8019ce8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019bb4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019bb6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019bba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019bbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bc0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019bc4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bc8:	2b00      	cmp	r3, #0
 8019bca:	dd0c      	ble.n	8019be6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019bcc:	1406      	asrs	r6, r0, #16
 8019bce:	d405      	bmi.n	8019bdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019bd0:	454e      	cmp	r6, r9
 8019bd2:	da03      	bge.n	8019bdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019bd4:	1416      	asrs	r6, r2, #16
 8019bd6:	d401      	bmi.n	8019bdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019bd8:	4546      	cmp	r6, r8
 8019bda:	db05      	blt.n	8019be8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019bdc:	4470      	add	r0, lr
 8019bde:	4462      	add	r2, ip
 8019be0:	3b01      	subs	r3, #1
 8019be2:	3402      	adds	r4, #2
 8019be4:	e7f0      	b.n	8019bc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019be6:	d00f      	beq.n	8019c08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019be8:	1e5e      	subs	r6, r3, #1
 8019bea:	fb0e 0706 	mla	r7, lr, r6, r0
 8019bee:	143f      	asrs	r7, r7, #16
 8019bf0:	d541      	bpl.n	8019c76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019bf2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019bf6:	4698      	mov	r8, r3
 8019bf8:	9603      	str	r6, [sp, #12]
 8019bfa:	f1b8 0f00 	cmp.w	r8, #0
 8019bfe:	dc56      	bgt.n	8019cae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019c00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019c08:	9b01      	ldr	r3, [sp, #4]
 8019c0a:	2b00      	cmp	r3, #0
 8019c0c:	dd6c      	ble.n	8019ce8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019c0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c18:	eeb0 6a62 	vmov.f32	s12, s5
 8019c1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c28:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019c2c:	eeb0 6a43 	vmov.f32	s12, s6
 8019c30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c34:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019c38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c50:	ee12 2a90 	vmov	r2, s5
 8019c54:	eef0 2a47 	vmov.f32	s5, s14
 8019c58:	fb92 fef3 	sdiv	lr, r2, r3
 8019c5c:	ee13 2a10 	vmov	r2, s6
 8019c60:	eeb0 3a67 	vmov.f32	s6, s15
 8019c64:	fb92 fcf3 	sdiv	ip, r2, r3
 8019c68:	9b01      	ldr	r3, [sp, #4]
 8019c6a:	3b01      	subs	r3, #1
 8019c6c:	9301      	str	r3, [sp, #4]
 8019c6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c70:	bf08      	it	eq
 8019c72:	465b      	moveq	r3, fp
 8019c74:	e797      	b.n	8019ba6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019c76:	454f      	cmp	r7, r9
 8019c78:	dabb      	bge.n	8019bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c7a:	fb0c 2606 	mla	r6, ip, r6, r2
 8019c7e:	1436      	asrs	r6, r6, #16
 8019c80:	d4b7      	bmi.n	8019bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c82:	4546      	cmp	r6, r8
 8019c84:	dab5      	bge.n	8019bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c86:	461e      	mov	r6, r3
 8019c88:	46a0      	mov	r8, r4
 8019c8a:	2e00      	cmp	r6, #0
 8019c8c:	ddb8      	ble.n	8019c00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c8e:	1417      	asrs	r7, r2, #16
 8019c90:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019c94:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019c98:	9902      	ldr	r1, [sp, #8]
 8019c9a:	4470      	add	r0, lr
 8019c9c:	4462      	add	r2, ip
 8019c9e:	fb0a 9707 	mla	r7, sl, r7, r9
 8019ca2:	3e01      	subs	r6, #1
 8019ca4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019ca8:	f828 7b02 	strh.w	r7, [r8], #2
 8019cac:	e7ed      	b.n	8019c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019cae:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019cb2:	d414      	bmi.n	8019cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019cb4:	68ae      	ldr	r6, [r5, #8]
 8019cb6:	454e      	cmp	r6, r9
 8019cb8:	dd11      	ble.n	8019cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019cba:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019cbe:	d40e      	bmi.n	8019cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019cc0:	68ef      	ldr	r7, [r5, #12]
 8019cc2:	4557      	cmp	r7, sl
 8019cc4:	dd0b      	ble.n	8019cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019cc6:	b236      	sxth	r6, r6
 8019cc8:	f06f 0101 	mvn.w	r1, #1
 8019ccc:	9f02      	ldr	r7, [sp, #8]
 8019cce:	fb0a 9606 	mla	r6, sl, r6, r9
 8019cd2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019cd6:	fb01 f608 	mul.w	r6, r1, r8
 8019cda:	9903      	ldr	r1, [sp, #12]
 8019cdc:	538f      	strh	r7, [r1, r6]
 8019cde:	4470      	add	r0, lr
 8019ce0:	4462      	add	r2, ip
 8019ce2:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ce6:	e788      	b.n	8019bfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019ce8:	b005      	add	sp, #20
 8019cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019cee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019cee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cf2:	b087      	sub	sp, #28
 8019cf4:	468b      	mov	fp, r1
 8019cf6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cfa:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019cfc:	9203      	str	r2, [sp, #12]
 8019cfe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019d02:	6841      	ldr	r1, [r0, #4]
 8019d04:	9204      	str	r2, [sp, #16]
 8019d06:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019d0a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8019d0e:	fb01 2505 	mla	r5, r1, r5, r2
 8019d12:	6802      	ldr	r2, [r0, #0]
 8019d14:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019d18:	f8d9 2000 	ldr.w	r2, [r9]
 8019d1c:	9201      	str	r2, [sp, #4]
 8019d1e:	f1bb 0f00 	cmp.w	fp, #0
 8019d22:	dc03      	bgt.n	8019d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019d24:	9a03      	ldr	r2, [sp, #12]
 8019d26:	2a00      	cmp	r2, #0
 8019d28:	f340 8158 	ble.w	8019fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8019d2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019d2e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019d32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019d36:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019d38:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019d3c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d40:	2b00      	cmp	r3, #0
 8019d42:	dd0e      	ble.n	8019d62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019d44:	1402      	asrs	r2, r0, #16
 8019d46:	d405      	bmi.n	8019d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d48:	42ba      	cmp	r2, r7
 8019d4a:	da03      	bge.n	8019d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d4c:	140a      	asrs	r2, r1, #16
 8019d4e:	d401      	bmi.n	8019d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d50:	42b2      	cmp	r2, r6
 8019d52:	db07      	blt.n	8019d64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019d54:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019d56:	3b01      	subs	r3, #1
 8019d58:	3502      	adds	r5, #2
 8019d5a:	4410      	add	r0, r2
 8019d5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019d5e:	4411      	add	r1, r2
 8019d60:	e7ee      	b.n	8019d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d62:	d017      	beq.n	8019d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019d64:	1e5a      	subs	r2, r3, #1
 8019d66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d68:	fb04 0402 	mla	r4, r4, r2, r0
 8019d6c:	1424      	asrs	r4, r4, #16
 8019d6e:	d409      	bmi.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d70:	42bc      	cmp	r4, r7
 8019d72:	da07      	bge.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019d76:	fb04 1202 	mla	r2, r4, r2, r1
 8019d7a:	1412      	asrs	r2, r2, #16
 8019d7c:	d402      	bmi.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d7e:	42b2      	cmp	r2, r6
 8019d80:	f2c0 80bf 	blt.w	8019f02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019d84:	2700      	movs	r7, #0
 8019d86:	19da      	adds	r2, r3, r7
 8019d88:	2a00      	cmp	r2, #0
 8019d8a:	dc3e      	bgt.n	8019e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d90:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019d94:	f1bb 0f00 	cmp.w	fp, #0
 8019d98:	f340 8120 	ble.w	8019fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8019d9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019da0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019da2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019da6:	f1bb 0b01 	subs.w	fp, fp, #1
 8019daa:	eeb0 6a62 	vmov.f32	s12, s5
 8019dae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019db2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019db6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019dbe:	eeb0 6a43 	vmov.f32	s12, s6
 8019dc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dc6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019dca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019dce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019dd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019de2:	ee12 2a90 	vmov	r2, s5
 8019de6:	eef0 2a47 	vmov.f32	s5, s14
 8019dea:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dee:	ee13 2a10 	vmov	r2, s6
 8019df2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019df6:	eeb0 3a67 	vmov.f32	s6, s15
 8019dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dfe:	9a03      	ldr	r2, [sp, #12]
 8019e00:	9314      	str	r3, [sp, #80]	; 0x50
 8019e02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e04:	bf08      	it	eq
 8019e06:	4613      	moveq	r3, r2
 8019e08:	e789      	b.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019e0a:	1406      	asrs	r6, r0, #16
 8019e0c:	d42d      	bmi.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e0e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019e12:	42b4      	cmp	r4, r6
 8019e14:	dd29      	ble.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e16:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8019e1a:	d426      	bmi.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e1c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019e20:	4562      	cmp	r2, ip
 8019e22:	dd22      	ble.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e24:	b224      	sxth	r4, r4
 8019e26:	9a01      	ldr	r2, [sp, #4]
 8019e28:	fb0c 6404 	mla	r4, ip, r4, r6
 8019e2c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019e30:	0e22      	lsrs	r2, r4, #24
 8019e32:	d01a      	beq.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e34:	9e04      	ldr	r6, [sp, #16]
 8019e36:	4372      	muls	r2, r6
 8019e38:	1c56      	adds	r6, r2, #1
 8019e3a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019e3e:	0a26      	lsrs	r6, r4, #8
 8019e40:	1212      	asrs	r2, r2, #8
 8019e42:	9605      	str	r6, [sp, #20]
 8019e44:	2aff      	cmp	r2, #255	; 0xff
 8019e46:	d116      	bne.n	8019e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019e48:	f06f 0201 	mvn.w	r2, #1
 8019e4c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019e50:	fb02 fc07 	mul.w	ip, r2, r7
 8019e54:	0962      	lsrs	r2, r4, #5
 8019e56:	f026 0607 	bic.w	r6, r6, #7
 8019e5a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019e5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e62:	4316      	orrs	r6, r2
 8019e64:	4326      	orrs	r6, r4
 8019e66:	f825 600c 	strh.w	r6, [r5, ip]
 8019e6a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019e6c:	3f01      	subs	r7, #1
 8019e6e:	4410      	add	r0, r2
 8019e70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019e72:	4411      	add	r1, r2
 8019e74:	e787      	b.n	8019d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019e76:	f06f 0601 	mvn.w	r6, #1
 8019e7a:	fa1f fa82 	uxth.w	sl, r2
 8019e7e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019e82:	43d2      	mvns	r2, r2
 8019e84:	437e      	muls	r6, r7
 8019e86:	b2e4      	uxtb	r4, r4
 8019e88:	fb1c fc0a 	smulbb	ip, ip, sl
 8019e8c:	b2d2      	uxtb	r2, r2
 8019e8e:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019e92:	fb14 f40a 	smulbb	r4, r4, sl
 8019e96:	9602      	str	r6, [sp, #8]
 8019e98:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019e9c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019ea0:	fb16 f60a 	smulbb	r6, r6, sl
 8019ea4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019ea8:	fb0e ce02 	mla	lr, lr, r2, ip
 8019eac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019eb0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019eb4:	fa1f fe8e 	uxth.w	lr, lr
 8019eb8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019ebc:	fa5f f888 	uxtb.w	r8, r8
 8019ec0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019ec4:	fb08 4402 	mla	r4, r8, r2, r4
 8019ec8:	f10e 0201 	add.w	r2, lr, #1
 8019ecc:	fa1f fc8c 	uxth.w	ip, ip
 8019ed0:	b2a4      	uxth	r4, r4
 8019ed2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019ed6:	9a02      	ldr	r2, [sp, #8]
 8019ed8:	1c66      	adds	r6, r4, #1
 8019eda:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019ede:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019ee2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019ee6:	ea46 0e0e 	orr.w	lr, r6, lr
 8019eea:	f10c 0601 	add.w	r6, ip, #1
 8019eee:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019ef2:	0976      	lsrs	r6, r6, #5
 8019ef4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019ef8:	ea4e 0e06 	orr.w	lr, lr, r6
 8019efc:	f825 e002 	strh.w	lr, [r5, r2]
 8019f00:	e7b3      	b.n	8019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019f02:	f04f 0800 	mov.w	r8, #0
 8019f06:	eba3 0208 	sub.w	r2, r3, r8
 8019f0a:	2a00      	cmp	r2, #0
 8019f0c:	f77f af3e 	ble.w	8019d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f10:	1404      	asrs	r4, r0, #16
 8019f12:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019f16:	140a      	asrs	r2, r1, #16
 8019f18:	fb06 4202 	mla	r2, r6, r2, r4
 8019f1c:	9c01      	ldr	r4, [sp, #4]
 8019f1e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019f22:	0e22      	lsrs	r2, r4, #24
 8019f24:	d015      	beq.n	8019f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019f26:	9e04      	ldr	r6, [sp, #16]
 8019f28:	4372      	muls	r2, r6
 8019f2a:	1c56      	adds	r6, r2, #1
 8019f2c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019f30:	0a26      	lsrs	r6, r4, #8
 8019f32:	1212      	asrs	r2, r2, #8
 8019f34:	2aff      	cmp	r2, #255	; 0xff
 8019f36:	d113      	bne.n	8019f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019f38:	0962      	lsrs	r2, r4, #5
 8019f3a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019f3e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019f42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f46:	f026 0607 	bic.w	r6, r6, #7
 8019f4a:	4316      	orrs	r6, r2
 8019f4c:	4326      	orrs	r6, r4
 8019f4e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019f52:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019f54:	f108 0801 	add.w	r8, r8, #1
 8019f58:	4410      	add	r0, r2
 8019f5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019f5c:	4411      	add	r1, r2
 8019f5e:	e7d2      	b.n	8019f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019f60:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019f64:	fa1f fa82 	uxth.w	sl, r2
 8019f68:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019f6c:	43d2      	mvns	r2, r2
 8019f6e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019f72:	fb17 f70a 	smulbb	r7, r7, sl
 8019f76:	b2d2      	uxtb	r2, r2
 8019f78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019f7c:	b2e4      	uxtb	r4, r4
 8019f7e:	b2f6      	uxtb	r6, r6
 8019f80:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019f84:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019f88:	fb14 f40a 	smulbb	r4, r4, sl
 8019f8c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f90:	fa1f fc8c 	uxth.w	ip, ip
 8019f94:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f98:	fb16 f60a 	smulbb	r6, r6, sl
 8019f9c:	fa5f fe8e 	uxtb.w	lr, lr
 8019fa0:	fb0e 4402 	mla	r4, lr, r2, r4
 8019fa4:	fb07 6702 	mla	r7, r7, r2, r6
 8019fa8:	f10c 0201 	add.w	r2, ip, #1
 8019fac:	b2a4      	uxth	r4, r4
 8019fae:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019fb2:	1c66      	adds	r6, r4, #1
 8019fb4:	b2bf      	uxth	r7, r7
 8019fb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019fba:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019fbe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019fc2:	ea46 0c0c 	orr.w	ip, r6, ip
 8019fc6:	1c7e      	adds	r6, r7, #1
 8019fc8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019fcc:	0976      	lsrs	r6, r6, #5
 8019fce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019fd2:	ea4c 0c06 	orr.w	ip, ip, r6
 8019fd6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019fda:	e7ba      	b.n	8019f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019fdc:	b007      	add	sp, #28
 8019fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019fe4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fe8:	b085      	sub	sp, #20
 8019fea:	468b      	mov	fp, r1
 8019fec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ff0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ff2:	9203      	str	r2, [sp, #12]
 8019ff4:	6841      	ldr	r1, [r0, #4]
 8019ff6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019ffa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019ffe:	fb01 2404 	mla	r4, r1, r4, r2
 801a002:	6802      	ldr	r2, [r0, #0]
 801a004:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a008:	f8d8 2000 	ldr.w	r2, [r8]
 801a00c:	9201      	str	r2, [sp, #4]
 801a00e:	f1bb 0f00 	cmp.w	fp, #0
 801a012:	dc03      	bgt.n	801a01c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a014:	9a03      	ldr	r2, [sp, #12]
 801a016:	2a00      	cmp	r2, #0
 801a018:	f340 814f 	ble.w	801a2ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a01c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a01e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a022:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a026:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a028:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a02c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a030:	2b00      	cmp	r3, #0
 801a032:	dd0e      	ble.n	801a052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a034:	1408      	asrs	r0, r1, #16
 801a036:	d405      	bmi.n	801a044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a038:	42b8      	cmp	r0, r7
 801a03a:	da03      	bge.n	801a044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a03c:	1410      	asrs	r0, r2, #16
 801a03e:	d401      	bmi.n	801a044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a040:	42b0      	cmp	r0, r6
 801a042:	db07      	blt.n	801a054 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a044:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a046:	3b01      	subs	r3, #1
 801a048:	3402      	adds	r4, #2
 801a04a:	4401      	add	r1, r0
 801a04c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a04e:	4402      	add	r2, r0
 801a050:	e7ee      	b.n	801a030 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a052:	d017      	beq.n	801a084 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a054:	1e58      	subs	r0, r3, #1
 801a056:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a058:	fb05 1500 	mla	r5, r5, r0, r1
 801a05c:	142d      	asrs	r5, r5, #16
 801a05e:	d409      	bmi.n	801a074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a060:	42bd      	cmp	r5, r7
 801a062:	da07      	bge.n	801a074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a064:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a066:	fb05 2000 	mla	r0, r5, r0, r2
 801a06a:	1400      	asrs	r0, r0, #16
 801a06c:	d402      	bmi.n	801a074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a06e:	42b0      	cmp	r0, r6
 801a070:	f2c0 80ba 	blt.w	801a1e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a074:	2600      	movs	r6, #0
 801a076:	1998      	adds	r0, r3, r6
 801a078:	2800      	cmp	r0, #0
 801a07a:	dc3e      	bgt.n	801a0fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a07c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a080:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a084:	f1bb 0f00 	cmp.w	fp, #0
 801a088:	f340 8117 	ble.w	801a2ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a08c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a090:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a092:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a096:	f1bb 0b01 	subs.w	fp, fp, #1
 801a09a:	eeb0 6a62 	vmov.f32	s12, s5
 801a09e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a0a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a0ae:	eeb0 6a43 	vmov.f32	s12, s6
 801a0b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a0ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a0d2:	ee12 2a90 	vmov	r2, s5
 801a0d6:	eef0 2a47 	vmov.f32	s5, s14
 801a0da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0de:	ee13 2a10 	vmov	r2, s6
 801a0e2:	9311      	str	r3, [sp, #68]	; 0x44
 801a0e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0e6:	eeb0 3a67 	vmov.f32	s6, s15
 801a0ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0ee:	9a03      	ldr	r2, [sp, #12]
 801a0f0:	9312      	str	r3, [sp, #72]	; 0x48
 801a0f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0f4:	bf08      	it	eq
 801a0f6:	4613      	moveq	r3, r2
 801a0f8:	e789      	b.n	801a00e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a0fa:	140f      	asrs	r7, r1, #16
 801a0fc:	d424      	bmi.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a0fe:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a102:	42bd      	cmp	r5, r7
 801a104:	dd20      	ble.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a106:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a10a:	d41d      	bmi.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a10c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a110:	4560      	cmp	r0, ip
 801a112:	dd19      	ble.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a114:	b22d      	sxth	r5, r5
 801a116:	9801      	ldr	r0, [sp, #4]
 801a118:	fb0c 7505 	mla	r5, ip, r5, r7
 801a11c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a120:	0e07      	lsrs	r7, r0, #24
 801a122:	2fff      	cmp	r7, #255	; 0xff
 801a124:	d116      	bne.n	801a154 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a126:	f06f 0501 	mvn.w	r5, #1
 801a12a:	fb05 f706 	mul.w	r7, r5, r6
 801a12e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a132:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a136:	0945      	lsrs	r5, r0, #5
 801a138:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a13c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a140:	ea4c 0505 	orr.w	r5, ip, r5
 801a144:	4305      	orrs	r5, r0
 801a146:	53e5      	strh	r5, [r4, r7]
 801a148:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a14a:	3e01      	subs	r6, #1
 801a14c:	4401      	add	r1, r0
 801a14e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a150:	4402      	add	r2, r0
 801a152:	e790      	b.n	801a076 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a154:	b2fd      	uxtb	r5, r7
 801a156:	2f00      	cmp	r7, #0
 801a158:	d0f6      	beq.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a15a:	f06f 0701 	mvn.w	r7, #1
 801a15e:	fa1f f985 	uxth.w	r9, r5
 801a162:	43ed      	mvns	r5, r5
 801a164:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a168:	4377      	muls	r7, r6
 801a16a:	fb1a fa09 	smulbb	sl, sl, r9
 801a16e:	b2ed      	uxtb	r5, r5
 801a170:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a174:	9702      	str	r7, [sp, #8]
 801a176:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a17a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a17e:	fb17 f709 	smulbb	r7, r7, r9
 801a182:	b2c0      	uxtb	r0, r0
 801a184:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a188:	fb10 f009 	smulbb	r0, r0, r9
 801a18c:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a190:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a194:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a198:	fa1f fc8c 	uxth.w	ip, ip
 801a19c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a1a0:	fa5f fe8e 	uxtb.w	lr, lr
 801a1a4:	fb07 a705 	mla	r7, r7, r5, sl
 801a1a8:	fb0e 0005 	mla	r0, lr, r5, r0
 801a1ac:	f10c 0501 	add.w	r5, ip, #1
 801a1b0:	b2bf      	uxth	r7, r7
 801a1b2:	b280      	uxth	r0, r0
 801a1b4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a1b8:	f100 0a01 	add.w	sl, r0, #1
 801a1bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a1c0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a1c4:	9802      	ldr	r0, [sp, #8]
 801a1c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a1ca:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a1ce:	f107 0a01 	add.w	sl, r7, #1
 801a1d2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a1d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a1da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a1de:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a1e2:	f824 c000 	strh.w	ip, [r4, r0]
 801a1e6:	e7af      	b.n	801a148 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a1e8:	f04f 0e00 	mov.w	lr, #0
 801a1ec:	eba3 000e 	sub.w	r0, r3, lr
 801a1f0:	2800      	cmp	r0, #0
 801a1f2:	f77f af43 	ble.w	801a07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a1f6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a1fa:	140d      	asrs	r5, r1, #16
 801a1fc:	1410      	asrs	r0, r2, #16
 801a1fe:	fb06 5000 	mla	r0, r6, r0, r5
 801a202:	9d01      	ldr	r5, [sp, #4]
 801a204:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a208:	0e2e      	lsrs	r6, r5, #24
 801a20a:	2eff      	cmp	r6, #255	; 0xff
 801a20c:	d112      	bne.n	801a234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a20e:	482c      	ldr	r0, [pc, #176]	; (801a2c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a210:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a214:	0968      	lsrs	r0, r5, #5
 801a216:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a21a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a21e:	4330      	orrs	r0, r6
 801a220:	4328      	orrs	r0, r5
 801a222:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a226:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a228:	f10e 0e01 	add.w	lr, lr, #1
 801a22c:	4401      	add	r1, r0
 801a22e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a230:	4402      	add	r2, r0
 801a232:	e7db      	b.n	801a1ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a234:	b2f0      	uxtb	r0, r6
 801a236:	2e00      	cmp	r6, #0
 801a238:	d0f5      	beq.n	801a226 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a23a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a23e:	fa1f f980 	uxth.w	r9, r0
 801a242:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a246:	43c0      	mvns	r0, r0
 801a248:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a24c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a250:	fb16 f609 	smulbb	r6, r6, r9
 801a254:	b2c0      	uxtb	r0, r0
 801a256:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a25a:	b2ed      	uxtb	r5, r5
 801a25c:	fb1a fa09 	smulbb	sl, sl, r9
 801a260:	fb07 6700 	mla	r7, r7, r0, r6
 801a264:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a268:	fb15 f509 	smulbb	r5, r5, r9
 801a26c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a270:	b2bf      	uxth	r7, r7
 801a272:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a276:	fa5f fc8c 	uxtb.w	ip, ip
 801a27a:	fb06 a600 	mla	r6, r6, r0, sl
 801a27e:	fb0c 5500 	mla	r5, ip, r0, r5
 801a282:	1c78      	adds	r0, r7, #1
 801a284:	b2b6      	uxth	r6, r6
 801a286:	b2ad      	uxth	r5, r5
 801a288:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a28c:	f105 0a01 	add.w	sl, r5, #1
 801a290:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a294:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a298:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a29c:	ea4a 0707 	orr.w	r7, sl, r7
 801a2a0:	f106 0a01 	add.w	sl, r6, #1
 801a2a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a2a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a2ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a2b0:	ea47 070a 	orr.w	r7, r7, sl
 801a2b4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a2b8:	e7b5      	b.n	801a226 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a2ba:	b005      	add	sp, #20
 801a2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2c0:	fffff800 	.word	0xfffff800

0801a2c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2c8:	b087      	sub	sp, #28
 801a2ca:	468b      	mov	fp, r1
 801a2cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a2d2:	9203      	str	r2, [sp, #12]
 801a2d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a2d8:	6841      	ldr	r1, [r0, #4]
 801a2da:	9204      	str	r2, [sp, #16]
 801a2dc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a2e0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a2e4:	fb01 2404 	mla	r4, r1, r4, r2
 801a2e8:	6802      	ldr	r2, [r0, #0]
 801a2ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a2ee:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a2f2:	3201      	adds	r2, #1
 801a2f4:	f022 0201 	bic.w	r2, r2, #1
 801a2f8:	9200      	str	r2, [sp, #0]
 801a2fa:	f8d9 2000 	ldr.w	r2, [r9]
 801a2fe:	9201      	str	r2, [sp, #4]
 801a300:	f1bb 0f00 	cmp.w	fp, #0
 801a304:	dc03      	bgt.n	801a30e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a306:	9a03      	ldr	r2, [sp, #12]
 801a308:	2a00      	cmp	r2, #0
 801a30a:	f340 816a 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a30e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a310:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a314:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a318:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a31a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a31e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a322:	2b00      	cmp	r3, #0
 801a324:	dd0e      	ble.n	801a344 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a326:	1402      	asrs	r2, r0, #16
 801a328:	d405      	bmi.n	801a336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a32a:	42ba      	cmp	r2, r7
 801a32c:	da03      	bge.n	801a336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a32e:	140a      	asrs	r2, r1, #16
 801a330:	d401      	bmi.n	801a336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a332:	42b2      	cmp	r2, r6
 801a334:	db07      	blt.n	801a346 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a336:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a338:	3b01      	subs	r3, #1
 801a33a:	3402      	adds	r4, #2
 801a33c:	4410      	add	r0, r2
 801a33e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a340:	4411      	add	r1, r2
 801a342:	e7ee      	b.n	801a322 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a344:	d017      	beq.n	801a376 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a346:	1e5a      	subs	r2, r3, #1
 801a348:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a34a:	fb05 0502 	mla	r5, r5, r2, r0
 801a34e:	142d      	asrs	r5, r5, #16
 801a350:	d409      	bmi.n	801a366 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a352:	42bd      	cmp	r5, r7
 801a354:	da07      	bge.n	801a366 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a356:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a358:	fb05 1202 	mla	r2, r5, r2, r1
 801a35c:	1412      	asrs	r2, r2, #16
 801a35e:	d402      	bmi.n	801a366 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a360:	42b2      	cmp	r2, r6
 801a362:	f2c0 80c8 	blt.w	801a4f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801a366:	2700      	movs	r7, #0
 801a368:	19da      	adds	r2, r3, r7
 801a36a:	2a00      	cmp	r2, #0
 801a36c:	dc3e      	bgt.n	801a3ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a36e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a372:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a376:	f1bb 0f00 	cmp.w	fp, #0
 801a37a:	f340 8132 	ble.w	801a5e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a37e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a382:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a384:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a388:	f1bb 0b01 	subs.w	fp, fp, #1
 801a38c:	eeb0 6a62 	vmov.f32	s12, s5
 801a390:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a394:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a398:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a39c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a3a0:	eeb0 6a43 	vmov.f32	s12, s6
 801a3a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3a8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a3ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3c4:	ee12 2a90 	vmov	r2, s5
 801a3c8:	eef0 2a47 	vmov.f32	s5, s14
 801a3cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3d0:	ee13 2a10 	vmov	r2, s6
 801a3d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a3d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3d8:	eeb0 3a67 	vmov.f32	s6, s15
 801a3dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3e0:	9a03      	ldr	r2, [sp, #12]
 801a3e2:	9314      	str	r3, [sp, #80]	; 0x50
 801a3e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3e6:	bf08      	it	eq
 801a3e8:	4613      	moveq	r3, r2
 801a3ea:	e789      	b.n	801a300 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a3ec:	1405      	asrs	r5, r0, #16
 801a3ee:	d436      	bmi.n	801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a3f0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a3f4:	42aa      	cmp	r2, r5
 801a3f6:	dd32      	ble.n	801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a3f8:	140e      	asrs	r6, r1, #16
 801a3fa:	d430      	bmi.n	801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a3fc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a400:	42b2      	cmp	r2, r6
 801a402:	dd2c      	ble.n	801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a404:	9a00      	ldr	r2, [sp, #0]
 801a406:	fb06 5502 	mla	r5, r6, r2, r5
 801a40a:	9e01      	ldr	r6, [sp, #4]
 801a40c:	086a      	lsrs	r2, r5, #1
 801a40e:	5cb2      	ldrb	r2, [r6, r2]
 801a410:	07ee      	lsls	r6, r5, #31
 801a412:	bf54      	ite	pl
 801a414:	f002 020f 	andpl.w	r2, r2, #15
 801a418:	1112      	asrmi	r2, r2, #4
 801a41a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a41e:	b2d2      	uxtb	r2, r2
 801a420:	b1ea      	cbz	r2, 801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a422:	9d04      	ldr	r5, [sp, #16]
 801a424:	436a      	muls	r2, r5
 801a426:	1c55      	adds	r5, r2, #1
 801a428:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a42c:	4d6e      	ldr	r5, [pc, #440]	; (801a5e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a42e:	1212      	asrs	r2, r2, #8
 801a430:	682d      	ldr	r5, [r5, #0]
 801a432:	2aff      	cmp	r2, #255	; 0xff
 801a434:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801a438:	9605      	str	r6, [sp, #20]
 801a43a:	d116      	bne.n	801a46a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801a43c:	f06f 0201 	mvn.w	r2, #1
 801a440:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a444:	fb02 fc07 	mul.w	ip, r2, r7
 801a448:	096a      	lsrs	r2, r5, #5
 801a44a:	f026 0607 	bic.w	r6, r6, #7
 801a44e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a452:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a456:	4316      	orrs	r6, r2
 801a458:	432e      	orrs	r6, r5
 801a45a:	f824 600c 	strh.w	r6, [r4, ip]
 801a45e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a460:	3f01      	subs	r7, #1
 801a462:	4410      	add	r0, r2
 801a464:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a466:	4411      	add	r1, r2
 801a468:	e77e      	b.n	801a368 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a46a:	f06f 0601 	mvn.w	r6, #1
 801a46e:	fa1f fa82 	uxth.w	sl, r2
 801a472:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a476:	43d2      	mvns	r2, r2
 801a478:	437e      	muls	r6, r7
 801a47a:	b2ed      	uxtb	r5, r5
 801a47c:	fb1c fc0a 	smulbb	ip, ip, sl
 801a480:	b2d2      	uxtb	r2, r2
 801a482:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a486:	fb15 f50a 	smulbb	r5, r5, sl
 801a48a:	9602      	str	r6, [sp, #8]
 801a48c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a490:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a494:	fb16 f60a 	smulbb	r6, r6, sl
 801a498:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a49c:	fb0e ce02 	mla	lr, lr, r2, ip
 801a4a0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a4a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a4a8:	fa1f fe8e 	uxth.w	lr, lr
 801a4ac:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a4b0:	fa5f f888 	uxtb.w	r8, r8
 801a4b4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a4b8:	fb08 5502 	mla	r5, r8, r2, r5
 801a4bc:	f10e 0201 	add.w	r2, lr, #1
 801a4c0:	fa1f fc8c 	uxth.w	ip, ip
 801a4c4:	b2ad      	uxth	r5, r5
 801a4c6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a4ca:	9a02      	ldr	r2, [sp, #8]
 801a4cc:	1c6e      	adds	r6, r5, #1
 801a4ce:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a4d2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a4d6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a4da:	ea46 0e0e 	orr.w	lr, r6, lr
 801a4de:	f10c 0601 	add.w	r6, ip, #1
 801a4e2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a4e6:	0976      	lsrs	r6, r6, #5
 801a4e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a4ec:	ea4e 0e06 	orr.w	lr, lr, r6
 801a4f0:	f824 e002 	strh.w	lr, [r4, r2]
 801a4f4:	e7b3      	b.n	801a45e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a4f6:	f04f 0800 	mov.w	r8, #0
 801a4fa:	eba3 0208 	sub.w	r2, r3, r8
 801a4fe:	2a00      	cmp	r2, #0
 801a500:	f77f af35 	ble.w	801a36e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a504:	1402      	asrs	r2, r0, #16
 801a506:	9e00      	ldr	r6, [sp, #0]
 801a508:	140d      	asrs	r5, r1, #16
 801a50a:	fb06 2505 	mla	r5, r6, r5, r2
 801a50e:	9e01      	ldr	r6, [sp, #4]
 801a510:	086a      	lsrs	r2, r5, #1
 801a512:	07ed      	lsls	r5, r5, #31
 801a514:	5cb2      	ldrb	r2, [r6, r2]
 801a516:	bf54      	ite	pl
 801a518:	f002 020f 	andpl.w	r2, r2, #15
 801a51c:	1112      	asrmi	r2, r2, #4
 801a51e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a522:	b2d2      	uxtb	r2, r2
 801a524:	b1c2      	cbz	r2, 801a558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a526:	9d04      	ldr	r5, [sp, #16]
 801a528:	436a      	muls	r2, r5
 801a52a:	1c55      	adds	r5, r2, #1
 801a52c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a530:	4d2d      	ldr	r5, [pc, #180]	; (801a5e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a532:	1212      	asrs	r2, r2, #8
 801a534:	682e      	ldr	r6, [r5, #0]
 801a536:	2aff      	cmp	r2, #255	; 0xff
 801a538:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a53c:	d113      	bne.n	801a566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a53e:	0972      	lsrs	r2, r6, #5
 801a540:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a544:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a548:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a54c:	f025 0507 	bic.w	r5, r5, #7
 801a550:	4315      	orrs	r5, r2
 801a552:	4335      	orrs	r5, r6
 801a554:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a558:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a55a:	f108 0801 	add.w	r8, r8, #1
 801a55e:	4410      	add	r0, r2
 801a560:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a562:	4411      	add	r1, r2
 801a564:	e7c9      	b.n	801a4fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a566:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a56a:	fa1f fa82 	uxth.w	sl, r2
 801a56e:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a572:	43d2      	mvns	r2, r2
 801a574:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a578:	fb17 f70a 	smulbb	r7, r7, sl
 801a57c:	b2d2      	uxtb	r2, r2
 801a57e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a582:	b2f6      	uxtb	r6, r6
 801a584:	b2ed      	uxtb	r5, r5
 801a586:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a58a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a58e:	fb16 f60a 	smulbb	r6, r6, sl
 801a592:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a596:	fa1f fc8c 	uxth.w	ip, ip
 801a59a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a59e:	fb15 f50a 	smulbb	r5, r5, sl
 801a5a2:	fa5f fe8e 	uxtb.w	lr, lr
 801a5a6:	fb0e 6602 	mla	r6, lr, r2, r6
 801a5aa:	fb07 5702 	mla	r7, r7, r2, r5
 801a5ae:	f10c 0201 	add.w	r2, ip, #1
 801a5b2:	b2b6      	uxth	r6, r6
 801a5b4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a5b8:	1c75      	adds	r5, r6, #1
 801a5ba:	b2bf      	uxth	r7, r7
 801a5bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a5c0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a5c4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a5c8:	ea45 0c0c 	orr.w	ip, r5, ip
 801a5cc:	1c7d      	adds	r5, r7, #1
 801a5ce:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a5d2:	096d      	lsrs	r5, r5, #5
 801a5d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a5d8:	ea4c 0c05 	orr.w	ip, ip, r5
 801a5dc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a5e0:	e7ba      	b.n	801a558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a5e2:	b007      	add	sp, #28
 801a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5e8:	24002fac 	.word	0x24002fac

0801a5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5f0:	b087      	sub	sp, #28
 801a5f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a5f6:	f8df 8308 	ldr.w	r8, [pc, #776]	; 801a900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a5fa:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a5fc:	9101      	str	r1, [sp, #4]
 801a5fe:	9205      	str	r2, [sp, #20]
 801a600:	6841      	ldr	r1, [r0, #4]
 801a602:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a606:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a60a:	fb01 2404 	mla	r4, r1, r4, r2
 801a60e:	6802      	ldr	r2, [r0, #0]
 801a610:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a614:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a618:	3201      	adds	r2, #1
 801a61a:	f022 0201 	bic.w	r2, r2, #1
 801a61e:	9202      	str	r2, [sp, #8]
 801a620:	f8db 2000 	ldr.w	r2, [fp]
 801a624:	9203      	str	r2, [sp, #12]
 801a626:	9a01      	ldr	r2, [sp, #4]
 801a628:	2a00      	cmp	r2, #0
 801a62a:	dc03      	bgt.n	801a634 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a62c:	9a05      	ldr	r2, [sp, #20]
 801a62e:	2a00      	cmp	r2, #0
 801a630:	f340 8162 	ble.w	801a8f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a634:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a636:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a63a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a63e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a640:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a644:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a648:	2b00      	cmp	r3, #0
 801a64a:	dd0e      	ble.n	801a66a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a64c:	1402      	asrs	r2, r0, #16
 801a64e:	d405      	bmi.n	801a65c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a650:	42ba      	cmp	r2, r7
 801a652:	da03      	bge.n	801a65c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a654:	140a      	asrs	r2, r1, #16
 801a656:	d401      	bmi.n	801a65c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a658:	42b2      	cmp	r2, r6
 801a65a:	db07      	blt.n	801a66c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a65c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a65e:	3b01      	subs	r3, #1
 801a660:	3402      	adds	r4, #2
 801a662:	4410      	add	r0, r2
 801a664:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a666:	4411      	add	r1, r2
 801a668:	e7ee      	b.n	801a648 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a66a:	d017      	beq.n	801a69c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a66c:	1e5a      	subs	r2, r3, #1
 801a66e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a670:	fb05 0502 	mla	r5, r5, r2, r0
 801a674:	142d      	asrs	r5, r5, #16
 801a676:	d409      	bmi.n	801a68c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a678:	42bd      	cmp	r5, r7
 801a67a:	da07      	bge.n	801a68c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a67c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a67e:	fb05 1202 	mla	r2, r5, r2, r1
 801a682:	1412      	asrs	r2, r2, #16
 801a684:	d402      	bmi.n	801a68c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a686:	42b2      	cmp	r2, r6
 801a688:	f2c0 80c3 	blt.w	801a812 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a68c:	2500      	movs	r5, #0
 801a68e:	195a      	adds	r2, r3, r5
 801a690:	2a00      	cmp	r2, #0
 801a692:	dc3f      	bgt.n	801a714 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a694:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a698:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a69c:	9b01      	ldr	r3, [sp, #4]
 801a69e:	2b00      	cmp	r3, #0
 801a6a0:	f340 812a 	ble.w	801a8f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a6a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6ae:	eeb0 6a62 	vmov.f32	s12, s5
 801a6b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a6b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6be:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a6c2:	eeb0 6a43 	vmov.f32	s12, s6
 801a6c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6ca:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a6ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6e6:	ee12 2a90 	vmov	r2, s5
 801a6ea:	eef0 2a47 	vmov.f32	s5, s14
 801a6ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6f2:	ee13 2a10 	vmov	r2, s6
 801a6f6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a6f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6fa:	eeb0 3a67 	vmov.f32	s6, s15
 801a6fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801a702:	9314      	str	r3, [sp, #80]	; 0x50
 801a704:	9b01      	ldr	r3, [sp, #4]
 801a706:	9a05      	ldr	r2, [sp, #20]
 801a708:	3b01      	subs	r3, #1
 801a70a:	9301      	str	r3, [sp, #4]
 801a70c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a70e:	bf08      	it	eq
 801a710:	4613      	moveq	r3, r2
 801a712:	e788      	b.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a714:	1406      	asrs	r6, r0, #16
 801a716:	d42c      	bmi.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a718:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a71c:	42b2      	cmp	r2, r6
 801a71e:	dd28      	ble.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a720:	140f      	asrs	r7, r1, #16
 801a722:	d426      	bmi.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a724:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a728:	42ba      	cmp	r2, r7
 801a72a:	dd22      	ble.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a72c:	9a02      	ldr	r2, [sp, #8]
 801a72e:	fb07 6602 	mla	r6, r7, r2, r6
 801a732:	9f03      	ldr	r7, [sp, #12]
 801a734:	0872      	lsrs	r2, r6, #1
 801a736:	07f6      	lsls	r6, r6, #31
 801a738:	5cba      	ldrb	r2, [r7, r2]
 801a73a:	bf54      	ite	pl
 801a73c:	f002 020f 	andpl.w	r2, r2, #15
 801a740:	1112      	asrmi	r2, r2, #4
 801a742:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a746:	b2d2      	uxtb	r2, r2
 801a748:	2aff      	cmp	r2, #255	; 0xff
 801a74a:	d118      	bne.n	801a77e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a74c:	f06f 0601 	mvn.w	r6, #1
 801a750:	f8d8 2000 	ldr.w	r2, [r8]
 801a754:	fb06 f705 	mul.w	r7, r6, r5
 801a758:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801a75c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a760:	0956      	lsrs	r6, r2, #5
 801a762:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a766:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a76a:	ea4c 0606 	orr.w	r6, ip, r6
 801a76e:	4316      	orrs	r6, r2
 801a770:	53e6      	strh	r6, [r4, r7]
 801a772:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a774:	3d01      	subs	r5, #1
 801a776:	4410      	add	r0, r2
 801a778:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a77a:	4411      	add	r1, r2
 801a77c:	e787      	b.n	801a68e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a77e:	2a00      	cmp	r2, #0
 801a780:	d0f7      	beq.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a782:	f06f 0601 	mvn.w	r6, #1
 801a786:	f8d8 c000 	ldr.w	ip, [r8]
 801a78a:	fa1f f982 	uxth.w	r9, r2
 801a78e:	43d2      	mvns	r2, r2
 801a790:	436e      	muls	r6, r5
 801a792:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a796:	b2d2      	uxtb	r2, r2
 801a798:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a79c:	fb1a fa09 	smulbb	sl, sl, r9
 801a7a0:	9604      	str	r6, [sp, #16]
 801a7a2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a7a6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a7aa:	fb16 f609 	smulbb	r6, r6, r9
 801a7ae:	fa5f fc8c 	uxtb.w	ip, ip
 801a7b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a7b6:	fb1c fc09 	smulbb	ip, ip, r9
 801a7ba:	fb07 6702 	mla	r7, r7, r2, r6
 801a7be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a7c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a7c6:	b2bf      	uxth	r7, r7
 801a7c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a7cc:	fa5f fe8e 	uxtb.w	lr, lr
 801a7d0:	fb06 a602 	mla	r6, r6, r2, sl
 801a7d4:	fb0e cc02 	mla	ip, lr, r2, ip
 801a7d8:	1c7a      	adds	r2, r7, #1
 801a7da:	b2b6      	uxth	r6, r6
 801a7dc:	fa1f fc8c 	uxth.w	ip, ip
 801a7e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a7e4:	9a04      	ldr	r2, [sp, #16]
 801a7e6:	f10c 0a01 	add.w	sl, ip, #1
 801a7ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a7ee:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a7f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7f6:	ea4a 0707 	orr.w	r7, sl, r7
 801a7fa:	f106 0a01 	add.w	sl, r6, #1
 801a7fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a802:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a806:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a80a:	ea47 070a 	orr.w	r7, r7, sl
 801a80e:	52a7      	strh	r7, [r4, r2]
 801a810:	e7af      	b.n	801a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a812:	f04f 0e00 	mov.w	lr, #0
 801a816:	eba3 020e 	sub.w	r2, r3, lr
 801a81a:	2a00      	cmp	r2, #0
 801a81c:	f77f af3a 	ble.w	801a694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a820:	1402      	asrs	r2, r0, #16
 801a822:	9e02      	ldr	r6, [sp, #8]
 801a824:	140d      	asrs	r5, r1, #16
 801a826:	fb06 2505 	mla	r5, r6, r5, r2
 801a82a:	9e03      	ldr	r6, [sp, #12]
 801a82c:	086a      	lsrs	r2, r5, #1
 801a82e:	07ed      	lsls	r5, r5, #31
 801a830:	5cb2      	ldrb	r2, [r6, r2]
 801a832:	bf54      	ite	pl
 801a834:	f002 020f 	andpl.w	r2, r2, #15
 801a838:	1112      	asrmi	r2, r2, #4
 801a83a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a83e:	b2d2      	uxtb	r2, r2
 801a840:	2aff      	cmp	r2, #255	; 0xff
 801a842:	d115      	bne.n	801a870 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a844:	f8d8 5000 	ldr.w	r5, [r8]
 801a848:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801a84c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a850:	096a      	lsrs	r2, r5, #5
 801a852:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a856:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a85a:	4332      	orrs	r2, r6
 801a85c:	432a      	orrs	r2, r5
 801a85e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a862:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a864:	f10e 0e01 	add.w	lr, lr, #1
 801a868:	4410      	add	r0, r2
 801a86a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a86c:	4411      	add	r1, r2
 801a86e:	e7d2      	b.n	801a816 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a870:	2a00      	cmp	r2, #0
 801a872:	d0f6      	beq.n	801a862 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a874:	f8d8 7000 	ldr.w	r7, [r8]
 801a878:	fa1f f982 	uxth.w	r9, r2
 801a87c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a880:	43d2      	mvns	r2, r2
 801a882:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a886:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a88a:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a88e:	fb15 f509 	smulbb	r5, r5, r9
 801a892:	b2d2      	uxtb	r2, r2
 801a894:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a898:	b2ff      	uxtb	r7, r7
 801a89a:	fb1a fa09 	smulbb	sl, sl, r9
 801a89e:	fb06 5602 	mla	r6, r6, r2, r5
 801a8a2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a8a6:	fb17 f709 	smulbb	r7, r7, r9
 801a8aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8ae:	b2b6      	uxth	r6, r6
 801a8b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a8b4:	fa5f fc8c 	uxtb.w	ip, ip
 801a8b8:	fb05 a502 	mla	r5, r5, r2, sl
 801a8bc:	fb0c 7702 	mla	r7, ip, r2, r7
 801a8c0:	1c72      	adds	r2, r6, #1
 801a8c2:	b2ad      	uxth	r5, r5
 801a8c4:	b2bf      	uxth	r7, r7
 801a8c6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a8ca:	f107 0a01 	add.w	sl, r7, #1
 801a8ce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a8d2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a8d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8da:	ea4a 0606 	orr.w	r6, sl, r6
 801a8de:	f105 0a01 	add.w	sl, r5, #1
 801a8e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a8e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8ee:	ea46 060a 	orr.w	r6, r6, sl
 801a8f2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a8f6:	e7b4      	b.n	801a862 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a8f8:	b007      	add	sp, #28
 801a8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8fe:	bf00      	nop
 801a900:	24002fac 	.word	0x24002fac

0801a904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a904:	4770      	bx	lr

0801a906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a906:	4770      	bx	lr

0801a908 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a908:	4770      	bx	lr

0801a90a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a90a:	4770      	bx	lr

0801a90c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a90c:	4770      	bx	lr

0801a90e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a90e:	4770      	bx	lr

0801a910 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a910:	4770      	bx	lr

0801a912 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a912:	4770      	bx	lr

0801a914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a914:	4770      	bx	lr

0801a916 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a916:	4770      	bx	lr

0801a918 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a918:	4770      	bx	lr

0801a91a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a91a:	4770      	bx	lr

0801a91c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a91c:	4770      	bx	lr

0801a91e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a91e:	4770      	bx	lr

0801a920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a920:	4770      	bx	lr

0801a922 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a922:	4770      	bx	lr

0801a924 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a924:	4770      	bx	lr

0801a926 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a926:	4770      	bx	lr

0801a928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a928:	4770      	bx	lr

0801a92a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a92a:	4770      	bx	lr

0801a92c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a92c:	4770      	bx	lr

0801a92e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a92e:	4770      	bx	lr

0801a930 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a930:	4770      	bx	lr

0801a932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a932:	4770      	bx	lr

0801a934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a934:	4770      	bx	lr

0801a936 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a936:	4770      	bx	lr

0801a938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a938:	4770      	bx	lr

0801a93a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a93a:	4770      	bx	lr

0801a93c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a93c:	4770      	bx	lr

0801a93e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a93e:	4770      	bx	lr

0801a940 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a940:	4770      	bx	lr

0801a942 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a942:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a946:	b088      	sub	sp, #32
 801a948:	4606      	mov	r6, r0
 801a94a:	4688      	mov	r8, r1
 801a94c:	4691      	mov	r9, r2
 801a94e:	ac08      	add	r4, sp, #32
 801a950:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a954:	4620      	mov	r0, r4
 801a956:	f7fd fc63 	bl	8018220 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a95a:	6833      	ldr	r3, [r6, #0]
 801a95c:	4605      	mov	r5, r0
 801a95e:	4620      	mov	r0, r4
 801a960:	699f      	ldr	r7, [r3, #24]
 801a962:	f7fd fb71 	bl	8018048 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a966:	4682      	mov	sl, r0
 801a968:	4620      	mov	r0, r4
 801a96a:	f7fd fba1 	bl	80180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a96e:	9500      	str	r5, [sp, #0]
 801a970:	464b      	mov	r3, r9
 801a972:	4642      	mov	r2, r8
 801a974:	4631      	mov	r1, r6
 801a976:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a97a:	a806      	add	r0, sp, #24
 801a97c:	47b8      	blx	r7
 801a97e:	4628      	mov	r0, r5
 801a980:	b008      	add	sp, #32
 801a982:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801a988 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a988:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a98c:	2300      	movs	r3, #0
 801a98e:	9300      	str	r3, [sp, #0]
 801a990:	4b3d      	ldr	r3, [pc, #244]	; (801aa88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a992:	781b      	ldrb	r3, [r3, #0]
 801a994:	2b00      	cmp	r3, #0
 801a996:	d137      	bne.n	801aa08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a998:	4a3c      	ldr	r2, [pc, #240]	; (801aa8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a99a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a99e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a9a2:	2b00      	cmp	r3, #0
 801a9a4:	d132      	bne.n	801aa0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a9a6:	4b3a      	ldr	r3, [pc, #232]	; (801aa90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a9a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a9ac:	ac02      	add	r4, sp, #8
 801a9ae:	6808      	ldr	r0, [r1, #0]
 801a9b0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a9b4:	ab02      	add	r3, sp, #8
 801a9b6:	6849      	ldr	r1, [r1, #4]
 801a9b8:	4d36      	ldr	r5, [pc, #216]	; (801aa94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a9ba:	c303      	stmia	r3!, {r0, r1}
 801a9bc:	4669      	mov	r1, sp
 801a9be:	4620      	mov	r0, r4
 801a9c0:	f7fa fd00 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a9c4:	4668      	mov	r0, sp
 801a9c6:	f7fa fcd5 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a9ca:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a9ce:	f8bd 2000 	ldrh.w	r2, [sp]
 801a9d2:	462f      	mov	r7, r5
 801a9d4:	6828      	ldr	r0, [r5, #0]
 801a9d6:	4413      	add	r3, r2
 801a9d8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a9dc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a9e0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a9e4:	4413      	add	r3, r2
 801a9e6:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a9ea:	6803      	ldr	r3, [r0, #0]
 801a9ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a9ee:	4798      	blx	r3
 801a9f0:	f010 0f01 	tst.w	r0, #1
 801a9f4:	d00c      	beq.n	801aa10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a9f6:	6828      	ldr	r0, [r5, #0]
 801a9f8:	6803      	ldr	r3, [r0, #0]
 801a9fa:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a9fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801aa00:	4798      	blx	r3
 801aa02:	b004      	add	sp, #16
 801aa04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aa08:	4a21      	ldr	r2, [pc, #132]	; (801aa90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801aa0a:	e7c6      	b.n	801a99a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801aa0c:	4b1f      	ldr	r3, [pc, #124]	; (801aa8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801aa0e:	e7cb      	b.n	801a9a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801aa10:	6838      	ldr	r0, [r7, #0]
 801aa12:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801aa16:	6803      	ldr	r3, [r0, #0]
 801aa18:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801aa1c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801aa20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa22:	4798      	blx	r3
 801aa24:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801aa28:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801aa2c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801aa30:	fb16 3602 	smlabb	r6, r6, r2, r3
 801aa34:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801aa38:	6838      	ldr	r0, [r7, #0]
 801aa3a:	6803      	ldr	r3, [r0, #0]
 801aa3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa3e:	4798      	blx	r3
 801aa40:	4a12      	ldr	r2, [pc, #72]	; (801aa8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801aa42:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801aa46:	8813      	ldrh	r3, [r2, #0]
 801aa48:	4691      	mov	r9, r2
 801aa4a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801aa4e:	435d      	muls	r5, r3
 801aa50:	fb03 1404 	mla	r4, r3, r4, r1
 801aa54:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aa58:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aa5c:	6838      	ldr	r0, [r7, #0]
 801aa5e:	42ac      	cmp	r4, r5
 801aa60:	6803      	ldr	r3, [r0, #0]
 801aa62:	d20e      	bcs.n	801aa82 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801aa64:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801aa68:	4632      	mov	r2, r6
 801aa6a:	4643      	mov	r3, r8
 801aa6c:	4621      	mov	r1, r4
 801aa6e:	47d0      	blx	sl
 801aa70:	f8b9 3000 	ldrh.w	r3, [r9]
 801aa74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa78:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801aa7c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aa80:	e7ec      	b.n	801aa5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801aa82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aa84:	4798      	blx	r3
 801aa86:	e7bc      	b.n	801aa02 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801aa88:	24002f9c 	.word	0x24002f9c
 801aa8c:	24002f9e 	.word	0x24002f9e
 801aa90:	24002fa0 	.word	0x24002fa0
 801aa94:	24002fa4 	.word	0x24002fa4

0801aa98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801aa98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa9c:	b08b      	sub	sp, #44	; 0x2c
 801aa9e:	460f      	mov	r7, r1
 801aaa0:	4616      	mov	r6, r2
 801aaa2:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801aaa6:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801aaaa:	f1bb 0f00 	cmp.w	fp, #0
 801aaae:	d04a      	beq.n	801ab46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801aab0:	6810      	ldr	r0, [r2, #0]
 801aab2:	ad06      	add	r5, sp, #24
 801aab4:	6851      	ldr	r1, [r2, #4]
 801aab6:	c503      	stmia	r5!, {r0, r1}
 801aab8:	6818      	ldr	r0, [r3, #0]
 801aaba:	ad08      	add	r5, sp, #32
 801aabc:	6859      	ldr	r1, [r3, #4]
 801aabe:	c503      	stmia	r5!, {r0, r1}
 801aac0:	a806      	add	r0, sp, #24
 801aac2:	f7fa fc57 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aac6:	4631      	mov	r1, r6
 801aac8:	a808      	add	r0, sp, #32
 801aaca:	f7fa fc7b 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aace:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801aad2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801aad6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801aada:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801aade:	fb16 2103 	smlabb	r1, r6, r3, r2
 801aae2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801aae6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801aaea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801aaee:	4f5f      	ldr	r7, [pc, #380]	; (801ac6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aaf0:	440a      	add	r2, r1
 801aaf2:	6838      	ldr	r0, [r7, #0]
 801aaf4:	46b9      	mov	r9, r7
 801aaf6:	f8ad 2020 	strh.w	r2, [sp, #32]
 801aafa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801aafe:	4413      	add	r3, r2
 801ab00:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ab04:	6803      	ldr	r3, [r0, #0]
 801ab06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ab08:	4798      	blx	r3
 801ab0a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ab0e:	d11d      	bne.n	801ab4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ab10:	b9fc      	cbnz	r4, 801ab52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ab12:	f010 0f01 	tst.w	r0, #1
 801ab16:	d01c      	beq.n	801ab52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ab18:	f8d9 0000 	ldr.w	r0, [r9]
 801ab1c:	2700      	movs	r7, #0
 801ab1e:	b2ad      	uxth	r5, r5
 801ab20:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ab24:	6801      	ldr	r1, [r0, #0]
 801ab26:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ab2a:	f8cd b00c 	str.w	fp, [sp, #12]
 801ab2e:	9501      	str	r5, [sp, #4]
 801ab30:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ab34:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ab38:	9402      	str	r4, [sp, #8]
 801ab3a:	fa1f f488 	uxth.w	r4, r8
 801ab3e:	9400      	str	r4, [sp, #0]
 801ab40:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ab42:	4631      	mov	r1, r6
 801ab44:	47a0      	blx	r4
 801ab46:	b00b      	add	sp, #44	; 0x2c
 801ab48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab4c:	f010 0f04 	tst.w	r0, #4
 801ab50:	e7e1      	b.n	801ab16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ab52:	f8d9 0000 	ldr.w	r0, [r9]
 801ab56:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ab5a:	6803      	ldr	r3, [r0, #0]
 801ab5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ab5e:	4798      	blx	r3
 801ab60:	4b43      	ldr	r3, [pc, #268]	; (801ac70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ab62:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ab66:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ab6a:	881a      	ldrh	r2, [r3, #0]
 801ab6c:	469a      	mov	sl, r3
 801ab6e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ab72:	fb05 f502 	mul.w	r5, r5, r2
 801ab76:	fb02 1404 	mla	r4, r2, r4, r1
 801ab7a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ab7e:	d059      	beq.n	801ac34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ab80:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ab84:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ab88:	fa1f f28b 	uxth.w	r2, fp
 801ab8c:	469e      	mov	lr, r3
 801ab8e:	fa1f f989 	uxth.w	r9, r9
 801ab92:	42ac      	cmp	r4, r5
 801ab94:	d264      	bcs.n	801ac60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ab96:	eb04 0a07 	add.w	sl, r4, r7
 801ab9a:	4554      	cmp	r4, sl
 801ab9c:	d23d      	bcs.n	801ac1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ab9e:	8821      	ldrh	r1, [r4, #0]
 801aba0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801aba4:	1208      	asrs	r0, r1, #8
 801aba6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801abaa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801abae:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801abb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abb6:	00c9      	lsls	r1, r1, #3
 801abb8:	fb10 f009 	smulbb	r0, r0, r9
 801abbc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801abc0:	b2c9      	uxtb	r1, r1
 801abc2:	fb0c 0c02 	mla	ip, ip, r2, r0
 801abc6:	10d8      	asrs	r0, r3, #3
 801abc8:	fb1b fb09 	smulbb	fp, fp, r9
 801abcc:	00db      	lsls	r3, r3, #3
 801abce:	fa1f fc8c 	uxth.w	ip, ip
 801abd2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801abd6:	fb11 f109 	smulbb	r1, r1, r9
 801abda:	b2db      	uxtb	r3, r3
 801abdc:	fb00 b002 	mla	r0, r0, r2, fp
 801abe0:	f10c 0b01 	add.w	fp, ip, #1
 801abe4:	fb03 1302 	mla	r3, r3, r2, r1
 801abe8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801abec:	b29b      	uxth	r3, r3
 801abee:	b280      	uxth	r0, r0
 801abf0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801abf4:	f103 0c01 	add.w	ip, r3, #1
 801abf8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801abfc:	1c43      	adds	r3, r0, #1
 801abfe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ac02:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ac06:	0940      	lsrs	r0, r0, #5
 801ac08:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ac0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac10:	ea4c 0c00 	orr.w	ip, ip, r0
 801ac14:	f824 cb02 	strh.w	ip, [r4], #2
 801ac18:	e7bf      	b.n	801ab9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ac1a:	f8be 3000 	ldrh.w	r3, [lr]
 801ac1e:	eba3 0308 	sub.w	r3, r3, r8
 801ac22:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac26:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ac2a:	eba3 0308 	sub.w	r3, r3, r8
 801ac2e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ac32:	e7ae      	b.n	801ab92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ac34:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ac38:	f8d9 0000 	ldr.w	r0, [r9]
 801ac3c:	42ac      	cmp	r4, r5
 801ac3e:	6803      	ldr	r3, [r0, #0]
 801ac40:	d20e      	bcs.n	801ac60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ac42:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ac46:	4632      	mov	r2, r6
 801ac48:	463b      	mov	r3, r7
 801ac4a:	4621      	mov	r1, r4
 801ac4c:	47c0      	blx	r8
 801ac4e:	f8ba 3000 	ldrh.w	r3, [sl]
 801ac52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac56:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ac5a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ac5e:	e7eb      	b.n	801ac38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ac60:	4b02      	ldr	r3, [pc, #8]	; (801ac6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ac62:	6818      	ldr	r0, [r3, #0]
 801ac64:	6803      	ldr	r3, [r0, #0]
 801ac66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ac68:	4798      	blx	r3
 801ac6a:	e76c      	b.n	801ab46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ac6c:	24002fa4 	.word	0x24002fa4
 801ac70:	24002f9e 	.word	0x24002f9e

0801ac74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ac74:	b510      	push	{r4, lr}
 801ac76:	4604      	mov	r4, r0
 801ac78:	2104      	movs	r1, #4
 801ac7a:	f00a fe2c 	bl	80258d6 <_ZdlPvj>
 801ac7e:	4620      	mov	r0, r4
 801ac80:	bd10      	pop	{r4, pc}

0801ac82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ac82:	b510      	push	{r4, lr}
 801ac84:	4604      	mov	r4, r0
 801ac86:	2104      	movs	r1, #4
 801ac88:	f00a fe25 	bl	80258d6 <_ZdlPvj>
 801ac8c:	4620      	mov	r0, r4
 801ac8e:	bd10      	pop	{r4, pc}

0801ac90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ac90:	b510      	push	{r4, lr}
 801ac92:	4604      	mov	r4, r0
 801ac94:	f640 0144 	movw	r1, #2116	; 0x844
 801ac98:	f00a fe1d 	bl	80258d6 <_ZdlPvj>
 801ac9c:	4620      	mov	r0, r4
 801ac9e:	bd10      	pop	{r4, pc}

0801aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801aca0:	b510      	push	{r4, lr}
 801aca2:	4604      	mov	r4, r0
 801aca4:	2104      	movs	r1, #4
 801aca6:	f00a fe16 	bl	80258d6 <_ZdlPvj>
 801acaa:	4620      	mov	r0, r4
 801acac:	bd10      	pop	{r4, pc}

0801acae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801acae:	b510      	push	{r4, lr}
 801acb0:	4604      	mov	r4, r0
 801acb2:	2104      	movs	r1, #4
 801acb4:	f00a fe0f 	bl	80258d6 <_ZdlPvj>
 801acb8:	4620      	mov	r0, r4
 801acba:	bd10      	pop	{r4, pc}

0801acbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801acbc:	b510      	push	{r4, lr}
 801acbe:	4604      	mov	r4, r0
 801acc0:	2104      	movs	r1, #4
 801acc2:	f00a fe08 	bl	80258d6 <_ZdlPvj>
 801acc6:	4620      	mov	r0, r4
 801acc8:	bd10      	pop	{r4, pc}

0801acca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801acca:	b510      	push	{r4, lr}
 801accc:	4604      	mov	r4, r0
 801acce:	2104      	movs	r1, #4
 801acd0:	f00a fe01 	bl	80258d6 <_ZdlPvj>
 801acd4:	4620      	mov	r0, r4
 801acd6:	bd10      	pop	{r4, pc}

0801acd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801acd8:	b510      	push	{r4, lr}
 801acda:	4604      	mov	r4, r0
 801acdc:	2104      	movs	r1, #4
 801acde:	f00a fdfa 	bl	80258d6 <_ZdlPvj>
 801ace2:	4620      	mov	r0, r4
 801ace4:	bd10      	pop	{r4, pc}

0801ace6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801ace6:	b510      	push	{r4, lr}
 801ace8:	4604      	mov	r4, r0
 801acea:	2104      	movs	r1, #4
 801acec:	f00a fdf3 	bl	80258d6 <_ZdlPvj>
 801acf0:	4620      	mov	r0, r4
 801acf2:	bd10      	pop	{r4, pc}

0801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801acf4:	b510      	push	{r4, lr}
 801acf6:	4604      	mov	r4, r0
 801acf8:	2104      	movs	r1, #4
 801acfa:	f00a fdec 	bl	80258d6 <_ZdlPvj>
 801acfe:	4620      	mov	r0, r4
 801ad00:	bd10      	pop	{r4, pc}

0801ad02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ad02:	b510      	push	{r4, lr}
 801ad04:	4604      	mov	r4, r0
 801ad06:	2104      	movs	r1, #4
 801ad08:	f00a fde5 	bl	80258d6 <_ZdlPvj>
 801ad0c:	4620      	mov	r0, r4
 801ad0e:	bd10      	pop	{r4, pc}

0801ad10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ad10:	b510      	push	{r4, lr}
 801ad12:	4604      	mov	r4, r0
 801ad14:	2104      	movs	r1, #4
 801ad16:	f00a fdde 	bl	80258d6 <_ZdlPvj>
 801ad1a:	4620      	mov	r0, r4
 801ad1c:	bd10      	pop	{r4, pc}

0801ad1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ad1e:	b510      	push	{r4, lr}
 801ad20:	4604      	mov	r4, r0
 801ad22:	2104      	movs	r1, #4
 801ad24:	f00a fdd7 	bl	80258d6 <_ZdlPvj>
 801ad28:	4620      	mov	r0, r4
 801ad2a:	bd10      	pop	{r4, pc}

0801ad2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ad2c:	b510      	push	{r4, lr}
 801ad2e:	4604      	mov	r4, r0
 801ad30:	2104      	movs	r1, #4
 801ad32:	f00a fdd0 	bl	80258d6 <_ZdlPvj>
 801ad36:	4620      	mov	r0, r4
 801ad38:	bd10      	pop	{r4, pc}

0801ad3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ad3a:	b510      	push	{r4, lr}
 801ad3c:	4604      	mov	r4, r0
 801ad3e:	2104      	movs	r1, #4
 801ad40:	f00a fdc9 	bl	80258d6 <_ZdlPvj>
 801ad44:	4620      	mov	r0, r4
 801ad46:	bd10      	pop	{r4, pc}

0801ad48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ad48:	b510      	push	{r4, lr}
 801ad4a:	4604      	mov	r4, r0
 801ad4c:	2104      	movs	r1, #4
 801ad4e:	f00a fdc2 	bl	80258d6 <_ZdlPvj>
 801ad52:	4620      	mov	r0, r4
 801ad54:	bd10      	pop	{r4, pc}

0801ad56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ad56:	b510      	push	{r4, lr}
 801ad58:	4604      	mov	r4, r0
 801ad5a:	2104      	movs	r1, #4
 801ad5c:	f00a fdbb 	bl	80258d6 <_ZdlPvj>
 801ad60:	4620      	mov	r0, r4
 801ad62:	bd10      	pop	{r4, pc}

0801ad64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ad64:	b510      	push	{r4, lr}
 801ad66:	4604      	mov	r4, r0
 801ad68:	2104      	movs	r1, #4
 801ad6a:	f00a fdb4 	bl	80258d6 <_ZdlPvj>
 801ad6e:	4620      	mov	r0, r4
 801ad70:	bd10      	pop	{r4, pc}

0801ad72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ad72:	b510      	push	{r4, lr}
 801ad74:	4604      	mov	r4, r0
 801ad76:	2104      	movs	r1, #4
 801ad78:	f00a fdad 	bl	80258d6 <_ZdlPvj>
 801ad7c:	4620      	mov	r0, r4
 801ad7e:	bd10      	pop	{r4, pc}

0801ad80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ad80:	b510      	push	{r4, lr}
 801ad82:	4604      	mov	r4, r0
 801ad84:	2104      	movs	r1, #4
 801ad86:	f00a fda6 	bl	80258d6 <_ZdlPvj>
 801ad8a:	4620      	mov	r0, r4
 801ad8c:	bd10      	pop	{r4, pc}

0801ad8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ad8e:	b510      	push	{r4, lr}
 801ad90:	4604      	mov	r4, r0
 801ad92:	2104      	movs	r1, #4
 801ad94:	f00a fd9f 	bl	80258d6 <_ZdlPvj>
 801ad98:	4620      	mov	r0, r4
 801ad9a:	bd10      	pop	{r4, pc}

0801ad9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ad9c:	b510      	push	{r4, lr}
 801ad9e:	4604      	mov	r4, r0
 801ada0:	2104      	movs	r1, #4
 801ada2:	f00a fd98 	bl	80258d6 <_ZdlPvj>
 801ada6:	4620      	mov	r0, r4
 801ada8:	bd10      	pop	{r4, pc}

0801adaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801adaa:	b510      	push	{r4, lr}
 801adac:	4604      	mov	r4, r0
 801adae:	2104      	movs	r1, #4
 801adb0:	f00a fd91 	bl	80258d6 <_ZdlPvj>
 801adb4:	4620      	mov	r0, r4
 801adb6:	bd10      	pop	{r4, pc}

0801adb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801adb8:	b510      	push	{r4, lr}
 801adba:	4604      	mov	r4, r0
 801adbc:	2104      	movs	r1, #4
 801adbe:	f00a fd8a 	bl	80258d6 <_ZdlPvj>
 801adc2:	4620      	mov	r0, r4
 801adc4:	bd10      	pop	{r4, pc}

0801adc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801adc6:	b510      	push	{r4, lr}
 801adc8:	4604      	mov	r4, r0
 801adca:	2104      	movs	r1, #4
 801adcc:	f00a fd83 	bl	80258d6 <_ZdlPvj>
 801add0:	4620      	mov	r0, r4
 801add2:	bd10      	pop	{r4, pc}

0801add4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801add4:	b510      	push	{r4, lr}
 801add6:	4604      	mov	r4, r0
 801add8:	2104      	movs	r1, #4
 801adda:	f00a fd7c 	bl	80258d6 <_ZdlPvj>
 801adde:	4620      	mov	r0, r4
 801ade0:	bd10      	pop	{r4, pc}

0801ade2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ade2:	b510      	push	{r4, lr}
 801ade4:	4604      	mov	r4, r0
 801ade6:	2104      	movs	r1, #4
 801ade8:	f00a fd75 	bl	80258d6 <_ZdlPvj>
 801adec:	4620      	mov	r0, r4
 801adee:	bd10      	pop	{r4, pc}

0801adf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801adf0:	b510      	push	{r4, lr}
 801adf2:	4604      	mov	r4, r0
 801adf4:	2104      	movs	r1, #4
 801adf6:	f00a fd6e 	bl	80258d6 <_ZdlPvj>
 801adfa:	4620      	mov	r0, r4
 801adfc:	bd10      	pop	{r4, pc}

0801adfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801adfe:	b510      	push	{r4, lr}
 801ae00:	4604      	mov	r4, r0
 801ae02:	2104      	movs	r1, #4
 801ae04:	f00a fd67 	bl	80258d6 <_ZdlPvj>
 801ae08:	4620      	mov	r0, r4
 801ae0a:	bd10      	pop	{r4, pc}

0801ae0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801ae0c:	b510      	push	{r4, lr}
 801ae0e:	4604      	mov	r4, r0
 801ae10:	2104      	movs	r1, #4
 801ae12:	f00a fd60 	bl	80258d6 <_ZdlPvj>
 801ae16:	4620      	mov	r0, r4
 801ae18:	bd10      	pop	{r4, pc}

0801ae1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801ae1a:	b510      	push	{r4, lr}
 801ae1c:	4604      	mov	r4, r0
 801ae1e:	2104      	movs	r1, #4
 801ae20:	f00a fd59 	bl	80258d6 <_ZdlPvj>
 801ae24:	4620      	mov	r0, r4
 801ae26:	bd10      	pop	{r4, pc}

0801ae28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ae28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae2c:	b08f      	sub	sp, #60	; 0x3c
 801ae2e:	461c      	mov	r4, r3
 801ae30:	9205      	str	r2, [sp, #20]
 801ae32:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ae36:	9100      	str	r1, [sp, #0]
 801ae38:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ae3a:	9201      	str	r2, [sp, #4]
 801ae3c:	2a00      	cmp	r2, #0
 801ae3e:	f000 8116 	beq.w	801b06e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801ae42:	6820      	ldr	r0, [r4, #0]
 801ae44:	aa0a      	add	r2, sp, #40	; 0x28
 801ae46:	6861      	ldr	r1, [r4, #4]
 801ae48:	c203      	stmia	r2!, {r0, r1}
 801ae4a:	6818      	ldr	r0, [r3, #0]
 801ae4c:	aa0c      	add	r2, sp, #48	; 0x30
 801ae4e:	6859      	ldr	r1, [r3, #4]
 801ae50:	c203      	stmia	r2!, {r0, r1}
 801ae52:	a80a      	add	r0, sp, #40	; 0x28
 801ae54:	f7fa fa8e 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ae58:	4621      	mov	r1, r4
 801ae5a:	a80c      	add	r0, sp, #48	; 0x30
 801ae5c:	f7fa fab2 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ae60:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ae64:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ae68:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ae6c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ae70:	bfdb      	ittet	le
 801ae72:	b2b3      	uxthle	r3, r6
 801ae74:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ae78:	2301      	movgt	r3, #1
 801ae7a:	fb92 f3f3 	sdivle	r3, r2, r3
 801ae7e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ae82:	441d      	add	r5, r3
 801ae84:	fb92 f1f3 	sdiv	r1, r2, r3
 801ae88:	fa1f fc81 	uxth.w	ip, r1
 801ae8c:	3d01      	subs	r5, #1
 801ae8e:	fb0c 2413 	mls	r4, ip, r3, r2
 801ae92:	4661      	mov	r1, ip
 801ae94:	fb14 f406 	smulbb	r4, r4, r6
 801ae98:	4404      	add	r4, r0
 801ae9a:	fb95 f5f3 	sdiv	r5, r5, r3
 801ae9e:	b2a4      	uxth	r4, r4
 801aea0:	b131      	cbz	r1, 801aeb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801aea2:	9b05      	ldr	r3, [sp, #20]
 801aea4:	9900      	ldr	r1, [sp, #0]
 801aea6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801aeaa:	ba1b      	rev	r3, r3
 801aeac:	4419      	add	r1, r3
 801aeae:	9100      	str	r1, [sp, #0]
 801aeb0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801aeb4:	b2ad      	uxth	r5, r5
 801aeb6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801aeba:	4418      	add	r0, r3
 801aebc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801aec0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801aec4:	00ad      	lsls	r5, r5, #2
 801aec6:	441a      	add	r2, r3
 801aec8:	4b6a      	ldr	r3, [pc, #424]	; (801b074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801aeca:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801aece:	6818      	ldr	r0, [r3, #0]
 801aed0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801aed4:	6803      	ldr	r3, [r0, #0]
 801aed6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aed8:	4798      	blx	r3
 801aeda:	4967      	ldr	r1, [pc, #412]	; (801b078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801aedc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801aee0:	2c00      	cmp	r4, #0
 801aee2:	880b      	ldrh	r3, [r1, #0]
 801aee4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801aee8:	bf0c      	ite	eq
 801aeea:	46c6      	moveq	lr, r8
 801aeec:	f04f 0e00 	movne.w	lr, #0
 801aef0:	9109      	str	r1, [sp, #36]	; 0x24
 801aef2:	fb03 c202 	mla	r2, r3, r2, ip
 801aef6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801aefa:	4373      	muls	r3, r6
 801aefc:	fa1f fe8e 	uxth.w	lr, lr
 801af00:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801af04:	9103      	str	r1, [sp, #12]
 801af06:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801af0a:	9306      	str	r3, [sp, #24]
 801af0c:	1d2b      	adds	r3, r5, #4
 801af0e:	9307      	str	r3, [sp, #28]
 801af10:	9b01      	ldr	r3, [sp, #4]
 801af12:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801af16:	2300      	movs	r3, #0
 801af18:	b292      	uxth	r2, r2
 801af1a:	9302      	str	r3, [sp, #8]
 801af1c:	9204      	str	r2, [sp, #16]
 801af1e:	9a06      	ldr	r2, [sp, #24]
 801af20:	4282      	cmp	r2, r0
 801af22:	f240 809f 	bls.w	801b064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 801af26:	b963      	cbnz	r3, 801af42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801af28:	9b00      	ldr	r3, [sp, #0]
 801af2a:	781a      	ldrb	r2, [r3, #0]
 801af2c:	0993      	lsrs	r3, r2, #6
 801af2e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801af32:	9202      	str	r2, [sp, #8]
 801af34:	1e5a      	subs	r2, r3, #1
 801af36:	2a02      	cmp	r2, #2
 801af38:	d815      	bhi.n	801af66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801af3a:	9a00      	ldr	r2, [sp, #0]
 801af3c:	b29b      	uxth	r3, r3
 801af3e:	3201      	adds	r2, #1
 801af40:	9200      	str	r2, [sp, #0]
 801af42:	b1b4      	cbz	r4, 801af72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 801af44:	429c      	cmp	r4, r3
 801af46:	bf91      	iteee	ls
 801af48:	1b1c      	subls	r4, r3, r4
 801af4a:	1ae4      	subhi	r4, r4, r3
 801af4c:	4671      	movhi	r1, lr
 801af4e:	f04f 0a00 	movhi.w	sl, #0
 801af52:	bf9b      	ittet	ls
 801af54:	fa1f fa84 	uxthls.w	sl, r4
 801af58:	2400      	movls	r4, #0
 801af5a:	b2a4      	uxthhi	r4, r4
 801af5c:	fa1f f188 	uxthls.w	r1, r8
 801af60:	4653      	mov	r3, sl
 801af62:	468e      	mov	lr, r1
 801af64:	e7db      	b.n	801af1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801af66:	9a00      	ldr	r2, [sp, #0]
 801af68:	9b00      	ldr	r3, [sp, #0]
 801af6a:	3202      	adds	r2, #2
 801af6c:	785b      	ldrb	r3, [r3, #1]
 801af6e:	9200      	str	r2, [sp, #0]
 801af70:	e7e7      	b.n	801af42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801af72:	2202      	movs	r2, #2
 801af74:	9907      	ldr	r1, [sp, #28]
 801af76:	4573      	cmp	r3, lr
 801af78:	4615      	mov	r5, r2
 801af7a:	9a02      	ldr	r2, [sp, #8]
 801af7c:	bf24      	itt	cs
 801af7e:	eba3 0a0e 	subcs.w	sl, r3, lr
 801af82:	46f1      	movcs	r9, lr
 801af84:	fb15 1202 	smlabb	r2, r5, r2, r1
 801af88:	9905      	ldr	r1, [sp, #20]
 801af8a:	bf34      	ite	cc
 801af8c:	4699      	movcc	r9, r3
 801af8e:	fa1f fa8a 	uxthcs.w	sl, sl
 801af92:	f831 c002 	ldrh.w	ip, [r1, r2]
 801af96:	bf38      	it	cc
 801af98:	ebae 0103 	subcc.w	r1, lr, r3
 801af9c:	9a01      	ldr	r2, [sp, #4]
 801af9e:	bf2e      	itee	cs
 801afa0:	4621      	movcs	r1, r4
 801afa2:	b289      	uxthcc	r1, r1
 801afa4:	46a2      	movcc	sl, r4
 801afa6:	2aff      	cmp	r2, #255	; 0xff
 801afa8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801afac:	d105      	bne.n	801afba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801afae:	4481      	add	r9, r0
 801afb0:	4581      	cmp	r9, r0
 801afb2:	d045      	beq.n	801b040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801afb4:	f820 cb02 	strh.w	ip, [r0], #2
 801afb8:	e7fa      	b.n	801afb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 801afba:	ea4f 222c 	mov.w	r2, ip, asr #8
 801afbe:	9d03      	ldr	r5, [sp, #12]
 801afc0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801afc4:	4481      	add	r9, r0
 801afc6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801afca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801afce:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801afd2:	fa5f fc8c 	uxtb.w	ip, ip
 801afd6:	436a      	muls	r2, r5
 801afd8:	fb0b fb05 	mul.w	fp, fp, r5
 801afdc:	fb0c fc05 	mul.w	ip, ip, r5
 801afe0:	9208      	str	r2, [sp, #32]
 801afe2:	4581      	cmp	r9, r0
 801afe4:	d02c      	beq.n	801b040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801afe6:	8802      	ldrh	r2, [r0, #0]
 801afe8:	9d04      	ldr	r5, [sp, #16]
 801afea:	1216      	asrs	r6, r2, #8
 801afec:	9f04      	ldr	r7, [sp, #16]
 801afee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aff2:	fb16 f605 	smulbb	r6, r6, r5
 801aff6:	9d08      	ldr	r5, [sp, #32]
 801aff8:	442e      	add	r6, r5
 801affa:	10d5      	asrs	r5, r2, #3
 801affc:	00d2      	lsls	r2, r2, #3
 801affe:	b2b6      	uxth	r6, r6
 801b000:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b004:	b2d2      	uxtb	r2, r2
 801b006:	fb15 f507 	smulbb	r5, r5, r7
 801b00a:	fb12 f207 	smulbb	r2, r2, r7
 801b00e:	1c77      	adds	r7, r6, #1
 801b010:	445d      	add	r5, fp
 801b012:	4462      	add	r2, ip
 801b014:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b018:	b2ad      	uxth	r5, r5
 801b01a:	b292      	uxth	r2, r2
 801b01c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b020:	1c57      	adds	r7, r2, #1
 801b022:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b026:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b02a:	4316      	orrs	r6, r2
 801b02c:	1c6a      	adds	r2, r5, #1
 801b02e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b032:	096d      	lsrs	r5, r5, #5
 801b034:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b038:	432e      	orrs	r6, r5
 801b03a:	f820 6b02 	strh.w	r6, [r0], #2
 801b03e:	e7d0      	b.n	801afe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 801b040:	4573      	cmp	r3, lr
 801b042:	d38d      	bcc.n	801af60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801b044:	fa1f f188 	uxth.w	r1, r8
 801b048:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b04c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b04e:	1a64      	subs	r4, r4, r1
 801b050:	881b      	ldrh	r3, [r3, #0]
 801b052:	b2a4      	uxth	r4, r4
 801b054:	eba3 0308 	sub.w	r3, r3, r8
 801b058:	2c00      	cmp	r4, #0
 801b05a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b05e:	bf18      	it	ne
 801b060:	2100      	movne	r1, #0
 801b062:	e77d      	b.n	801af60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801b064:	4b03      	ldr	r3, [pc, #12]	; (801b074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b066:	6818      	ldr	r0, [r3, #0]
 801b068:	6803      	ldr	r3, [r0, #0]
 801b06a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b06c:	4798      	blx	r3
 801b06e:	b00f      	add	sp, #60	; 0x3c
 801b070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b074:	24002fa4 	.word	0x24002fa4
 801b078:	24002f9e 	.word	0x24002f9e

0801b07c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b080:	b09f      	sub	sp, #124	; 0x7c
 801b082:	461d      	mov	r5, r3
 801b084:	4604      	mov	r4, r0
 801b086:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b088:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b08c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b090:	9209      	str	r2, [sp, #36]	; 0x24
 801b092:	2a00      	cmp	r2, #0
 801b094:	f000 81ed 	beq.w	801b472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 801b098:	6828      	ldr	r0, [r5, #0]
 801b09a:	aa1a      	add	r2, sp, #104	; 0x68
 801b09c:	6869      	ldr	r1, [r5, #4]
 801b09e:	c203      	stmia	r2!, {r0, r1}
 801b0a0:	6818      	ldr	r0, [r3, #0]
 801b0a2:	aa1c      	add	r2, sp, #112	; 0x70
 801b0a4:	6859      	ldr	r1, [r3, #4]
 801b0a6:	c203      	stmia	r2!, {r0, r1}
 801b0a8:	a81a      	add	r0, sp, #104	; 0x68
 801b0aa:	f7fa f963 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b0ae:	4629      	mov	r1, r5
 801b0b0:	a81c      	add	r0, sp, #112	; 0x70
 801b0b2:	f7fa f987 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b0b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b0ba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b0be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b0c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b0c6:	bfdb      	ittet	le
 801b0c8:	b29a      	uxthle	r2, r3
 801b0ca:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b0ce:	2201      	movgt	r2, #1
 801b0d0:	fb91 f2f2 	sdivle	r2, r1, r2
 801b0d4:	9202      	str	r2, [sp, #8]
 801b0d6:	9802      	ldr	r0, [sp, #8]
 801b0d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b0dc:	9902      	ldr	r1, [sp, #8]
 801b0de:	fb92 f0f0 	sdiv	r0, r2, r0
 801b0e2:	b280      	uxth	r0, r0
 801b0e4:	4488      	add	r8, r1
 801b0e6:	9010      	str	r0, [sp, #64]	; 0x40
 801b0e8:	f108 38ff 	add.w	r8, r8, #4294967295
 801b0ec:	9802      	ldr	r0, [sp, #8]
 801b0ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b0f0:	fb05 2510 	mls	r5, r5, r0, r2
 801b0f4:	fb98 f8f1 	sdiv	r8, r8, r1
 801b0f8:	fb15 f503 	smulbb	r5, r5, r3
 801b0fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b100:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b104:	f108 0801 	add.w	r8, r8, #1
 801b108:	440d      	add	r5, r1
 801b10a:	4419      	add	r1, r3
 801b10c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b110:	fa1f f888 	uxth.w	r8, r8
 801b114:	441a      	add	r2, r3
 801b116:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b11a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b11e:	b2ad      	uxth	r5, r5
 801b120:	9304      	str	r3, [sp, #16]
 801b122:	4b94      	ldr	r3, [pc, #592]	; (801b374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b124:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b128:	6818      	ldr	r0, [r3, #0]
 801b12a:	6803      	ldr	r3, [r0, #0]
 801b12c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b12e:	4798      	blx	r3
 801b130:	4b91      	ldr	r3, [pc, #580]	; (801b378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b132:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b136:	2d00      	cmp	r5, #0
 801b138:	881a      	ldrh	r2, [r3, #0]
 801b13a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b13e:	fb02 f606 	mul.w	r6, r2, r6
 801b142:	fb02 7101 	mla	r1, r2, r1, r7
 801b146:	9318      	str	r3, [sp, #96]	; 0x60
 801b148:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b14c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b150:	f04f 0100 	mov.w	r1, #0
 801b154:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b158:	930f      	str	r3, [sp, #60]	; 0x3c
 801b15a:	4b88      	ldr	r3, [pc, #544]	; (801b37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 801b15c:	920a      	str	r2, [sp, #40]	; 0x28
 801b15e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b160:	eba3 0304 	sub.w	r3, r3, r4
 801b164:	910d      	str	r1, [sp, #52]	; 0x34
 801b166:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b16a:	9319      	str	r3, [sp, #100]	; 0x64
 801b16c:	f108 0204 	add.w	r2, r8, #4
 801b170:	9211      	str	r2, [sp, #68]	; 0x44
 801b172:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b174:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b178:	9215      	str	r2, [sp, #84]	; 0x54
 801b17a:	9a04      	ldr	r2, [sp, #16]
 801b17c:	bf18      	it	ne
 801b17e:	2200      	movne	r2, #0
 801b180:	b292      	uxth	r2, r2
 801b182:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b184:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b186:	fa11 f383 	uxtah	r3, r1, r3
 801b18a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b18c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b190:	3304      	adds	r3, #4
 801b192:	9306      	str	r3, [sp, #24]
 801b194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b196:	4283      	cmp	r3, r0
 801b198:	f240 8166 	bls.w	801b468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 801b19c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b1a0:	f04f 0a01 	mov.w	sl, #1
 801b1a4:	9902      	ldr	r1, [sp, #8]
 801b1a6:	9e06      	ldr	r6, [sp, #24]
 801b1a8:	46d3      	mov	fp, sl
 801b1aa:	4657      	mov	r7, sl
 801b1ac:	7836      	ldrb	r6, [r6, #0]
 801b1ae:	fbb5 f3f3 	udiv	r3, r5, r3
 801b1b2:	1acb      	subs	r3, r1, r3
 801b1b4:	9612      	str	r6, [sp, #72]	; 0x48
 801b1b6:	3601      	adds	r6, #1
 801b1b8:	b29b      	uxth	r3, r3
 801b1ba:	9605      	str	r6, [sp, #20]
 801b1bc:	9316      	str	r3, [sp, #88]	; 0x58
 801b1be:	9b06      	ldr	r3, [sp, #24]
 801b1c0:	7859      	ldrb	r1, [r3, #1]
 801b1c2:	789b      	ldrb	r3, [r3, #2]
 801b1c4:	021b      	lsls	r3, r3, #8
 801b1c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b1ca:	9906      	ldr	r1, [sp, #24]
 801b1cc:	78c9      	ldrb	r1, [r1, #3]
 801b1ce:	430b      	orrs	r3, r1
 801b1d0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b1d2:	4419      	add	r1, r3
 801b1d4:	1c4e      	adds	r6, r1, #1
 801b1d6:	7849      	ldrb	r1, [r1, #1]
 801b1d8:	9603      	str	r6, [sp, #12]
 801b1da:	0209      	lsls	r1, r1, #8
 801b1dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b1de:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b1e2:	5cf3      	ldrb	r3, [r6, r3]
 801b1e4:	4319      	orrs	r1, r3
 801b1e6:	b28b      	uxth	r3, r1
 801b1e8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b1ec:	930c      	str	r3, [sp, #48]	; 0x30
 801b1ee:	2300      	movs	r3, #0
 801b1f0:	9307      	str	r3, [sp, #28]
 801b1f2:	469c      	mov	ip, r3
 801b1f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b1f8:	930e      	str	r3, [sp, #56]	; 0x38
 801b1fa:	2d00      	cmp	r5, #0
 801b1fc:	d07e      	beq.n	801b2fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801b1fe:	42af      	cmp	r7, r5
 801b200:	d26e      	bcs.n	801b2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801b202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b204:	1bed      	subs	r5, r5, r7
 801b206:	9201      	str	r2, [sp, #4]
 801b208:	4283      	cmp	r3, r0
 801b20a:	b2ad      	uxth	r5, r5
 801b20c:	d802      	bhi.n	801b214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801b20e:	e073      	b.n	801b2f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b210:	2b00      	cmp	r3, #0
 801b212:	d15f      	bne.n	801b2d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801b214:	9b03      	ldr	r3, [sp, #12]
 801b216:	f1cb 0207 	rsb	r2, fp, #7
 801b21a:	785b      	ldrb	r3, [r3, #1]
 801b21c:	4093      	lsls	r3, r2
 801b21e:	005b      	lsls	r3, r3, #1
 801b220:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b224:	9b03      	ldr	r3, [sp, #12]
 801b226:	781b      	ldrb	r3, [r3, #0]
 801b228:	fa43 f30b 	asr.w	r3, r3, fp
 801b22c:	b2db      	uxtb	r3, r3
 801b22e:	4313      	orrs	r3, r2
 801b230:	f10b 0201 	add.w	r2, fp, #1
 801b234:	fa5f fb82 	uxtb.w	fp, r2
 801b238:	9a03      	ldr	r2, [sp, #12]
 801b23a:	b29f      	uxth	r7, r3
 801b23c:	f1bb 0f08 	cmp.w	fp, #8
 801b240:	bf13      	iteet	ne
 801b242:	3201      	addne	r2, #1
 801b244:	3202      	addeq	r2, #2
 801b246:	f04f 0b00 	moveq.w	fp, #0
 801b24a:	9203      	strne	r2, [sp, #12]
 801b24c:	bf08      	it	eq
 801b24e:	9203      	streq	r2, [sp, #12]
 801b250:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b252:	42ba      	cmp	r2, r7
 801b254:	d309      	bcc.n	801b26a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801b256:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b25a:	2301      	movs	r3, #1
 801b25c:	9a05      	ldr	r2, [sp, #20]
 801b25e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b262:	d30e      	bcc.n	801b282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801b264:	469a      	mov	sl, r3
 801b266:	2600      	movs	r6, #0
 801b268:	e035      	b.n	801b2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801b26a:	9b05      	ldr	r3, [sp, #20]
 801b26c:	429f      	cmp	r7, r3
 801b26e:	d318      	bcc.n	801b2a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 801b270:	eb04 030a 	add.w	r3, r4, sl
 801b274:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b278:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b27c:	f10a 0301 	add.w	r3, sl, #1
 801b280:	b29b      	uxth	r3, r3
 801b282:	9a05      	ldr	r2, [sp, #20]
 801b284:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b288:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b28c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b28e:	7116      	strb	r6, [r2, #4]
 801b290:	f10a 0601 	add.w	r6, sl, #1
 801b294:	80d1      	strh	r1, [r2, #6]
 801b296:	7156      	strb	r6, [r2, #5]
 801b298:	9a05      	ldr	r2, [sp, #20]
 801b29a:	3201      	adds	r2, #1
 801b29c:	b292      	uxth	r2, r2
 801b29e:	9205      	str	r2, [sp, #20]
 801b2a0:	e7e0      	b.n	801b264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801b2a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b2a6:	463a      	mov	r2, r7
 801b2a8:	795b      	ldrb	r3, [r3, #5]
 801b2aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b2ae:	4426      	add	r6, r4
 801b2b0:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b2b2:	eb01 0c06 	add.w	ip, r1, r6
 801b2b6:	f1bc 0f00 	cmp.w	ip, #0
 801b2ba:	dd07      	ble.n	801b2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 801b2bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b2c0:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b2c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b2c8:	88d2      	ldrh	r2, [r2, #6]
 801b2ca:	e7f1      	b.n	801b2b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 801b2cc:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b2d0:	b29b      	uxth	r3, r3
 801b2d2:	e7c3      	b.n	801b25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801b2d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b2d6:	970c      	str	r7, [sp, #48]	; 0x30
 801b2d8:	46b4      	mov	ip, r6
 801b2da:	9a01      	ldr	r2, [sp, #4]
 801b2dc:	461f      	mov	r7, r3
 801b2de:	e78c      	b.n	801b1fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801b2e0:	1b7b      	subs	r3, r7, r5
 801b2e2:	eb0c 0605 	add.w	r6, ip, r5
 801b2e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b2ea:	b29b      	uxth	r3, r3
 801b2ec:	b2b6      	uxth	r6, r6
 801b2ee:	9201      	str	r2, [sp, #4]
 801b2f0:	2500      	movs	r5, #0
 801b2f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b2f4:	4282      	cmp	r2, r0
 801b2f6:	d88b      	bhi.n	801b210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b2f8:	9a01      	ldr	r2, [sp, #4]
 801b2fa:	e74b      	b.n	801b194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 801b2fc:	4297      	cmp	r7, r2
 801b2fe:	d332      	bcc.n	801b366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801b300:	1abb      	subs	r3, r7, r2
 801b302:	9208      	str	r2, [sp, #32]
 801b304:	9501      	str	r5, [sp, #4]
 801b306:	b29b      	uxth	r3, r3
 801b308:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b30a:	29ff      	cmp	r1, #255	; 0xff
 801b30c:	9908      	ldr	r1, [sp, #32]
 801b30e:	eb0c 0601 	add.w	r6, ip, r1
 801b312:	d135      	bne.n	801b380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b314:	f1a0 0e02 	sub.w	lr, r0, #2
 801b318:	b2b6      	uxth	r6, r6
 801b31a:	45b4      	cmp	ip, r6
 801b31c:	f040 808c 	bne.w	801b438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 801b320:	9908      	ldr	r1, [sp, #32]
 801b322:	4297      	cmp	r7, r2
 801b324:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b328:	d3e2      	bcc.n	801b2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801b32a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b32c:	9904      	ldr	r1, [sp, #16]
 801b32e:	8812      	ldrh	r2, [r2, #0]
 801b330:	1a52      	subs	r2, r2, r1
 801b332:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b334:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b338:	9a07      	ldr	r2, [sp, #28]
 801b33a:	3201      	adds	r2, #1
 801b33c:	428a      	cmp	r2, r1
 801b33e:	9207      	str	r2, [sp, #28]
 801b340:	f040 8087 	bne.w	801b452 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801b344:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b348:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b34c:	9b04      	ldr	r3, [sp, #16]
 801b34e:	1bed      	subs	r5, r5, r7
 801b350:	b2ad      	uxth	r5, r5
 801b352:	2d00      	cmp	r5, #0
 801b354:	bf08      	it	eq
 801b356:	461a      	moveq	r2, r3
 801b358:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b35a:	bf18      	it	ne
 801b35c:	2200      	movne	r2, #0
 801b35e:	3301      	adds	r3, #1
 801b360:	b292      	uxth	r2, r2
 801b362:	930d      	str	r3, [sp, #52]	; 0x34
 801b364:	e70d      	b.n	801b182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801b366:	1bd1      	subs	r1, r2, r7
 801b368:	9708      	str	r7, [sp, #32]
 801b36a:	b28b      	uxth	r3, r1
 801b36c:	9301      	str	r3, [sp, #4]
 801b36e:	462b      	mov	r3, r5
 801b370:	e7ca      	b.n	801b308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801b372:	bf00      	nop
 801b374:	24002fa4 	.word	0x24002fa4
 801b378:	24002f9e 	.word	0x24002f9e
 801b37c:	fffff7fb 	.word	0xfffff7fb
 801b380:	b2b6      	uxth	r6, r6
 801b382:	900b      	str	r0, [sp, #44]	; 0x2c
 801b384:	45b4      	cmp	ip, r6
 801b386:	d0cb      	beq.n	801b320 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801b388:	f10c 0101 	add.w	r1, ip, #1
 801b38c:	44a4      	add	ip, r4
 801b38e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b390:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b394:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b396:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b39a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b39c:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b3a0:	f8b1 c000 	ldrh.w	ip, [r1]
 801b3a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b3a6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b3aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b3ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b3b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b3b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b3be:	fb1e fe01 	smulbb	lr, lr, r1
 801b3c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b3c4:	fa5f fc8c 	uxtb.w	ip, ip
 801b3c8:	fb08 e801 	mla	r8, r8, r1, lr
 801b3cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b3d0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b3d2:	00ed      	lsls	r5, r5, #3
 801b3d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b3d8:	fa1f f888 	uxth.w	r8, r8
 801b3dc:	fb19 f901 	smulbb	r9, r9, r1
 801b3e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b3e2:	b2ed      	uxtb	r5, r5
 801b3e4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b3e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b3ea:	fb1c fc01 	smulbb	ip, ip, r1
 801b3ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b3f0:	fa1f fe8e 	uxth.w	lr, lr
 801b3f4:	fb05 c501 	mla	r5, r5, r1, ip
 801b3f8:	f108 0c01 	add.w	ip, r8, #1
 801b3fc:	f10e 0901 	add.w	r9, lr, #1
 801b400:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b402:	b2ad      	uxth	r5, r5
 801b404:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b408:	f105 0c01 	add.w	ip, r5, #1
 801b40c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b410:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b414:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b418:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b41c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b420:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b424:	ea4c 0808 	orr.w	r8, ip, r8
 801b428:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b42c:	ea48 0809 	orr.w	r8, r8, r9
 801b430:	f821 8b02 	strh.w	r8, [r1], #2
 801b434:	910b      	str	r1, [sp, #44]	; 0x2c
 801b436:	e7a5      	b.n	801b384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 801b438:	f10c 0801 	add.w	r8, ip, #1
 801b43c:	44a4      	add	ip, r4
 801b43e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b440:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b444:	fa1f fc88 	uxth.w	ip, r8
 801b448:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b44c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b450:	e763      	b.n	801b31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801b452:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b456:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b45a:	1aad      	subs	r5, r5, r2
 801b45c:	b2ad      	uxth	r5, r5
 801b45e:	2d00      	cmp	r5, #0
 801b460:	bf18      	it	ne
 801b462:	2200      	movne	r2, #0
 801b464:	9201      	str	r2, [sp, #4]
 801b466:	e744      	b.n	801b2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 801b468:	4b03      	ldr	r3, [pc, #12]	; (801b478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801b46a:	6818      	ldr	r0, [r3, #0]
 801b46c:	6803      	ldr	r3, [r0, #0]
 801b46e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b470:	4798      	blx	r3
 801b472:	b01f      	add	sp, #124	; 0x7c
 801b474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b478:	24002fa4 	.word	0x24002fa4

0801b47c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b480:	b08f      	sub	sp, #60	; 0x3c
 801b482:	461c      	mov	r4, r3
 801b484:	460f      	mov	r7, r1
 801b486:	9203      	str	r2, [sp, #12]
 801b488:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b48c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b48e:	9202      	str	r2, [sp, #8]
 801b490:	2a00      	cmp	r2, #0
 801b492:	f000 8128 	beq.w	801b6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b496:	6820      	ldr	r0, [r4, #0]
 801b498:	aa0a      	add	r2, sp, #40	; 0x28
 801b49a:	6861      	ldr	r1, [r4, #4]
 801b49c:	c203      	stmia	r2!, {r0, r1}
 801b49e:	6818      	ldr	r0, [r3, #0]
 801b4a0:	aa0c      	add	r2, sp, #48	; 0x30
 801b4a2:	6859      	ldr	r1, [r3, #4]
 801b4a4:	c203      	stmia	r2!, {r0, r1}
 801b4a6:	a80a      	add	r0, sp, #40	; 0x28
 801b4a8:	f7f9 ff64 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4ac:	4621      	mov	r1, r4
 801b4ae:	a80c      	add	r0, sp, #48	; 0x30
 801b4b0:	f7f9 ff88 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b4b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b4bc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b4c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b4c4:	bfdb      	ittet	le
 801b4c6:	b2b3      	uxthle	r3, r6
 801b4c8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b4cc:	2301      	movgt	r3, #1
 801b4ce:	fb92 f3f3 	sdivle	r3, r2, r3
 801b4d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b4d6:	441d      	add	r5, r3
 801b4d8:	fb92 f1f3 	sdiv	r1, r2, r3
 801b4dc:	fa1f fc81 	uxth.w	ip, r1
 801b4e0:	3d01      	subs	r5, #1
 801b4e2:	fb0c 2413 	mls	r4, ip, r3, r2
 801b4e6:	4661      	mov	r1, ip
 801b4e8:	fb14 f406 	smulbb	r4, r4, r6
 801b4ec:	4404      	add	r4, r0
 801b4ee:	fb95 f5f3 	sdiv	r5, r5, r3
 801b4f2:	b2a4      	uxth	r4, r4
 801b4f4:	b121      	cbz	r1, 801b500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801b4f6:	9b03      	ldr	r3, [sp, #12]
 801b4f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b4fc:	ba1b      	rev	r3, r3
 801b4fe:	441f      	add	r7, r3
 801b500:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b504:	b2ad      	uxth	r5, r5
 801b506:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b50a:	4418      	add	r0, r3
 801b50c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b510:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b514:	00ad      	lsls	r5, r5, #2
 801b516:	441a      	add	r2, r3
 801b518:	4b74      	ldr	r3, [pc, #464]	; (801b6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b51a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b51e:	6818      	ldr	r0, [r3, #0]
 801b520:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b524:	6803      	ldr	r3, [r0, #0]
 801b526:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b528:	4798      	blx	r3
 801b52a:	4a71      	ldr	r2, [pc, #452]	; (801b6f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b52c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b530:	2c00      	cmp	r4, #0
 801b532:	8813      	ldrh	r3, [r2, #0]
 801b534:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b538:	bf0c      	ite	eq
 801b53a:	46c8      	moveq	r8, r9
 801b53c:	f04f 0800 	movne.w	r8, #0
 801b540:	9209      	str	r2, [sp, #36]	; 0x24
 801b542:	fb03 c101 	mla	r1, r3, r1, ip
 801b546:	4373      	muls	r3, r6
 801b548:	fa1f f888 	uxth.w	r8, r8
 801b54c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b550:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b554:	9304      	str	r3, [sp, #16]
 801b556:	1d2b      	adds	r3, r5, #4
 801b558:	9305      	str	r3, [sp, #20]
 801b55a:	2300      	movs	r3, #0
 801b55c:	9301      	str	r3, [sp, #4]
 801b55e:	9a04      	ldr	r2, [sp, #16]
 801b560:	4282      	cmp	r2, r0
 801b562:	f240 80bb 	bls.w	801b6dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b566:	b95b      	cbnz	r3, 801b580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 801b568:	783a      	ldrb	r2, [r7, #0]
 801b56a:	0993      	lsrs	r3, r2, #6
 801b56c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b570:	9201      	str	r2, [sp, #4]
 801b572:	1e5a      	subs	r2, r3, #1
 801b574:	2a02      	cmp	r2, #2
 801b576:	bf8d      	iteet	hi
 801b578:	787b      	ldrbhi	r3, [r7, #1]
 801b57a:	3701      	addls	r7, #1
 801b57c:	b29b      	uxthls	r3, r3
 801b57e:	3702      	addhi	r7, #2
 801b580:	b184      	cbz	r4, 801b5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801b582:	429c      	cmp	r4, r3
 801b584:	bf91      	iteee	ls
 801b586:	1b1c      	subls	r4, r3, r4
 801b588:	1ae4      	subhi	r4, r4, r3
 801b58a:	46c4      	movhi	ip, r8
 801b58c:	f04f 0a00 	movhi.w	sl, #0
 801b590:	bf9b      	ittet	ls
 801b592:	fa1f fa84 	uxthls.w	sl, r4
 801b596:	2400      	movls	r4, #0
 801b598:	b2a4      	uxthhi	r4, r4
 801b59a:	fa1f fc89 	uxthls.w	ip, r9
 801b59e:	4653      	mov	r3, sl
 801b5a0:	46e0      	mov	r8, ip
 801b5a2:	e7dc      	b.n	801b55e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801b5a4:	2204      	movs	r2, #4
 801b5a6:	9905      	ldr	r1, [sp, #20]
 801b5a8:	4543      	cmp	r3, r8
 801b5aa:	4615      	mov	r5, r2
 801b5ac:	9a01      	ldr	r2, [sp, #4]
 801b5ae:	bf24      	itt	cs
 801b5b0:	eba3 0a08 	subcs.w	sl, r3, r8
 801b5b4:	46c6      	movcs	lr, r8
 801b5b6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b5ba:	9903      	ldr	r1, [sp, #12]
 801b5bc:	bf3c      	itt	cc
 801b5be:	eba8 0c03 	subcc.w	ip, r8, r3
 801b5c2:	469e      	movcc	lr, r3
 801b5c4:	588a      	ldr	r2, [r1, r2]
 801b5c6:	bf26      	itte	cs
 801b5c8:	fa1f fa8a 	uxthcs.w	sl, sl
 801b5cc:	46a4      	movcs	ip, r4
 801b5ce:	fa1f fc8c 	uxthcc.w	ip, ip
 801b5d2:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b5d6:	bf38      	it	cc
 801b5d8:	46a2      	movcc	sl, r4
 801b5da:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b5de:	2900      	cmp	r1, #0
 801b5e0:	d066      	beq.n	801b6b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b5e2:	29ff      	cmp	r1, #255	; 0xff
 801b5e4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b5e8:	d114      	bne.n	801b614 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b5ea:	9d02      	ldr	r5, [sp, #8]
 801b5ec:	2dff      	cmp	r5, #255	; 0xff
 801b5ee:	d111      	bne.n	801b614 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b5f0:	0951      	lsrs	r1, r2, #5
 801b5f2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b5f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b5fa:	4486      	add	lr, r0
 801b5fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b600:	f026 0607 	bic.w	r6, r6, #7
 801b604:	430e      	orrs	r6, r1
 801b606:	4316      	orrs	r6, r2
 801b608:	b2b6      	uxth	r6, r6
 801b60a:	4586      	cmp	lr, r0
 801b60c:	d051      	beq.n	801b6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b60e:	f820 6b02 	strh.w	r6, [r0], #2
 801b612:	e7fa      	b.n	801b60a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b614:	9d02      	ldr	r5, [sp, #8]
 801b616:	b2f6      	uxtb	r6, r6
 801b618:	4486      	add	lr, r0
 801b61a:	4369      	muls	r1, r5
 801b61c:	1c4d      	adds	r5, r1, #1
 801b61e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b622:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b626:	b2d2      	uxtb	r2, r2
 801b628:	122d      	asrs	r5, r5, #8
 801b62a:	ea6f 0b05 	mvn.w	fp, r5
 801b62e:	b2ad      	uxth	r5, r5
 801b630:	fb11 f105 	smulbb	r1, r1, r5
 801b634:	fa5f fb8b 	uxtb.w	fp, fp
 801b638:	fb16 f605 	smulbb	r6, r6, r5
 801b63c:	fb12 f205 	smulbb	r2, r2, r5
 801b640:	b289      	uxth	r1, r1
 801b642:	b2b6      	uxth	r6, r6
 801b644:	b292      	uxth	r2, r2
 801b646:	9106      	str	r1, [sp, #24]
 801b648:	9607      	str	r6, [sp, #28]
 801b64a:	9208      	str	r2, [sp, #32]
 801b64c:	4586      	cmp	lr, r0
 801b64e:	d030      	beq.n	801b6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b650:	8802      	ldrh	r2, [r0, #0]
 801b652:	9906      	ldr	r1, [sp, #24]
 801b654:	1216      	asrs	r6, r2, #8
 801b656:	10d5      	asrs	r5, r2, #3
 801b658:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b65c:	00d2      	lsls	r2, r2, #3
 801b65e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b662:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b666:	b2d2      	uxtb	r2, r2
 801b668:	fb06 160b 	mla	r6, r6, fp, r1
 801b66c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b670:	9907      	ldr	r1, [sp, #28]
 801b672:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b676:	b2b6      	uxth	r6, r6
 801b678:	fb05 150b 	mla	r5, r5, fp, r1
 801b67c:	9908      	ldr	r1, [sp, #32]
 801b67e:	fb02 120b 	mla	r2, r2, fp, r1
 801b682:	1c71      	adds	r1, r6, #1
 801b684:	b2ad      	uxth	r5, r5
 801b686:	b292      	uxth	r2, r2
 801b688:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b68c:	1c51      	adds	r1, r2, #1
 801b68e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b692:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b696:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b69a:	4316      	orrs	r6, r2
 801b69c:	1c6a      	adds	r2, r5, #1
 801b69e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b6a2:	096d      	lsrs	r5, r5, #5
 801b6a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6a8:	432e      	orrs	r6, r5
 801b6aa:	f820 6b02 	strh.w	r6, [r0], #2
 801b6ae:	e7cd      	b.n	801b64c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b6b0:	4470      	add	r0, lr
 801b6b2:	4543      	cmp	r3, r8
 801b6b4:	f4ff af73 	bcc.w	801b59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801b6b8:	fa1f fc89 	uxth.w	ip, r9
 801b6bc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b6c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6c2:	eba4 040c 	sub.w	r4, r4, ip
 801b6c6:	881b      	ldrh	r3, [r3, #0]
 801b6c8:	b2a4      	uxth	r4, r4
 801b6ca:	eba3 0309 	sub.w	r3, r3, r9
 801b6ce:	2c00      	cmp	r4, #0
 801b6d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6d4:	bf18      	it	ne
 801b6d6:	f04f 0c00 	movne.w	ip, #0
 801b6da:	e760      	b.n	801b59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801b6dc:	4b03      	ldr	r3, [pc, #12]	; (801b6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b6de:	6818      	ldr	r0, [r3, #0]
 801b6e0:	6803      	ldr	r3, [r0, #0]
 801b6e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6e4:	4798      	blx	r3
 801b6e6:	b00f      	add	sp, #60	; 0x3c
 801b6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6ec:	24002fa4 	.word	0x24002fa4
 801b6f0:	24002f9e 	.word	0x24002f9e

0801b6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6f8:	b093      	sub	sp, #76	; 0x4c
 801b6fa:	461c      	mov	r4, r3
 801b6fc:	9205      	str	r2, [sp, #20]
 801b6fe:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801b702:	9101      	str	r1, [sp, #4]
 801b704:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b706:	9202      	str	r2, [sp, #8]
 801b708:	2a00      	cmp	r2, #0
 801b70a:	f000 812e 	beq.w	801b96a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801b70e:	6820      	ldr	r0, [r4, #0]
 801b710:	aa0e      	add	r2, sp, #56	; 0x38
 801b712:	6861      	ldr	r1, [r4, #4]
 801b714:	c203      	stmia	r2!, {r0, r1}
 801b716:	6818      	ldr	r0, [r3, #0]
 801b718:	aa10      	add	r2, sp, #64	; 0x40
 801b71a:	6859      	ldr	r1, [r3, #4]
 801b71c:	c203      	stmia	r2!, {r0, r1}
 801b71e:	a80e      	add	r0, sp, #56	; 0x38
 801b720:	f7f9 fe28 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b724:	4621      	mov	r1, r4
 801b726:	a810      	add	r0, sp, #64	; 0x40
 801b728:	f7f9 fe4c 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b72c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801b730:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801b734:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b738:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801b73c:	bfdb      	ittet	le
 801b73e:	b2b3      	uxthle	r3, r6
 801b740:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b744:	2301      	movgt	r3, #1
 801b746:	fb92 f3f3 	sdivle	r3, r2, r3
 801b74a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b74e:	441d      	add	r5, r3
 801b750:	fb92 f1f3 	sdiv	r1, r2, r3
 801b754:	fa1f fc81 	uxth.w	ip, r1
 801b758:	3d01      	subs	r5, #1
 801b75a:	fb0c 2413 	mls	r4, ip, r3, r2
 801b75e:	4661      	mov	r1, ip
 801b760:	fb14 f406 	smulbb	r4, r4, r6
 801b764:	4404      	add	r4, r0
 801b766:	fb95 f5f3 	sdiv	r5, r5, r3
 801b76a:	b2a4      	uxth	r4, r4
 801b76c:	b131      	cbz	r1, 801b77c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801b76e:	9b05      	ldr	r3, [sp, #20]
 801b770:	9901      	ldr	r1, [sp, #4]
 801b772:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b776:	ba1b      	rev	r3, r3
 801b778:	4419      	add	r1, r3
 801b77a:	9101      	str	r1, [sp, #4]
 801b77c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801b780:	b2ad      	uxth	r5, r5
 801b782:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801b786:	4418      	add	r0, r3
 801b788:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801b78c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801b790:	00ad      	lsls	r5, r5, #2
 801b792:	441a      	add	r2, r3
 801b794:	4b76      	ldr	r3, [pc, #472]	; (801b970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b796:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801b79a:	6818      	ldr	r0, [r3, #0]
 801b79c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801b7a0:	6803      	ldr	r3, [r0, #0]
 801b7a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7a4:	4798      	blx	r3
 801b7a6:	4973      	ldr	r1, [pc, #460]	; (801b974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b7a8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801b7ac:	2c00      	cmp	r4, #0
 801b7ae:	880b      	ldrh	r3, [r1, #0]
 801b7b0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b7b4:	910d      	str	r1, [sp, #52]	; 0x34
 801b7b6:	fb03 c202 	mla	r2, r3, r2, ip
 801b7ba:	bf08      	it	eq
 801b7bc:	46dc      	moveq	ip, fp
 801b7be:	fb03 f306 	mul.w	r3, r3, r6
 801b7c2:	bf18      	it	ne
 801b7c4:	f04f 0c00 	movne.w	ip, #0
 801b7c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b7cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b7d0:	fa1f fc8c 	uxth.w	ip, ip
 801b7d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b7d8:	9106      	str	r1, [sp, #24]
 801b7da:	9308      	str	r3, [sp, #32]
 801b7dc:	1d2b      	adds	r3, r5, #4
 801b7de:	9309      	str	r3, [sp, #36]	; 0x24
 801b7e0:	9b02      	ldr	r3, [sp, #8]
 801b7e2:	43da      	mvns	r2, r3
 801b7e4:	2300      	movs	r3, #0
 801b7e6:	b2d2      	uxtb	r2, r2
 801b7e8:	9303      	str	r3, [sp, #12]
 801b7ea:	9207      	str	r2, [sp, #28]
 801b7ec:	9a08      	ldr	r2, [sp, #32]
 801b7ee:	4282      	cmp	r2, r0
 801b7f0:	f240 80b6 	bls.w	801b960 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801b7f4:	b963      	cbnz	r3, 801b810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801b7f6:	9b01      	ldr	r3, [sp, #4]
 801b7f8:	781a      	ldrb	r2, [r3, #0]
 801b7fa:	0993      	lsrs	r3, r2, #6
 801b7fc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b800:	9203      	str	r2, [sp, #12]
 801b802:	1e5a      	subs	r2, r3, #1
 801b804:	2a02      	cmp	r2, #2
 801b806:	d815      	bhi.n	801b834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801b808:	9a01      	ldr	r2, [sp, #4]
 801b80a:	b29b      	uxth	r3, r3
 801b80c:	3201      	adds	r2, #1
 801b80e:	9201      	str	r2, [sp, #4]
 801b810:	b1b4      	cbz	r4, 801b840 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801b812:	429c      	cmp	r4, r3
 801b814:	bf91      	iteee	ls
 801b816:	1b1c      	subls	r4, r3, r4
 801b818:	1ae4      	subhi	r4, r4, r3
 801b81a:	4666      	movhi	r6, ip
 801b81c:	f04f 0800 	movhi.w	r8, #0
 801b820:	bf9b      	ittet	ls
 801b822:	fa1f f884 	uxthls.w	r8, r4
 801b826:	2400      	movls	r4, #0
 801b828:	b2a4      	uxthhi	r4, r4
 801b82a:	fa1f f68b 	uxthls.w	r6, fp
 801b82e:	4643      	mov	r3, r8
 801b830:	46b4      	mov	ip, r6
 801b832:	e7db      	b.n	801b7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801b834:	9a01      	ldr	r2, [sp, #4]
 801b836:	9b01      	ldr	r3, [sp, #4]
 801b838:	3202      	adds	r2, #2
 801b83a:	785b      	ldrb	r3, [r3, #1]
 801b83c:	9201      	str	r2, [sp, #4]
 801b83e:	e7e7      	b.n	801b810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801b840:	2203      	movs	r2, #3
 801b842:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b844:	4563      	cmp	r3, ip
 801b846:	4615      	mov	r5, r2
 801b848:	9a03      	ldr	r2, [sp, #12]
 801b84a:	bf2c      	ite	cs
 801b84c:	eba3 080c 	subcs.w	r8, r3, ip
 801b850:	ebac 0603 	subcc.w	r6, ip, r3
 801b854:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b858:	9905      	ldr	r1, [sp, #20]
 801b85a:	bf24      	itt	cs
 801b85c:	fa1f f888 	uxthcs.w	r8, r8
 801b860:	46e1      	movcs	r9, ip
 801b862:	eb01 0502 	add.w	r5, r1, r2
 801b866:	9902      	ldr	r1, [sp, #8]
 801b868:	bf2f      	iteee	cs
 801b86a:	4626      	movcs	r6, r4
 801b86c:	b2b6      	uxthcc	r6, r6
 801b86e:	4699      	movcc	r9, r3
 801b870:	46a0      	movcc	r8, r4
 801b872:	29ff      	cmp	r1, #255	; 0xff
 801b874:	d04a      	beq.n	801b90c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801b876:	9f06      	ldr	r7, [sp, #24]
 801b878:	46ca      	mov	sl, r9
 801b87a:	78a9      	ldrb	r1, [r5, #2]
 801b87c:	9004      	str	r0, [sp, #16]
 801b87e:	4379      	muls	r1, r7
 801b880:	910a      	str	r1, [sp, #40]	; 0x28
 801b882:	7869      	ldrb	r1, [r5, #1]
 801b884:	4379      	muls	r1, r7
 801b886:	910b      	str	r1, [sp, #44]	; 0x2c
 801b888:	9905      	ldr	r1, [sp, #20]
 801b88a:	5c8a      	ldrb	r2, [r1, r2]
 801b88c:	437a      	muls	r2, r7
 801b88e:	920c      	str	r2, [sp, #48]	; 0x30
 801b890:	f1ba 0f00 	cmp.w	sl, #0
 801b894:	d03d      	beq.n	801b912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801b896:	9a04      	ldr	r2, [sp, #16]
 801b898:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b89c:	9f07      	ldr	r7, [sp, #28]
 801b89e:	8812      	ldrh	r2, [r2, #0]
 801b8a0:	fa1f fa8a 	uxth.w	sl, sl
 801b8a4:	46be      	mov	lr, r7
 801b8a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b8a8:	1215      	asrs	r5, r2, #8
 801b8aa:	10d1      	asrs	r1, r2, #3
 801b8ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b8b0:	00d2      	lsls	r2, r2, #3
 801b8b2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b8b6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b8ba:	b2d2      	uxtb	r2, r2
 801b8bc:	fb05 750e 	mla	r5, r5, lr, r7
 801b8c0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b8c4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801b8c6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b8ca:	b2ad      	uxth	r5, r5
 801b8cc:	fb01 710e 	mla	r1, r1, lr, r7
 801b8d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b8d2:	fb02 720e 	mla	r2, r2, lr, r7
 801b8d6:	f105 0e01 	add.w	lr, r5, #1
 801b8da:	b289      	uxth	r1, r1
 801b8dc:	b292      	uxth	r2, r2
 801b8de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b8e2:	f102 0e01 	add.w	lr, r2, #1
 801b8e6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b8ea:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b8ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b8f2:	4315      	orrs	r5, r2
 801b8f4:	1c4a      	adds	r2, r1, #1
 801b8f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b8fa:	9a04      	ldr	r2, [sp, #16]
 801b8fc:	0949      	lsrs	r1, r1, #5
 801b8fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b902:	430d      	orrs	r5, r1
 801b904:	f822 5b02 	strh.w	r5, [r2], #2
 801b908:	9204      	str	r2, [sp, #16]
 801b90a:	e7c1      	b.n	801b890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801b90c:	4649      	mov	r1, r9
 801b90e:	4686      	mov	lr, r0
 801b910:	b999      	cbnz	r1, 801b93a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801b912:	4563      	cmp	r3, ip
 801b914:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b918:	d389      	bcc.n	801b82e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801b91a:	fa1f f68b 	uxth.w	r6, fp
 801b91e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801b922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b924:	1ba4      	subs	r4, r4, r6
 801b926:	881b      	ldrh	r3, [r3, #0]
 801b928:	b2a4      	uxth	r4, r4
 801b92a:	eba3 030b 	sub.w	r3, r3, fp
 801b92e:	2c00      	cmp	r4, #0
 801b930:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b934:	bf18      	it	ne
 801b936:	2600      	movne	r6, #0
 801b938:	e779      	b.n	801b82e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801b93a:	78aa      	ldrb	r2, [r5, #2]
 801b93c:	3901      	subs	r1, #1
 801b93e:	4f0e      	ldr	r7, [pc, #56]	; (801b978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801b940:	b289      	uxth	r1, r1
 801b942:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b946:	786a      	ldrb	r2, [r5, #1]
 801b948:	00d2      	lsls	r2, r2, #3
 801b94a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b94e:	ea4a 0202 	orr.w	r2, sl, r2
 801b952:	f895 a000 	ldrb.w	sl, [r5]
 801b956:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801b95a:	f82e 2b02 	strh.w	r2, [lr], #2
 801b95e:	e7d7      	b.n	801b910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801b960:	4b03      	ldr	r3, [pc, #12]	; (801b970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b962:	6818      	ldr	r0, [r3, #0]
 801b964:	6803      	ldr	r3, [r0, #0]
 801b966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b968:	4798      	blx	r3
 801b96a:	b013      	add	sp, #76	; 0x4c
 801b96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b970:	24002fa4 	.word	0x24002fa4
 801b974:	24002f9e 	.word	0x24002f9e
 801b978:	fffff800 	.word	0xfffff800

0801b97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b980:	b09d      	sub	sp, #116	; 0x74
 801b982:	461c      	mov	r4, r3
 801b984:	4683      	mov	fp, r0
 801b986:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b988:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801b98c:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801b990:	920e      	str	r2, [sp, #56]	; 0x38
 801b992:	2a00      	cmp	r2, #0
 801b994:	f000 81e4 	beq.w	801bd60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801b998:	6820      	ldr	r0, [r4, #0]
 801b99a:	aa18      	add	r2, sp, #96	; 0x60
 801b99c:	6861      	ldr	r1, [r4, #4]
 801b99e:	c203      	stmia	r2!, {r0, r1}
 801b9a0:	6818      	ldr	r0, [r3, #0]
 801b9a2:	aa1a      	add	r2, sp, #104	; 0x68
 801b9a4:	6859      	ldr	r1, [r3, #4]
 801b9a6:	c203      	stmia	r2!, {r0, r1}
 801b9a8:	a818      	add	r0, sp, #96	; 0x60
 801b9aa:	f7f9 fce3 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9ae:	4621      	mov	r1, r4
 801b9b0:	a81a      	add	r0, sp, #104	; 0x68
 801b9b2:	f7f9 fd07 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9b6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801b9ba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801b9be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b9c2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801b9c6:	bfdb      	ittet	le
 801b9c8:	b29a      	uxthle	r2, r3
 801b9ca:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b9ce:	2201      	movgt	r2, #1
 801b9d0:	fb91 f2f2 	sdivle	r2, r1, r2
 801b9d4:	9202      	str	r2, [sp, #8]
 801b9d6:	9802      	ldr	r0, [sp, #8]
 801b9d8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801b9dc:	9902      	ldr	r1, [sp, #8]
 801b9de:	fb92 f0f0 	sdiv	r0, r2, r0
 801b9e2:	b280      	uxth	r0, r0
 801b9e4:	440c      	add	r4, r1
 801b9e6:	900f      	str	r0, [sp, #60]	; 0x3c
 801b9e8:	3c01      	subs	r4, #1
 801b9ea:	9802      	ldr	r0, [sp, #8]
 801b9ec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b9ee:	fb05 2510 	mls	r5, r5, r0, r2
 801b9f2:	fb94 f4f1 	sdiv	r4, r4, r1
 801b9f6:	fb15 f503 	smulbb	r5, r5, r3
 801b9fa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801b9fe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ba02:	3401      	adds	r4, #1
 801ba04:	440d      	add	r5, r1
 801ba06:	4419      	add	r1, r3
 801ba08:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801ba0c:	b2a4      	uxth	r4, r4
 801ba0e:	441a      	add	r2, r3
 801ba10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ba14:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801ba18:	00a4      	lsls	r4, r4, #2
 801ba1a:	9306      	str	r3, [sp, #24]
 801ba1c:	b2ad      	uxth	r5, r5
 801ba1e:	4bb3      	ldr	r3, [pc, #716]	; (801bcec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ba20:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801ba24:	6818      	ldr	r0, [r3, #0]
 801ba26:	6803      	ldr	r3, [r0, #0]
 801ba28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba2a:	4798      	blx	r3
 801ba2c:	4bb0      	ldr	r3, [pc, #704]	; (801bcf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801ba2e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801ba32:	2d00      	cmp	r5, #0
 801ba34:	881a      	ldrh	r2, [r3, #0]
 801ba36:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801ba3a:	fb02 f606 	mul.w	r6, r2, r6
 801ba3e:	fb02 7101 	mla	r1, r2, r1, r7
 801ba42:	9316      	str	r3, [sp, #88]	; 0x58
 801ba44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801ba48:	4baa      	ldr	r3, [pc, #680]	; (801bcf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801ba4a:	bf18      	it	ne
 801ba4c:	2100      	movne	r1, #0
 801ba4e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801ba52:	eba3 030b 	sub.w	r3, r3, fp
 801ba56:	920a      	str	r2, [sp, #40]	; 0x28
 801ba58:	f104 0204 	add.w	r2, r4, #4
 801ba5c:	9317      	str	r3, [sp, #92]	; 0x5c
 801ba5e:	9213      	str	r2, [sp, #76]	; 0x4c
 801ba60:	9a06      	ldr	r2, [sp, #24]
 801ba62:	bf08      	it	eq
 801ba64:	4611      	moveq	r1, r2
 801ba66:	2200      	movs	r2, #0
 801ba68:	b289      	uxth	r1, r1
 801ba6a:	920d      	str	r2, [sp, #52]	; 0x34
 801ba6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba70:	fa12 f383 	uxtah	r3, r2, r3
 801ba74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ba76:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ba7a:	3304      	adds	r3, #4
 801ba7c:	9308      	str	r3, [sp, #32]
 801ba7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ba80:	4543      	cmp	r3, r8
 801ba82:	f240 8168 	bls.w	801bd56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 801ba86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ba8a:	f04f 0e01 	mov.w	lr, #1
 801ba8e:	9a02      	ldr	r2, [sp, #8]
 801ba90:	9808      	ldr	r0, [sp, #32]
 801ba92:	fbb5 f3f3 	udiv	r3, r5, r3
 801ba96:	1ad3      	subs	r3, r2, r3
 801ba98:	7800      	ldrb	r0, [r0, #0]
 801ba9a:	b29b      	uxth	r3, r3
 801ba9c:	9010      	str	r0, [sp, #64]	; 0x40
 801ba9e:	3001      	adds	r0, #1
 801baa0:	9314      	str	r3, [sp, #80]	; 0x50
 801baa2:	9b08      	ldr	r3, [sp, #32]
 801baa4:	9007      	str	r0, [sp, #28]
 801baa6:	785a      	ldrb	r2, [r3, #1]
 801baa8:	789b      	ldrb	r3, [r3, #2]
 801baaa:	021b      	lsls	r3, r3, #8
 801baac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bab0:	9a08      	ldr	r2, [sp, #32]
 801bab2:	78d2      	ldrb	r2, [r2, #3]
 801bab4:	4313      	orrs	r3, r2
 801bab6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bab8:	441a      	add	r2, r3
 801baba:	1c50      	adds	r0, r2, #1
 801babc:	7852      	ldrb	r2, [r2, #1]
 801babe:	9005      	str	r0, [sp, #20]
 801bac0:	0212      	lsls	r2, r2, #8
 801bac2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bac4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bac8:	5cc3      	ldrb	r3, [r0, r3]
 801baca:	431a      	orrs	r2, r3
 801bacc:	b293      	uxth	r3, r2
 801bace:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801bad2:	930b      	str	r3, [sp, #44]	; 0x2c
 801bad4:	2300      	movs	r3, #0
 801bad6:	9309      	str	r3, [sp, #36]	; 0x24
 801bad8:	2301      	movs	r3, #1
 801bada:	9301      	str	r3, [sp, #4]
 801badc:	9304      	str	r3, [sp, #16]
 801bade:	2300      	movs	r3, #0
 801bae0:	9303      	str	r3, [sp, #12]
 801bae2:	2d00      	cmp	r5, #0
 801bae4:	d07d      	beq.n	801bbe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 801bae6:	45ae      	cmp	lr, r5
 801bae8:	d26c      	bcs.n	801bbc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 801baea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801baec:	eba5 050e 	sub.w	r5, r5, lr
 801baf0:	460c      	mov	r4, r1
 801baf2:	4543      	cmp	r3, r8
 801baf4:	b2ad      	uxth	r5, r5
 801baf6:	d802      	bhi.n	801bafe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 801baf8:	e071      	b.n	801bbde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 801bafa:	2b00      	cmp	r3, #0
 801bafc:	d15d      	bne.n	801bbba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 801bafe:	9b05      	ldr	r3, [sp, #20]
 801bb00:	9a04      	ldr	r2, [sp, #16]
 801bb02:	785b      	ldrb	r3, [r3, #1]
 801bb04:	f1c2 0207 	rsb	r2, r2, #7
 801bb08:	9904      	ldr	r1, [sp, #16]
 801bb0a:	4093      	lsls	r3, r2
 801bb0c:	005b      	lsls	r3, r3, #1
 801bb0e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bb12:	9b05      	ldr	r3, [sp, #20]
 801bb14:	781b      	ldrb	r3, [r3, #0]
 801bb16:	410b      	asrs	r3, r1
 801bb18:	3101      	adds	r1, #1
 801bb1a:	b2c9      	uxtb	r1, r1
 801bb1c:	b2db      	uxtb	r3, r3
 801bb1e:	2908      	cmp	r1, #8
 801bb20:	9104      	str	r1, [sp, #16]
 801bb22:	9905      	ldr	r1, [sp, #20]
 801bb24:	ea43 0302 	orr.w	r3, r3, r2
 801bb28:	bf0c      	ite	eq
 801bb2a:	3102      	addeq	r1, #2
 801bb2c:	3101      	addne	r1, #1
 801bb2e:	b29a      	uxth	r2, r3
 801bb30:	bf05      	ittet	eq
 801bb32:	9105      	streq	r1, [sp, #20]
 801bb34:	2100      	moveq	r1, #0
 801bb36:	9105      	strne	r1, [sp, #20]
 801bb38:	9104      	streq	r1, [sp, #16]
 801bb3a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bb3c:	4291      	cmp	r1, r2
 801bb3e:	d30a      	bcc.n	801bb56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801bb40:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801bb44:	2301      	movs	r3, #1
 801bb46:	9907      	ldr	r1, [sp, #28]
 801bb48:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bb4c:	d30f      	bcc.n	801bb6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801bb4e:	2100      	movs	r1, #0
 801bb50:	9301      	str	r3, [sp, #4]
 801bb52:	9103      	str	r1, [sp, #12]
 801bb54:	e032      	b.n	801bbbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bb56:	9b07      	ldr	r3, [sp, #28]
 801bb58:	429a      	cmp	r2, r3
 801bb5a:	d318      	bcc.n	801bb8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 801bb5c:	9b01      	ldr	r3, [sp, #4]
 801bb5e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801bb62:	445b      	add	r3, fp
 801bb64:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bb68:	9b01      	ldr	r3, [sp, #4]
 801bb6a:	3301      	adds	r3, #1
 801bb6c:	b29b      	uxth	r3, r3
 801bb6e:	9907      	ldr	r1, [sp, #28]
 801bb70:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801bb74:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bb78:	7108      	strb	r0, [r1, #4]
 801bb7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bb7c:	80c8      	strh	r0, [r1, #6]
 801bb7e:	9801      	ldr	r0, [sp, #4]
 801bb80:	3001      	adds	r0, #1
 801bb82:	7148      	strb	r0, [r1, #5]
 801bb84:	9907      	ldr	r1, [sp, #28]
 801bb86:	3101      	adds	r1, #1
 801bb88:	b289      	uxth	r1, r1
 801bb8a:	9107      	str	r1, [sp, #28]
 801bb8c:	e7df      	b.n	801bb4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bb8e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bb92:	4611      	mov	r1, r2
 801bb94:	795b      	ldrb	r3, [r3, #5]
 801bb96:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801bb9a:	4458      	add	r0, fp
 801bb9c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801bb9e:	4406      	add	r6, r0
 801bba0:	2e00      	cmp	r6, #0
 801bba2:	dd06      	ble.n	801bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bba4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bba8:	790e      	ldrb	r6, [r1, #4]
 801bbaa:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bbae:	88c9      	ldrh	r1, [r1, #6]
 801bbb0:	e7f4      	b.n	801bb9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 801bbb2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801bbb6:	b29b      	uxth	r3, r3
 801bbb8:	e7c5      	b.n	801bb46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bbba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bbbc:	4621      	mov	r1, r4
 801bbbe:	920b      	str	r2, [sp, #44]	; 0x2c
 801bbc0:	469e      	mov	lr, r3
 801bbc2:	e78e      	b.n	801bae2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 801bbc4:	9a03      	ldr	r2, [sp, #12]
 801bbc6:	ebae 0305 	sub.w	r3, lr, r5
 801bbca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bbce:	442a      	add	r2, r5
 801bbd0:	b29b      	uxth	r3, r3
 801bbd2:	b292      	uxth	r2, r2
 801bbd4:	9203      	str	r2, [sp, #12]
 801bbd6:	2500      	movs	r5, #0
 801bbd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bbda:	4542      	cmp	r2, r8
 801bbdc:	d88d      	bhi.n	801bafa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 801bbde:	4621      	mov	r1, r4
 801bbe0:	e74d      	b.n	801ba7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 801bbe2:	458e      	cmp	lr, r1
 801bbe4:	f04f 0900 	mov.w	r9, #0
 801bbe8:	bf2b      	itete	cs
 801bbea:	ebae 0301 	subcs.w	r3, lr, r1
 801bbee:	eba1 040e 	subcc.w	r4, r1, lr
 801bbf2:	462c      	movcs	r4, r5
 801bbf4:	462b      	movcc	r3, r5
 801bbf6:	bf27      	ittee	cs
 801bbf8:	b29b      	uxthcs	r3, r3
 801bbfa:	910c      	strcs	r1, [sp, #48]	; 0x30
 801bbfc:	b2a4      	uxthcc	r4, r4
 801bbfe:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801bc02:	9a03      	ldr	r2, [sp, #12]
 801bc04:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bc06:	444a      	add	r2, r9
 801bc08:	4548      	cmp	r0, r9
 801bc0a:	b292      	uxth	r2, r2
 801bc0c:	d074      	beq.n	801bcf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801bc0e:	2004      	movs	r0, #4
 801bc10:	445a      	add	r2, fp
 801bc12:	4605      	mov	r5, r0
 801bc14:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801bc18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bc1a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bc1e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bc20:	5880      	ldr	r0, [r0, r2]
 801bc22:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bc26:	d014      	beq.n	801bc52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801bc28:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bc2c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bc30:	d112      	bne.n	801bc58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801bc32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bc34:	2aff      	cmp	r2, #255	; 0xff
 801bc36:	d10f      	bne.n	801bc58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801bc38:	0942      	lsrs	r2, r0, #5
 801bc3a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bc3e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bc42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc46:	f025 0507 	bic.w	r5, r5, #7
 801bc4a:	4315      	orrs	r5, r2
 801bc4c:	4305      	orrs	r5, r0
 801bc4e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bc52:	f109 0901 	add.w	r9, r9, #1
 801bc56:	e7d4      	b.n	801bc02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 801bc58:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bc5c:	b2ed      	uxtb	r5, r5
 801bc5e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bc62:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bc66:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801bc6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bc6e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bc72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc76:	9215      	str	r2, [sp, #84]	; 0x54
 801bc78:	fa5f fc8c 	uxtb.w	ip, ip
 801bc7c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bc7e:	b2c0      	uxtb	r0, r0
 801bc80:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bc84:	fb02 fa0a 	mul.w	sl, r2, sl
 801bc88:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bc8c:	f10a 0201 	add.w	r2, sl, #1
 801bc90:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bc94:	1212      	asrs	r2, r2, #8
 801bc96:	fa1f fa82 	uxth.w	sl, r2
 801bc9a:	43d2      	mvns	r2, r2
 801bc9c:	fb16 f60a 	smulbb	r6, r6, sl
 801bca0:	b2d2      	uxtb	r2, r2
 801bca2:	fb10 f00a 	smulbb	r0, r0, sl
 801bca6:	fb07 6702 	mla	r7, r7, r2, r6
 801bcaa:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801bcac:	fb0c 0002 	mla	r0, ip, r2, r0
 801bcb0:	fb15 f50a 	smulbb	r5, r5, sl
 801bcb4:	b2bf      	uxth	r7, r7
 801bcb6:	b280      	uxth	r0, r0
 801bcb8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bcbc:	fb06 5602 	mla	r6, r6, r2, r5
 801bcc0:	1c7a      	adds	r2, r7, #1
 801bcc2:	1c45      	adds	r5, r0, #1
 801bcc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bcc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bccc:	b2b6      	uxth	r6, r6
 801bcce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bcd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bcd6:	432f      	orrs	r7, r5
 801bcd8:	1c75      	adds	r5, r6, #1
 801bcda:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bcde:	096d      	lsrs	r5, r5, #5
 801bce0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bce4:	432f      	orrs	r7, r5
 801bce6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bcea:	e7b2      	b.n	801bc52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801bcec:	24002fa4 	.word	0x24002fa4
 801bcf0:	24002f9e 	.word	0x24002f9e
 801bcf4:	fffff7fb 	.word	0xfffff7fb
 801bcf8:	9203      	str	r2, [sp, #12]
 801bcfa:	458e      	cmp	lr, r1
 801bcfc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bcfe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bd02:	f4ff af68 	bcc.w	801bbd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bd06:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801bd08:	9906      	ldr	r1, [sp, #24]
 801bd0a:	8812      	ldrh	r2, [r2, #0]
 801bd0c:	1a52      	subs	r2, r2, r1
 801bd0e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bd10:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bd14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd16:	3201      	adds	r2, #1
 801bd18:	428a      	cmp	r2, r1
 801bd1a:	9209      	str	r2, [sp, #36]	; 0x24
 801bd1c:	d111      	bne.n	801bd42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801bd1e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801bd22:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801bd26:	9b06      	ldr	r3, [sp, #24]
 801bd28:	eba5 0509 	sub.w	r5, r5, r9
 801bd2c:	b2ad      	uxth	r5, r5
 801bd2e:	2d00      	cmp	r5, #0
 801bd30:	bf08      	it	eq
 801bd32:	4619      	moveq	r1, r3
 801bd34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd36:	bf18      	it	ne
 801bd38:	2100      	movne	r1, #0
 801bd3a:	3301      	adds	r3, #1
 801bd3c:	b289      	uxth	r1, r1
 801bd3e:	930d      	str	r3, [sp, #52]	; 0x34
 801bd40:	e694      	b.n	801ba6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801bd42:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bd46:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801bd4a:	1b2d      	subs	r5, r5, r4
 801bd4c:	b2ad      	uxth	r5, r5
 801bd4e:	2d00      	cmp	r5, #0
 801bd50:	bf18      	it	ne
 801bd52:	2400      	movne	r4, #0
 801bd54:	e740      	b.n	801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 801bd56:	4b04      	ldr	r3, [pc, #16]	; (801bd68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 801bd58:	6818      	ldr	r0, [r3, #0]
 801bd5a:	6803      	ldr	r3, [r0, #0]
 801bd5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd5e:	4798      	blx	r3
 801bd60:	b01d      	add	sp, #116	; 0x74
 801bd62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd66:	bf00      	nop
 801bd68:	24002fa4 	.word	0x24002fa4

0801bd6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd70:	b09f      	sub	sp, #124	; 0x7c
 801bd72:	461d      	mov	r5, r3
 801bd74:	4604      	mov	r4, r0
 801bd76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd78:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bd7c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bd80:	920a      	str	r2, [sp, #40]	; 0x28
 801bd82:	2a00      	cmp	r2, #0
 801bd84:	f000 81fe 	beq.w	801c184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 801bd88:	6828      	ldr	r0, [r5, #0]
 801bd8a:	aa1a      	add	r2, sp, #104	; 0x68
 801bd8c:	6869      	ldr	r1, [r5, #4]
 801bd8e:	c203      	stmia	r2!, {r0, r1}
 801bd90:	6818      	ldr	r0, [r3, #0]
 801bd92:	aa1c      	add	r2, sp, #112	; 0x70
 801bd94:	6859      	ldr	r1, [r3, #4]
 801bd96:	c203      	stmia	r2!, {r0, r1}
 801bd98:	a81a      	add	r0, sp, #104	; 0x68
 801bd9a:	f7f9 faeb 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd9e:	4629      	mov	r1, r5
 801bda0:	a81c      	add	r0, sp, #112	; 0x70
 801bda2:	f7f9 fb0f 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bda6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bdaa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bdae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bdb2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801bdb6:	bfdb      	ittet	le
 801bdb8:	b29a      	uxthle	r2, r3
 801bdba:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bdbe:	2201      	movgt	r2, #1
 801bdc0:	fb91 f2f2 	sdivle	r2, r1, r2
 801bdc4:	9201      	str	r2, [sp, #4]
 801bdc6:	9801      	ldr	r0, [sp, #4]
 801bdc8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bdcc:	9901      	ldr	r1, [sp, #4]
 801bdce:	fb92 f0f0 	sdiv	r0, r2, r0
 801bdd2:	b280      	uxth	r0, r0
 801bdd4:	440e      	add	r6, r1
 801bdd6:	9010      	str	r0, [sp, #64]	; 0x40
 801bdd8:	3e01      	subs	r6, #1
 801bdda:	9801      	ldr	r0, [sp, #4]
 801bddc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bdde:	fb05 2510 	mls	r5, r5, r0, r2
 801bde2:	fb96 f6f1 	sdiv	r6, r6, r1
 801bde6:	fb15 f503 	smulbb	r5, r5, r3
 801bdea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bdee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bdf2:	3601      	adds	r6, #1
 801bdf4:	440d      	add	r5, r1
 801bdf6:	4419      	add	r1, r3
 801bdf8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bdfc:	b2b6      	uxth	r6, r6
 801bdfe:	441a      	add	r2, r3
 801be00:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801be04:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801be08:	b2ad      	uxth	r5, r5
 801be0a:	9304      	str	r3, [sp, #16]
 801be0c:	4b96      	ldr	r3, [pc, #600]	; (801c068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801be0e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801be12:	6818      	ldr	r0, [r3, #0]
 801be14:	6803      	ldr	r3, [r0, #0]
 801be16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be18:	4798      	blx	r3
 801be1a:	4b94      	ldr	r3, [pc, #592]	; (801c06c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 801be1c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801be20:	2d00      	cmp	r5, #0
 801be22:	881a      	ldrh	r2, [r3, #0]
 801be24:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801be28:	fb02 f707 	mul.w	r7, r2, r7
 801be2c:	fb02 c101 	mla	r1, r2, r1, ip
 801be30:	9318      	str	r3, [sp, #96]	; 0x60
 801be32:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801be36:	4b8e      	ldr	r3, [pc, #568]	; (801c070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 801be38:	bf18      	it	ne
 801be3a:	2100      	movne	r1, #0
 801be3c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801be40:	eba3 0304 	sub.w	r3, r3, r4
 801be44:	920b      	str	r2, [sp, #44]	; 0x2c
 801be46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be48:	9319      	str	r3, [sp, #100]	; 0x64
 801be4a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801be4e:	f106 0204 	add.w	r2, r6, #4
 801be52:	9206      	str	r2, [sp, #24]
 801be54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801be56:	ea6f 0202 	mvn.w	r2, r2
 801be5a:	b2d2      	uxtb	r2, r2
 801be5c:	9215      	str	r2, [sp, #84]	; 0x54
 801be5e:	9a04      	ldr	r2, [sp, #16]
 801be60:	bf08      	it	eq
 801be62:	4611      	moveq	r1, r2
 801be64:	2200      	movs	r2, #0
 801be66:	b289      	uxth	r1, r1
 801be68:	920d      	str	r2, [sp, #52]	; 0x34
 801be6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be6e:	fa12 f383 	uxtah	r3, r2, r3
 801be72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be74:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801be78:	3304      	adds	r3, #4
 801be7a:	9307      	str	r3, [sp, #28]
 801be7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801be7e:	455b      	cmp	r3, fp
 801be80:	f240 817b 	bls.w	801c17a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 801be84:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801be88:	f04f 0801 	mov.w	r8, #1
 801be8c:	9a01      	ldr	r2, [sp, #4]
 801be8e:	9807      	ldr	r0, [sp, #28]
 801be90:	46c4      	mov	ip, r8
 801be92:	f8cd 8008 	str.w	r8, [sp, #8]
 801be96:	7800      	ldrb	r0, [r0, #0]
 801be98:	fbb5 f3f3 	udiv	r3, r5, r3
 801be9c:	1ad3      	subs	r3, r2, r3
 801be9e:	9011      	str	r0, [sp, #68]	; 0x44
 801bea0:	3001      	adds	r0, #1
 801bea2:	b29b      	uxth	r3, r3
 801bea4:	9005      	str	r0, [sp, #20]
 801bea6:	9316      	str	r3, [sp, #88]	; 0x58
 801bea8:	9b07      	ldr	r3, [sp, #28]
 801beaa:	785a      	ldrb	r2, [r3, #1]
 801beac:	789b      	ldrb	r3, [r3, #2]
 801beae:	021b      	lsls	r3, r3, #8
 801beb0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801beb4:	9a07      	ldr	r2, [sp, #28]
 801beb6:	78d2      	ldrb	r2, [r2, #3]
 801beb8:	4313      	orrs	r3, r2
 801beba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bebc:	441a      	add	r2, r3
 801bebe:	1c50      	adds	r0, r2, #1
 801bec0:	7852      	ldrb	r2, [r2, #1]
 801bec2:	9003      	str	r0, [sp, #12]
 801bec4:	0212      	lsls	r2, r2, #8
 801bec6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bec8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801becc:	5cc3      	ldrb	r3, [r0, r3]
 801bece:	431a      	orrs	r2, r3
 801bed0:	b293      	uxth	r3, r2
 801bed2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bed6:	930c      	str	r3, [sp, #48]	; 0x30
 801bed8:	2300      	movs	r3, #0
 801beda:	9308      	str	r3, [sp, #32]
 801bedc:	461a      	mov	r2, r3
 801bede:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bee2:	930e      	str	r3, [sp, #56]	; 0x38
 801bee4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bee8:	930f      	str	r3, [sp, #60]	; 0x3c
 801beea:	2d00      	cmp	r5, #0
 801beec:	d07d      	beq.n	801bfea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801beee:	45ac      	cmp	ip, r5
 801bef0:	d26d      	bcs.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801bef2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bef4:	eba5 050c 	sub.w	r5, r5, ip
 801bef8:	4608      	mov	r0, r1
 801befa:	455b      	cmp	r3, fp
 801befc:	b2ad      	uxth	r5, r5
 801befe:	d802      	bhi.n	801bf06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801bf00:	e071      	b.n	801bfe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801bf02:	2b00      	cmp	r3, #0
 801bf04:	d15d      	bne.n	801bfc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bf06:	9b03      	ldr	r3, [sp, #12]
 801bf08:	9a02      	ldr	r2, [sp, #8]
 801bf0a:	785b      	ldrb	r3, [r3, #1]
 801bf0c:	f1c2 0207 	rsb	r2, r2, #7
 801bf10:	9902      	ldr	r1, [sp, #8]
 801bf12:	4093      	lsls	r3, r2
 801bf14:	005b      	lsls	r3, r3, #1
 801bf16:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bf1a:	9b03      	ldr	r3, [sp, #12]
 801bf1c:	781b      	ldrb	r3, [r3, #0]
 801bf1e:	410b      	asrs	r3, r1
 801bf20:	3101      	adds	r1, #1
 801bf22:	b2c9      	uxtb	r1, r1
 801bf24:	b2db      	uxtb	r3, r3
 801bf26:	2908      	cmp	r1, #8
 801bf28:	9102      	str	r1, [sp, #8]
 801bf2a:	9903      	ldr	r1, [sp, #12]
 801bf2c:	ea43 0302 	orr.w	r3, r3, r2
 801bf30:	bf0c      	ite	eq
 801bf32:	3102      	addeq	r1, #2
 801bf34:	3101      	addne	r1, #1
 801bf36:	b29a      	uxth	r2, r3
 801bf38:	bf05      	ittet	eq
 801bf3a:	9103      	streq	r1, [sp, #12]
 801bf3c:	2100      	moveq	r1, #0
 801bf3e:	9103      	strne	r1, [sp, #12]
 801bf40:	9102      	streq	r1, [sp, #8]
 801bf42:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bf44:	4291      	cmp	r1, r2
 801bf46:	d30a      	bcc.n	801bf5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801bf48:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bf4c:	2301      	movs	r3, #1
 801bf4e:	9905      	ldr	r1, [sp, #20]
 801bf50:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bf54:	d30f      	bcc.n	801bf76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bf56:	2100      	movs	r1, #0
 801bf58:	4698      	mov	r8, r3
 801bf5a:	9100      	str	r1, [sp, #0]
 801bf5c:	e032      	b.n	801bfc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 801bf5e:	9b05      	ldr	r3, [sp, #20]
 801bf60:	429a      	cmp	r2, r3
 801bf62:	d318      	bcc.n	801bf96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801bf64:	eb04 0308 	add.w	r3, r4, r8
 801bf68:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801bf6c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bf70:	f108 0301 	add.w	r3, r8, #1
 801bf74:	b29b      	uxth	r3, r3
 801bf76:	9905      	ldr	r1, [sp, #20]
 801bf78:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801bf7c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801bf80:	710e      	strb	r6, [r1, #4]
 801bf82:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801bf84:	80ce      	strh	r6, [r1, #6]
 801bf86:	f108 0601 	add.w	r6, r8, #1
 801bf8a:	714e      	strb	r6, [r1, #5]
 801bf8c:	9905      	ldr	r1, [sp, #20]
 801bf8e:	3101      	adds	r1, #1
 801bf90:	b289      	uxth	r1, r1
 801bf92:	9105      	str	r1, [sp, #20]
 801bf94:	e7df      	b.n	801bf56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bf96:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801bf9a:	4611      	mov	r1, r2
 801bf9c:	795b      	ldrb	r3, [r3, #5]
 801bf9e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801bfa2:	4426      	add	r6, r4
 801bfa4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801bfa6:	4437      	add	r7, r6
 801bfa8:	2f00      	cmp	r7, #0
 801bfaa:	dd06      	ble.n	801bfba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 801bfac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801bfb0:	790f      	ldrb	r7, [r1, #4]
 801bfb2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801bfb6:	88c9      	ldrh	r1, [r1, #6]
 801bfb8:	e7f4      	b.n	801bfa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801bfba:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801bfbe:	b29b      	uxth	r3, r3
 801bfc0:	e7c5      	b.n	801bf4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801bfc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bfc4:	920c      	str	r2, [sp, #48]	; 0x30
 801bfc6:	4601      	mov	r1, r0
 801bfc8:	9a00      	ldr	r2, [sp, #0]
 801bfca:	469c      	mov	ip, r3
 801bfcc:	e78d      	b.n	801beea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801bfce:	ebac 0305 	sub.w	r3, ip, r5
 801bfd2:	1957      	adds	r7, r2, r5
 801bfd4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801bfd8:	b2ba      	uxth	r2, r7
 801bfda:	b29b      	uxth	r3, r3
 801bfdc:	9200      	str	r2, [sp, #0]
 801bfde:	2500      	movs	r5, #0
 801bfe0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bfe2:	455a      	cmp	r2, fp
 801bfe4:	d88d      	bhi.n	801bf02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801bfe6:	4601      	mov	r1, r0
 801bfe8:	e748      	b.n	801be7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801bfea:	458c      	cmp	ip, r1
 801bfec:	bf27      	ittee	cs
 801bfee:	ebac 0301 	subcs.w	r3, ip, r1
 801bff2:	4628      	movcs	r0, r5
 801bff4:	eba1 000c 	subcc.w	r0, r1, ip
 801bff8:	462b      	movcc	r3, r5
 801bffa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801bffc:	bf27      	ittee	cs
 801bffe:	b29b      	uxthcs	r3, r3
 801c000:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c002:	b280      	uxthcc	r0, r0
 801c004:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c008:	2dff      	cmp	r5, #255	; 0xff
 801c00a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c00c:	eb02 0705 	add.w	r7, r2, r5
 801c010:	b2bd      	uxth	r5, r7
 801c012:	9500      	str	r5, [sp, #0]
 801c014:	d12e      	bne.n	801c074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801c016:	465e      	mov	r6, fp
 801c018:	9d00      	ldr	r5, [sp, #0]
 801c01a:	42aa      	cmp	r2, r5
 801c01c:	f040 8083 	bne.w	801c126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 801c020:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c022:	458c      	cmp	ip, r1
 801c024:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c028:	d3d9      	bcc.n	801bfde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c02a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c02c:	9904      	ldr	r1, [sp, #16]
 801c02e:	8812      	ldrh	r2, [r2, #0]
 801c030:	1a52      	subs	r2, r2, r1
 801c032:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c034:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c038:	9a08      	ldr	r2, [sp, #32]
 801c03a:	3201      	adds	r2, #1
 801c03c:	428a      	cmp	r2, r1
 801c03e:	9208      	str	r2, [sp, #32]
 801c040:	f040 8091 	bne.w	801c166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801c044:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c048:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c04c:	9b04      	ldr	r3, [sp, #16]
 801c04e:	eba5 050c 	sub.w	r5, r5, ip
 801c052:	b2ad      	uxth	r5, r5
 801c054:	2d00      	cmp	r5, #0
 801c056:	bf08      	it	eq
 801c058:	4619      	moveq	r1, r3
 801c05a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c05c:	bf18      	it	ne
 801c05e:	2100      	movne	r1, #0
 801c060:	3301      	adds	r3, #1
 801c062:	b289      	uxth	r1, r1
 801c064:	930d      	str	r3, [sp, #52]	; 0x34
 801c066:	e700      	b.n	801be6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 801c068:	24002fa4 	.word	0x24002fa4
 801c06c:	24002f9e 	.word	0x24002f9e
 801c070:	fffff7fb 	.word	0xfffff7fb
 801c074:	46d9      	mov	r9, fp
 801c076:	9d00      	ldr	r5, [sp, #0]
 801c078:	42aa      	cmp	r2, r5
 801c07a:	d0d1      	beq.n	801c020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801c07c:	1c55      	adds	r5, r2, #1
 801c07e:	4422      	add	r2, r4
 801c080:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c084:	9a06      	ldr	r2, [sp, #24]
 801c086:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c08a:	9517      	str	r5, [sp, #92]	; 0x5c
 801c08c:	4472      	add	r2, lr
 801c08e:	9212      	str	r2, [sp, #72]	; 0x48
 801c090:	f8b9 2000 	ldrh.w	r2, [r9]
 801c094:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c096:	1216      	asrs	r6, r2, #8
 801c098:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c09c:	10d5      	asrs	r5, r2, #3
 801c09e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c0a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c0a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c0a8:	00d2      	lsls	r2, r2, #3
 801c0aa:	fb1a fa07 	smulbb	sl, sl, r7
 801c0ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c0b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c0b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c0b8:	b2d2      	uxtb	r2, r2
 801c0ba:	fb06 a607 	mla	r6, r6, r7, sl
 801c0be:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c0c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c0c4:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c0c8:	b2b6      	uxth	r6, r6
 801c0ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c0cc:	fb1a fa07 	smulbb	sl, sl, r7
 801c0d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c0d2:	fb05 a507 	mla	r5, r5, r7, sl
 801c0d6:	9f06      	ldr	r7, [sp, #24]
 801c0d8:	f106 0a01 	add.w	sl, r6, #1
 801c0dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c0e0:	b2ad      	uxth	r5, r5
 801c0e2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c0e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c0e8:	f105 0a01 	add.w	sl, r5, #1
 801c0ec:	fb1e fe07 	smulbb	lr, lr, r7
 801c0f0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c0f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c0f6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c0fa:	fb02 e207 	mla	r2, r2, r7, lr
 801c0fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c102:	b292      	uxth	r2, r2
 801c104:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c108:	f102 0e01 	add.w	lr, r2, #1
 801c10c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c110:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c114:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c118:	ea4e 0606 	orr.w	r6, lr, r6
 801c11c:	ea46 060a 	orr.w	r6, r6, sl
 801c120:	f829 6b02 	strh.w	r6, [r9], #2
 801c124:	e7a7      	b.n	801c076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801c126:	f102 0e01 	add.w	lr, r2, #1
 801c12a:	4422      	add	r2, r4
 801c12c:	9f06      	ldr	r7, [sp, #24]
 801c12e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c132:	9a06      	ldr	r2, [sp, #24]
 801c134:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c138:	eb02 0a05 	add.w	sl, r2, r5
 801c13c:	4a13      	ldr	r2, [pc, #76]	; (801c18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801c13e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c142:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c146:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c14a:	00d2      	lsls	r2, r2, #3
 801c14c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c150:	ea49 0202 	orr.w	r2, r9, r2
 801c154:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c158:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c15c:	f826 2b02 	strh.w	r2, [r6], #2
 801c160:	fa1f f28e 	uxth.w	r2, lr
 801c164:	e758      	b.n	801c018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801c166:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c16a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c16e:	1a2d      	subs	r5, r5, r0
 801c170:	b2ad      	uxth	r5, r5
 801c172:	2d00      	cmp	r5, #0
 801c174:	bf18      	it	ne
 801c176:	2000      	movne	r0, #0
 801c178:	e732      	b.n	801bfe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801c17a:	4b05      	ldr	r3, [pc, #20]	; (801c190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801c17c:	6818      	ldr	r0, [r3, #0]
 801c17e:	6803      	ldr	r3, [r0, #0]
 801c180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c182:	4798      	blx	r3
 801c184:	b01f      	add	sp, #124	; 0x7c
 801c186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c18a:	bf00      	nop
 801c18c:	fffff800 	.word	0xfffff800
 801c190:	24002fa4 	.word	0x24002fa4

0801c194 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c198:	b091      	sub	sp, #68	; 0x44
 801c19a:	469b      	mov	fp, r3
 801c19c:	4616      	mov	r6, r2
 801c19e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c1a2:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c1a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c1aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c1ae:	4604      	mov	r4, r0
 801c1b0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c1b4:	4640      	mov	r0, r8
 801c1b6:	460d      	mov	r5, r1
 801c1b8:	4659      	mov	r1, fp
 801c1ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c1be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c1c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c1c6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c1ca:	f7f5 ffaf 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 801c1ce:	4631      	mov	r1, r6
 801c1d0:	4640      	mov	r0, r8
 801c1d2:	f7f5 ffab 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 801c1d6:	4b74      	ldr	r3, [pc, #464]	; (801c3a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c1d8:	8818      	ldrh	r0, [r3, #0]
 801c1da:	4b74      	ldr	r3, [pc, #464]	; (801c3ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c1dc:	b202      	sxth	r2, r0
 801c1de:	8819      	ldrh	r1, [r3, #0]
 801c1e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c1e4:	b20e      	sxth	r6, r1
 801c1e6:	2b00      	cmp	r3, #0
 801c1e8:	da07      	bge.n	801c1fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c1ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c1ee:	4463      	add	r3, ip
 801c1f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c1f4:	2300      	movs	r3, #0
 801c1f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c1fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c1fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c202:	1ad2      	subs	r2, r2, r3
 801c204:	4594      	cmp	ip, r2
 801c206:	bfc4      	itt	gt
 801c208:	1ac2      	subgt	r2, r0, r3
 801c20a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c20e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c212:	2a00      	cmp	r2, #0
 801c214:	da07      	bge.n	801c226 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c216:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c21a:	4462      	add	r2, ip
 801c21c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c220:	2200      	movs	r2, #0
 801c222:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c226:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c22a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c22e:	eba6 060a 	sub.w	r6, r6, sl
 801c232:	42b2      	cmp	r2, r6
 801c234:	bfc4      	itt	gt
 801c236:	eba1 020a 	subgt.w	r2, r1, sl
 801c23a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c23e:	4a5c      	ldr	r2, [pc, #368]	; (801c3b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c240:	7812      	ldrb	r2, [r2, #0]
 801c242:	b9a2      	cbnz	r2, 801c26e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c244:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c248:	4286      	cmp	r6, r0
 801c24a:	4640      	mov	r0, r8
 801c24c:	9303      	str	r3, [sp, #12]
 801c24e:	bf14      	ite	ne
 801c250:	2600      	movne	r6, #0
 801c252:	2601      	moveq	r6, #1
 801c254:	f7f5 ffad 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c258:	9b03      	ldr	r3, [sp, #12]
 801c25a:	b160      	cbz	r0, 801c276 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c25c:	2300      	movs	r3, #0
 801c25e:	8023      	strh	r3, [r4, #0]
 801c260:	8063      	strh	r3, [r4, #2]
 801c262:	80a3      	strh	r3, [r4, #4]
 801c264:	4620      	mov	r0, r4
 801c266:	80e3      	strh	r3, [r4, #6]
 801c268:	b011      	add	sp, #68	; 0x44
 801c26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c26e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c272:	428e      	cmp	r6, r1
 801c274:	e7e9      	b.n	801c24a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c276:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c27a:	a90e      	add	r1, sp, #56	; 0x38
 801c27c:	900e      	str	r0, [sp, #56]	; 0x38
 801c27e:	a80c      	add	r0, sp, #48	; 0x30
 801c280:	9205      	str	r2, [sp, #20]
 801c282:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c286:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c28a:	9206      	str	r2, [sp, #24]
 801c28c:	f8bb 2000 	ldrh.w	r2, [fp]
 801c290:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c294:	1a9b      	subs	r3, r3, r2
 801c296:	b21b      	sxth	r3, r3
 801c298:	9303      	str	r3, [sp, #12]
 801c29a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c29e:	f8df b118 	ldr.w	fp, [pc, #280]	; 801c3b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c2a2:	ebaa 0a03 	sub.w	sl, sl, r3
 801c2a6:	fa0f f38a 	sxth.w	r3, sl
 801c2aa:	9304      	str	r3, [sp, #16]
 801c2ac:	9b03      	ldr	r3, [sp, #12]
 801c2ae:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c2b2:	9b04      	ldr	r3, [sp, #16]
 801c2b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c2b8:	9b05      	ldr	r3, [sp, #20]
 801c2ba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c2be:	9b06      	ldr	r3, [sp, #24]
 801c2c0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c2c4:	f7f9 f87e 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2c8:	4640      	mov	r0, r8
 801c2ca:	f7f9 f853 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2ce:	a80e      	add	r0, sp, #56	; 0x38
 801c2d0:	f7f9 f850 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2d4:	4b37      	ldr	r3, [pc, #220]	; (801c3b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c2d6:	4628      	mov	r0, r5
 801c2d8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c2dc:	881b      	ldrh	r3, [r3, #0]
 801c2de:	9307      	str	r3, [sp, #28]
 801c2e0:	682b      	ldr	r3, [r5, #0]
 801c2e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c2e4:	4798      	blx	r3
 801c2e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c2ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c2ee:	4681      	mov	r9, r0
 801c2f0:	f8db 0000 	ldr.w	r0, [fp]
 801c2f4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c2f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c2fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c2fe:	6803      	ldr	r3, [r0, #0]
 801c300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c302:	4798      	blx	r3
 801c304:	4607      	mov	r7, r0
 801c306:	f8db 0000 	ldr.w	r0, [fp]
 801c30a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c30e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c312:	6803      	ldr	r3, [r0, #0]
 801c314:	9109      	str	r1, [sp, #36]	; 0x24
 801c316:	9208      	str	r2, [sp, #32]
 801c318:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c31a:	4798      	blx	r3
 801c31c:	f010 0f01 	tst.w	r0, #1
 801c320:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c324:	d012      	beq.n	801c34c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c326:	f8db 0000 	ldr.w	r0, [fp]
 801c32a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c32e:	6803      	ldr	r3, [r0, #0]
 801c330:	9200      	str	r2, [sp, #0]
 801c332:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c334:	462b      	mov	r3, r5
 801c336:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c33a:	47b0      	blx	r6
 801c33c:	9b03      	ldr	r3, [sp, #12]
 801c33e:	8023      	strh	r3, [r4, #0]
 801c340:	9b04      	ldr	r3, [sp, #16]
 801c342:	8063      	strh	r3, [r4, #2]
 801c344:	9b05      	ldr	r3, [sp, #20]
 801c346:	80a3      	strh	r3, [r4, #4]
 801c348:	9b06      	ldr	r3, [sp, #24]
 801c34a:	e78b      	b.n	801c264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c34c:	fb09 f202 	mul.w	r2, r9, r2
 801c350:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c354:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c358:	440f      	add	r7, r1
 801c35a:	b166      	cbz	r6, 801c376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c35c:	9a07      	ldr	r2, [sp, #28]
 801c35e:	4592      	cmp	sl, r2
 801c360:	d109      	bne.n	801c376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c362:	f8db 0000 	ldr.w	r0, [fp]
 801c366:	fb09 f303 	mul.w	r3, r9, r3
 801c36a:	4629      	mov	r1, r5
 801c36c:	6802      	ldr	r2, [r0, #0]
 801c36e:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c370:	463a      	mov	r2, r7
 801c372:	47b0      	blx	r6
 801c374:	e7e2      	b.n	801c33c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c376:	fb0a f303 	mul.w	r3, sl, r3
 801c37a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c37e:	f8df b038 	ldr.w	fp, [pc, #56]	; 801c3b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c382:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c386:	4545      	cmp	r5, r8
 801c388:	d2d8      	bcs.n	801c33c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c38a:	f8db 0000 	ldr.w	r0, [fp]
 801c38e:	4629      	mov	r1, r5
 801c390:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c394:	4435      	add	r5, r6
 801c396:	6802      	ldr	r2, [r0, #0]
 801c398:	005b      	lsls	r3, r3, #1
 801c39a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c39e:	463a      	mov	r2, r7
 801c3a0:	47d0      	blx	sl
 801c3a2:	444f      	add	r7, r9
 801c3a4:	e7ef      	b.n	801c386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c3a6:	bf00      	nop
 801c3a8:	24002f98 	.word	0x24002f98
 801c3ac:	24002f9a 	.word	0x24002f9a
 801c3b0:	24002f9c 	.word	0x24002f9c
 801c3b4:	24002f9e 	.word	0x24002f9e
 801c3b8:	24002fa4 	.word	0x24002fa4

0801c3bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c3bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c3be:	4606      	mov	r6, r0
 801c3c0:	b087      	sub	sp, #28
 801c3c2:	460c      	mov	r4, r1
 801c3c4:	4617      	mov	r7, r2
 801c3c6:	461d      	mov	r5, r3
 801c3c8:	b333      	cbz	r3, 801c418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c3ca:	4608      	mov	r0, r1
 801c3cc:	f7f5 fef1 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c3d0:	bb10      	cbnz	r0, 801c418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c3d2:	6820      	ldr	r0, [r4, #0]
 801c3d4:	ab04      	add	r3, sp, #16
 801c3d6:	6861      	ldr	r1, [r4, #4]
 801c3d8:	4c1b      	ldr	r4, [pc, #108]	; (801c448 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c3da:	c303      	stmia	r3!, {r0, r1}
 801c3dc:	a804      	add	r0, sp, #16
 801c3de:	f7f8 ffc9 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3e2:	6820      	ldr	r0, [r4, #0]
 801c3e4:	6803      	ldr	r3, [r0, #0]
 801c3e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c3e8:	4798      	blx	r3
 801c3ea:	2dff      	cmp	r5, #255	; 0xff
 801c3ec:	d016      	beq.n	801c41c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c3ee:	f010 0f08 	tst.w	r0, #8
 801c3f2:	6820      	ldr	r0, [r4, #0]
 801c3f4:	d015      	beq.n	801c422 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c3f6:	2400      	movs	r4, #0
 801c3f8:	6801      	ldr	r1, [r0, #0]
 801c3fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c3fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c402:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c406:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c40a:	9401      	str	r4, [sp, #4]
 801c40c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c410:	9400      	str	r4, [sp, #0]
 801c412:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c414:	4639      	mov	r1, r7
 801c416:	47a0      	blx	r4
 801c418:	b007      	add	sp, #28
 801c41a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c41c:	f010 0f02 	tst.w	r0, #2
 801c420:	e7e7      	b.n	801c3f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c422:	6803      	ldr	r3, [r0, #0]
 801c424:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c426:	4798      	blx	r3
 801c428:	4b08      	ldr	r3, [pc, #32]	; (801c44c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c42a:	4601      	mov	r1, r0
 801c42c:	4630      	mov	r0, r6
 801c42e:	881a      	ldrh	r2, [r3, #0]
 801c430:	6833      	ldr	r3, [r6, #0]
 801c432:	e9cd 7500 	strd	r7, r5, [sp]
 801c436:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c438:	ab04      	add	r3, sp, #16
 801c43a:	47a8      	blx	r5
 801c43c:	6820      	ldr	r0, [r4, #0]
 801c43e:	6803      	ldr	r3, [r0, #0]
 801c440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c442:	4798      	blx	r3
 801c444:	e7e8      	b.n	801c418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c446:	bf00      	nop
 801c448:	24002fa4 	.word	0x24002fa4
 801c44c:	24002f9e 	.word	0x24002f9e

0801c450 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c454:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c458:	4688      	mov	r8, r1
 801c45a:	4614      	mov	r4, r2
 801c45c:	461d      	mov	r5, r3
 801c45e:	9e08      	ldr	r6, [sp, #32]
 801c460:	2f00      	cmp	r7, #0
 801c462:	f000 80ab 	beq.w	801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c466:	4618      	mov	r0, r3
 801c468:	f7f5 fea3 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c46c:	2800      	cmp	r0, #0
 801c46e:	f040 80a5 	bne.w	801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c472:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c476:	2fff      	cmp	r7, #255	; 0xff
 801c478:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c47c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c480:	fb04 1303 	mla	r3, r4, r3, r1
 801c484:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c488:	eba4 0200 	sub.w	r2, r4, r0
 801c48c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c490:	fb04 f505 	mul.w	r5, r4, r5
 801c494:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c498:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c49c:	d04a      	beq.n	801c534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801c49e:	b2bc      	uxth	r4, r7
 801c4a0:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c4a4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c4a8:	fa5f f788 	uxtb.w	r7, r8
 801c4ac:	b2f3      	uxtb	r3, r6
 801c4ae:	0040      	lsls	r0, r0, #1
 801c4b0:	fb0e fe04 	mul.w	lr, lr, r4
 801c4b4:	4367      	muls	r7, r4
 801c4b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c4ba:	4363      	muls	r3, r4
 801c4bc:	fa1f fc8c 	uxth.w	ip, ip
 801c4c0:	42a9      	cmp	r1, r5
 801c4c2:	d27b      	bcs.n	801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c4c4:	eb01 0900 	add.w	r9, r1, r0
 801c4c8:	4549      	cmp	r1, r9
 801c4ca:	d231      	bcs.n	801c530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801c4cc:	880a      	ldrh	r2, [r1, #0]
 801c4ce:	1214      	asrs	r4, r2, #8
 801c4d0:	10d6      	asrs	r6, r2, #3
 801c4d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c4d6:	00d2      	lsls	r2, r2, #3
 801c4d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c4dc:	b2d2      	uxtb	r2, r2
 801c4de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c4e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c4e6:	fb14 f40c 	smulbb	r4, r4, ip
 801c4ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c4ee:	fb12 f20c 	smulbb	r2, r2, ip
 801c4f2:	fb16 f60c 	smulbb	r6, r6, ip
 801c4f6:	4474      	add	r4, lr
 801c4f8:	441a      	add	r2, r3
 801c4fa:	b2a4      	uxth	r4, r4
 801c4fc:	443e      	add	r6, r7
 801c4fe:	b292      	uxth	r2, r2
 801c500:	f104 0a01 	add.w	sl, r4, #1
 801c504:	b2b6      	uxth	r6, r6
 801c506:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c50a:	f102 0a01 	add.w	sl, r2, #1
 801c50e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c512:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c516:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c51a:	4322      	orrs	r2, r4
 801c51c:	1c74      	adds	r4, r6, #1
 801c51e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c522:	0976      	lsrs	r6, r6, #5
 801c524:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c528:	4332      	orrs	r2, r6
 801c52a:	f821 2b02 	strh.w	r2, [r1], #2
 801c52e:	e7cb      	b.n	801c4c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801c530:	4441      	add	r1, r8
 801c532:	e7c5      	b.n	801c4c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801c534:	0973      	lsrs	r3, r6, #5
 801c536:	4f22      	ldr	r7, [pc, #136]	; (801c5c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801c538:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c53c:	ea08 0707 	and.w	r7, r8, r7
 801c540:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c544:	433b      	orrs	r3, r7
 801c546:	07e7      	lsls	r7, r4, #31
 801c548:	ea43 0306 	orr.w	r3, r3, r6
 801c54c:	b29b      	uxth	r3, r3
 801c54e:	d50b      	bpl.n	801c568 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801c550:	0040      	lsls	r0, r0, #1
 801c552:	0052      	lsls	r2, r2, #1
 801c554:	42a9      	cmp	r1, r5
 801c556:	d231      	bcs.n	801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c558:	180c      	adds	r4, r1, r0
 801c55a:	42a1      	cmp	r1, r4
 801c55c:	d202      	bcs.n	801c564 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c55e:	f821 3b02 	strh.w	r3, [r1], #2
 801c562:	e7fa      	b.n	801c55a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801c564:	4411      	add	r1, r2
 801c566:	e7f5      	b.n	801c554 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801c568:	078e      	lsls	r6, r1, #30
 801c56a:	d008      	beq.n	801c57e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801c56c:	0066      	lsls	r6, r4, #1
 801c56e:	460a      	mov	r2, r1
 801c570:	42aa      	cmp	r2, r5
 801c572:	d202      	bcs.n	801c57a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c574:	8013      	strh	r3, [r2, #0]
 801c576:	4432      	add	r2, r6
 801c578:	e7fa      	b.n	801c570 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801c57a:	3102      	adds	r1, #2
 801c57c:	3801      	subs	r0, #1
 801c57e:	07c2      	lsls	r2, r0, #31
 801c580:	d50b      	bpl.n	801c59a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801c582:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c586:	0066      	lsls	r6, r4, #1
 801c588:	3a01      	subs	r2, #1
 801c58a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c58e:	42aa      	cmp	r2, r5
 801c590:	d202      	bcs.n	801c598 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801c592:	8013      	strh	r3, [r2, #0]
 801c594:	4432      	add	r2, r6
 801c596:	e7fa      	b.n	801c58e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801c598:	3801      	subs	r0, #1
 801c59a:	b178      	cbz	r0, 801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c59c:	1040      	asrs	r0, r0, #1
 801c59e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c5a2:	0080      	lsls	r0, r0, #2
 801c5a4:	0064      	lsls	r4, r4, #1
 801c5a6:	42a9      	cmp	r1, r5
 801c5a8:	d208      	bcs.n	801c5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c5aa:	180e      	adds	r6, r1, r0
 801c5ac:	460a      	mov	r2, r1
 801c5ae:	42b2      	cmp	r2, r6
 801c5b0:	d202      	bcs.n	801c5b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c5b2:	f842 3b04 	str.w	r3, [r2], #4
 801c5b6:	e7fa      	b.n	801c5ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801c5b8:	4421      	add	r1, r4
 801c5ba:	e7f4      	b.n	801c5a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801c5bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5c0:	00fff800 	.word	0x00fff800

0801c5c4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c5c4:	2200      	movs	r2, #0
 801c5c6:	4912      	ldr	r1, [pc, #72]	; (801c610 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c5c8:	6042      	str	r2, [r0, #4]
 801c5ca:	6001      	str	r1, [r0, #0]
 801c5cc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c5d0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c5d4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c5d8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c5dc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c5e0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c5e4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c5e8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c5ec:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c5f0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c5f4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c5f8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c5fc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c600:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c604:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c608:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c60c:	4770      	bx	lr
 801c60e:	bf00      	nop
 801c610:	08028f10 	.word	0x08028f10

0801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c618:	b08d      	sub	sp, #52	; 0x34
 801c61a:	460d      	mov	r5, r1
 801c61c:	4604      	mov	r4, r0
 801c61e:	4699      	mov	r9, r3
 801c620:	6808      	ldr	r0, [r1, #0]
 801c622:	ab08      	add	r3, sp, #32
 801c624:	6849      	ldr	r1, [r1, #4]
 801c626:	c303      	stmia	r3!, {r0, r1}
 801c628:	6810      	ldr	r0, [r2, #0]
 801c62a:	ab0a      	add	r3, sp, #40	; 0x28
 801c62c:	6851      	ldr	r1, [r2, #4]
 801c62e:	c303      	stmia	r3!, {r0, r1}
 801c630:	a808      	add	r0, sp, #32
 801c632:	f7f8 fe9f 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c636:	4629      	mov	r1, r5
 801c638:	a80a      	add	r0, sp, #40	; 0x28
 801c63a:	4d67      	ldr	r5, [pc, #412]	; (801c7d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c63c:	f7f8 fec2 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c640:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c644:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c648:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c64c:	6828      	ldr	r0, [r5, #0]
 801c64e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c652:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c656:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c65a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c65e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c662:	440a      	add	r2, r1
 801c664:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c668:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c66c:	4413      	add	r3, r2
 801c66e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c672:	6803      	ldr	r3, [r0, #0]
 801c674:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c676:	4798      	blx	r3
 801c678:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c67c:	d119      	bne.n	801c6b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c67e:	f010 0f20 	tst.w	r0, #32
 801c682:	6828      	ldr	r0, [r5, #0]
 801c684:	d018      	beq.n	801c6b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c686:	2500      	movs	r5, #0
 801c688:	6801      	ldr	r1, [r0, #0]
 801c68a:	b2b6      	uxth	r6, r6
 801c68c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c690:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c694:	9601      	str	r6, [sp, #4]
 801c696:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c69a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c69e:	9502      	str	r5, [sp, #8]
 801c6a0:	fa1f f588 	uxth.w	r5, r8
 801c6a4:	9500      	str	r5, [sp, #0]
 801c6a6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c6a8:	4621      	mov	r1, r4
 801c6aa:	47a8      	blx	r5
 801c6ac:	b00d      	add	sp, #52	; 0x34
 801c6ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6b2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c6b6:	e7e4      	b.n	801c682 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c6b8:	6803      	ldr	r3, [r0, #0]
 801c6ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6bc:	4798      	blx	r3
 801c6be:	4947      	ldr	r1, [pc, #284]	; (801c7dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c6c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c6c4:	880b      	ldrh	r3, [r1, #0]
 801c6c6:	468a      	mov	sl, r1
 801c6c8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c6cc:	fb03 5202 	mla	r2, r3, r2, r5
 801c6d0:	4373      	muls	r3, r6
 801c6d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c6d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c6da:	9307      	str	r3, [sp, #28]
 801c6dc:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c6e0:	9306      	str	r3, [sp, #24]
 801c6e2:	9b07      	ldr	r3, [sp, #28]
 801c6e4:	4298      	cmp	r0, r3
 801c6e6:	d270      	bcs.n	801c7ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c6e8:	9b06      	ldr	r3, [sp, #24]
 801c6ea:	4621      	mov	r1, r4
 801c6ec:	eb00 0b03 	add.w	fp, r0, r3
 801c6f0:	4558      	cmp	r0, fp
 801c6f2:	d25d      	bcs.n	801c7b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c6f4:	f851 4b04 	ldr.w	r4, [r1], #4
 801c6f8:	0e23      	lsrs	r3, r4, #24
 801c6fa:	d014      	beq.n	801c726 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c6fc:	2bff      	cmp	r3, #255	; 0xff
 801c6fe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c702:	d112      	bne.n	801c72a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c704:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c708:	d10f      	bne.n	801c72a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c70a:	0963      	lsrs	r3, r4, #5
 801c70c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c710:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c714:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c718:	f02c 0c07 	bic.w	ip, ip, #7
 801c71c:	ea43 0c0c 	orr.w	ip, r3, ip
 801c720:	ea4c 0404 	orr.w	r4, ip, r4
 801c724:	8004      	strh	r4, [r0, #0]
 801c726:	3002      	adds	r0, #2
 801c728:	e7e2      	b.n	801c6f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c72a:	fb09 f303 	mul.w	r3, r9, r3
 801c72e:	8807      	ldrh	r7, [r0, #0]
 801c730:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c734:	fa5f fc8c 	uxtb.w	ip, ip
 801c738:	1c5a      	adds	r2, r3, #1
 801c73a:	123e      	asrs	r6, r7, #8
 801c73c:	10fd      	asrs	r5, r7, #3
 801c73e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c742:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c746:	00ff      	lsls	r7, r7, #3
 801c748:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c74c:	1212      	asrs	r2, r2, #8
 801c74e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c752:	b293      	uxth	r3, r2
 801c754:	43d2      	mvns	r2, r2
 801c756:	b2ff      	uxtb	r7, r7
 801c758:	fb1e fe03 	smulbb	lr, lr, r3
 801c75c:	b2d2      	uxtb	r2, r2
 801c75e:	fb1c fc03 	smulbb	ip, ip, r3
 801c762:	b2e4      	uxtb	r4, r4
 801c764:	fb06 e602 	mla	r6, r6, r2, lr
 801c768:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c76c:	fb14 f403 	smulbb	r4, r4, r3
 801c770:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c774:	b2b6      	uxth	r6, r6
 801c776:	fb05 c502 	mla	r5, r5, r2, ip
 801c77a:	fb07 4702 	mla	r7, r7, r2, r4
 801c77e:	f106 0e01 	add.w	lr, r6, #1
 801c782:	b2ad      	uxth	r5, r5
 801c784:	b2bf      	uxth	r7, r7
 801c786:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c78a:	f105 0c01 	add.w	ip, r5, #1
 801c78e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801c792:	1c7e      	adds	r6, r7, #1
 801c794:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c798:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c79c:	096d      	lsrs	r5, r5, #5
 801c79e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c7a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7a6:	ea46 060e 	orr.w	r6, r6, lr
 801c7aa:	432e      	orrs	r6, r5
 801c7ac:	8006      	strh	r6, [r0, #0]
 801c7ae:	e7ba      	b.n	801c726 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c7b0:	f8ba 3000 	ldrh.w	r3, [sl]
 801c7b4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801c7b8:	eba3 0308 	sub.w	r3, r3, r8
 801c7bc:	eba4 0408 	sub.w	r4, r4, r8
 801c7c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c7c4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c7c8:	e78b      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c7ca:	4b03      	ldr	r3, [pc, #12]	; (801c7d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c7cc:	6818      	ldr	r0, [r3, #0]
 801c7ce:	6803      	ldr	r3, [r0, #0]
 801c7d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7d2:	4798      	blx	r3
 801c7d4:	e76a      	b.n	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c7d6:	bf00      	nop
 801c7d8:	24002fa4 	.word	0x24002fa4
 801c7dc:	24002f9e 	.word	0x24002f9e

0801c7e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c7e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c7e4:	b085      	sub	sp, #20
 801c7e6:	6810      	ldr	r0, [r2, #0]
 801c7e8:	460c      	mov	r4, r1
 801c7ea:	6851      	ldr	r1, [r2, #4]
 801c7ec:	466d      	mov	r5, sp
 801c7ee:	4616      	mov	r6, r2
 801c7f0:	c503      	stmia	r5!, {r0, r1}
 801c7f2:	6818      	ldr	r0, [r3, #0]
 801c7f4:	6859      	ldr	r1, [r3, #4]
 801c7f6:	c503      	stmia	r5!, {r0, r1}
 801c7f8:	4668      	mov	r0, sp
 801c7fa:	4d2e      	ldr	r5, [pc, #184]	; (801c8b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c7fc:	f7f8 fdba 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c800:	4631      	mov	r1, r6
 801c802:	a802      	add	r0, sp, #8
 801c804:	4e2c      	ldr	r6, [pc, #176]	; (801c8b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c806:	f7f8 fddd 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c80a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c80e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c812:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c816:	6828      	ldr	r0, [r5, #0]
 801c818:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c81c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c820:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c824:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c828:	f8bd 1000 	ldrh.w	r1, [sp]
 801c82c:	440a      	add	r2, r1
 801c82e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c832:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c836:	4413      	add	r3, r2
 801c838:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c83c:	6803      	ldr	r3, [r0, #0]
 801c83e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c840:	4798      	blx	r3
 801c842:	8833      	ldrh	r3, [r6, #0]
 801c844:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c848:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c84c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c850:	f8df e068 	ldr.w	lr, [pc, #104]	; 801c8bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c854:	fb03 1202 	mla	r2, r3, r2, r1
 801c858:	fb08 f303 	mul.w	r3, r8, r3
 801c85c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c860:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c864:	4298      	cmp	r0, r3
 801c866:	d21d      	bcs.n	801c8a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c868:	eb00 080c 	add.w	r8, r0, ip
 801c86c:	4540      	cmp	r0, r8
 801c86e:	d20f      	bcs.n	801c890 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c870:	f854 1b04 	ldr.w	r1, [r4], #4
 801c874:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c878:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c87c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c880:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c884:	ea42 0209 	orr.w	r2, r2, r9
 801c888:	430a      	orrs	r2, r1
 801c88a:	f820 2b02 	strh.w	r2, [r0], #2
 801c88e:	e7ed      	b.n	801c86c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c890:	8832      	ldrh	r2, [r6, #0]
 801c892:	1bd2      	subs	r2, r2, r7
 801c894:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c898:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c89c:	1bd2      	subs	r2, r2, r7
 801c89e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c8a2:	e7df      	b.n	801c864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c8a4:	6828      	ldr	r0, [r5, #0]
 801c8a6:	6803      	ldr	r3, [r0, #0]
 801c8a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8aa:	4798      	blx	r3
 801c8ac:	b005      	add	sp, #20
 801c8ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c8b2:	bf00      	nop
 801c8b4:	24002fa4 	.word	0x24002fa4
 801c8b8:	24002f9e 	.word	0x24002f9e
 801c8bc:	fffff800 	.word	0xfffff800

0801c8c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c8c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c8c4:	b08e      	sub	sp, #56	; 0x38
 801c8c6:	460e      	mov	r6, r1
 801c8c8:	4604      	mov	r4, r0
 801c8ca:	461d      	mov	r5, r3
 801c8cc:	6808      	ldr	r0, [r1, #0]
 801c8ce:	ab0a      	add	r3, sp, #40	; 0x28
 801c8d0:	6849      	ldr	r1, [r1, #4]
 801c8d2:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801caa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c8d6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 801caac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c8da:	c303      	stmia	r3!, {r0, r1}
 801c8dc:	6810      	ldr	r0, [r2, #0]
 801c8de:	ab0c      	add	r3, sp, #48	; 0x30
 801c8e0:	6851      	ldr	r1, [r2, #4]
 801c8e2:	c303      	stmia	r3!, {r0, r1}
 801c8e4:	a80a      	add	r0, sp, #40	; 0x28
 801c8e6:	f7f8 fd45 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8ea:	4631      	mov	r1, r6
 801c8ec:	a80c      	add	r0, sp, #48	; 0x30
 801c8ee:	f7f8 fd69 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801c8f6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801c8fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c8fe:	f8d8 0000 	ldr.w	r0, [r8]
 801c902:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c906:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801c90a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c90e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c912:	440c      	add	r4, r1
 801c914:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801c918:	440a      	add	r2, r1
 801c91a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801c91e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801c922:	4413      	add	r3, r2
 801c924:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c928:	6803      	ldr	r3, [r0, #0]
 801c92a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c92c:	4798      	blx	r3
 801c92e:	2dff      	cmp	r5, #255	; 0xff
 801c930:	d124      	bne.n	801c97c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c932:	f010 0f01 	tst.w	r0, #1
 801c936:	f8d8 0000 	ldr.w	r0, [r8]
 801c93a:	d022      	beq.n	801c982 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c93c:	2100      	movs	r1, #0
 801c93e:	f04f 0e01 	mov.w	lr, #1
 801c942:	f8d0 c000 	ldr.w	ip, [r0]
 801c946:	b2b6      	uxth	r6, r6
 801c948:	f8cd e018 	str.w	lr, [sp, #24]
 801c94c:	b2bf      	uxth	r7, r7
 801c94e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801c952:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801c956:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c95a:	f8b9 e000 	ldrh.w	lr, [r9]
 801c95e:	9503      	str	r5, [sp, #12]
 801c960:	9601      	str	r6, [sp, #4]
 801c962:	9700      	str	r7, [sp, #0]
 801c964:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c968:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c96c:	9102      	str	r1, [sp, #8]
 801c96e:	4621      	mov	r1, r4
 801c970:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801c974:	47a8      	blx	r5
 801c976:	b00e      	add	sp, #56	; 0x38
 801c978:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c97c:	f010 0f04 	tst.w	r0, #4
 801c980:	e7d9      	b.n	801c936 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801c982:	6803      	ldr	r3, [r0, #0]
 801c984:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c986:	4798      	blx	r3
 801c988:	f8b9 3000 	ldrh.w	r3, [r9]
 801c98c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c990:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801c994:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801c998:	435e      	muls	r6, r3
 801c99a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c99e:	2dff      	cmp	r5, #255	; 0xff
 801c9a0:	fb03 1202 	mla	r2, r3, r2, r1
 801c9a4:	ebac 0c07 	sub.w	ip, ip, r7
 801c9a8:	eba3 0707 	sub.w	r7, r3, r7
 801c9ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c9b0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c9b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c9b8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801c9bc:	d049      	beq.n	801ca52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801c9be:	43eb      	mvns	r3, r5
 801c9c0:	fa1f f985 	uxth.w	r9, r5
 801c9c4:	b2db      	uxtb	r3, r3
 801c9c6:	42b0      	cmp	r0, r6
 801c9c8:	d266      	bcs.n	801ca98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c9ca:	eb00 0a0e 	add.w	sl, r0, lr
 801c9ce:	4550      	cmp	r0, sl
 801c9d0:	4621      	mov	r1, r4
 801c9d2:	f104 0403 	add.w	r4, r4, #3
 801c9d6:	d25b      	bcs.n	801ca90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801c9d8:	8802      	ldrh	r2, [r0, #0]
 801c9da:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c9de:	ea4f 2822 	mov.w	r8, r2, asr #8
 801c9e2:	fb11 f109 	smulbb	r1, r1, r9
 801c9e6:	10d5      	asrs	r5, r2, #3
 801c9e8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c9ec:	00d2      	lsls	r2, r2, #3
 801c9ee:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c9f2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801c9f6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c9fa:	fb08 1803 	mla	r8, r8, r3, r1
 801c9fe:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ca02:	b2d2      	uxtb	r2, r2
 801ca04:	fb11 f109 	smulbb	r1, r1, r9
 801ca08:	fa1f f888 	uxth.w	r8, r8
 801ca0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ca10:	fb05 1503 	mla	r5, r5, r3, r1
 801ca14:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ca18:	fb11 f109 	smulbb	r1, r1, r9
 801ca1c:	b2ad      	uxth	r5, r5
 801ca1e:	fb02 1203 	mla	r2, r2, r3, r1
 801ca22:	f108 0101 	add.w	r1, r8, #1
 801ca26:	b292      	uxth	r2, r2
 801ca28:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ca2c:	1c51      	adds	r1, r2, #1
 801ca2e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ca32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ca36:	1c69      	adds	r1, r5, #1
 801ca38:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ca3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ca40:	096d      	lsrs	r5, r5, #5
 801ca42:	ea42 0208 	orr.w	r2, r2, r8
 801ca46:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca4a:	432a      	orrs	r2, r5
 801ca4c:	f820 2b02 	strh.w	r2, [r0], #2
 801ca50:	e7bd      	b.n	801c9ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ca52:	4a14      	ldr	r2, [pc, #80]	; (801caa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ca54:	42b0      	cmp	r0, r6
 801ca56:	d21f      	bcs.n	801ca98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ca58:	eb00 050e 	add.w	r5, r0, lr
 801ca5c:	42a8      	cmp	r0, r5
 801ca5e:	4621      	mov	r1, r4
 801ca60:	f104 0403 	add.w	r4, r4, #3
 801ca64:	d210      	bcs.n	801ca88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ca66:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ca6a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ca6e:	00db      	lsls	r3, r3, #3
 801ca70:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ca74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca78:	430b      	orrs	r3, r1
 801ca7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ca7e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ca82:	f820 3b02 	strh.w	r3, [r0], #2
 801ca86:	e7e9      	b.n	801ca5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ca88:	4438      	add	r0, r7
 801ca8a:	eb01 040c 	add.w	r4, r1, ip
 801ca8e:	e7e1      	b.n	801ca54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ca90:	4438      	add	r0, r7
 801ca92:	eb01 040c 	add.w	r4, r1, ip
 801ca96:	e796      	b.n	801c9c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ca98:	4b03      	ldr	r3, [pc, #12]	; (801caa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ca9a:	6818      	ldr	r0, [r3, #0]
 801ca9c:	6803      	ldr	r3, [r0, #0]
 801ca9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801caa0:	4798      	blx	r3
 801caa2:	e768      	b.n	801c976 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801caa4:	fffff800 	.word	0xfffff800
 801caa8:	24002fa4 	.word	0x24002fa4
 801caac:	24002f9e 	.word	0x24002f9e

0801cab0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cab0:	b4f0      	push	{r4, r5, r6, r7}
 801cab2:	4616      	mov	r6, r2
 801cab4:	461c      	mov	r4, r3
 801cab6:	460d      	mov	r5, r1
 801cab8:	9a04      	ldr	r2, [sp, #16]
 801caba:	2e01      	cmp	r6, #1
 801cabc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cac0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cac4:	d012      	beq.n	801caec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cac6:	d303      	bcc.n	801cad0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cac8:	2e02      	cmp	r6, #2
 801caca:	d00a      	beq.n	801cae2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cacc:	bcf0      	pop	{r4, r5, r6, r7}
 801cace:	4770      	bx	lr
 801cad0:	6805      	ldr	r5, [r0, #0]
 801cad2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cad6:	68ed      	ldr	r5, [r5, #12]
 801cad8:	4613      	mov	r3, r2
 801cada:	4622      	mov	r2, r4
 801cadc:	46ac      	mov	ip, r5
 801cade:	bcf0      	pop	{r4, r5, r6, r7}
 801cae0:	4760      	bx	ip
 801cae2:	4621      	mov	r1, r4
 801cae4:	4628      	mov	r0, r5
 801cae6:	bcf0      	pop	{r4, r5, r6, r7}
 801cae8:	f7ff bd94 	b.w	801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801caec:	4621      	mov	r1, r4
 801caee:	4628      	mov	r0, r5
 801caf0:	bcf0      	pop	{r4, r5, r6, r7}
 801caf2:	f7ff bee5 	b.w	801c8c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801caf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801caf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cafc:	b093      	sub	sp, #76	; 0x4c
 801cafe:	4681      	mov	r9, r0
 801cb00:	4688      	mov	r8, r1
 801cb02:	6810      	ldr	r0, [r2, #0]
 801cb04:	6851      	ldr	r1, [r2, #4]
 801cb06:	ac0e      	add	r4, sp, #56	; 0x38
 801cb08:	4616      	mov	r6, r2
 801cb0a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801cb0e:	4f6b      	ldr	r7, [pc, #428]	; (801ccbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801cb10:	c403      	stmia	r4!, {r0, r1}
 801cb12:	6818      	ldr	r0, [r3, #0]
 801cb14:	ac10      	add	r4, sp, #64	; 0x40
 801cb16:	6859      	ldr	r1, [r3, #4]
 801cb18:	c403      	stmia	r4!, {r0, r1}
 801cb1a:	a80e      	add	r0, sp, #56	; 0x38
 801cb1c:	f7f8 fc2a 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb20:	4631      	mov	r1, r6
 801cb22:	a810      	add	r0, sp, #64	; 0x40
 801cb24:	4e66      	ldr	r6, [pc, #408]	; (801ccc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cb26:	f7f8 fc4d 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb2a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801cb2e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cb32:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cb36:	6830      	ldr	r0, [r6, #0]
 801cb38:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb3c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801cb40:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801cb44:	4489      	add	r9, r1
 801cb46:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801cb4a:	440a      	add	r2, r1
 801cb4c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cb50:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cb54:	4413      	add	r3, r2
 801cb56:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cb5a:	6803      	ldr	r3, [r0, #0]
 801cb5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cb5e:	4798      	blx	r3
 801cb60:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cb64:	6830      	ldr	r0, [r6, #0]
 801cb66:	d01d      	beq.n	801cba4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cb68:	2200      	movs	r2, #0
 801cb6a:	6801      	ldr	r1, [r0, #0]
 801cb6c:	b2a4      	uxth	r4, r4
 801cb6e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801cb72:	b2ad      	uxth	r5, r5
 801cb74:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cb78:	220b      	movs	r2, #11
 801cb7a:	9207      	str	r2, [sp, #28]
 801cb7c:	883a      	ldrh	r2, [r7, #0]
 801cb7e:	9502      	str	r5, [sp, #8]
 801cb80:	9206      	str	r2, [sp, #24]
 801cb82:	2201      	movs	r2, #1
 801cb84:	9401      	str	r4, [sp, #4]
 801cb86:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cb8a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cb8e:	9203      	str	r2, [sp, #12]
 801cb90:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801cb94:	9200      	str	r2, [sp, #0]
 801cb96:	4642      	mov	r2, r8
 801cb98:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cb9a:	4649      	mov	r1, r9
 801cb9c:	47a0      	blx	r4
 801cb9e:	b013      	add	sp, #76	; 0x4c
 801cba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cba4:	6803      	ldr	r3, [r0, #0]
 801cba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cba8:	4798      	blx	r3
 801cbaa:	883b      	ldrh	r3, [r7, #0]
 801cbac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cbb0:	f04f 0e04 	mov.w	lr, #4
 801cbb4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cbb8:	435d      	muls	r5, r3
 801cbba:	fb03 1202 	mla	r2, r3, r2, r1
 801cbbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbc2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cbc6:	920c      	str	r2, [sp, #48]	; 0x30
 801cbc8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801cbcc:	1b12      	subs	r2, r2, r4
 801cbce:	920d      	str	r2, [sp, #52]	; 0x34
 801cbd0:	0062      	lsls	r2, r4, #1
 801cbd2:	1b1c      	subs	r4, r3, r4
 801cbd4:	920a      	str	r2, [sp, #40]	; 0x28
 801cbd6:	0063      	lsls	r3, r4, #1
 801cbd8:	930b      	str	r3, [sp, #44]	; 0x2c
 801cbda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cbdc:	4298      	cmp	r0, r3
 801cbde:	d266      	bcs.n	801ccae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cbe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cbe2:	eb00 0b03 	add.w	fp, r0, r3
 801cbe6:	4558      	cmp	r0, fp
 801cbe8:	d25c      	bcs.n	801cca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cbea:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cbee:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cbf2:	f858 2003 	ldr.w	r2, [r8, r3]
 801cbf6:	0e11      	lsrs	r1, r2, #24
 801cbf8:	d012      	beq.n	801cc20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cbfa:	29ff      	cmp	r1, #255	; 0xff
 801cbfc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cc00:	d110      	bne.n	801cc24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cc02:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cc06:	d10d      	bne.n	801cc24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cc08:	0953      	lsrs	r3, r2, #5
 801cc0a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cc0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc16:	f027 0707 	bic.w	r7, r7, #7
 801cc1a:	431f      	orrs	r7, r3
 801cc1c:	433a      	orrs	r2, r7
 801cc1e:	8002      	strh	r2, [r0, #0]
 801cc20:	3002      	adds	r0, #2
 801cc22:	e7e0      	b.n	801cbe6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cc24:	fb0a f101 	mul.w	r1, sl, r1
 801cc28:	8806      	ldrh	r6, [r0, #0]
 801cc2a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cc2e:	b2d2      	uxtb	r2, r2
 801cc30:	1c4b      	adds	r3, r1, #1
 801cc32:	1235      	asrs	r5, r6, #8
 801cc34:	10f4      	asrs	r4, r6, #3
 801cc36:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cc3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cc3e:	00f6      	lsls	r6, r6, #3
 801cc40:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cc44:	121b      	asrs	r3, r3, #8
 801cc46:	b2f6      	uxtb	r6, r6
 801cc48:	b299      	uxth	r1, r3
 801cc4a:	43db      	mvns	r3, r3
 801cc4c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cc50:	fb1c fc01 	smulbb	ip, ip, r1
 801cc54:	b2db      	uxtb	r3, r3
 801cc56:	fb12 f201 	smulbb	r2, r2, r1
 801cc5a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cc5e:	fb05 c503 	mla	r5, r5, r3, ip
 801cc62:	b2ff      	uxtb	r7, r7
 801cc64:	fb06 2203 	mla	r2, r6, r3, r2
 801cc68:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cc6c:	fb17 f701 	smulbb	r7, r7, r1
 801cc70:	b2ad      	uxth	r5, r5
 801cc72:	b292      	uxth	r2, r2
 801cc74:	fb04 7403 	mla	r4, r4, r3, r7
 801cc78:	f105 0c01 	add.w	ip, r5, #1
 801cc7c:	1c57      	adds	r7, r2, #1
 801cc7e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cc82:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cc86:	b2a4      	uxth	r4, r4
 801cc88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cc8c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cc90:	433d      	orrs	r5, r7
 801cc92:	1c67      	adds	r7, r4, #1
 801cc94:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cc98:	0964      	lsrs	r4, r4, #5
 801cc9a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cc9e:	4325      	orrs	r5, r4
 801cca0:	8005      	strh	r5, [r0, #0]
 801cca2:	e7bd      	b.n	801cc20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cca4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cca6:	4418      	add	r0, r3
 801cca8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ccaa:	4499      	add	r9, r3
 801ccac:	e795      	b.n	801cbda <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ccae:	4b04      	ldr	r3, [pc, #16]	; (801ccc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ccb0:	6818      	ldr	r0, [r3, #0]
 801ccb2:	6803      	ldr	r3, [r0, #0]
 801ccb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccb6:	4798      	blx	r3
 801ccb8:	e771      	b.n	801cb9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ccba:	bf00      	nop
 801ccbc:	24002f9e 	.word	0x24002f9e
 801ccc0:	24002fa4 	.word	0x24002fa4

0801ccc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ccc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ccc8:	b087      	sub	sp, #28
 801ccca:	4680      	mov	r8, r0
 801cccc:	460d      	mov	r5, r1
 801ccce:	4614      	mov	r4, r2
 801ccd0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ccd4:	2e00      	cmp	r6, #0
 801ccd6:	f000 80b9 	beq.w	801ce4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ccda:	6810      	ldr	r0, [r2, #0]
 801ccdc:	af02      	add	r7, sp, #8
 801ccde:	6851      	ldr	r1, [r2, #4]
 801cce0:	c703      	stmia	r7!, {r0, r1}
 801cce2:	6818      	ldr	r0, [r3, #0]
 801cce4:	af04      	add	r7, sp, #16
 801cce6:	6859      	ldr	r1, [r3, #4]
 801cce8:	c703      	stmia	r7!, {r0, r1}
 801ccea:	a802      	add	r0, sp, #8
 801ccec:	f7f8 fb42 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccf0:	4621      	mov	r1, r4
 801ccf2:	a804      	add	r0, sp, #16
 801ccf4:	f7f8 fb66 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccf8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ccfc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cd00:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cd04:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cd08:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cd0c:	eb08 0401 	add.w	r4, r8, r1
 801cd10:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cd14:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cd18:	440a      	add	r2, r1
 801cd1a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cd1e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cd22:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cd26:	4413      	add	r3, r2
 801cd28:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cd2c:	4b49      	ldr	r3, [pc, #292]	; (801ce54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cd2e:	6818      	ldr	r0, [r3, #0]
 801cd30:	6803      	ldr	r3, [r0, #0]
 801cd32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd34:	4798      	blx	r3
 801cd36:	4b48      	ldr	r3, [pc, #288]	; (801ce58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cd38:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cd3c:	2eff      	cmp	r6, #255	; 0xff
 801cd3e:	881a      	ldrh	r2, [r3, #0]
 801cd40:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cd44:	fb02 c101 	mla	r1, r2, r1, ip
 801cd48:	fb02 f207 	mul.w	r2, r2, r7
 801cd4c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cd50:	f105 0104 	add.w	r1, r5, #4
 801cd54:	461d      	mov	r5, r3
 801cd56:	d05a      	beq.n	801ce0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cd58:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801cd5c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cd60:	b2b6      	uxth	r6, r6
 801cd62:	9301      	str	r3, [sp, #4]
 801cd64:	fa1f fe8e 	uxth.w	lr, lr
 801cd68:	4282      	cmp	r2, r0
 801cd6a:	d96a      	bls.n	801ce42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cd6c:	eb00 0b0a 	add.w	fp, r0, sl
 801cd70:	4583      	cmp	fp, r0
 801cd72:	d940      	bls.n	801cdf6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801cd74:	8805      	ldrh	r5, [r0, #0]
 801cd76:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cd7a:	122f      	asrs	r7, r5, #8
 801cd7c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cd80:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cd84:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd88:	00ed      	lsls	r5, r5, #3
 801cd8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cd8e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cd92:	fb17 f70e 	smulbb	r7, r7, lr
 801cd96:	b2ed      	uxtb	r5, r5
 801cd98:	fb19 f90e 	smulbb	r9, r9, lr
 801cd9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cda0:	fb15 f50e 	smulbb	r5, r5, lr
 801cda4:	fb0c 7c06 	mla	ip, ip, r6, r7
 801cda8:	10df      	asrs	r7, r3, #3
 801cdaa:	00db      	lsls	r3, r3, #3
 801cdac:	fa1f fc8c 	uxth.w	ip, ip
 801cdb0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cdb4:	b2db      	uxtb	r3, r3
 801cdb6:	fb07 9706 	mla	r7, r7, r6, r9
 801cdba:	f10c 0901 	add.w	r9, ip, #1
 801cdbe:	fb03 5306 	mla	r3, r3, r6, r5
 801cdc2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801cdc6:	b29b      	uxth	r3, r3
 801cdc8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801cdcc:	b2bf      	uxth	r7, r7
 801cdce:	f103 0c01 	add.w	ip, r3, #1
 801cdd2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cdd6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cdda:	ea4c 0c09 	orr.w	ip, ip, r9
 801cdde:	f107 0901 	add.w	r9, r7, #1
 801cde2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801cde6:	097f      	lsrs	r7, r7, #5
 801cde8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cdec:	ea4c 0c07 	orr.w	ip, ip, r7
 801cdf0:	f820 cb02 	strh.w	ip, [r0], #2
 801cdf4:	e7bc      	b.n	801cd70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801cdf6:	9b01      	ldr	r3, [sp, #4]
 801cdf8:	881b      	ldrh	r3, [r3, #0]
 801cdfa:	eba3 0308 	sub.w	r3, r3, r8
 801cdfe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce02:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ce06:	eba3 0308 	sub.w	r3, r3, r8
 801ce0a:	441c      	add	r4, r3
 801ce0c:	e7ac      	b.n	801cd68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ce0e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ce12:	4282      	cmp	r2, r0
 801ce14:	d915      	bls.n	801ce42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ce16:	eb00 060a 	add.w	r6, r0, sl
 801ce1a:	4286      	cmp	r6, r0
 801ce1c:	d906      	bls.n	801ce2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ce1e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ce22:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ce26:	f820 3b02 	strh.w	r3, [r0], #2
 801ce2a:	e7f6      	b.n	801ce1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ce2c:	882b      	ldrh	r3, [r5, #0]
 801ce2e:	eba3 0308 	sub.w	r3, r3, r8
 801ce32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce36:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ce3a:	eba3 0308 	sub.w	r3, r3, r8
 801ce3e:	441c      	add	r4, r3
 801ce40:	e7e7      	b.n	801ce12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ce42:	4b04      	ldr	r3, [pc, #16]	; (801ce54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ce44:	6818      	ldr	r0, [r3, #0]
 801ce46:	6803      	ldr	r3, [r0, #0]
 801ce48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce4a:	4798      	blx	r3
 801ce4c:	b007      	add	sp, #28
 801ce4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce52:	bf00      	nop
 801ce54:	24002fa4 	.word	0x24002fa4
 801ce58:	24002f9e 	.word	0x24002f9e

0801ce5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801ce5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce60:	b091      	sub	sp, #68	; 0x44
 801ce62:	4680      	mov	r8, r0
 801ce64:	460f      	mov	r7, r1
 801ce66:	4614      	mov	r4, r2
 801ce68:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801ce6c:	2d00      	cmp	r5, #0
 801ce6e:	d051      	beq.n	801cf14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ce70:	6810      	ldr	r0, [r2, #0]
 801ce72:	ae0c      	add	r6, sp, #48	; 0x30
 801ce74:	6851      	ldr	r1, [r2, #4]
 801ce76:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801ce7a:	c603      	stmia	r6!, {r0, r1}
 801ce7c:	6818      	ldr	r0, [r3, #0]
 801ce7e:	ae0e      	add	r6, sp, #56	; 0x38
 801ce80:	6859      	ldr	r1, [r3, #4]
 801ce82:	c603      	stmia	r6!, {r0, r1}
 801ce84:	a80c      	add	r0, sp, #48	; 0x30
 801ce86:	f7f8 fa75 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce8a:	4621      	mov	r1, r4
 801ce8c:	a80e      	add	r0, sp, #56	; 0x38
 801ce8e:	f7f8 fa99 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce92:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801ce96:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ce9a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801ce9e:	f8d9 0000 	ldr.w	r0, [r9]
 801cea2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cea6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ceaa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801ceae:	eb08 0401 	add.w	r4, r8, r1
 801ceb2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801ceb6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d07c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801ceba:	440a      	add	r2, r1
 801cebc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801cec0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801cec4:	4413      	add	r3, r2
 801cec6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801ceca:	6803      	ldr	r3, [r0, #0]
 801cecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cece:	4798      	blx	r3
 801ced0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ced4:	f8d9 0000 	ldr.w	r0, [r9]
 801ced8:	d01f      	beq.n	801cf1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801ceda:	2200      	movs	r2, #0
 801cedc:	6801      	ldr	r1, [r0, #0]
 801cede:	b2b6      	uxth	r6, r6
 801cee0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cee4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cee8:	220b      	movs	r2, #11
 801ceea:	9207      	str	r2, [sp, #28]
 801ceec:	f8b8 2000 	ldrh.w	r2, [r8]
 801cef0:	9601      	str	r6, [sp, #4]
 801cef2:	9206      	str	r2, [sp, #24]
 801cef4:	2201      	movs	r2, #1
 801cef6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cefa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801cefe:	9203      	str	r2, [sp, #12]
 801cf00:	fa1f f28a 	uxth.w	r2, sl
 801cf04:	9202      	str	r2, [sp, #8]
 801cf06:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cf0a:	9200      	str	r2, [sp, #0]
 801cf0c:	463a      	mov	r2, r7
 801cf0e:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801cf10:	4621      	mov	r1, r4
 801cf12:	47a8      	blx	r5
 801cf14:	b011      	add	sp, #68	; 0x44
 801cf16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf1a:	6803      	ldr	r3, [r0, #0]
 801cf1c:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801cf20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf22:	4798      	blx	r3
 801cf24:	f8b8 2000 	ldrh.w	r2, [r8]
 801cf28:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801cf2c:	2dff      	cmp	r5, #255	; 0xff
 801cf2e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801cf32:	fb0a fa02 	mul.w	sl, sl, r2
 801cf36:	fb02 1303 	mla	r3, r2, r3, r1
 801cf3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cf3e:	d062      	beq.n	801d006 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801cf40:	ea6f 0c05 	mvn.w	ip, r5
 801cf44:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801cf48:	b2ad      	uxth	r5, r5
 801cf4a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801cf4e:	fa5f fc8c 	uxtb.w	ip, ip
 801cf52:	930a      	str	r3, [sp, #40]	; 0x28
 801cf54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf56:	4298      	cmp	r0, r3
 801cf58:	f080 8085 	bcs.w	801d066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801cf5c:	eb00 0b09 	add.w	fp, r0, r9
 801cf60:	4558      	cmp	r0, fp
 801cf62:	d246      	bcs.n	801cff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801cf64:	f814 eb01 	ldrb.w	lr, [r4], #1
 801cf68:	2303      	movs	r3, #3
 801cf6a:	2204      	movs	r2, #4
 801cf6c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801cf70:	8803      	ldrh	r3, [r0, #0]
 801cf72:	eb07 0a0e 	add.w	sl, r7, lr
 801cf76:	1219      	asrs	r1, r3, #8
 801cf78:	10da      	asrs	r2, r3, #3
 801cf7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cf7e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801cf82:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cf86:	00db      	lsls	r3, r3, #3
 801cf88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cf8c:	fb18 f805 	smulbb	r8, r8, r5
 801cf90:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801cf94:	fb1e fe05 	smulbb	lr, lr, r5
 801cf98:	b2db      	uxtb	r3, r3
 801cf9a:	fb01 810c 	mla	r1, r1, ip, r8
 801cf9e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cfa2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801cfa6:	fb18 f805 	smulbb	r8, r8, r5
 801cfaa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801cfae:	b289      	uxth	r1, r1
 801cfb0:	fb02 820c 	mla	r2, r2, ip, r8
 801cfb4:	fb03 e30c 	mla	r3, r3, ip, lr
 801cfb8:	f101 0801 	add.w	r8, r1, #1
 801cfbc:	b292      	uxth	r2, r2
 801cfbe:	b29b      	uxth	r3, r3
 801cfc0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801cfc4:	f102 0801 	add.w	r8, r2, #1
 801cfc8:	f103 0e01 	add.w	lr, r3, #1
 801cfcc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801cfd0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801cfd4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801cfd8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801cfdc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cfe0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cfe4:	ea4e 0101 	orr.w	r1, lr, r1
 801cfe8:	ea41 0108 	orr.w	r1, r1, r8
 801cfec:	f820 1b02 	strh.w	r1, [r0], #2
 801cff0:	e7b6      	b.n	801cf60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801cff2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cff4:	881b      	ldrh	r3, [r3, #0]
 801cff6:	1b9b      	subs	r3, r3, r6
 801cff8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cffc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d000:	1b9b      	subs	r3, r3, r6
 801d002:	441c      	add	r4, r3
 801d004:	e7a6      	b.n	801cf54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d006:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d00a:	2203      	movs	r2, #3
 801d00c:	2504      	movs	r5, #4
 801d00e:	4919      	ldr	r1, [pc, #100]	; (801d074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d010:	4550      	cmp	r0, sl
 801d012:	d228      	bcs.n	801d066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d014:	eb00 0c09 	add.w	ip, r0, r9
 801d018:	4560      	cmp	r0, ip
 801d01a:	4623      	mov	r3, r4
 801d01c:	d219      	bcs.n	801d052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d01e:	f893 e000 	ldrb.w	lr, [r3]
 801d022:	3401      	adds	r4, #1
 801d024:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d028:	eb07 0b0e 	add.w	fp, r7, lr
 801d02c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d030:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d034:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d038:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d03c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d040:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d044:	ea43 030b 	orr.w	r3, r3, fp
 801d048:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d04c:	f820 3b02 	strh.w	r3, [r0], #2
 801d050:	e7e2      	b.n	801d018 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d052:	f8b8 3000 	ldrh.w	r3, [r8]
 801d056:	1b9b      	subs	r3, r3, r6
 801d058:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d05c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d060:	1b9b      	subs	r3, r3, r6
 801d062:	441c      	add	r4, r3
 801d064:	e7d4      	b.n	801d010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d066:	4b04      	ldr	r3, [pc, #16]	; (801d078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d068:	6818      	ldr	r0, [r3, #0]
 801d06a:	6803      	ldr	r3, [r0, #0]
 801d06c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d06e:	4798      	blx	r3
 801d070:	e750      	b.n	801cf14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d072:	bf00      	nop
 801d074:	fffff800 	.word	0xfffff800
 801d078:	24002fa4 	.word	0x24002fa4
 801d07c:	24002f9e 	.word	0x24002f9e

0801d080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d080:	b4f0      	push	{r4, r5, r6, r7}
 801d082:	460c      	mov	r4, r1
 801d084:	4611      	mov	r1, r2
 801d086:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d08a:	461a      	mov	r2, r3
 801d08c:	780f      	ldrb	r7, [r1, #0]
 801d08e:	9b04      	ldr	r3, [sp, #16]
 801d090:	2f01      	cmp	r7, #1
 801d092:	784e      	ldrb	r6, [r1, #1]
 801d094:	d036      	beq.n	801d104 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d096:	d31e      	bcc.n	801d0d6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d098:	2f02      	cmp	r7, #2
 801d09a:	d14a      	bne.n	801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d09c:	2e03      	cmp	r6, #3
 801d09e:	d848      	bhi.n	801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d0a0:	e8df f006 	tbb	[pc, r6]
 801d0a4:	16140702 	.word	0x16140702
 801d0a8:	9504      	str	r5, [sp, #16]
 801d0aa:	4620      	mov	r0, r4
 801d0ac:	bcf0      	pop	{r4, r5, r6, r7}
 801d0ae:	f7ff be09 	b.w	801ccc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d0b2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d0b4:	2800      	cmp	r0, #0
 801d0b6:	d03c      	beq.n	801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d0b8:	6806      	ldr	r6, [r0, #0]
 801d0ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d0be:	68b5      	ldr	r5, [r6, #8]
 801d0c0:	4613      	mov	r3, r2
 801d0c2:	46ac      	mov	ip, r5
 801d0c4:	460a      	mov	r2, r1
 801d0c6:	4621      	mov	r1, r4
 801d0c8:	bcf0      	pop	{r4, r5, r6, r7}
 801d0ca:	4760      	bx	ip
 801d0cc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d0ce:	e7f1      	b.n	801d0b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d0d0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d0d4:	e7ee      	b.n	801d0b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d0d6:	2e03      	cmp	r6, #3
 801d0d8:	d82b      	bhi.n	801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d0da:	e8df f006 	tbb	[pc, r6]
 801d0de:	0702      	.short	0x0702
 801d0e0:	100e      	.short	0x100e
 801d0e2:	9504      	str	r5, [sp, #16]
 801d0e4:	4620      	mov	r0, r4
 801d0e6:	bcf0      	pop	{r4, r5, r6, r7}
 801d0e8:	f7ff bd06 	b.w	801caf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d0ec:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d0ee:	b300      	cbz	r0, 801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d0f0:	6806      	ldr	r6, [r0, #0]
 801d0f2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d0f6:	68f5      	ldr	r5, [r6, #12]
 801d0f8:	e7e2      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d0fa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d0fc:	e7f7      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d0fe:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d102:	e7f4      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d104:	2e03      	cmp	r6, #3
 801d106:	d814      	bhi.n	801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d108:	e8df f006 	tbb	[pc, r6]
 801d10c:	100e0702 	.word	0x100e0702
 801d110:	9504      	str	r5, [sp, #16]
 801d112:	4620      	mov	r0, r4
 801d114:	bcf0      	pop	{r4, r5, r6, r7}
 801d116:	f7ff bea1 	b.w	801ce5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d11a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d11c:	b148      	cbz	r0, 801d132 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d11e:	6806      	ldr	r6, [r0, #0]
 801d120:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d124:	6935      	ldr	r5, [r6, #16]
 801d126:	e7cb      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d128:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d12a:	e7f7      	b.n	801d11c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d12c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d130:	e7f4      	b.n	801d11c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d132:	bcf0      	pop	{r4, r5, r6, r7}
 801d134:	4770      	bx	lr
	...

0801d138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d13c:	b087      	sub	sp, #28
 801d13e:	4604      	mov	r4, r0
 801d140:	460e      	mov	r6, r1
 801d142:	6810      	ldr	r0, [r2, #0]
 801d144:	6851      	ldr	r1, [r2, #4]
 801d146:	ad02      	add	r5, sp, #8
 801d148:	4617      	mov	r7, r2
 801d14a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d14e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801d380 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d152:	c503      	stmia	r5!, {r0, r1}
 801d154:	6818      	ldr	r0, [r3, #0]
 801d156:	ad04      	add	r5, sp, #16
 801d158:	6859      	ldr	r1, [r3, #4]
 801d15a:	c503      	stmia	r5!, {r0, r1}
 801d15c:	a802      	add	r0, sp, #8
 801d15e:	f7f8 f909 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d162:	4639      	mov	r1, r7
 801d164:	a804      	add	r0, sp, #16
 801d166:	f7f8 f92d 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d16a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d16e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d172:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d176:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d17a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d17e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d182:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d186:	440e      	add	r6, r1
 801d188:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d18c:	440a      	add	r2, r1
 801d18e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d192:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d196:	4413      	add	r3, r2
 801d198:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d19c:	4b77      	ldr	r3, [pc, #476]	; (801d37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d19e:	6818      	ldr	r0, [r3, #0]
 801d1a0:	6803      	ldr	r3, [r0, #0]
 801d1a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1a4:	4798      	blx	r3
 801d1a6:	f8b9 b000 	ldrh.w	fp, [r9]
 801d1aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d1ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d1b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d1b6:	fb05 f50b 	mul.w	r5, r5, fp
 801d1ba:	fb0b 2303 	mla	r3, fp, r3, r2
 801d1be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1c2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d1c6:	9300      	str	r3, [sp, #0]
 801d1c8:	d069      	beq.n	801d29e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d1ca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d1ce:	4558      	cmp	r0, fp
 801d1d0:	f080 80cc 	bcs.w	801d36c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d1d4:	9b00      	ldr	r3, [sp, #0]
 801d1d6:	4631      	mov	r1, r6
 801d1d8:	18c3      	adds	r3, r0, r3
 801d1da:	9301      	str	r3, [sp, #4]
 801d1dc:	9b01      	ldr	r3, [sp, #4]
 801d1de:	4298      	cmp	r0, r3
 801d1e0:	d24f      	bcs.n	801d282 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d1e2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d1e6:	2a00      	cmp	r2, #0
 801d1e8:	d048      	beq.n	801d27c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d1ea:	fb0a f202 	mul.w	r2, sl, r2
 801d1ee:	1c53      	adds	r3, r2, #1
 801d1f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d1f4:	121b      	asrs	r3, r3, #8
 801d1f6:	d041      	beq.n	801d27c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d1f8:	8802      	ldrh	r2, [r0, #0]
 801d1fa:	b29e      	uxth	r6, r3
 801d1fc:	f8b4 c000 	ldrh.w	ip, [r4]
 801d200:	43db      	mvns	r3, r3
 801d202:	1215      	asrs	r5, r2, #8
 801d204:	b2db      	uxtb	r3, r3
 801d206:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d20a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d20e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d212:	fb15 f503 	smulbb	r5, r5, r3
 801d216:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d21a:	00d2      	lsls	r2, r2, #3
 801d21c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d220:	fb07 5706 	mla	r7, r7, r6, r5
 801d224:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d228:	b2d2      	uxtb	r2, r2
 801d22a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d22e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d232:	fb1e fe03 	smulbb	lr, lr, r3
 801d236:	b2bf      	uxth	r7, r7
 801d238:	fb12 f203 	smulbb	r2, r2, r3
 801d23c:	fa5f fc8c 	uxtb.w	ip, ip
 801d240:	fb05 e506 	mla	r5, r5, r6, lr
 801d244:	f107 0e01 	add.w	lr, r7, #1
 801d248:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d24c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d250:	fa1f fc8c 	uxth.w	ip, ip
 801d254:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d258:	b2ad      	uxth	r5, r5
 801d25a:	f10c 0701 	add.w	r7, ip, #1
 801d25e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d262:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d266:	ea47 070e 	orr.w	r7, r7, lr
 801d26a:	f105 0e01 	add.w	lr, r5, #1
 801d26e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d272:	096d      	lsrs	r5, r5, #5
 801d274:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d278:	432f      	orrs	r7, r5
 801d27a:	8007      	strh	r7, [r0, #0]
 801d27c:	3002      	adds	r0, #2
 801d27e:	3402      	adds	r4, #2
 801d280:	e7ac      	b.n	801d1dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d282:	f8b9 3000 	ldrh.w	r3, [r9]
 801d286:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d28a:	eba3 0308 	sub.w	r3, r3, r8
 801d28e:	eba6 0608 	sub.w	r6, r6, r8
 801d292:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d296:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d29a:	440e      	add	r6, r1
 801d29c:	e797      	b.n	801d1ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d29e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d2a2:	42a8      	cmp	r0, r5
 801d2a4:	d262      	bcs.n	801d36c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d2a6:	9b00      	ldr	r3, [sp, #0]
 801d2a8:	4631      	mov	r1, r6
 801d2aa:	eb00 0b03 	add.w	fp, r0, r3
 801d2ae:	4558      	cmp	r0, fp
 801d2b0:	d24e      	bcs.n	801d350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d2b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d2b6:	b12b      	cbz	r3, 801d2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d2b8:	2bff      	cmp	r3, #255	; 0xff
 801d2ba:	f8b4 e000 	ldrh.w	lr, [r4]
 801d2be:	d104      	bne.n	801d2ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d2c0:	f8a0 e000 	strh.w	lr, [r0]
 801d2c4:	3002      	adds	r0, #2
 801d2c6:	3402      	adds	r4, #2
 801d2c8:	e7f1      	b.n	801d2ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d2ca:	8802      	ldrh	r2, [r0, #0]
 801d2cc:	b29f      	uxth	r7, r3
 801d2ce:	43db      	mvns	r3, r3
 801d2d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d2d4:	1216      	asrs	r6, r2, #8
 801d2d6:	b2db      	uxtb	r3, r3
 801d2d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d2dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d2e0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d2e4:	00d2      	lsls	r2, r2, #3
 801d2e6:	fb16 f603 	smulbb	r6, r6, r3
 801d2ea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d2ee:	b2d2      	uxtb	r2, r2
 801d2f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d2f4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d2f8:	fb1a fa03 	smulbb	sl, sl, r3
 801d2fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d300:	fa1f fc8c 	uxth.w	ip, ip
 801d304:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d308:	fb12 f303 	smulbb	r3, r2, r3
 801d30c:	fa5f fe8e 	uxtb.w	lr, lr
 801d310:	fb06 a607 	mla	r6, r6, r7, sl
 801d314:	f10c 0201 	add.w	r2, ip, #1
 801d318:	fb0e 3307 	mla	r3, lr, r7, r3
 801d31c:	b2b6      	uxth	r6, r6
 801d31e:	b29b      	uxth	r3, r3
 801d320:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d324:	f106 0a01 	add.w	sl, r6, #1
 801d328:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d32c:	f103 0c01 	add.w	ip, r3, #1
 801d330:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d334:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d338:	0976      	lsrs	r6, r6, #5
 801d33a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d33e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d342:	ea4c 0c02 	orr.w	ip, ip, r2
 801d346:	ea4c 0c06 	orr.w	ip, ip, r6
 801d34a:	f8a0 c000 	strh.w	ip, [r0]
 801d34e:	e7b9      	b.n	801d2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d350:	f8b9 3000 	ldrh.w	r3, [r9]
 801d354:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d358:	eba3 0308 	sub.w	r3, r3, r8
 801d35c:	eba6 0608 	sub.w	r6, r6, r8
 801d360:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d364:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d368:	440e      	add	r6, r1
 801d36a:	e79a      	b.n	801d2a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d36c:	4b03      	ldr	r3, [pc, #12]	; (801d37c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d36e:	6818      	ldr	r0, [r3, #0]
 801d370:	6803      	ldr	r3, [r0, #0]
 801d372:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d374:	4798      	blx	r3
 801d376:	b007      	add	sp, #28
 801d378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d37c:	24002fa4 	.word	0x24002fa4
 801d380:	24002f9e 	.word	0x24002f9e

0801d384 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d388:	b089      	sub	sp, #36	; 0x24
 801d38a:	4682      	mov	sl, r0
 801d38c:	460f      	mov	r7, r1
 801d38e:	4691      	mov	r9, r2
 801d390:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d394:	4698      	mov	r8, r3
 801d396:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d398:	2e00      	cmp	r6, #0
 801d39a:	d03d      	beq.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d39c:	4608      	mov	r0, r1
 801d39e:	f7fa fe53 	bl	8018048 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d3a2:	4605      	mov	r5, r0
 801d3a4:	4638      	mov	r0, r7
 801d3a6:	f7fa fe83 	bl	80180b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d3aa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d3ae:	4638      	mov	r0, r7
 801d3b0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d3b4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d3b8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d3bc:	f7fa ff30 	bl	8018220 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d3c0:	4605      	mov	r5, r0
 801d3c2:	4638      	mov	r0, r7
 801d3c4:	f7fa ff5c 	bl	8018280 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d3c8:	4681      	mov	r9, r0
 801d3ca:	4638      	mov	r0, r7
 801d3cc:	f7fa ffac 	bl	8018328 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d3d0:	280b      	cmp	r0, #11
 801d3d2:	d821      	bhi.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3d4:	e8df f000 	tbb	[pc, r0]
 801d3d8:	2006aebe 	.word	0x2006aebe
 801d3dc:	20202020 	.word	0x20202020
 801d3e0:	b5202020 	.word	0xb5202020
 801d3e4:	4bb0      	ldr	r3, [pc, #704]	; (801d6a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d3e6:	6818      	ldr	r0, [r3, #0]
 801d3e8:	6803      	ldr	r3, [r0, #0]
 801d3ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d3ec:	4798      	blx	r3
 801d3ee:	2eff      	cmp	r6, #255	; 0xff
 801d3f0:	d101      	bne.n	801d3f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d3f2:	0683      	lsls	r3, r0, #26
 801d3f4:	d506      	bpl.n	801d404 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d3f6:	4633      	mov	r3, r6
 801d3f8:	4622      	mov	r2, r4
 801d3fa:	a902      	add	r1, sp, #8
 801d3fc:	4628      	mov	r0, r5
 801d3fe:	f7ff f909 	bl	801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d402:	e009      	b.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d404:	4638      	mov	r0, r7
 801d406:	f7fa fed3 	bl	80181b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d40a:	b940      	cbnz	r0, 801d41e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d40c:	4623      	mov	r3, r4
 801d40e:	aa02      	add	r2, sp, #8
 801d410:	4629      	mov	r1, r5
 801d412:	4650      	mov	r0, sl
 801d414:	f7ff f9e4 	bl	801c7e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d418:	b009      	add	sp, #36	; 0x24
 801d41a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d41e:	f10d 0818 	add.w	r8, sp, #24
 801d422:	4639      	mov	r1, r7
 801d424:	af04      	add	r7, sp, #16
 801d426:	4640      	mov	r0, r8
 801d428:	f7fa fe76 	bl	8018118 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d42c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d430:	e887 0003 	stmia.w	r7, {r0, r1}
 801d434:	4638      	mov	r0, r7
 801d436:	4621      	mov	r1, r4
 801d438:	f7f4 fe78 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 801d43c:	4638      	mov	r0, r7
 801d43e:	f7f4 feb8 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d442:	2800      	cmp	r0, #0
 801d444:	d1d7      	bne.n	801d3f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d446:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d44a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d44e:	4293      	cmp	r3, r2
 801d450:	dd12      	ble.n	801d478 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d452:	1a9b      	subs	r3, r3, r2
 801d454:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d458:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d45c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d460:	4628      	mov	r0, r5
 801d462:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d466:	4642      	mov	r2, r8
 801d468:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d46c:	a902      	add	r1, sp, #8
 801d46e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d472:	4633      	mov	r3, r6
 801d474:	f7ff f8ce 	bl	801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d478:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d47c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d480:	4293      	cmp	r3, r2
 801d482:	dd12      	ble.n	801d4aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d484:	1a9b      	subs	r3, r3, r2
 801d486:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d48a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d48e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d492:	4642      	mov	r2, r8
 801d494:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d498:	4628      	mov	r0, r5
 801d49a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d49e:	23ff      	movs	r3, #255	; 0xff
 801d4a0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d4a4:	a902      	add	r1, sp, #8
 801d4a6:	f7ff f8b5 	bl	801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d4aa:	463b      	mov	r3, r7
 801d4ac:	aa02      	add	r2, sp, #8
 801d4ae:	4629      	mov	r1, r5
 801d4b0:	4650      	mov	r0, sl
 801d4b2:	f7ff f995 	bl	801c7e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d4b6:	88a2      	ldrh	r2, [r4, #4]
 801d4b8:	8823      	ldrh	r3, [r4, #0]
 801d4ba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d4be:	4413      	add	r3, r2
 801d4c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d4c4:	440a      	add	r2, r1
 801d4c6:	b29b      	uxth	r3, r3
 801d4c8:	b292      	uxth	r2, r2
 801d4ca:	b218      	sxth	r0, r3
 801d4cc:	b211      	sxth	r1, r2
 801d4ce:	4288      	cmp	r0, r1
 801d4d0:	dd12      	ble.n	801d4f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d4d2:	1a9b      	subs	r3, r3, r2
 801d4d4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d4d8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d4dc:	4642      	mov	r2, r8
 801d4de:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d4e2:	a902      	add	r1, sp, #8
 801d4e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d4e8:	23ff      	movs	r3, #255	; 0xff
 801d4ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d4ee:	4628      	mov	r0, r5
 801d4f0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d4f4:	f7ff f88e 	bl	801c614 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d4f8:	88e2      	ldrh	r2, [r4, #6]
 801d4fa:	8863      	ldrh	r3, [r4, #2]
 801d4fc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d500:	4413      	add	r3, r2
 801d502:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d506:	440a      	add	r2, r1
 801d508:	b29b      	uxth	r3, r3
 801d50a:	b292      	uxth	r2, r2
 801d50c:	b218      	sxth	r0, r3
 801d50e:	b211      	sxth	r1, r2
 801d510:	4288      	cmp	r0, r1
 801d512:	dd81      	ble.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d514:	1a9b      	subs	r3, r3, r2
 801d516:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d51a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d51e:	4642      	mov	r2, r8
 801d520:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d524:	23ff      	movs	r3, #255	; 0xff
 801d526:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d52a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d52e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d532:	e762      	b.n	801d3fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d534:	4633      	mov	r3, r6
 801d536:	4622      	mov	r2, r4
 801d538:	a902      	add	r1, sp, #8
 801d53a:	4628      	mov	r0, r5
 801d53c:	f7ff f9c0 	bl	801c8c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d540:	e76a      	b.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d542:	e9cd 4600 	strd	r4, r6, [sp]
 801d546:	ab02      	add	r3, sp, #8
 801d548:	464a      	mov	r2, r9
 801d54a:	4629      	mov	r1, r5
 801d54c:	4650      	mov	r0, sl
 801d54e:	f7ff fd97 	bl	801d080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d552:	e761      	b.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d554:	4638      	mov	r0, r7
 801d556:	f7fa fe2b 	bl	80181b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d55a:	b950      	cbnz	r0, 801d572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d55c:	f8da 3000 	ldr.w	r3, [sl]
 801d560:	aa02      	add	r2, sp, #8
 801d562:	4629      	mov	r1, r5
 801d564:	e9cd 6000 	strd	r6, r0, [sp]
 801d568:	4650      	mov	r0, sl
 801d56a:	68de      	ldr	r6, [r3, #12]
 801d56c:	4623      	mov	r3, r4
 801d56e:	47b0      	blx	r6
 801d570:	e752      	b.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d572:	f10d 0818 	add.w	r8, sp, #24
 801d576:	4639      	mov	r1, r7
 801d578:	af04      	add	r7, sp, #16
 801d57a:	4640      	mov	r0, r8
 801d57c:	f7fa fdcc 	bl	8018118 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d580:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d584:	e887 0003 	stmia.w	r7, {r0, r1}
 801d588:	4638      	mov	r0, r7
 801d58a:	4621      	mov	r1, r4
 801d58c:	f7f4 fdce 	bl	801212c <_ZN8touchgfx4RectaNERKS0_>
 801d590:	4638      	mov	r0, r7
 801d592:	f7f4 fe0e 	bl	80121b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d596:	b138      	cbz	r0, 801d5a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d598:	4623      	mov	r3, r4
 801d59a:	9600      	str	r6, [sp, #0]
 801d59c:	aa02      	add	r2, sp, #8
 801d59e:	4649      	mov	r1, r9
 801d5a0:	4628      	mov	r0, r5
 801d5a2:	f7ff fdc9 	bl	801d138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d5a6:	e737      	b.n	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d5a8:	f8da 3000 	ldr.w	r3, [sl]
 801d5ac:	aa02      	add	r2, sp, #8
 801d5ae:	4629      	mov	r1, r5
 801d5b0:	e9cd 6000 	strd	r6, r0, [sp]
 801d5b4:	4650      	mov	r0, sl
 801d5b6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d5ba:	463b      	mov	r3, r7
 801d5bc:	47d8      	blx	fp
 801d5be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d5c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d5c6:	4293      	cmp	r3, r2
 801d5c8:	dd13      	ble.n	801d5f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d5ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d5ce:	1a9b      	subs	r3, r3, r2
 801d5d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d5d4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d5d8:	4628      	mov	r0, r5
 801d5da:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d5de:	aa02      	add	r2, sp, #8
 801d5e0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d5e4:	4649      	mov	r1, r9
 801d5e6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d5ea:	4643      	mov	r3, r8
 801d5ec:	9600      	str	r6, [sp, #0]
 801d5ee:	f7ff fda3 	bl	801d138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d5f2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d5f6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d5fa:	4293      	cmp	r3, r2
 801d5fc:	dd13      	ble.n	801d626 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d5fe:	1a9b      	subs	r3, r3, r2
 801d600:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d604:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d608:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d60c:	aa02      	add	r2, sp, #8
 801d60e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d612:	4628      	mov	r0, r5
 801d614:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d618:	4643      	mov	r3, r8
 801d61a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d61e:	4649      	mov	r1, r9
 801d620:	9600      	str	r6, [sp, #0]
 801d622:	f7ff fd89 	bl	801d138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d626:	88a2      	ldrh	r2, [r4, #4]
 801d628:	8823      	ldrh	r3, [r4, #0]
 801d62a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d62e:	4413      	add	r3, r2
 801d630:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d634:	440a      	add	r2, r1
 801d636:	b29b      	uxth	r3, r3
 801d638:	b292      	uxth	r2, r2
 801d63a:	b218      	sxth	r0, r3
 801d63c:	b211      	sxth	r1, r2
 801d63e:	4288      	cmp	r0, r1
 801d640:	dd13      	ble.n	801d66a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d642:	1a9b      	subs	r3, r3, r2
 801d644:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d648:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d64c:	aa02      	add	r2, sp, #8
 801d64e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d652:	4649      	mov	r1, r9
 801d654:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d658:	4643      	mov	r3, r8
 801d65a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d65e:	4628      	mov	r0, r5
 801d660:	9600      	str	r6, [sp, #0]
 801d662:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d666:	f7ff fd67 	bl	801d138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d66a:	88e2      	ldrh	r2, [r4, #6]
 801d66c:	8863      	ldrh	r3, [r4, #2]
 801d66e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d672:	4413      	add	r3, r2
 801d674:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d678:	440a      	add	r2, r1
 801d67a:	b29b      	uxth	r3, r3
 801d67c:	b292      	uxth	r2, r2
 801d67e:	b218      	sxth	r0, r3
 801d680:	b211      	sxth	r1, r2
 801d682:	4288      	cmp	r0, r1
 801d684:	f77f aec8 	ble.w	801d418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d688:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d68c:	1a9b      	subs	r3, r3, r2
 801d68e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d692:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d696:	4643      	mov	r3, r8
 801d698:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d69c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d6a0:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d6a4:	9600      	str	r6, [sp, #0]
 801d6a6:	e779      	b.n	801d59c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801d6a8:	24002fa4 	.word	0x24002fa4

0801d6ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d6ac:	b180      	cbz	r0, 801d6d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d6ae:	2903      	cmp	r1, #3
 801d6b0:	d81c      	bhi.n	801d6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d6b2:	e8df f001 	tbb	[pc, r1]
 801d6b6:	1d02      	.short	0x1d02
 801d6b8:	1f08      	.short	0x1f08
 801d6ba:	4b10      	ldr	r3, [pc, #64]	; (801d6fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d6bc:	8818      	ldrh	r0, [r3, #0]
 801d6be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d6c2:	4240      	negs	r0, r0
 801d6c4:	4770      	bx	lr
 801d6c6:	4b0d      	ldr	r3, [pc, #52]	; (801d6fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d6c8:	8818      	ldrh	r0, [r3, #0]
 801d6ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d6ce:	4770      	bx	lr
 801d6d0:	2903      	cmp	r1, #3
 801d6d2:	d80b      	bhi.n	801d6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d6d4:	a301      	add	r3, pc, #4	; (adr r3, 801d6dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d6d6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d6da:	bf00      	nop
 801d6dc:	0801d6f1 	.word	0x0801d6f1
 801d6e0:	0801d6c7 	.word	0x0801d6c7
 801d6e4:	0801d6f5 	.word	0x0801d6f5
 801d6e8:	0801d6bb 	.word	0x0801d6bb
 801d6ec:	2000      	movs	r0, #0
 801d6ee:	4770      	bx	lr
 801d6f0:	2001      	movs	r0, #1
 801d6f2:	4770      	bx	lr
 801d6f4:	f04f 30ff 	mov.w	r0, #4294967295
 801d6f8:	4770      	bx	lr
 801d6fa:	bf00      	nop
 801d6fc:	24002f9e 	.word	0x24002f9e

0801d700 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d700:	b180      	cbz	r0, 801d724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d702:	2903      	cmp	r1, #3
 801d704:	d81c      	bhi.n	801d740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d706:	e8df f001 	tbb	[pc, r1]
 801d70a:	021d      	.short	0x021d
 801d70c:	071f      	.short	0x071f
 801d70e:	4b10      	ldr	r3, [pc, #64]	; (801d750 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d710:	8818      	ldrh	r0, [r3, #0]
 801d712:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d716:	4770      	bx	lr
 801d718:	4b0d      	ldr	r3, [pc, #52]	; (801d750 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d71a:	8818      	ldrh	r0, [r3, #0]
 801d71c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d720:	4240      	negs	r0, r0
 801d722:	4770      	bx	lr
 801d724:	2903      	cmp	r1, #3
 801d726:	d80b      	bhi.n	801d740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d728:	a301      	add	r3, pc, #4	; (adr r3, 801d730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d72a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d72e:	bf00      	nop
 801d730:	0801d70f 	.word	0x0801d70f
 801d734:	0801d749 	.word	0x0801d749
 801d738:	0801d719 	.word	0x0801d719
 801d73c:	0801d745 	.word	0x0801d745
 801d740:	2000      	movs	r0, #0
 801d742:	4770      	bx	lr
 801d744:	2001      	movs	r0, #1
 801d746:	4770      	bx	lr
 801d748:	f04f 30ff 	mov.w	r0, #4294967295
 801d74c:	4770      	bx	lr
 801d74e:	bf00      	nop
 801d750:	24002f9e 	.word	0x24002f9e

0801d754 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d758:	b099      	sub	sp, #100	; 0x64
 801d75a:	910b      	str	r1, [sp, #44]	; 0x2c
 801d75c:	a914      	add	r1, sp, #80	; 0x50
 801d75e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801d762:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801d766:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801d76a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801d76e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801d772:	e881 000c 	stmia.w	r1, {r2, r3}
 801d776:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d77a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d77e:	9309      	str	r3, [sp, #36]	; 0x24
 801d780:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d784:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d788:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d78c:	9310      	str	r3, [sp, #64]	; 0x40
 801d78e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801d792:	930c      	str	r3, [sp, #48]	; 0x30
 801d794:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801d798:	798f      	ldrb	r7, [r1, #6]
 801d79a:	431f      	orrs	r7, r3
 801d79c:	f000 8195 	beq.w	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d7a0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d7a4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801d7a8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d7ac:	ea59 0903 	orrs.w	r9, r9, r3
 801d7b0:	f000 818b 	beq.w	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d7b4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d7b8:	b29b      	uxth	r3, r3
 801d7ba:	2d00      	cmp	r5, #0
 801d7bc:	f000 812e 	beq.w	801da1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d7c0:	1aed      	subs	r5, r5, r3
 801d7c2:	b2ad      	uxth	r5, r5
 801d7c4:	042b      	lsls	r3, r5, #16
 801d7c6:	d502      	bpl.n	801d7ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d7c8:	1b64      	subs	r4, r4, r5
 801d7ca:	2500      	movs	r5, #0
 801d7cc:	b224      	sxth	r4, r4
 801d7ce:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d7d2:	a814      	add	r0, sp, #80	; 0x50
 801d7d4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801d7d8:	428c      	cmp	r4, r1
 801d7da:	b28b      	uxth	r3, r1
 801d7dc:	bfbf      	itttt	lt
 801d7de:	18ed      	addlt	r5, r5, r3
 801d7e0:	1b2c      	sublt	r4, r5, r4
 801d7e2:	b2a5      	uxthlt	r5, r4
 801d7e4:	460c      	movlt	r4, r1
 801d7e6:	8891      	ldrh	r1, [r2, #4]
 801d7e8:	440b      	add	r3, r1
 801d7ea:	4621      	mov	r1, r4
 801d7ec:	b21b      	sxth	r3, r3
 801d7ee:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7f0:	88d3      	ldrh	r3, [r2, #6]
 801d7f2:	8852      	ldrh	r2, [r2, #2]
 801d7f4:	4413      	add	r3, r2
 801d7f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d7f8:	b21b      	sxth	r3, r3
 801d7fa:	930d      	str	r3, [sp, #52]	; 0x34
 801d7fc:	4bbd      	ldr	r3, [pc, #756]	; (801daf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d7fe:	f893 b000 	ldrb.w	fp, [r3]
 801d802:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d806:	f1dc 0300 	rsbs	r3, ip, #0
 801d80a:	eb43 030c 	adc.w	r3, r3, ip
 801d80e:	930e      	str	r3, [sp, #56]	; 0x38
 801d810:	4653      	mov	r3, sl
 801d812:	f7f7 fc24 	bl	801505e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d816:	4621      	mov	r1, r4
 801d818:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801d81c:	4653      	mov	r3, sl
 801d81e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d820:	a814      	add	r0, sp, #80	; 0x50
 801d822:	f7f7 fc39 	bl	8015098 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d826:	a918      	add	r1, sp, #96	; 0x60
 801d828:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d82c:	a817      	add	r0, sp, #92	; 0x5c
 801d82e:	f7f7 fd5f 	bl	80152f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d832:	f1ba 0f00 	cmp.w	sl, #0
 801d836:	f040 80f4 	bne.w	801da22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d83a:	f1bb 0f01 	cmp.w	fp, #1
 801d83e:	f040 80f8 	bne.w	801da32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d842:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d844:	2b00      	cmp	r3, #0
 801d846:	f040 8145 	bne.w	801dad4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d84a:	b2ba      	uxth	r2, r7
 801d84c:	b905      	cbnz	r5, 801d850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d84e:	b16e      	cbz	r6, 801d86c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d850:	fb06 5302 	mla	r3, r6, r2, r5
 801d854:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801d856:	4631      	mov	r1, r6
 801d858:	fb08 f303 	mul.w	r3, r8, r3
 801d85c:	f003 0607 	and.w	r6, r3, #7
 801d860:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d864:	9328      	str	r3, [sp, #160]	; 0xa0
 801d866:	eba9 0301 	sub.w	r3, r9, r1
 801d86a:	930a      	str	r3, [sp, #40]	; 0x28
 801d86c:	4651      	mov	r1, sl
 801d86e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d870:	f7ff ff1c 	bl	801d6ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d874:	4681      	mov	r9, r0
 801d876:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d878:	f7ff ff42 	bl	801d700 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d87c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d87e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d880:	4683      	mov	fp, r0
 801d882:	eba3 0a01 	sub.w	sl, r3, r1
 801d886:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d888:	459a      	cmp	sl, r3
 801d88a:	bfa8      	it	ge
 801d88c:	469a      	movge	sl, r3
 801d88e:	f1ba 0f00 	cmp.w	sl, #0
 801d892:	f340 811a 	ble.w	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d896:	1b64      	subs	r4, r4, r5
 801d898:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d89a:	1b1c      	subs	r4, r3, r4
 801d89c:	42bc      	cmp	r4, r7
 801d89e:	bfd4      	ite	le
 801d8a0:	ebc5 0504 	rsble	r5, r5, r4
 801d8a4:	ebc5 0507 	rsbgt	r5, r5, r7
 801d8a8:	2d00      	cmp	r5, #0
 801d8aa:	f340 810e 	ble.w	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d8ae:	1b52      	subs	r2, r2, r5
 801d8b0:	fb08 f302 	mul.w	r3, r8, r2
 801d8b4:	930f      	str	r3, [sp, #60]	; 0x3c
 801d8b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d8b8:	2b00      	cmp	r3, #0
 801d8ba:	f040 8116 	bne.w	801daea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d8be:	4b8e      	ldr	r3, [pc, #568]	; (801daf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d8c0:	6818      	ldr	r0, [r3, #0]
 801d8c2:	6803      	ldr	r3, [r0, #0]
 801d8c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8c6:	4798      	blx	r3
 801d8c8:	2301      	movs	r3, #1
 801d8ca:	4a8c      	ldr	r2, [pc, #560]	; (801dafc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d8cc:	fa03 f308 	lsl.w	r3, r3, r8
 801d8d0:	8811      	ldrh	r1, [r2, #0]
 801d8d2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801d8d6:	3b01      	subs	r3, #1
 801d8d8:	b2db      	uxtb	r3, r3
 801d8da:	930e      	str	r3, [sp, #56]	; 0x38
 801d8dc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801d8e0:	fb01 2303 	mla	r3, r1, r3, r2
 801d8e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d8e8:	930a      	str	r3, [sp, #40]	; 0x28
 801d8ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d8ec:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d8f0:	9313      	str	r3, [sp, #76]	; 0x4c
 801d8f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d8f4:	0a19      	lsrs	r1, r3, #8
 801d8f6:	b2cb      	uxtb	r3, r1
 801d8f8:	9312      	str	r3, [sp, #72]	; 0x48
 801d8fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d8fc:	b2db      	uxtb	r3, r3
 801d8fe:	9311      	str	r3, [sp, #68]	; 0x44
 801d900:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d902:	095a      	lsrs	r2, r3, #5
 801d904:	4b7e      	ldr	r3, [pc, #504]	; (801db00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801d906:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d90a:	400b      	ands	r3, r1
 801d90c:	4313      	orrs	r3, r2
 801d90e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d910:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d914:	4313      	orrs	r3, r2
 801d916:	b29b      	uxth	r3, r3
 801d918:	9310      	str	r3, [sp, #64]	; 0x40
 801d91a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d91c:	781a      	ldrb	r2, [r3, #0]
 801d91e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801d922:	fb05 b919 	mls	r9, r5, r9, fp
 801d926:	4132      	asrs	r2, r6
 801d928:	fb03 fb05 	mul.w	fp, r3, r5
 801d92c:	930d      	str	r3, [sp, #52]	; 0x34
 801d92e:	b2d2      	uxtb	r2, r2
 801d930:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801d934:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801d938:	f0c0 80f5 	bcc.w	801db26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801d93c:	46ae      	mov	lr, r5
 801d93e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801d942:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801d946:	f0c0 80dd 	bcc.w	801db04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801d94a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d94c:	4013      	ands	r3, r2
 801d94e:	d055      	beq.n	801d9fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801d950:	20ff      	movs	r0, #255	; 0xff
 801d952:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d954:	fb90 f1f1 	sdiv	r1, r0, r1
 801d958:	434b      	muls	r3, r1
 801d95a:	2bfe      	cmp	r3, #254	; 0xfe
 801d95c:	dd03      	ble.n	801d966 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801d95e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d960:	4281      	cmp	r1, r0
 801d962:	f000 80c4 	beq.w	801daee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801d966:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d968:	f8bc 4000 	ldrh.w	r4, [ip]
 801d96c:	fb11 f303 	smulbb	r3, r1, r3
 801d970:	1220      	asrs	r0, r4, #8
 801d972:	b29b      	uxth	r3, r3
 801d974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d978:	1c59      	adds	r1, r3, #1
 801d97a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801d97e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d982:	10e1      	asrs	r1, r4, #3
 801d984:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d988:	00e4      	lsls	r4, r4, #3
 801d98a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d98e:	b29f      	uxth	r7, r3
 801d990:	43db      	mvns	r3, r3
 801d992:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d996:	b2db      	uxtb	r3, r3
 801d998:	b2e4      	uxtb	r4, r4
 801d99a:	9309      	str	r3, [sp, #36]	; 0x24
 801d99c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d99e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d9a2:	fb13 f907 	smulbb	r9, r3, r7
 801d9a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d9a8:	fb00 9003 	mla	r0, r0, r3, r9
 801d9ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d9ae:	fb13 f907 	smulbb	r9, r3, r7
 801d9b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d9b4:	b280      	uxth	r0, r0
 801d9b6:	fb01 9103 	mla	r1, r1, r3, r9
 801d9ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d9bc:	fb13 f707 	smulbb	r7, r3, r7
 801d9c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d9c2:	b289      	uxth	r1, r1
 801d9c4:	fb04 7403 	mla	r4, r4, r3, r7
 801d9c8:	1c43      	adds	r3, r0, #1
 801d9ca:	b2a4      	uxth	r4, r4
 801d9cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d9d0:	f104 0901 	add.w	r9, r4, #1
 801d9d4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d9d8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801d9dc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801d9e0:	ea49 0000 	orr.w	r0, r9, r0
 801d9e4:	f101 0901 	add.w	r9, r1, #1
 801d9e8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801d9ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d9f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d9f4:	ea40 0009 	orr.w	r0, r0, r9
 801d9f8:	f8ac 0000 	strh.w	r0, [ip]
 801d9fc:	4446      	add	r6, r8
 801d9fe:	b2b6      	uxth	r6, r6
 801da00:	2e07      	cmp	r6, #7
 801da02:	bf89      	itett	hi
 801da04:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801da06:	fa42 f208 	asrls.w	r2, r2, r8
 801da0a:	2600      	movhi	r6, #0
 801da0c:	785a      	ldrbhi	r2, [r3, #1]
 801da0e:	bf8a      	itet	hi
 801da10:	3301      	addhi	r3, #1
 801da12:	b2d2      	uxtbls	r2, r2
 801da14:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801da16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801da18:	449c      	add	ip, r3
 801da1a:	e792      	b.n	801d942 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801da1c:	441c      	add	r4, r3
 801da1e:	b224      	sxth	r4, r4
 801da20:	e6d5      	b.n	801d7ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801da22:	f1ba 0f01 	cmp.w	sl, #1
 801da26:	f47f af0c 	bne.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da2a:	f1bb 0f01 	cmp.w	fp, #1
 801da2e:	f47f af08 	bne.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da32:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801daf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801da36:	f8db 0000 	ldr.w	r0, [fp]
 801da3a:	6803      	ldr	r3, [r0, #0]
 801da3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da3e:	4798      	blx	r3
 801da40:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801da44:	465a      	mov	r2, fp
 801da46:	d006      	beq.n	801da56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801da48:	f1b8 0f04 	cmp.w	r8, #4
 801da4c:	d140      	bne.n	801dad0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801da4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801da50:	3300      	adds	r3, #0
 801da52:	bf18      	it	ne
 801da54:	2301      	movne	r3, #1
 801da56:	0580      	lsls	r0, r0, #22
 801da58:	d56e      	bpl.n	801db38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801da5a:	f1b8 0f08 	cmp.w	r8, #8
 801da5e:	d16b      	bne.n	801db38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801da60:	2b00      	cmp	r3, #0
 801da62:	bf0c      	ite	eq
 801da64:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801da68:	f44f 7180 	movne.w	r1, #256	; 0x100
 801da6c:	2d00      	cmp	r5, #0
 801da6e:	f47f aee8 	bne.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da72:	2e00      	cmp	r6, #0
 801da74:	f47f aee5 	bne.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da78:	19e3      	adds	r3, r4, r7
 801da7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801da7c:	4283      	cmp	r3, r0
 801da7e:	f73f aee0 	bgt.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801da84:	980d      	ldr	r0, [sp, #52]	; 0x34
 801da86:	444b      	add	r3, r9
 801da88:	4283      	cmp	r3, r0
 801da8a:	f73f aeda 	bgt.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801da8e:	b2bf      	uxth	r7, r7
 801da90:	f1b8 0f08 	cmp.w	r8, #8
 801da94:	6810      	ldr	r0, [r2, #0]
 801da96:	f04f 0500 	mov.w	r5, #0
 801da9a:	bf18      	it	ne
 801da9c:	3701      	addne	r7, #1
 801da9e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801daa2:	6804      	ldr	r4, [r0, #0]
 801daa4:	bf18      	it	ne
 801daa6:	f027 0701 	bicne.w	r7, r7, #1
 801daaa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801daae:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801dab2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dab4:	bf18      	it	ne
 801dab6:	b2bf      	uxthne	r7, r7
 801dab8:	9104      	str	r1, [sp, #16]
 801daba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dabc:	e9cd 7900 	strd	r7, r9, [sp]
 801dac0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dac4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dac6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801dac8:	47a0      	blx	r4
 801daca:	b019      	add	sp, #100	; 0x64
 801dacc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dad0:	2300      	movs	r3, #0
 801dad2:	e7c0      	b.n	801da56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dad4:	2208      	movs	r2, #8
 801dad6:	fb92 f3f8 	sdiv	r3, r2, r8
 801dada:	1e5a      	subs	r2, r3, #1
 801dadc:	443a      	add	r2, r7
 801dade:	fb92 f2f3 	sdiv	r2, r2, r3
 801dae2:	fb12 f203 	smulbb	r2, r2, r3
 801dae6:	b292      	uxth	r2, r2
 801dae8:	e6b0      	b.n	801d84c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801daea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801daec:	e6ec      	b.n	801d8c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801daee:	9810      	ldr	r0, [sp, #64]	; 0x40
 801daf0:	e782      	b.n	801d9f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801daf2:	bf00      	nop
 801daf4:	24002f9c 	.word	0x24002f9c
 801daf8:	24002fa4 	.word	0x24002fa4
 801dafc:	24002f9e 	.word	0x24002f9e
 801db00:	00fff800 	.word	0x00fff800
 801db04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801db06:	b153      	cbz	r3, 801db1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801db08:	441e      	add	r6, r3
 801db0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801db0c:	b2b6      	uxth	r6, r6
 801db0e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801db12:	f006 0607 	and.w	r6, r6, #7
 801db16:	781a      	ldrb	r2, [r3, #0]
 801db18:	9328      	str	r3, [sp, #160]	; 0xa0
 801db1a:	4132      	asrs	r2, r6
 801db1c:	b2d2      	uxtb	r2, r2
 801db1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db20:	445b      	add	r3, fp
 801db22:	930a      	str	r3, [sp, #40]	; 0x28
 801db24:	e706      	b.n	801d934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801db26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db28:	2b00      	cmp	r3, #0
 801db2a:	d1ce      	bne.n	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db2c:	4b05      	ldr	r3, [pc, #20]	; (801db44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801db2e:	6818      	ldr	r0, [r3, #0]
 801db30:	6803      	ldr	r3, [r0, #0]
 801db32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db34:	4798      	blx	r3
 801db36:	e7c8      	b.n	801daca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db38:	2b00      	cmp	r3, #0
 801db3a:	f43f ae82 	beq.w	801d842 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db3e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801db42:	e793      	b.n	801da6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801db44:	24002fa4 	.word	0x24002fa4

0801db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801db48:	b538      	push	{r3, r4, r5, lr}
 801db4a:	4c15      	ldr	r4, [pc, #84]	; (801dba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801db4c:	4605      	mov	r5, r0
 801db4e:	7823      	ldrb	r3, [r4, #0]
 801db50:	f3bf 8f5b 	dmb	ish
 801db54:	07da      	lsls	r2, r3, #31
 801db56:	d40b      	bmi.n	801db70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801db58:	4620      	mov	r0, r4
 801db5a:	f007 febe 	bl	80258da <__cxa_guard_acquire>
 801db5e:	b138      	cbz	r0, 801db70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801db60:	4620      	mov	r0, r4
 801db62:	f007 fec6 	bl	80258f2 <__cxa_guard_release>
 801db66:	4a0f      	ldr	r2, [pc, #60]	; (801dba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801db68:	490f      	ldr	r1, [pc, #60]	; (801dba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801db6a:	4810      	ldr	r0, [pc, #64]	; (801dbac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801db6c:	f007 feae 	bl	80258cc <__aeabi_atexit>
 801db70:	4c0f      	ldr	r4, [pc, #60]	; (801dbb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801db72:	7823      	ldrb	r3, [r4, #0]
 801db74:	f3bf 8f5b 	dmb	ish
 801db78:	07db      	lsls	r3, r3, #31
 801db7a:	d40b      	bmi.n	801db94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801db7c:	4620      	mov	r0, r4
 801db7e:	f007 feac 	bl	80258da <__cxa_guard_acquire>
 801db82:	b138      	cbz	r0, 801db94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801db84:	4620      	mov	r0, r4
 801db86:	f007 feb4 	bl	80258f2 <__cxa_guard_release>
 801db8a:	4a06      	ldr	r2, [pc, #24]	; (801dba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801db8c:	4909      	ldr	r1, [pc, #36]	; (801dbb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801db8e:	480a      	ldr	r0, [pc, #40]	; (801dbb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801db90:	f007 fe9c 	bl	80258cc <__aeabi_atexit>
 801db94:	4b05      	ldr	r3, [pc, #20]	; (801dbac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801db96:	612b      	str	r3, [r5, #16]
 801db98:	4b07      	ldr	r3, [pc, #28]	; (801dbb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801db9a:	616b      	str	r3, [r5, #20]
 801db9c:	bd38      	pop	{r3, r4, r5, pc}
 801db9e:	bf00      	nop
 801dba0:	2400307c 	.word	0x2400307c
 801dba4:	24000000 	.word	0x24000000
 801dba8:	0801a93d 	.word	0x0801a93d
 801dbac:	24000068 	.word	0x24000068
 801dbb0:	24003080 	.word	0x24003080
 801dbb4:	0801a93b 	.word	0x0801a93b
 801dbb8:	2400006c 	.word	0x2400006c

0801dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801dbbc:	b538      	push	{r3, r4, r5, lr}
 801dbbe:	4c15      	ldr	r4, [pc, #84]	; (801dc14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801dbc0:	4605      	mov	r5, r0
 801dbc2:	7823      	ldrb	r3, [r4, #0]
 801dbc4:	f3bf 8f5b 	dmb	ish
 801dbc8:	07da      	lsls	r2, r3, #31
 801dbca:	d40b      	bmi.n	801dbe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dbcc:	4620      	mov	r0, r4
 801dbce:	f007 fe84 	bl	80258da <__cxa_guard_acquire>
 801dbd2:	b138      	cbz	r0, 801dbe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dbd4:	4620      	mov	r0, r4
 801dbd6:	f007 fe8c 	bl	80258f2 <__cxa_guard_release>
 801dbda:	4a0f      	ldr	r2, [pc, #60]	; (801dc18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dbdc:	490f      	ldr	r1, [pc, #60]	; (801dc1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dbde:	4810      	ldr	r0, [pc, #64]	; (801dc20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dbe0:	f007 fe74 	bl	80258cc <__aeabi_atexit>
 801dbe4:	4c0f      	ldr	r4, [pc, #60]	; (801dc24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dbe6:	7823      	ldrb	r3, [r4, #0]
 801dbe8:	f3bf 8f5b 	dmb	ish
 801dbec:	07db      	lsls	r3, r3, #31
 801dbee:	d40b      	bmi.n	801dc08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dbf0:	4620      	mov	r0, r4
 801dbf2:	f007 fe72 	bl	80258da <__cxa_guard_acquire>
 801dbf6:	b138      	cbz	r0, 801dc08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dbf8:	4620      	mov	r0, r4
 801dbfa:	f007 fe7a 	bl	80258f2 <__cxa_guard_release>
 801dbfe:	4a06      	ldr	r2, [pc, #24]	; (801dc18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dc00:	4909      	ldr	r1, [pc, #36]	; (801dc28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dc02:	480a      	ldr	r0, [pc, #40]	; (801dc2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dc04:	f007 fe62 	bl	80258cc <__aeabi_atexit>
 801dc08:	4b05      	ldr	r3, [pc, #20]	; (801dc20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dc0a:	60ab      	str	r3, [r5, #8]
 801dc0c:	4b07      	ldr	r3, [pc, #28]	; (801dc2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dc0e:	60eb      	str	r3, [r5, #12]
 801dc10:	bd38      	pop	{r3, r4, r5, pc}
 801dc12:	bf00      	nop
 801dc14:	24003054 	.word	0x24003054
 801dc18:	24000000 	.word	0x24000000
 801dc1c:	0801a941 	.word	0x0801a941
 801dc20:	24000040 	.word	0x24000040
 801dc24:	24003058 	.word	0x24003058
 801dc28:	0801a93f 	.word	0x0801a93f
 801dc2c:	24000044 	.word	0x24000044

0801dc30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dc30:	b510      	push	{r4, lr}
 801dc32:	4604      	mov	r4, r0
 801dc34:	f7ff ff88 	bl	801db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dc38:	4620      	mov	r0, r4
 801dc3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dc3e:	f7ff bfbd 	b.w	801dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dc44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dc44:	b538      	push	{r3, r4, r5, lr}
 801dc46:	4c15      	ldr	r4, [pc, #84]	; (801dc9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dc48:	4605      	mov	r5, r0
 801dc4a:	7823      	ldrb	r3, [r4, #0]
 801dc4c:	f3bf 8f5b 	dmb	ish
 801dc50:	07da      	lsls	r2, r3, #31
 801dc52:	d40b      	bmi.n	801dc6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dc54:	4620      	mov	r0, r4
 801dc56:	f007 fe40 	bl	80258da <__cxa_guard_acquire>
 801dc5a:	b138      	cbz	r0, 801dc6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dc5c:	4620      	mov	r0, r4
 801dc5e:	f007 fe48 	bl	80258f2 <__cxa_guard_release>
 801dc62:	4a0f      	ldr	r2, [pc, #60]	; (801dca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dc64:	490f      	ldr	r1, [pc, #60]	; (801dca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dc66:	4810      	ldr	r0, [pc, #64]	; (801dca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dc68:	f007 fe30 	bl	80258cc <__aeabi_atexit>
 801dc6c:	4c0f      	ldr	r4, [pc, #60]	; (801dcac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801dc6e:	7823      	ldrb	r3, [r4, #0]
 801dc70:	f3bf 8f5b 	dmb	ish
 801dc74:	07db      	lsls	r3, r3, #31
 801dc76:	d40b      	bmi.n	801dc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dc78:	4620      	mov	r0, r4
 801dc7a:	f007 fe2e 	bl	80258da <__cxa_guard_acquire>
 801dc7e:	b138      	cbz	r0, 801dc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dc80:	4620      	mov	r0, r4
 801dc82:	f007 fe36 	bl	80258f2 <__cxa_guard_release>
 801dc86:	4a06      	ldr	r2, [pc, #24]	; (801dca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dc88:	4909      	ldr	r1, [pc, #36]	; (801dcb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801dc8a:	480a      	ldr	r0, [pc, #40]	; (801dcb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801dc8c:	f007 fe1e 	bl	80258cc <__aeabi_atexit>
 801dc90:	4b05      	ldr	r3, [pc, #20]	; (801dca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dc92:	622b      	str	r3, [r5, #32]
 801dc94:	4b07      	ldr	r3, [pc, #28]	; (801dcb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801dc96:	626b      	str	r3, [r5, #36]	; 0x24
 801dc98:	bd38      	pop	{r3, r4, r5, pc}
 801dc9a:	bf00      	nop
 801dc9c:	24003084 	.word	0x24003084
 801dca0:	24000000 	.word	0x24000000
 801dca4:	0801a935 	.word	0x0801a935
 801dca8:	24000070 	.word	0x24000070
 801dcac:	24003088 	.word	0x24003088
 801dcb0:	0801a933 	.word	0x0801a933
 801dcb4:	24000074 	.word	0x24000074

0801dcb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801dcb8:	b538      	push	{r3, r4, r5, lr}
 801dcba:	4c15      	ldr	r4, [pc, #84]	; (801dd10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801dcbc:	4605      	mov	r5, r0
 801dcbe:	7823      	ldrb	r3, [r4, #0]
 801dcc0:	f3bf 8f5b 	dmb	ish
 801dcc4:	07da      	lsls	r2, r3, #31
 801dcc6:	d40b      	bmi.n	801dce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801dcc8:	4620      	mov	r0, r4
 801dcca:	f007 fe06 	bl	80258da <__cxa_guard_acquire>
 801dcce:	b138      	cbz	r0, 801dce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801dcd0:	4620      	mov	r0, r4
 801dcd2:	f007 fe0e 	bl	80258f2 <__cxa_guard_release>
 801dcd6:	4a0f      	ldr	r2, [pc, #60]	; (801dd14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dcd8:	490f      	ldr	r1, [pc, #60]	; (801dd18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801dcda:	4810      	ldr	r0, [pc, #64]	; (801dd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dcdc:	f007 fdf6 	bl	80258cc <__aeabi_atexit>
 801dce0:	4c0f      	ldr	r4, [pc, #60]	; (801dd20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801dce2:	7823      	ldrb	r3, [r4, #0]
 801dce4:	f3bf 8f5b 	dmb	ish
 801dce8:	07db      	lsls	r3, r3, #31
 801dcea:	d40b      	bmi.n	801dd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dcec:	4620      	mov	r0, r4
 801dcee:	f007 fdf4 	bl	80258da <__cxa_guard_acquire>
 801dcf2:	b138      	cbz	r0, 801dd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dcf4:	4620      	mov	r0, r4
 801dcf6:	f007 fdfc 	bl	80258f2 <__cxa_guard_release>
 801dcfa:	4a06      	ldr	r2, [pc, #24]	; (801dd14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dcfc:	4909      	ldr	r1, [pc, #36]	; (801dd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801dcfe:	480a      	ldr	r0, [pc, #40]	; (801dd28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dd00:	f007 fde4 	bl	80258cc <__aeabi_atexit>
 801dd04:	4b05      	ldr	r3, [pc, #20]	; (801dd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dd06:	61ab      	str	r3, [r5, #24]
 801dd08:	4b07      	ldr	r3, [pc, #28]	; (801dd28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dd0a:	61eb      	str	r3, [r5, #28]
 801dd0c:	bd38      	pop	{r3, r4, r5, pc}
 801dd0e:	bf00      	nop
 801dd10:	2400305c 	.word	0x2400305c
 801dd14:	24000000 	.word	0x24000000
 801dd18:	0801a939 	.word	0x0801a939
 801dd1c:	24000048 	.word	0x24000048
 801dd20:	24003060 	.word	0x24003060
 801dd24:	0801a937 	.word	0x0801a937
 801dd28:	2400004c 	.word	0x2400004c

0801dd2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dd2c:	b510      	push	{r4, lr}
 801dd2e:	4604      	mov	r4, r0
 801dd30:	f7ff ff88 	bl	801dc44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dd34:	4620      	mov	r0, r4
 801dd36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd3a:	f7ff bfbd 	b.w	801dcb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dd40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dd40:	b538      	push	{r3, r4, r5, lr}
 801dd42:	4c15      	ldr	r4, [pc, #84]	; (801dd98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dd44:	4605      	mov	r5, r0
 801dd46:	7823      	ldrb	r3, [r4, #0]
 801dd48:	f3bf 8f5b 	dmb	ish
 801dd4c:	07da      	lsls	r2, r3, #31
 801dd4e:	d40b      	bmi.n	801dd68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dd50:	4620      	mov	r0, r4
 801dd52:	f007 fdc2 	bl	80258da <__cxa_guard_acquire>
 801dd56:	b138      	cbz	r0, 801dd68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dd58:	4620      	mov	r0, r4
 801dd5a:	f007 fdca 	bl	80258f2 <__cxa_guard_release>
 801dd5e:	4a0f      	ldr	r2, [pc, #60]	; (801dd9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dd60:	490f      	ldr	r1, [pc, #60]	; (801dda0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dd62:	4810      	ldr	r0, [pc, #64]	; (801dda4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dd64:	f007 fdb2 	bl	80258cc <__aeabi_atexit>
 801dd68:	4c0f      	ldr	r4, [pc, #60]	; (801dda8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801dd6a:	7823      	ldrb	r3, [r4, #0]
 801dd6c:	f3bf 8f5b 	dmb	ish
 801dd70:	07db      	lsls	r3, r3, #31
 801dd72:	d40b      	bmi.n	801dd8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dd74:	4620      	mov	r0, r4
 801dd76:	f007 fdb0 	bl	80258da <__cxa_guard_acquire>
 801dd7a:	b138      	cbz	r0, 801dd8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dd7c:	4620      	mov	r0, r4
 801dd7e:	f007 fdb8 	bl	80258f2 <__cxa_guard_release>
 801dd82:	4a06      	ldr	r2, [pc, #24]	; (801dd9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dd84:	4909      	ldr	r1, [pc, #36]	; (801ddac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dd86:	480a      	ldr	r0, [pc, #40]	; (801ddb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dd88:	f007 fda0 	bl	80258cc <__aeabi_atexit>
 801dd8c:	4b05      	ldr	r3, [pc, #20]	; (801dda4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dd8e:	632b      	str	r3, [r5, #48]	; 0x30
 801dd90:	4b07      	ldr	r3, [pc, #28]	; (801ddb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dd92:	636b      	str	r3, [r5, #52]	; 0x34
 801dd94:	bd38      	pop	{r3, r4, r5, pc}
 801dd96:	bf00      	nop
 801dd98:	24003094 	.word	0x24003094
 801dd9c:	24000000 	.word	0x24000000
 801dda0:	0801a92d 	.word	0x0801a92d
 801dda4:	24000080 	.word	0x24000080
 801dda8:	24003098 	.word	0x24003098
 801ddac:	0801a92b 	.word	0x0801a92b
 801ddb0:	24000084 	.word	0x24000084

0801ddb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801ddb4:	b538      	push	{r3, r4, r5, lr}
 801ddb6:	4c15      	ldr	r4, [pc, #84]	; (801de0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801ddb8:	4605      	mov	r5, r0
 801ddba:	7823      	ldrb	r3, [r4, #0]
 801ddbc:	f3bf 8f5b 	dmb	ish
 801ddc0:	07da      	lsls	r2, r3, #31
 801ddc2:	d40b      	bmi.n	801dddc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ddc4:	4620      	mov	r0, r4
 801ddc6:	f007 fd88 	bl	80258da <__cxa_guard_acquire>
 801ddca:	b138      	cbz	r0, 801dddc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ddcc:	4620      	mov	r0, r4
 801ddce:	f007 fd90 	bl	80258f2 <__cxa_guard_release>
 801ddd2:	4a0f      	ldr	r2, [pc, #60]	; (801de10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ddd4:	490f      	ldr	r1, [pc, #60]	; (801de14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801ddd6:	4810      	ldr	r0, [pc, #64]	; (801de18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801ddd8:	f007 fd78 	bl	80258cc <__aeabi_atexit>
 801dddc:	4c0f      	ldr	r4, [pc, #60]	; (801de1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801ddde:	7823      	ldrb	r3, [r4, #0]
 801dde0:	f3bf 8f5b 	dmb	ish
 801dde4:	07db      	lsls	r3, r3, #31
 801dde6:	d40b      	bmi.n	801de00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dde8:	4620      	mov	r0, r4
 801ddea:	f007 fd76 	bl	80258da <__cxa_guard_acquire>
 801ddee:	b138      	cbz	r0, 801de00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ddf0:	4620      	mov	r0, r4
 801ddf2:	f007 fd7e 	bl	80258f2 <__cxa_guard_release>
 801ddf6:	4a06      	ldr	r2, [pc, #24]	; (801de10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ddf8:	4909      	ldr	r1, [pc, #36]	; (801de20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801ddfa:	480a      	ldr	r0, [pc, #40]	; (801de24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ddfc:	f007 fd66 	bl	80258cc <__aeabi_atexit>
 801de00:	4b05      	ldr	r3, [pc, #20]	; (801de18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801de02:	62ab      	str	r3, [r5, #40]	; 0x28
 801de04:	4b07      	ldr	r3, [pc, #28]	; (801de24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801de06:	62eb      	str	r3, [r5, #44]	; 0x2c
 801de08:	bd38      	pop	{r3, r4, r5, pc}
 801de0a:	bf00      	nop
 801de0c:	24003064 	.word	0x24003064
 801de10:	24000000 	.word	0x24000000
 801de14:	0801a931 	.word	0x0801a931
 801de18:	24000050 	.word	0x24000050
 801de1c:	24003068 	.word	0x24003068
 801de20:	0801a92f 	.word	0x0801a92f
 801de24:	24000054 	.word	0x24000054

0801de28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801de28:	b510      	push	{r4, lr}
 801de2a:	4604      	mov	r4, r0
 801de2c:	f7ff ff88 	bl	801dd40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801de30:	4620      	mov	r0, r4
 801de32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de36:	f7ff bfbd 	b.w	801ddb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801de3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801de3c:	b538      	push	{r3, r4, r5, lr}
 801de3e:	4c15      	ldr	r4, [pc, #84]	; (801de94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801de40:	4605      	mov	r5, r0
 801de42:	7823      	ldrb	r3, [r4, #0]
 801de44:	f3bf 8f5b 	dmb	ish
 801de48:	07da      	lsls	r2, r3, #31
 801de4a:	d40b      	bmi.n	801de64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801de4c:	4620      	mov	r0, r4
 801de4e:	f007 fd44 	bl	80258da <__cxa_guard_acquire>
 801de52:	b138      	cbz	r0, 801de64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801de54:	4620      	mov	r0, r4
 801de56:	f007 fd4c 	bl	80258f2 <__cxa_guard_release>
 801de5a:	4a0f      	ldr	r2, [pc, #60]	; (801de98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801de5c:	490f      	ldr	r1, [pc, #60]	; (801de9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801de5e:	4810      	ldr	r0, [pc, #64]	; (801dea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801de60:	f007 fd34 	bl	80258cc <__aeabi_atexit>
 801de64:	4c0f      	ldr	r4, [pc, #60]	; (801dea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801de66:	7823      	ldrb	r3, [r4, #0]
 801de68:	f3bf 8f5b 	dmb	ish
 801de6c:	07db      	lsls	r3, r3, #31
 801de6e:	d40b      	bmi.n	801de88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801de70:	4620      	mov	r0, r4
 801de72:	f007 fd32 	bl	80258da <__cxa_guard_acquire>
 801de76:	b138      	cbz	r0, 801de88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801de78:	4620      	mov	r0, r4
 801de7a:	f007 fd3a 	bl	80258f2 <__cxa_guard_release>
 801de7e:	4a06      	ldr	r2, [pc, #24]	; (801de98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801de80:	4909      	ldr	r1, [pc, #36]	; (801dea8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801de82:	480a      	ldr	r0, [pc, #40]	; (801deac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801de84:	f007 fd22 	bl	80258cc <__aeabi_atexit>
 801de88:	4b05      	ldr	r3, [pc, #20]	; (801dea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801de8a:	652b      	str	r3, [r5, #80]	; 0x50
 801de8c:	4b07      	ldr	r3, [pc, #28]	; (801deac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801de8e:	656b      	str	r3, [r5, #84]	; 0x54
 801de90:	bd38      	pop	{r3, r4, r5, pc}
 801de92:	bf00      	nop
 801de94:	2400309c 	.word	0x2400309c
 801de98:	24000000 	.word	0x24000000
 801de9c:	0801a91d 	.word	0x0801a91d
 801dea0:	24000088 	.word	0x24000088
 801dea4:	240030a0 	.word	0x240030a0
 801dea8:	0801a91b 	.word	0x0801a91b
 801deac:	2400008c 	.word	0x2400008c

0801deb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801deb0:	b538      	push	{r3, r4, r5, lr}
 801deb2:	4c15      	ldr	r4, [pc, #84]	; (801df08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801deb4:	4605      	mov	r5, r0
 801deb6:	7823      	ldrb	r3, [r4, #0]
 801deb8:	f3bf 8f5b 	dmb	ish
 801debc:	07da      	lsls	r2, r3, #31
 801debe:	d40b      	bmi.n	801ded8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dec0:	4620      	mov	r0, r4
 801dec2:	f007 fd0a 	bl	80258da <__cxa_guard_acquire>
 801dec6:	b138      	cbz	r0, 801ded8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dec8:	4620      	mov	r0, r4
 801deca:	f007 fd12 	bl	80258f2 <__cxa_guard_release>
 801dece:	4a0f      	ldr	r2, [pc, #60]	; (801df0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ded0:	490f      	ldr	r1, [pc, #60]	; (801df10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ded2:	4810      	ldr	r0, [pc, #64]	; (801df14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ded4:	f007 fcfa 	bl	80258cc <__aeabi_atexit>
 801ded8:	4c0f      	ldr	r4, [pc, #60]	; (801df18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801deda:	7823      	ldrb	r3, [r4, #0]
 801dedc:	f3bf 8f5b 	dmb	ish
 801dee0:	07db      	lsls	r3, r3, #31
 801dee2:	d40b      	bmi.n	801defc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dee4:	4620      	mov	r0, r4
 801dee6:	f007 fcf8 	bl	80258da <__cxa_guard_acquire>
 801deea:	b138      	cbz	r0, 801defc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801deec:	4620      	mov	r0, r4
 801deee:	f007 fd00 	bl	80258f2 <__cxa_guard_release>
 801def2:	4a06      	ldr	r2, [pc, #24]	; (801df0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801def4:	4909      	ldr	r1, [pc, #36]	; (801df1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801def6:	480a      	ldr	r0, [pc, #40]	; (801df20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801def8:	f007 fce8 	bl	80258cc <__aeabi_atexit>
 801defc:	4b05      	ldr	r3, [pc, #20]	; (801df14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801defe:	64ab      	str	r3, [r5, #72]	; 0x48
 801df00:	4b07      	ldr	r3, [pc, #28]	; (801df20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801df02:	64eb      	str	r3, [r5, #76]	; 0x4c
 801df04:	bd38      	pop	{r3, r4, r5, pc}
 801df06:	bf00      	nop
 801df08:	240030a4 	.word	0x240030a4
 801df0c:	24000000 	.word	0x24000000
 801df10:	0801a921 	.word	0x0801a921
 801df14:	24000090 	.word	0x24000090
 801df18:	240030a8 	.word	0x240030a8
 801df1c:	0801a91f 	.word	0x0801a91f
 801df20:	24000094 	.word	0x24000094

0801df24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801df24:	b538      	push	{r3, r4, r5, lr}
 801df26:	4c15      	ldr	r4, [pc, #84]	; (801df7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801df28:	4605      	mov	r5, r0
 801df2a:	7823      	ldrb	r3, [r4, #0]
 801df2c:	f3bf 8f5b 	dmb	ish
 801df30:	07da      	lsls	r2, r3, #31
 801df32:	d40b      	bmi.n	801df4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801df34:	4620      	mov	r0, r4
 801df36:	f007 fcd0 	bl	80258da <__cxa_guard_acquire>
 801df3a:	b138      	cbz	r0, 801df4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801df3c:	4620      	mov	r0, r4
 801df3e:	f007 fcd8 	bl	80258f2 <__cxa_guard_release>
 801df42:	4a0f      	ldr	r2, [pc, #60]	; (801df80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801df44:	490f      	ldr	r1, [pc, #60]	; (801df84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801df46:	4810      	ldr	r0, [pc, #64]	; (801df88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801df48:	f007 fcc0 	bl	80258cc <__aeabi_atexit>
 801df4c:	4c0f      	ldr	r4, [pc, #60]	; (801df8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801df4e:	7823      	ldrb	r3, [r4, #0]
 801df50:	f3bf 8f5b 	dmb	ish
 801df54:	07db      	lsls	r3, r3, #31
 801df56:	d40b      	bmi.n	801df70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801df58:	4620      	mov	r0, r4
 801df5a:	f007 fcbe 	bl	80258da <__cxa_guard_acquire>
 801df5e:	b138      	cbz	r0, 801df70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801df60:	4620      	mov	r0, r4
 801df62:	f007 fcc6 	bl	80258f2 <__cxa_guard_release>
 801df66:	4a06      	ldr	r2, [pc, #24]	; (801df80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801df68:	4909      	ldr	r1, [pc, #36]	; (801df90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801df6a:	480a      	ldr	r0, [pc, #40]	; (801df94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801df6c:	f007 fcae 	bl	80258cc <__aeabi_atexit>
 801df70:	4b05      	ldr	r3, [pc, #20]	; (801df88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801df72:	642b      	str	r3, [r5, #64]	; 0x40
 801df74:	4b07      	ldr	r3, [pc, #28]	; (801df94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801df76:	646b      	str	r3, [r5, #68]	; 0x44
 801df78:	bd38      	pop	{r3, r4, r5, pc}
 801df7a:	bf00      	nop
 801df7c:	2400306c 	.word	0x2400306c
 801df80:	24000000 	.word	0x24000000
 801df84:	0801a925 	.word	0x0801a925
 801df88:	24000058 	.word	0x24000058
 801df8c:	24003070 	.word	0x24003070
 801df90:	0801a923 	.word	0x0801a923
 801df94:	2400005c 	.word	0x2400005c

0801df98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801df98:	b538      	push	{r3, r4, r5, lr}
 801df9a:	4c15      	ldr	r4, [pc, #84]	; (801dff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801df9c:	4605      	mov	r5, r0
 801df9e:	7823      	ldrb	r3, [r4, #0]
 801dfa0:	f3bf 8f5b 	dmb	ish
 801dfa4:	07da      	lsls	r2, r3, #31
 801dfa6:	d40b      	bmi.n	801dfc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801dfa8:	4620      	mov	r0, r4
 801dfaa:	f007 fc96 	bl	80258da <__cxa_guard_acquire>
 801dfae:	b138      	cbz	r0, 801dfc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801dfb0:	4620      	mov	r0, r4
 801dfb2:	f007 fc9e 	bl	80258f2 <__cxa_guard_release>
 801dfb6:	4a0f      	ldr	r2, [pc, #60]	; (801dff4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801dfb8:	490f      	ldr	r1, [pc, #60]	; (801dff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801dfba:	4810      	ldr	r0, [pc, #64]	; (801dffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801dfbc:	f007 fc86 	bl	80258cc <__aeabi_atexit>
 801dfc0:	4c0f      	ldr	r4, [pc, #60]	; (801e000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801dfc2:	7823      	ldrb	r3, [r4, #0]
 801dfc4:	f3bf 8f5b 	dmb	ish
 801dfc8:	07db      	lsls	r3, r3, #31
 801dfca:	d40b      	bmi.n	801dfe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801dfcc:	4620      	mov	r0, r4
 801dfce:	f007 fc84 	bl	80258da <__cxa_guard_acquire>
 801dfd2:	b138      	cbz	r0, 801dfe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801dfd4:	4620      	mov	r0, r4
 801dfd6:	f007 fc8c 	bl	80258f2 <__cxa_guard_release>
 801dfda:	4a06      	ldr	r2, [pc, #24]	; (801dff4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801dfdc:	4909      	ldr	r1, [pc, #36]	; (801e004 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801dfde:	480a      	ldr	r0, [pc, #40]	; (801e008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801dfe0:	f007 fc74 	bl	80258cc <__aeabi_atexit>
 801dfe4:	4b05      	ldr	r3, [pc, #20]	; (801dffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801dfe6:	63ab      	str	r3, [r5, #56]	; 0x38
 801dfe8:	4b07      	ldr	r3, [pc, #28]	; (801e008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801dfea:	63eb      	str	r3, [r5, #60]	; 0x3c
 801dfec:	bd38      	pop	{r3, r4, r5, pc}
 801dfee:	bf00      	nop
 801dff0:	2400308c 	.word	0x2400308c
 801dff4:	24000000 	.word	0x24000000
 801dff8:	0801a929 	.word	0x0801a929
 801dffc:	24000078 	.word	0x24000078
 801e000:	24003090 	.word	0x24003090
 801e004:	0801a927 	.word	0x0801a927
 801e008:	2400007c 	.word	0x2400007c

0801e00c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e00c:	b510      	push	{r4, lr}
 801e00e:	4604      	mov	r4, r0
 801e010:	f7ff ff14 	bl	801de3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e014:	4620      	mov	r0, r4
 801e016:	f7ff ff85 	bl	801df24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e01a:	4620      	mov	r0, r4
 801e01c:	f7ff ff48 	bl	801deb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e020:	4620      	mov	r0, r4
 801e022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e026:	f7ff bfb7 	b.w	801df98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e02c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e02c:	b538      	push	{r3, r4, r5, lr}
 801e02e:	4c15      	ldr	r4, [pc, #84]	; (801e084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e030:	4605      	mov	r5, r0
 801e032:	7823      	ldrb	r3, [r4, #0]
 801e034:	f3bf 8f5b 	dmb	ish
 801e038:	07da      	lsls	r2, r3, #31
 801e03a:	d40b      	bmi.n	801e054 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e03c:	4620      	mov	r0, r4
 801e03e:	f007 fc4c 	bl	80258da <__cxa_guard_acquire>
 801e042:	b138      	cbz	r0, 801e054 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e044:	4620      	mov	r0, r4
 801e046:	f007 fc54 	bl	80258f2 <__cxa_guard_release>
 801e04a:	4a0f      	ldr	r2, [pc, #60]	; (801e088 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e04c:	490f      	ldr	r1, [pc, #60]	; (801e08c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e04e:	4810      	ldr	r0, [pc, #64]	; (801e090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e050:	f007 fc3c 	bl	80258cc <__aeabi_atexit>
 801e054:	4c0f      	ldr	r4, [pc, #60]	; (801e094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e056:	7823      	ldrb	r3, [r4, #0]
 801e058:	f3bf 8f5b 	dmb	ish
 801e05c:	07db      	lsls	r3, r3, #31
 801e05e:	d40b      	bmi.n	801e078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e060:	4620      	mov	r0, r4
 801e062:	f007 fc3a 	bl	80258da <__cxa_guard_acquire>
 801e066:	b138      	cbz	r0, 801e078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e068:	4620      	mov	r0, r4
 801e06a:	f007 fc42 	bl	80258f2 <__cxa_guard_release>
 801e06e:	4a06      	ldr	r2, [pc, #24]	; (801e088 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e070:	4909      	ldr	r1, [pc, #36]	; (801e098 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e072:	480a      	ldr	r0, [pc, #40]	; (801e09c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e074:	f007 fc2a 	bl	80258cc <__aeabi_atexit>
 801e078:	4b05      	ldr	r3, [pc, #20]	; (801e090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e07a:	662b      	str	r3, [r5, #96]	; 0x60
 801e07c:	4b07      	ldr	r3, [pc, #28]	; (801e09c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e07e:	666b      	str	r3, [r5, #100]	; 0x64
 801e080:	bd38      	pop	{r3, r4, r5, pc}
 801e082:	bf00      	nop
 801e084:	24003074 	.word	0x24003074
 801e088:	24000000 	.word	0x24000000
 801e08c:	0801a915 	.word	0x0801a915
 801e090:	24000060 	.word	0x24000060
 801e094:	24003078 	.word	0x24003078
 801e098:	0801a913 	.word	0x0801a913
 801e09c:	24000064 	.word	0x24000064

0801e0a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e0a0:	b538      	push	{r3, r4, r5, lr}
 801e0a2:	4c15      	ldr	r4, [pc, #84]	; (801e0f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e0a4:	4605      	mov	r5, r0
 801e0a6:	7823      	ldrb	r3, [r4, #0]
 801e0a8:	f3bf 8f5b 	dmb	ish
 801e0ac:	07da      	lsls	r2, r3, #31
 801e0ae:	d40b      	bmi.n	801e0c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e0b0:	4620      	mov	r0, r4
 801e0b2:	f007 fc12 	bl	80258da <__cxa_guard_acquire>
 801e0b6:	b138      	cbz	r0, 801e0c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e0b8:	4620      	mov	r0, r4
 801e0ba:	f007 fc1a 	bl	80258f2 <__cxa_guard_release>
 801e0be:	4a0f      	ldr	r2, [pc, #60]	; (801e0fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e0c0:	490f      	ldr	r1, [pc, #60]	; (801e100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e0c2:	4810      	ldr	r0, [pc, #64]	; (801e104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e0c4:	f007 fc02 	bl	80258cc <__aeabi_atexit>
 801e0c8:	4c0f      	ldr	r4, [pc, #60]	; (801e108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e0ca:	7823      	ldrb	r3, [r4, #0]
 801e0cc:	f3bf 8f5b 	dmb	ish
 801e0d0:	07db      	lsls	r3, r3, #31
 801e0d2:	d40b      	bmi.n	801e0ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e0d4:	4620      	mov	r0, r4
 801e0d6:	f007 fc00 	bl	80258da <__cxa_guard_acquire>
 801e0da:	b138      	cbz	r0, 801e0ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e0dc:	4620      	mov	r0, r4
 801e0de:	f007 fc08 	bl	80258f2 <__cxa_guard_release>
 801e0e2:	4a06      	ldr	r2, [pc, #24]	; (801e0fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e0e4:	4909      	ldr	r1, [pc, #36]	; (801e10c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e0e6:	480a      	ldr	r0, [pc, #40]	; (801e110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e0e8:	f007 fbf0 	bl	80258cc <__aeabi_atexit>
 801e0ec:	4b05      	ldr	r3, [pc, #20]	; (801e104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e0ee:	65ab      	str	r3, [r5, #88]	; 0x58
 801e0f0:	4b07      	ldr	r3, [pc, #28]	; (801e110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e0f2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e0f4:	bd38      	pop	{r3, r4, r5, pc}
 801e0f6:	bf00      	nop
 801e0f8:	2400304c 	.word	0x2400304c
 801e0fc:	24000000 	.word	0x24000000
 801e100:	0801a919 	.word	0x0801a919
 801e104:	24000038 	.word	0x24000038
 801e108:	24003050 	.word	0x24003050
 801e10c:	0801a917 	.word	0x0801a917
 801e110:	2400003c 	.word	0x2400003c

0801e114 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e114:	b510      	push	{r4, lr}
 801e116:	4604      	mov	r4, r0
 801e118:	f7ff ff88 	bl	801e02c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e11c:	4620      	mov	r0, r4
 801e11e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e122:	f7ff bfbd 	b.w	801e0a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e128:	b538      	push	{r3, r4, r5, lr}
 801e12a:	4c15      	ldr	r4, [pc, #84]	; (801e180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e12c:	4605      	mov	r5, r0
 801e12e:	7823      	ldrb	r3, [r4, #0]
 801e130:	f3bf 8f5b 	dmb	ish
 801e134:	07da      	lsls	r2, r3, #31
 801e136:	d40b      	bmi.n	801e150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e138:	4620      	mov	r0, r4
 801e13a:	f007 fbce 	bl	80258da <__cxa_guard_acquire>
 801e13e:	b138      	cbz	r0, 801e150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e140:	4620      	mov	r0, r4
 801e142:	f007 fbd6 	bl	80258f2 <__cxa_guard_release>
 801e146:	4a0f      	ldr	r2, [pc, #60]	; (801e184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e148:	490f      	ldr	r1, [pc, #60]	; (801e188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e14a:	4810      	ldr	r0, [pc, #64]	; (801e18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e14c:	f007 fbbe 	bl	80258cc <__aeabi_atexit>
 801e150:	4c0f      	ldr	r4, [pc, #60]	; (801e190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e152:	7823      	ldrb	r3, [r4, #0]
 801e154:	f3bf 8f5b 	dmb	ish
 801e158:	07db      	lsls	r3, r3, #31
 801e15a:	d40b      	bmi.n	801e174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e15c:	4620      	mov	r0, r4
 801e15e:	f007 fbbc 	bl	80258da <__cxa_guard_acquire>
 801e162:	b138      	cbz	r0, 801e174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e164:	4620      	mov	r0, r4
 801e166:	f007 fbc4 	bl	80258f2 <__cxa_guard_release>
 801e16a:	4a06      	ldr	r2, [pc, #24]	; (801e184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e16c:	4909      	ldr	r1, [pc, #36]	; (801e194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e16e:	480a      	ldr	r0, [pc, #40]	; (801e198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e170:	f007 fbac 	bl	80258cc <__aeabi_atexit>
 801e174:	4b05      	ldr	r3, [pc, #20]	; (801e18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e176:	672b      	str	r3, [r5, #112]	; 0x70
 801e178:	4b07      	ldr	r3, [pc, #28]	; (801e198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e17a:	676b      	str	r3, [r5, #116]	; 0x74
 801e17c:	bd38      	pop	{r3, r4, r5, pc}
 801e17e:	bf00      	nop
 801e180:	24003044 	.word	0x24003044
 801e184:	24000000 	.word	0x24000000
 801e188:	0801a90d 	.word	0x0801a90d
 801e18c:	24000030 	.word	0x24000030
 801e190:	24003048 	.word	0x24003048
 801e194:	0801a90b 	.word	0x0801a90b
 801e198:	24000034 	.word	0x24000034

0801e19c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e19c:	b538      	push	{r3, r4, r5, lr}
 801e19e:	4c15      	ldr	r4, [pc, #84]	; (801e1f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e1a0:	4605      	mov	r5, r0
 801e1a2:	7823      	ldrb	r3, [r4, #0]
 801e1a4:	f3bf 8f5b 	dmb	ish
 801e1a8:	07da      	lsls	r2, r3, #31
 801e1aa:	d40b      	bmi.n	801e1c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e1ac:	4620      	mov	r0, r4
 801e1ae:	f007 fb94 	bl	80258da <__cxa_guard_acquire>
 801e1b2:	b138      	cbz	r0, 801e1c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e1b4:	4620      	mov	r0, r4
 801e1b6:	f007 fb9c 	bl	80258f2 <__cxa_guard_release>
 801e1ba:	4a0f      	ldr	r2, [pc, #60]	; (801e1f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e1bc:	490f      	ldr	r1, [pc, #60]	; (801e1fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e1be:	4810      	ldr	r0, [pc, #64]	; (801e200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e1c0:	f007 fb84 	bl	80258cc <__aeabi_atexit>
 801e1c4:	4c0f      	ldr	r4, [pc, #60]	; (801e204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e1c6:	7823      	ldrb	r3, [r4, #0]
 801e1c8:	f3bf 8f5b 	dmb	ish
 801e1cc:	07db      	lsls	r3, r3, #31
 801e1ce:	d40b      	bmi.n	801e1e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e1d0:	4620      	mov	r0, r4
 801e1d2:	f007 fb82 	bl	80258da <__cxa_guard_acquire>
 801e1d6:	b138      	cbz	r0, 801e1e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e1d8:	4620      	mov	r0, r4
 801e1da:	f007 fb8a 	bl	80258f2 <__cxa_guard_release>
 801e1de:	4a06      	ldr	r2, [pc, #24]	; (801e1f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e1e0:	4909      	ldr	r1, [pc, #36]	; (801e208 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e1e2:	480a      	ldr	r0, [pc, #40]	; (801e20c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e1e4:	f007 fb72 	bl	80258cc <__aeabi_atexit>
 801e1e8:	4b05      	ldr	r3, [pc, #20]	; (801e200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e1ea:	66ab      	str	r3, [r5, #104]	; 0x68
 801e1ec:	4b07      	ldr	r3, [pc, #28]	; (801e20c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e1ee:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e1f0:	bd38      	pop	{r3, r4, r5, pc}
 801e1f2:	bf00      	nop
 801e1f4:	2400303c 	.word	0x2400303c
 801e1f8:	24000000 	.word	0x24000000
 801e1fc:	0801a911 	.word	0x0801a911
 801e200:	24000028 	.word	0x24000028
 801e204:	24003040 	.word	0x24003040
 801e208:	0801a90f 	.word	0x0801a90f
 801e20c:	2400002c 	.word	0x2400002c

0801e210 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e210:	b510      	push	{r4, lr}
 801e212:	4604      	mov	r4, r0
 801e214:	f7ff ff88 	bl	801e128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e218:	4620      	mov	r0, r4
 801e21a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e21e:	f7ff bfbd 	b.w	801e19c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e222 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e222:	b510      	push	{r4, lr}
 801e224:	4604      	mov	r4, r0
 801e226:	f7ff fff3 	bl	801e210 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e22a:	4620      	mov	r0, r4
 801e22c:	f7ff ff72 	bl	801e114 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e230:	4620      	mov	r0, r4
 801e232:	f7ff fdf9 	bl	801de28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e236:	4620      	mov	r0, r4
 801e238:	f7ff fcfa 	bl	801dc30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e23c:	4620      	mov	r0, r4
 801e23e:	f7ff fd75 	bl	801dd2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e242:	4620      	mov	r0, r4
 801e244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e248:	f7ff bee0 	b.w	801e00c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e24c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e24c:	b538      	push	{r3, r4, r5, lr}
 801e24e:	4c0b      	ldr	r4, [pc, #44]	; (801e27c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e250:	4605      	mov	r5, r0
 801e252:	7823      	ldrb	r3, [r4, #0]
 801e254:	f3bf 8f5b 	dmb	ish
 801e258:	07db      	lsls	r3, r3, #31
 801e25a:	d40b      	bmi.n	801e274 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e25c:	4620      	mov	r0, r4
 801e25e:	f007 fb3c 	bl	80258da <__cxa_guard_acquire>
 801e262:	b138      	cbz	r0, 801e274 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e264:	4620      	mov	r0, r4
 801e266:	f007 fb44 	bl	80258f2 <__cxa_guard_release>
 801e26a:	4a05      	ldr	r2, [pc, #20]	; (801e280 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e26c:	4905      	ldr	r1, [pc, #20]	; (801e284 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e26e:	4806      	ldr	r0, [pc, #24]	; (801e288 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e270:	f007 fb2c 	bl	80258cc <__aeabi_atexit>
 801e274:	4b04      	ldr	r3, [pc, #16]	; (801e288 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e276:	67ab      	str	r3, [r5, #120]	; 0x78
 801e278:	bd38      	pop	{r3, r4, r5, pc}
 801e27a:	bf00      	nop
 801e27c:	24003030 	.word	0x24003030
 801e280:	24000000 	.word	0x24000000
 801e284:	0801a909 	.word	0x0801a909
 801e288:	24000020 	.word	0x24000020

0801e28c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e28c:	b538      	push	{r3, r4, r5, lr}
 801e28e:	4c0b      	ldr	r4, [pc, #44]	; (801e2bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e290:	4605      	mov	r5, r0
 801e292:	7823      	ldrb	r3, [r4, #0]
 801e294:	f3bf 8f5b 	dmb	ish
 801e298:	07db      	lsls	r3, r3, #31
 801e29a:	d40b      	bmi.n	801e2b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e29c:	4620      	mov	r0, r4
 801e29e:	f007 fb1c 	bl	80258da <__cxa_guard_acquire>
 801e2a2:	b138      	cbz	r0, 801e2b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e2a4:	4620      	mov	r0, r4
 801e2a6:	f007 fb24 	bl	80258f2 <__cxa_guard_release>
 801e2aa:	4a05      	ldr	r2, [pc, #20]	; (801e2c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e2ac:	4905      	ldr	r1, [pc, #20]	; (801e2c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e2ae:	4806      	ldr	r0, [pc, #24]	; (801e2c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e2b0:	f007 fb0c 	bl	80258cc <__aeabi_atexit>
 801e2b4:	4b04      	ldr	r3, [pc, #16]	; (801e2c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e2b6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e2b8:	bd38      	pop	{r3, r4, r5, pc}
 801e2ba:	bf00      	nop
 801e2bc:	24003034 	.word	0x24003034
 801e2c0:	24000000 	.word	0x24000000
 801e2c4:	0801a907 	.word	0x0801a907
 801e2c8:	24000024 	.word	0x24000024

0801e2cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e2cc:	b570      	push	{r4, r5, r6, lr}
 801e2ce:	4d0d      	ldr	r5, [pc, #52]	; (801e304 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e2d0:	4606      	mov	r6, r0
 801e2d2:	4c0d      	ldr	r4, [pc, #52]	; (801e308 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e2d4:	782b      	ldrb	r3, [r5, #0]
 801e2d6:	f3bf 8f5b 	dmb	ish
 801e2da:	f013 0f01 	tst.w	r3, #1
 801e2de:	d10d      	bne.n	801e2fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e2e0:	4628      	mov	r0, r5
 801e2e2:	f007 fafa 	bl	80258da <__cxa_guard_acquire>
 801e2e6:	b148      	cbz	r0, 801e2fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e2e8:	4b08      	ldr	r3, [pc, #32]	; (801e30c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e2ea:	4628      	mov	r0, r5
 801e2ec:	6023      	str	r3, [r4, #0]
 801e2ee:	f007 fb00 	bl	80258f2 <__cxa_guard_release>
 801e2f2:	4a07      	ldr	r2, [pc, #28]	; (801e310 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e2f4:	4620      	mov	r0, r4
 801e2f6:	4907      	ldr	r1, [pc, #28]	; (801e314 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e2f8:	f007 fae8 	bl	80258cc <__aeabi_atexit>
 801e2fc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e300:	bd70      	pop	{r4, r5, r6, pc}
 801e302:	bf00      	nop
 801e304:	24003038 	.word	0x24003038
 801e308:	240030ac 	.word	0x240030ac
 801e30c:	08028cc4 	.word	0x08028cc4
 801e310:	24000000 	.word	0x24000000
 801e314:	0801a905 	.word	0x0801a905

0801e318 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e318:	b510      	push	{r4, lr}
 801e31a:	4604      	mov	r4, r0
 801e31c:	f7ff ff96 	bl	801e24c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e320:	4620      	mov	r0, r4
 801e322:	f7ff ffb3 	bl	801e28c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e326:	4620      	mov	r0, r4
 801e328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e32c:	f7ff bfce 	b.w	801e2cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e334:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e338:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e33c:	2d00      	cmp	r5, #0
 801e33e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e342:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e346:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e34a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e34e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e352:	eb02 0a0c 	add.w	sl, r2, ip
 801e356:	8808      	ldrh	r0, [r1, #0]
 801e358:	f2c0 80b0 	blt.w	801e4bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e35c:	45ab      	cmp	fp, r5
 801e35e:	f340 80ad 	ble.w	801e4bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e362:	2c00      	cmp	r4, #0
 801e364:	f2c0 80a8 	blt.w	801e4b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e368:	45a6      	cmp	lr, r4
 801e36a:	f340 80a5 	ble.w	801e4b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e36e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e372:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e376:	1c62      	adds	r2, r4, #1
 801e378:	f100 80a3 	bmi.w	801e4c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e37c:	4596      	cmp	lr, r2
 801e37e:	f340 80a0 	ble.w	801e4c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e382:	f1b9 0f00 	cmp.w	r9, #0
 801e386:	f000 809c 	beq.w	801e4c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e38a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e38e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e392:	3501      	adds	r5, #1
 801e394:	f100 8099 	bmi.w	801e4ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e398:	45ab      	cmp	fp, r5
 801e39a:	f340 8096 	ble.w	801e4ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e39e:	2f00      	cmp	r7, #0
 801e3a0:	f000 8093 	beq.w	801e4ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e3a4:	2c00      	cmp	r4, #0
 801e3a6:	f2c0 808e 	blt.w	801e4c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e3aa:	45a6      	cmp	lr, r4
 801e3ac:	f340 808b 	ble.w	801e4c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e3b0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e3b4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e3b8:	3401      	adds	r4, #1
 801e3ba:	f100 8089 	bmi.w	801e4d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e3be:	45a6      	cmp	lr, r4
 801e3c0:	f340 8086 	ble.w	801e4d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e3c4:	f1b9 0f00 	cmp.w	r9, #0
 801e3c8:	f000 8082 	beq.w	801e4d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e3cc:	44d6      	add	lr, sl
 801e3ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e3d2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e3d6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e3da:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e3de:	fb19 fe07 	smulbb	lr, r9, r7
 801e3e2:	f1c7 0210 	rsb	r2, r7, #16
 801e3e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e3ea:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e3ee:	eba2 0209 	sub.w	r2, r2, r9
 801e3f2:	ea44 0808 	orr.w	r8, r4, r8
 801e3f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e3fa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e3fe:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e402:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e406:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e40a:	ea44 0c0c 	orr.w	ip, r4, ip
 801e40e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e412:	fb04 f40c 	mul.w	r4, r4, ip
 801e416:	fb02 4808 	mla	r8, r2, r8, r4
 801e41a:	041a      	lsls	r2, r3, #16
 801e41c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e420:	b2b4      	uxth	r4, r6
 801e422:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e426:	43f6      	mvns	r6, r6
 801e428:	4313      	orrs	r3, r2
 801e42a:	042a      	lsls	r2, r5, #16
 801e42c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e430:	b2f6      	uxtb	r6, r6
 801e432:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e436:	fb0e 8303 	mla	r3, lr, r3, r8
 801e43a:	432a      	orrs	r2, r5
 801e43c:	fb07 3202 	mla	r2, r7, r2, r3
 801e440:	10c7      	asrs	r7, r0, #3
 801e442:	0d53      	lsrs	r3, r2, #21
 801e444:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e448:	0952      	lsrs	r2, r2, #5
 801e44a:	fb17 f706 	smulbb	r7, r7, r6
 801e44e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e452:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e456:	431a      	orrs	r2, r3
 801e458:	b293      	uxth	r3, r2
 801e45a:	1202      	asrs	r2, r0, #8
 801e45c:	121d      	asrs	r5, r3, #8
 801e45e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e462:	00c0      	lsls	r0, r0, #3
 801e464:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e468:	fb12 f206 	smulbb	r2, r2, r6
 801e46c:	b2c0      	uxtb	r0, r0
 801e46e:	fb05 2504 	mla	r5, r5, r4, r2
 801e472:	10da      	asrs	r2, r3, #3
 801e474:	fb10 f006 	smulbb	r0, r0, r6
 801e478:	00db      	lsls	r3, r3, #3
 801e47a:	b2ad      	uxth	r5, r5
 801e47c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e480:	b2db      	uxtb	r3, r3
 801e482:	fb02 7204 	mla	r2, r2, r4, r7
 801e486:	fb03 0004 	mla	r0, r3, r4, r0
 801e48a:	1c6b      	adds	r3, r5, #1
 801e48c:	b292      	uxth	r2, r2
 801e48e:	b280      	uxth	r0, r0
 801e490:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e494:	1c43      	adds	r3, r0, #1
 801e496:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e49a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e49e:	1c50      	adds	r0, r2, #1
 801e4a0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e4a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e4a8:	0952      	lsrs	r2, r2, #5
 801e4aa:	432b      	orrs	r3, r5
 801e4ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e4b0:	4313      	orrs	r3, r2
 801e4b2:	800b      	strh	r3, [r1, #0]
 801e4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4b8:	4680      	mov	r8, r0
 801e4ba:	e75c      	b.n	801e376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e4bc:	4684      	mov	ip, r0
 801e4be:	4680      	mov	r8, r0
 801e4c0:	e767      	b.n	801e392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e4c2:	4684      	mov	ip, r0
 801e4c4:	e765      	b.n	801e392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e4c6:	4605      	mov	r5, r0
 801e4c8:	e776      	b.n	801e3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e4ca:	4603      	mov	r3, r0
 801e4cc:	4605      	mov	r5, r0
 801e4ce:	e782      	b.n	801e3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e4d0:	4603      	mov	r3, r0
 801e4d2:	e780      	b.n	801e3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d8:	b099      	sub	sp, #100	; 0x64
 801e4da:	9215      	str	r2, [sp, #84]	; 0x54
 801e4dc:	9309      	str	r3, [sp, #36]	; 0x24
 801e4de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e4e0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e4e4:	9016      	str	r0, [sp, #88]	; 0x58
 801e4e6:	930d      	str	r3, [sp, #52]	; 0x34
 801e4e8:	6850      	ldr	r0, [r2, #4]
 801e4ea:	910c      	str	r1, [sp, #48]	; 0x30
 801e4ec:	6812      	ldr	r2, [r2, #0]
 801e4ee:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e4f2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e4f6:	fb00 1303 	mla	r3, r0, r3, r1
 801e4fa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e4fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e500:	681b      	ldr	r3, [r3, #0]
 801e502:	930b      	str	r3, [sp, #44]	; 0x2c
 801e504:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e506:	685e      	ldr	r6, [r3, #4]
 801e508:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e50a:	3604      	adds	r6, #4
 801e50c:	43db      	mvns	r3, r3
 801e50e:	b2db      	uxtb	r3, r3
 801e510:	930a      	str	r3, [sp, #40]	; 0x28
 801e512:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e514:	2b00      	cmp	r3, #0
 801e516:	dc03      	bgt.n	801e520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e518:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e51a:	2b00      	cmp	r3, #0
 801e51c:	f340 8225 	ble.w	801e96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e520:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e522:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e526:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e52a:	1e48      	subs	r0, r1, #1
 801e52c:	1e57      	subs	r7, r2, #1
 801e52e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e530:	2b00      	cmp	r3, #0
 801e532:	f340 80e3 	ble.w	801e6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e536:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e53a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e53e:	d406      	bmi.n	801e54e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e540:	4584      	cmp	ip, r0
 801e542:	da04      	bge.n	801e54e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e544:	2b00      	cmp	r3, #0
 801e546:	db02      	blt.n	801e54e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e548:	42bb      	cmp	r3, r7
 801e54a:	f2c0 80d8 	blt.w	801e6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e54e:	f11c 0c01 	adds.w	ip, ip, #1
 801e552:	f100 80c9 	bmi.w	801e6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e556:	4561      	cmp	r1, ip
 801e558:	f2c0 80c6 	blt.w	801e6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e55c:	3301      	adds	r3, #1
 801e55e:	f100 80c3 	bmi.w	801e6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e562:	429a      	cmp	r2, r3
 801e564:	f2c0 80c0 	blt.w	801e6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e568:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e56c:	4647      	mov	r7, r8
 801e56e:	f1bb 0f00 	cmp.w	fp, #0
 801e572:	f340 80e3 	ble.w	801e73c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e576:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e578:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e57c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e57e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e582:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e586:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e58a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e58e:	689b      	ldr	r3, [r3, #8]
 801e590:	f100 8121 	bmi.w	801e7d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e594:	f103 39ff 	add.w	r9, r3, #4294967295
 801e598:	454a      	cmp	r2, r9
 801e59a:	f280 811c 	bge.w	801e7d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e59e:	f1bc 0f00 	cmp.w	ip, #0
 801e5a2:	f2c0 8118 	blt.w	801e7d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e5a6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e5aa:	45cc      	cmp	ip, r9
 801e5ac:	f280 8113 	bge.w	801e7d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e5b0:	b21b      	sxth	r3, r3
 801e5b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e5b4:	fb0c 2203 	mla	r2, ip, r3, r2
 801e5b8:	eb04 0902 	add.w	r9, r4, r2
 801e5bc:	5ca2      	ldrb	r2, [r4, r2]
 801e5be:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e5c2:	2800      	cmp	r0, #0
 801e5c4:	f000 80fe 	beq.w	801e7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e5c8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e5cc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e5d0:	9211      	str	r2, [sp, #68]	; 0x44
 801e5d2:	b151      	cbz	r1, 801e5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e5d4:	eb09 0203 	add.w	r2, r9, r3
 801e5d8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e5dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e5e0:	930f      	str	r3, [sp, #60]	; 0x3c
 801e5e2:	7853      	ldrb	r3, [r2, #1]
 801e5e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e5e8:	9312      	str	r3, [sp, #72]	; 0x48
 801e5ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e5ec:	fb10 f201 	smulbb	r2, r0, r1
 801e5f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e5f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e5f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e5fa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e5fe:	10d2      	asrs	r2, r2, #3
 801e600:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e604:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e608:	ea4c 0c03 	orr.w	ip, ip, r3
 801e60c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e60e:	041b      	lsls	r3, r3, #16
 801e610:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e614:	4323      	orrs	r3, r4
 801e616:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e618:	4353      	muls	r3, r2
 801e61a:	fb09 330c 	mla	r3, r9, ip, r3
 801e61e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e622:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e626:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e62a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e62e:	f1c1 0c10 	rsb	ip, r1, #16
 801e632:	ebac 0c00 	sub.w	ip, ip, r0
 801e636:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e63a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e63e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e642:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e644:	0418      	lsls	r0, r3, #16
 801e646:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e64a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e64e:	4318      	orrs	r0, r3
 801e650:	fb02 c200 	mla	r2, r2, r0, ip
 801e654:	8838      	ldrh	r0, [r7, #0]
 801e656:	0d53      	lsrs	r3, r2, #21
 801e658:	0952      	lsrs	r2, r2, #5
 801e65a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e65e:	1201      	asrs	r1, r0, #8
 801e660:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e664:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e668:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e66c:	00c0      	lsls	r0, r0, #3
 801e66e:	431a      	orrs	r2, r3
 801e670:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e674:	fb11 f104 	smulbb	r1, r1, r4
 801e678:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e67c:	b292      	uxth	r2, r2
 801e67e:	fb1e fe04 	smulbb	lr, lr, r4
 801e682:	b2c0      	uxtb	r0, r0
 801e684:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e688:	fb10 f004 	smulbb	r0, r0, r4
 801e68c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e690:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e694:	10d1      	asrs	r1, r2, #3
 801e696:	00d2      	lsls	r2, r2, #3
 801e698:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e69c:	fa1f fc8c 	uxth.w	ip, ip
 801e6a0:	b2d2      	uxtb	r2, r2
 801e6a2:	fb01 e103 	mla	r1, r1, r3, lr
 801e6a6:	fb02 0303 	mla	r3, r2, r3, r0
 801e6aa:	b289      	uxth	r1, r1
 801e6ac:	b29a      	uxth	r2, r3
 801e6ae:	f10c 0301 	add.w	r3, ip, #1
 801e6b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e6b6:	1c53      	adds	r3, r2, #1
 801e6b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6bc:	1c4a      	adds	r2, r1, #1
 801e6be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e6c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e6c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e6ca:	0949      	lsrs	r1, r1, #5
 801e6cc:	ea43 030c 	orr.w	r3, r3, ip
 801e6d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e6d4:	430b      	orrs	r3, r1
 801e6d6:	803b      	strh	r3, [r7, #0]
 801e6d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e6da:	3702      	adds	r7, #2
 801e6dc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e6e0:	449a      	add	sl, r3
 801e6e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e6e4:	441d      	add	r5, r3
 801e6e6:	e742      	b.n	801e56e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e6e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e6ea:	f108 0802 	add.w	r8, r8, #2
 801e6ee:	449a      	add	sl, r3
 801e6f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e6f2:	441d      	add	r5, r3
 801e6f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e6f6:	3b01      	subs	r3, #1
 801e6f8:	9309      	str	r3, [sp, #36]	; 0x24
 801e6fa:	e718      	b.n	801e52e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e6fc:	d023      	beq.n	801e746 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e6fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e700:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e702:	3b01      	subs	r3, #1
 801e704:	fb00 a003 	mla	r0, r0, r3, sl
 801e708:	1400      	asrs	r0, r0, #16
 801e70a:	f53f af2d 	bmi.w	801e568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e70e:	3901      	subs	r1, #1
 801e710:	4288      	cmp	r0, r1
 801e712:	f6bf af29 	bge.w	801e568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e716:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e718:	fb01 5303 	mla	r3, r1, r3, r5
 801e71c:	141b      	asrs	r3, r3, #16
 801e71e:	f53f af23 	bmi.w	801e568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e722:	3a01      	subs	r2, #1
 801e724:	4293      	cmp	r3, r2
 801e726:	f6bf af1f 	bge.w	801e568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e72a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e72e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e732:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e736:	f1be 0f00 	cmp.w	lr, #0
 801e73a:	dc6c      	bgt.n	801e816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e73c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e73e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e742:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e746:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e748:	2b00      	cmp	r3, #0
 801e74a:	f340 810e 	ble.w	801e96a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e74e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e752:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e754:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e758:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e75c:	eef0 6a62 	vmov.f32	s13, s5
 801e760:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e764:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e76c:	ee16 aa90 	vmov	sl, s13
 801e770:	eef0 6a43 	vmov.f32	s13, s6
 801e774:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e778:	ee16 5a90 	vmov	r5, s13
 801e77c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e780:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e784:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e788:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e78c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e790:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e794:	ee12 2a90 	vmov	r2, s5
 801e798:	eef0 2a47 	vmov.f32	s5, s14
 801e79c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7a0:	ee13 2a10 	vmov	r2, s6
 801e7a4:	9325      	str	r3, [sp, #148]	; 0x94
 801e7a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e7a8:	eeb0 3a67 	vmov.f32	s6, s15
 801e7ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7b0:	9326      	str	r3, [sp, #152]	; 0x98
 801e7b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e7b4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e7b6:	3b01      	subs	r3, #1
 801e7b8:	930c      	str	r3, [sp, #48]	; 0x30
 801e7ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e7bc:	bf08      	it	eq
 801e7be:	4613      	moveq	r3, r2
 801e7c0:	9309      	str	r3, [sp, #36]	; 0x24
 801e7c2:	e6a6      	b.n	801e512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e7c4:	2900      	cmp	r1, #0
 801e7c6:	f43f af10 	beq.w	801e5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e7ca:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e7ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801e7d4:	e709      	b.n	801e5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e7d6:	f112 0901 	adds.w	r9, r2, #1
 801e7da:	f53f af7d 	bmi.w	801e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e7de:	454b      	cmp	r3, r9
 801e7e0:	f6ff af7a 	blt.w	801e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e7e4:	f11c 0901 	adds.w	r9, ip, #1
 801e7e8:	f53f af76 	bmi.w	801e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e7ec:	45ce      	cmp	lr, r9
 801e7ee:	f6ff af73 	blt.w	801e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e7f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e7f4:	b21b      	sxth	r3, r3
 801e7f6:	9202      	str	r2, [sp, #8]
 801e7f8:	fa0f f28e 	sxth.w	r2, lr
 801e7fc:	9300      	str	r3, [sp, #0]
 801e7fe:	4633      	mov	r3, r6
 801e800:	9201      	str	r2, [sp, #4]
 801e802:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e804:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e808:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e80c:	4639      	mov	r1, r7
 801e80e:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e810:	f7ff fd8e 	bl	801e330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e814:	e760      	b.n	801e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e816:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e818:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e81c:	1429      	asrs	r1, r5, #16
 801e81e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e820:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e824:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e828:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e82c:	fb03 2101 	mla	r1, r3, r1, r2
 801e830:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e832:	440a      	add	r2, r1
 801e834:	5c61      	ldrb	r1, [r4, r1]
 801e836:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e83a:	f1bc 0f00 	cmp.w	ip, #0
 801e83e:	f000 808c 	beq.w	801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e842:	7857      	ldrb	r7, [r2, #1]
 801e844:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e848:	9413      	str	r4, [sp, #76]	; 0x4c
 801e84a:	b140      	cbz	r0, 801e85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e84c:	18d7      	adds	r7, r2, r3
 801e84e:	5cd3      	ldrb	r3, [r2, r3]
 801e850:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e854:	9310      	str	r3, [sp, #64]	; 0x40
 801e856:	787b      	ldrb	r3, [r7, #1]
 801e858:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e85c:	9314      	str	r3, [sp, #80]	; 0x50
 801e85e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e860:	fb1c f200 	smulbb	r2, ip, r0
 801e864:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e866:	f10e 3eff 	add.w	lr, lr, #4294967295
 801e86a:	041f      	lsls	r7, r3, #16
 801e86c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e870:	10d2      	asrs	r2, r2, #3
 801e872:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801e876:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801e87a:	431f      	orrs	r7, r3
 801e87c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e880:	9317      	str	r3, [sp, #92]	; 0x5c
 801e882:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e884:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e886:	041b      	lsls	r3, r3, #16
 801e888:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e88c:	ea43 030b 	orr.w	r3, r3, fp
 801e890:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e894:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e898:	4353      	muls	r3, r2
 801e89a:	fb04 3707 	mla	r7, r4, r7, r3
 801e89e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801e8a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e8a4:	ea43 0b01 	orr.w	fp, r3, r1
 801e8a8:	f1c0 0110 	rsb	r1, r0, #16
 801e8ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8ae:	eba1 0c0c 	sub.w	ip, r1, ip
 801e8b2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e8b6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e8ba:	fb0c 770b 	mla	r7, ip, fp, r7
 801e8be:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e8c2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801e8c6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e8ca:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e8ce:	fb02 770c 	mla	r7, r2, ip, r7
 801e8d2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e8d4:	0d79      	lsrs	r1, r7, #21
 801e8d6:	8812      	ldrh	r2, [r2, #0]
 801e8d8:	097f      	lsrs	r7, r7, #5
 801e8da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8de:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e8e2:	430f      	orrs	r7, r1
 801e8e4:	1211      	asrs	r1, r2, #8
 801e8e6:	b2bb      	uxth	r3, r7
 801e8e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e8ec:	10d7      	asrs	r7, r2, #3
 801e8ee:	fb11 f104 	smulbb	r1, r1, r4
 801e8f2:	1218      	asrs	r0, r3, #8
 801e8f4:	00d2      	lsls	r2, r2, #3
 801e8f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e8fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e8fe:	fb17 f704 	smulbb	r7, r7, r4
 801e902:	b2d2      	uxtb	r2, r2
 801e904:	fb00 1009 	mla	r0, r0, r9, r1
 801e908:	10d9      	asrs	r1, r3, #3
 801e90a:	fb12 f204 	smulbb	r2, r2, r4
 801e90e:	00db      	lsls	r3, r3, #3
 801e910:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e914:	b280      	uxth	r0, r0
 801e916:	b2db      	uxtb	r3, r3
 801e918:	fb01 7109 	mla	r1, r1, r9, r7
 801e91c:	fb03 2309 	mla	r3, r3, r9, r2
 801e920:	1c42      	adds	r2, r0, #1
 801e922:	b289      	uxth	r1, r1
 801e924:	b29b      	uxth	r3, r3
 801e926:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e92a:	1c4f      	adds	r7, r1, #1
 801e92c:	1c5a      	adds	r2, r3, #1
 801e92e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e932:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e936:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e93a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e93c:	0949      	lsrs	r1, r1, #5
 801e93e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e942:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e946:	4310      	orrs	r0, r2
 801e948:	4308      	orrs	r0, r1
 801e94a:	f823 0b02 	strh.w	r0, [r3], #2
 801e94e:	930e      	str	r3, [sp, #56]	; 0x38
 801e950:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e952:	449a      	add	sl, r3
 801e954:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e956:	441d      	add	r5, r3
 801e958:	e6ed      	b.n	801e736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801e95a:	2800      	cmp	r0, #0
 801e95c:	f43f af7f 	beq.w	801e85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e960:	5cd3      	ldrb	r3, [r2, r3]
 801e962:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e966:	9310      	str	r3, [sp, #64]	; 0x40
 801e968:	e779      	b.n	801e85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e96a:	b019      	add	sp, #100	; 0x64
 801e96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e974:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801e978:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801e97c:	f1b8 0f00 	cmp.w	r8, #0
 801e980:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801e984:	fb08 470e 	mla	r7, r8, lr, r4
 801e988:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e98c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e990:	eb02 0907 	add.w	r9, r2, r7
 801e994:	8808      	ldrh	r0, [r1, #0]
 801e996:	db67      	blt.n	801ea68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e998:	45c2      	cmp	sl, r8
 801e99a:	dd65      	ble.n	801ea68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e99c:	2c00      	cmp	r4, #0
 801e99e:	db61      	blt.n	801ea64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e9a0:	45a6      	cmp	lr, r4
 801e9a2:	dd5f      	ble.n	801ea64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e9a4:	5dd2      	ldrb	r2, [r2, r7]
 801e9a6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e9aa:	1c62      	adds	r2, r4, #1
 801e9ac:	d45f      	bmi.n	801ea6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e9ae:	4596      	cmp	lr, r2
 801e9b0:	dd5d      	ble.n	801ea6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e9b2:	2d00      	cmp	r5, #0
 801e9b4:	d05b      	beq.n	801ea6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e9b6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e9ba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e9be:	f118 0801 	adds.w	r8, r8, #1
 801e9c2:	d458      	bmi.n	801ea76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e9c4:	45c2      	cmp	sl, r8
 801e9c6:	dd56      	ble.n	801ea76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e9c8:	2e00      	cmp	r6, #0
 801e9ca:	d054      	beq.n	801ea76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e9cc:	2c00      	cmp	r4, #0
 801e9ce:	db50      	blt.n	801ea72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e9d0:	45a6      	cmp	lr, r4
 801e9d2:	dd4e      	ble.n	801ea72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e9d4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801e9d8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801e9dc:	3401      	adds	r4, #1
 801e9de:	d407      	bmi.n	801e9f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e9e0:	45a6      	cmp	lr, r4
 801e9e2:	dd05      	ble.n	801e9f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e9e4:	b125      	cbz	r5, 801e9f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e9e6:	44ce      	add	lr, r9
 801e9e8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e9ec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801e9f0:	fb15 f406 	smulbb	r4, r5, r6
 801e9f4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e9f8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e9fc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ea00:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea04:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ea08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ea0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ea10:	ea43 0c0c 	orr.w	ip, r3, ip
 801ea14:	f1c6 0310 	rsb	r3, r6, #16
 801ea18:	ea4e 0707 	orr.w	r7, lr, r7
 801ea1c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ea20:	1b5b      	subs	r3, r3, r5
 801ea22:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ea26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ea2a:	437d      	muls	r5, r7
 801ea2c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ea30:	0403      	lsls	r3, r0, #16
 801ea32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ea36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea3a:	4318      	orrs	r0, r3
 801ea3c:	0413      	lsls	r3, r2, #16
 801ea3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea46:	fb04 c000 	mla	r0, r4, r0, ip
 801ea4a:	4313      	orrs	r3, r2
 801ea4c:	fb06 0003 	mla	r0, r6, r3, r0
 801ea50:	0d43      	lsrs	r3, r0, #21
 801ea52:	0940      	lsrs	r0, r0, #5
 801ea54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ea5c:	4318      	orrs	r0, r3
 801ea5e:	8008      	strh	r0, [r1, #0]
 801ea60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ea64:	4684      	mov	ip, r0
 801ea66:	e7a0      	b.n	801e9aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ea68:	4607      	mov	r7, r0
 801ea6a:	4684      	mov	ip, r0
 801ea6c:	e7a7      	b.n	801e9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ea6e:	4607      	mov	r7, r0
 801ea70:	e7a5      	b.n	801e9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ea72:	4602      	mov	r2, r0
 801ea74:	e7b2      	b.n	801e9dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ea76:	4602      	mov	r2, r0
 801ea78:	e7ba      	b.n	801e9f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ea7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea7e:	b093      	sub	sp, #76	; 0x4c
 801ea80:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ea84:	920f      	str	r2, [sp, #60]	; 0x3c
 801ea86:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ea88:	9010      	str	r0, [sp, #64]	; 0x40
 801ea8a:	9108      	str	r1, [sp, #32]
 801ea8c:	6850      	ldr	r0, [r2, #4]
 801ea8e:	9306      	str	r3, [sp, #24]
 801ea90:	6812      	ldr	r2, [r2, #0]
 801ea92:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ea96:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ea9a:	fb00 1303 	mla	r3, r0, r3, r1
 801ea9e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801eaa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaa4:	681b      	ldr	r3, [r3, #0]
 801eaa6:	9307      	str	r3, [sp, #28]
 801eaa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaaa:	685f      	ldr	r7, [r3, #4]
 801eaac:	3704      	adds	r7, #4
 801eaae:	9b08      	ldr	r3, [sp, #32]
 801eab0:	2b00      	cmp	r3, #0
 801eab2:	dc03      	bgt.n	801eabc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801eab4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eab6:	2b00      	cmp	r3, #0
 801eab8:	f340 81b2 	ble.w	801ee20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eabc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eabe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eac2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eac6:	1e48      	subs	r0, r1, #1
 801eac8:	f102 3cff 	add.w	ip, r2, #4294967295
 801eacc:	9b06      	ldr	r3, [sp, #24]
 801eace:	2b00      	cmp	r3, #0
 801ead0:	f340 80a9 	ble.w	801ec26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ead4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ead8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eadc:	d406      	bmi.n	801eaec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eade:	4586      	cmp	lr, r0
 801eae0:	da04      	bge.n	801eaec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eae2:	2b00      	cmp	r3, #0
 801eae4:	db02      	blt.n	801eaec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eae6:	4563      	cmp	r3, ip
 801eae8:	f2c0 809e 	blt.w	801ec28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801eaec:	f11e 0e01 	adds.w	lr, lr, #1
 801eaf0:	f100 808f 	bmi.w	801ec12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf4:	4571      	cmp	r1, lr
 801eaf6:	f2c0 808c 	blt.w	801ec12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eafa:	3301      	adds	r3, #1
 801eafc:	f100 8089 	bmi.w	801ec12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb00:	429a      	cmp	r2, r3
 801eb02:	f2c0 8086 	blt.w	801ec12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb06:	f8dd b018 	ldr.w	fp, [sp, #24]
 801eb0a:	46c8      	mov	r8, r9
 801eb0c:	f1bb 0f00 	cmp.w	fp, #0
 801eb10:	f340 80a6 	ble.w	801ec60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801eb14:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801eb16:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eb1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb1c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eb20:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eb24:	1422      	asrs	r2, r4, #16
 801eb26:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801eb2a:	689b      	ldr	r3, [r3, #8]
 801eb2c:	f100 80e3 	bmi.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eb30:	f103 3aff 	add.w	sl, r3, #4294967295
 801eb34:	4552      	cmp	r2, sl
 801eb36:	f280 80de 	bge.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eb3a:	f1bc 0f00 	cmp.w	ip, #0
 801eb3e:	f2c0 80da 	blt.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eb42:	f10e 3aff 	add.w	sl, lr, #4294967295
 801eb46:	45d4      	cmp	ip, sl
 801eb48:	f280 80d5 	bge.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eb4c:	b21b      	sxth	r3, r3
 801eb4e:	9d07      	ldr	r5, [sp, #28]
 801eb50:	fb0c 2203 	mla	r2, ip, r3, r2
 801eb54:	eb05 0a02 	add.w	sl, r5, r2
 801eb58:	5caa      	ldrb	r2, [r5, r2]
 801eb5a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801eb5e:	2800      	cmp	r0, #0
 801eb60:	f000 80c0 	beq.w	801ece4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801eb64:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801eb68:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801eb6c:	920b      	str	r2, [sp, #44]	; 0x2c
 801eb6e:	b151      	cbz	r1, 801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eb70:	eb0a 0203 	add.w	r2, sl, r3
 801eb74:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eb78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eb7c:	9309      	str	r3, [sp, #36]	; 0x24
 801eb7e:	7853      	ldrb	r3, [r2, #1]
 801eb80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eb84:	930c      	str	r3, [sp, #48]	; 0x30
 801eb86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eb88:	fb10 f201 	smulbb	r2, r0, r1
 801eb8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb8e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eb92:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb96:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801eb9a:	10d2      	asrs	r2, r2, #3
 801eb9c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eba0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801eba4:	ea4c 0c03 	orr.w	ip, ip, r3
 801eba8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ebaa:	041b      	lsls	r3, r3, #16
 801ebac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ebb0:	432b      	orrs	r3, r5
 801ebb2:	4353      	muls	r3, r2
 801ebb4:	fb0a 330c 	mla	r3, sl, ip, r3
 801ebb8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ebbc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ebc0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ebc4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ebc8:	f1c1 0c10 	rsb	ip, r1, #16
 801ebcc:	ebac 0c00 	sub.w	ip, ip, r0
 801ebd0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ebd4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ebd8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ebdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ebde:	0418      	lsls	r0, r3, #16
 801ebe0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ebe4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ebe8:	4318      	orrs	r0, r3
 801ebea:	fb02 c200 	mla	r2, r2, r0, ip
 801ebee:	0d53      	lsrs	r3, r2, #21
 801ebf0:	0952      	lsrs	r2, r2, #5
 801ebf2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ebf6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ebfa:	431a      	orrs	r2, r3
 801ebfc:	f8a8 2000 	strh.w	r2, [r8]
 801ec00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec02:	f108 0802 	add.w	r8, r8, #2
 801ec06:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ec0a:	441c      	add	r4, r3
 801ec0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec0e:	441e      	add	r6, r3
 801ec10:	e77c      	b.n	801eb0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ec12:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec14:	f109 0902 	add.w	r9, r9, #2
 801ec18:	441c      	add	r4, r3
 801ec1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec1c:	441e      	add	r6, r3
 801ec1e:	9b06      	ldr	r3, [sp, #24]
 801ec20:	3b01      	subs	r3, #1
 801ec22:	9306      	str	r3, [sp, #24]
 801ec24:	e752      	b.n	801eacc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ec26:	d020      	beq.n	801ec6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ec28:	9b06      	ldr	r3, [sp, #24]
 801ec2a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ec2c:	3b01      	subs	r3, #1
 801ec2e:	fb00 4003 	mla	r0, r0, r3, r4
 801ec32:	1400      	asrs	r0, r0, #16
 801ec34:	f53f af67 	bmi.w	801eb06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ec38:	3901      	subs	r1, #1
 801ec3a:	4288      	cmp	r0, r1
 801ec3c:	f6bf af63 	bge.w	801eb06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ec40:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ec42:	fb01 6303 	mla	r3, r1, r3, r6
 801ec46:	141b      	asrs	r3, r3, #16
 801ec48:	f53f af5d 	bmi.w	801eb06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ec4c:	3a01      	subs	r2, #1
 801ec4e:	4293      	cmp	r3, r2
 801ec50:	f6bf af59 	bge.w	801eb06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ec54:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ec58:	46ca      	mov	sl, r9
 801ec5a:	f1b8 0f00 	cmp.w	r8, #0
 801ec5e:	dc67      	bgt.n	801ed30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ec60:	9b06      	ldr	r3, [sp, #24]
 801ec62:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ec66:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ec6a:	9b08      	ldr	r3, [sp, #32]
 801ec6c:	2b00      	cmp	r3, #0
 801ec6e:	f340 80d7 	ble.w	801ee20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ec72:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ec78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec7c:	eeb0 6a62 	vmov.f32	s12, s5
 801ec80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ec84:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ec8c:	ee16 4a10 	vmov	r4, s12
 801ec90:	eeb0 6a43 	vmov.f32	s12, s6
 801ec94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ec98:	ee16 6a10 	vmov	r6, s12
 801ec9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eca0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eca4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eca8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecb4:	ee12 2a90 	vmov	r2, s5
 801ecb8:	eef0 2a47 	vmov.f32	s5, s14
 801ecbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecc0:	ee13 2a10 	vmov	r2, s6
 801ecc4:	931f      	str	r3, [sp, #124]	; 0x7c
 801ecc6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ecc8:	eeb0 3a67 	vmov.f32	s6, s15
 801eccc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecd0:	9320      	str	r3, [sp, #128]	; 0x80
 801ecd2:	9b08      	ldr	r3, [sp, #32]
 801ecd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ecd6:	3b01      	subs	r3, #1
 801ecd8:	9308      	str	r3, [sp, #32]
 801ecda:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ecdc:	bf08      	it	eq
 801ecde:	4613      	moveq	r3, r2
 801ece0:	9306      	str	r3, [sp, #24]
 801ece2:	e6e4      	b.n	801eaae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ece4:	2900      	cmp	r1, #0
 801ece6:	f43f af4e 	beq.w	801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ecea:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ecee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ecf2:	9309      	str	r3, [sp, #36]	; 0x24
 801ecf4:	e747      	b.n	801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ecf6:	f112 0a01 	adds.w	sl, r2, #1
 801ecfa:	d481      	bmi.n	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ecfc:	4553      	cmp	r3, sl
 801ecfe:	f6ff af7f 	blt.w	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ed02:	f11c 0a01 	adds.w	sl, ip, #1
 801ed06:	f53f af7b 	bmi.w	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ed0a:	45d6      	cmp	lr, sl
 801ed0c:	f6ff af78 	blt.w	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ed10:	b21b      	sxth	r3, r3
 801ed12:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ed16:	fa0f f28e 	sxth.w	r2, lr
 801ed1a:	9300      	str	r3, [sp, #0]
 801ed1c:	463b      	mov	r3, r7
 801ed1e:	9201      	str	r2, [sp, #4]
 801ed20:	9a07      	ldr	r2, [sp, #28]
 801ed22:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ed26:	4641      	mov	r1, r8
 801ed28:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ed2a:	f7ff fe21 	bl	801e970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ed2e:	e767      	b.n	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ed30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed32:	1422      	asrs	r2, r4, #16
 801ed34:	1431      	asrs	r1, r6, #16
 801ed36:	9d07      	ldr	r5, [sp, #28]
 801ed38:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ed3c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ed40:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ed44:	fb03 2101 	mla	r1, r3, r1, r2
 801ed48:	9a07      	ldr	r2, [sp, #28]
 801ed4a:	440a      	add	r2, r1
 801ed4c:	5c69      	ldrb	r1, [r5, r1]
 801ed4e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ed52:	f1be 0f00 	cmp.w	lr, #0
 801ed56:	d05c      	beq.n	801ee12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ed58:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ed5c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ed60:	950d      	str	r5, [sp, #52]	; 0x34
 801ed62:	b150      	cbz	r0, 801ed7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ed64:	eb02 0c03 	add.w	ip, r2, r3
 801ed68:	5cd3      	ldrb	r3, [r2, r3]
 801ed6a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed6e:	930a      	str	r3, [sp, #40]	; 0x28
 801ed70:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ed74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed78:	930e      	str	r3, [sp, #56]	; 0x38
 801ed7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed7c:	fb1e f200 	smulbb	r2, lr, r0
 801ed80:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed82:	f108 38ff 	add.w	r8, r8, #4294967295
 801ed86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ed8a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed8e:	10d2      	asrs	r2, r2, #3
 801ed90:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ed94:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed98:	ea4c 0c03 	orr.w	ip, ip, r3
 801ed9c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801eda0:	9311      	str	r3, [sp, #68]	; 0x44
 801eda2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eda4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eda6:	041b      	lsls	r3, r3, #16
 801eda8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801edac:	ea43 030b 	orr.w	r3, r3, fp
 801edb0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801edb4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801edb8:	4353      	muls	r3, r2
 801edba:	fb05 3c0c 	mla	ip, r5, ip, r3
 801edbe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801edc2:	ea43 0b01 	orr.w	fp, r3, r1
 801edc6:	f1c0 0110 	rsb	r1, r0, #16
 801edca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801edcc:	eba1 0e0e 	sub.w	lr, r1, lr
 801edd0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801edd4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801edd8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801eddc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ede0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ede4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ede8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801edec:	fb02 cc0e 	mla	ip, r2, lr, ip
 801edf0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801edf4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801edf8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801edfc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ee00:	ea43 0c0c 	orr.w	ip, r3, ip
 801ee04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ee06:	441c      	add	r4, r3
 801ee08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee0a:	f82a cb02 	strh.w	ip, [sl], #2
 801ee0e:	441e      	add	r6, r3
 801ee10:	e723      	b.n	801ec5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ee12:	2800      	cmp	r0, #0
 801ee14:	d0b1      	beq.n	801ed7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ee16:	5cd3      	ldrb	r3, [r2, r3]
 801ee18:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee1c:	930a      	str	r3, [sp, #40]	; 0x28
 801ee1e:	e7ac      	b.n	801ed7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ee20:	b013      	add	sp, #76	; 0x4c
 801ee22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ee26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee2a:	880d      	ldrh	r5, [r1, #0]
 801ee2c:	b087      	sub	sp, #28
 801ee2e:	10ef      	asrs	r7, r5, #3
 801ee30:	9103      	str	r1, [sp, #12]
 801ee32:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ee36:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801ee3a:	00ed      	lsls	r5, r5, #3
 801ee3c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ee40:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801ee44:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ee48:	b2ed      	uxtb	r5, r5
 801ee4a:	9701      	str	r7, [sp, #4]
 801ee4c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801ee50:	9502      	str	r5, [sp, #8]
 801ee52:	9d01      	ldr	r5, [sp, #4]
 801ee54:	9902      	ldr	r1, [sp, #8]
 801ee56:	022d      	lsls	r5, r5, #8
 801ee58:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801ee5c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801ee60:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ee64:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801ee68:	430d      	orrs	r5, r1
 801ee6a:	fb06 0709 	mla	r7, r6, r9, r0
 801ee6e:	2e00      	cmp	r6, #0
 801ee70:	9505      	str	r5, [sp, #20]
 801ee72:	eb02 0c07 	add.w	ip, r2, r7
 801ee76:	f2c0 80b6 	blt.w	801efe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ee7a:	45b3      	cmp	fp, r6
 801ee7c:	f340 80b3 	ble.w	801efe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ee80:	2800      	cmp	r0, #0
 801ee82:	f2c0 80ae 	blt.w	801efe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ee86:	4581      	cmp	r9, r0
 801ee88:	f340 80ab 	ble.w	801efe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ee8c:	5dd7      	ldrb	r7, [r2, r7]
 801ee8e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ee92:	441f      	add	r7, r3
 801ee94:	1c42      	adds	r2, r0, #1
 801ee96:	f100 80a9 	bmi.w	801efec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ee9a:	4591      	cmp	r9, r2
 801ee9c:	f340 80a6 	ble.w	801efec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801eea0:	2c00      	cmp	r4, #0
 801eea2:	f000 80a3 	beq.w	801efec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801eea6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801eeaa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801eeae:	441d      	add	r5, r3
 801eeb0:	3601      	adds	r6, #1
 801eeb2:	f100 809f 	bmi.w	801eff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801eeb6:	45b3      	cmp	fp, r6
 801eeb8:	f340 809c 	ble.w	801eff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801eebc:	f1be 0f00 	cmp.w	lr, #0
 801eec0:	f000 8098 	beq.w	801eff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801eec4:	2800      	cmp	r0, #0
 801eec6:	f2c0 8093 	blt.w	801eff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801eeca:	4581      	cmp	r9, r0
 801eecc:	f340 8090 	ble.w	801eff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801eed0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801eed4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801eed8:	441e      	add	r6, r3
 801eeda:	3001      	adds	r0, #1
 801eedc:	f100 808d 	bmi.w	801effa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801eee0:	4581      	cmp	r9, r0
 801eee2:	f340 808a 	ble.w	801effa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801eee6:	2c00      	cmp	r4, #0
 801eee8:	f000 8087 	beq.w	801effa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801eeec:	44e1      	add	r9, ip
 801eeee:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eef2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eef6:	4413      	add	r3, r2
 801eef8:	b2a4      	uxth	r4, r4
 801eefa:	f897 c002 	ldrb.w	ip, [r7, #2]
 801eefe:	fa1f fe8e 	uxth.w	lr, lr
 801ef02:	9901      	ldr	r1, [sp, #4]
 801ef04:	fb04 fb0e 	mul.w	fp, r4, lr
 801ef08:	0124      	lsls	r4, r4, #4
 801ef0a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801ef0e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801ef12:	eba4 040b 	sub.w	r4, r4, fp
 801ef16:	fa1f f08e 	uxth.w	r0, lr
 801ef1a:	b2a2      	uxth	r2, r4
 801ef1c:	78ac      	ldrb	r4, [r5, #2]
 801ef1e:	eba9 0900 	sub.w	r9, r9, r0
 801ef22:	fa1f fe88 	uxth.w	lr, r8
 801ef26:	4354      	muls	r4, r2
 801ef28:	ea6f 0808 	mvn.w	r8, r8
 801ef2c:	fa1f f989 	uxth.w	r9, r9
 801ef30:	fa5f f888 	uxtb.w	r8, r8
 801ef34:	fb09 440c 	mla	r4, r9, ip, r4
 801ef38:	f896 c002 	ldrb.w	ip, [r6, #2]
 801ef3c:	fb1a fa08 	smulbb	sl, sl, r8
 801ef40:	fb00 440c 	mla	r4, r0, ip, r4
 801ef44:	f893 c002 	ldrb.w	ip, [r3, #2]
 801ef48:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801ef4c:	787c      	ldrb	r4, [r7, #1]
 801ef4e:	783f      	ldrb	r7, [r7, #0]
 801ef50:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ef54:	fb0c ac0e 	mla	ip, ip, lr, sl
 801ef58:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ef5c:	782d      	ldrb	r5, [r5, #0]
 801ef5e:	fb02 fa0a 	mul.w	sl, r2, sl
 801ef62:	fa1f fc8c 	uxth.w	ip, ip
 801ef66:	436a      	muls	r2, r5
 801ef68:	7835      	ldrb	r5, [r6, #0]
 801ef6a:	fb09 aa04 	mla	sl, r9, r4, sl
 801ef6e:	7874      	ldrb	r4, [r6, #1]
 801ef70:	fb09 2207 	mla	r2, r9, r7, r2
 801ef74:	fb00 aa04 	mla	sl, r0, r4, sl
 801ef78:	785c      	ldrb	r4, [r3, #1]
 801ef7a:	fb00 2005 	mla	r0, r0, r5, r2
 801ef7e:	781b      	ldrb	r3, [r3, #0]
 801ef80:	fb0b a404 	mla	r4, fp, r4, sl
 801ef84:	fb11 fa08 	smulbb	sl, r1, r8
 801ef88:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ef8c:	9b02      	ldr	r3, [sp, #8]
 801ef8e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ef92:	fb13 f808 	smulbb	r8, r3, r8
 801ef96:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ef9a:	fb04 a40e 	mla	r4, r4, lr, sl
 801ef9e:	f10c 0301 	add.w	r3, ip, #1
 801efa2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801efa6:	b2a4      	uxth	r4, r4
 801efa8:	fa1f fe8e 	uxth.w	lr, lr
 801efac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801efb0:	f104 0a01 	add.w	sl, r4, #1
 801efb4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801efb8:	f10e 0c01 	add.w	ip, lr, #1
 801efbc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801efc0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801efc4:	0964      	lsrs	r4, r4, #5
 801efc6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801efca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801efce:	ea4c 0c03 	orr.w	ip, ip, r3
 801efd2:	9b03      	ldr	r3, [sp, #12]
 801efd4:	ea4c 0c04 	orr.w	ip, ip, r4
 801efd8:	f8a3 c000 	strh.w	ip, [r3]
 801efdc:	b007      	add	sp, #28
 801efde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efe2:	af05      	add	r7, sp, #20
 801efe4:	e756      	b.n	801ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801efe6:	ad05      	add	r5, sp, #20
 801efe8:	462f      	mov	r7, r5
 801efea:	e761      	b.n	801eeb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801efec:	ad05      	add	r5, sp, #20
 801efee:	e75f      	b.n	801eeb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801eff0:	ae05      	add	r6, sp, #20
 801eff2:	e772      	b.n	801eeda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801eff4:	ab05      	add	r3, sp, #20
 801eff6:	461e      	mov	r6, r3
 801eff8:	e77e      	b.n	801eef8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801effa:	ab05      	add	r3, sp, #20
 801effc:	e77c      	b.n	801eef8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801effe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801effe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f002:	b095      	sub	sp, #84	; 0x54
 801f004:	9212      	str	r2, [sp, #72]	; 0x48
 801f006:	9309      	str	r3, [sp, #36]	; 0x24
 801f008:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f00a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f00e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f010:	930f      	str	r3, [sp, #60]	; 0x3c
 801f012:	6850      	ldr	r0, [r2, #4]
 801f014:	910e      	str	r1, [sp, #56]	; 0x38
 801f016:	6812      	ldr	r2, [r2, #0]
 801f018:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f01c:	fb00 1303 	mla	r3, r0, r3, r1
 801f020:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f024:	930a      	str	r3, [sp, #40]	; 0x28
 801f026:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f028:	681b      	ldr	r3, [r3, #0]
 801f02a:	930d      	str	r3, [sp, #52]	; 0x34
 801f02c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f02e:	685c      	ldr	r4, [r3, #4]
 801f030:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f032:	3404      	adds	r4, #4
 801f034:	43db      	mvns	r3, r3
 801f036:	b2db      	uxtb	r3, r3
 801f038:	930b      	str	r3, [sp, #44]	; 0x2c
 801f03a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f03c:	2b00      	cmp	r3, #0
 801f03e:	dc03      	bgt.n	801f048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f040:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f042:	2b00      	cmp	r3, #0
 801f044:	f340 8255 	ble.w	801f4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f048:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f04a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f04e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f052:	1e48      	subs	r0, r1, #1
 801f054:	1e55      	subs	r5, r2, #1
 801f056:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f058:	2b00      	cmp	r3, #0
 801f05a:	f340 80f9 	ble.w	801f250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f05e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f060:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f062:	1436      	asrs	r6, r6, #16
 801f064:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f068:	d406      	bmi.n	801f078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f06a:	4286      	cmp	r6, r0
 801f06c:	da04      	bge.n	801f078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f06e:	2b00      	cmp	r3, #0
 801f070:	db02      	blt.n	801f078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f072:	42ab      	cmp	r3, r5
 801f074:	f2c0 80ed 	blt.w	801f252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f078:	3601      	adds	r6, #1
 801f07a:	f100 80da 	bmi.w	801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f07e:	42b1      	cmp	r1, r6
 801f080:	f2c0 80d7 	blt.w	801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f084:	3301      	adds	r3, #1
 801f086:	f100 80d4 	bmi.w	801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f08a:	429a      	cmp	r2, r3
 801f08c:	f2c0 80d1 	blt.w	801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f090:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f092:	9311      	str	r3, [sp, #68]	; 0x44
 801f094:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f096:	930c      	str	r3, [sp, #48]	; 0x30
 801f098:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f09a:	2b00      	cmp	r3, #0
 801f09c:	f340 80fa 	ble.w	801f294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f0a0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f0a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f0a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f0a6:	68c6      	ldr	r6, [r0, #12]
 801f0a8:	141d      	asrs	r5, r3, #16
 801f0aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f0ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f0b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f0b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f0b4:	1400      	asrs	r0, r0, #16
 801f0b6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f0ba:	6892      	ldr	r2, [r2, #8]
 801f0bc:	f100 813e 	bmi.w	801f33c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f0c0:	1e57      	subs	r7, r2, #1
 801f0c2:	42b8      	cmp	r0, r7
 801f0c4:	f280 813a 	bge.w	801f33c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f0c8:	2d00      	cmp	r5, #0
 801f0ca:	f2c0 8137 	blt.w	801f33c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f0ce:	1e77      	subs	r7, r6, #1
 801f0d0:	42bd      	cmp	r5, r7
 801f0d2:	f280 8133 	bge.w	801f33c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f0d6:	b212      	sxth	r2, r2
 801f0d8:	fb05 0002 	mla	r0, r5, r2, r0
 801f0dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f0de:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f0e2:	182e      	adds	r6, r5, r0
 801f0e4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f0e8:	eb04 050a 	add.w	r5, r4, sl
 801f0ec:	2b00      	cmp	r3, #0
 801f0ee:	f000 8117 	beq.w	801f320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f0f2:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f0f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f0fa:	44a4      	add	ip, r4
 801f0fc:	2900      	cmp	r1, #0
 801f0fe:	f000 8117 	beq.w	801f330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f102:	18b0      	adds	r0, r6, r2
 801f104:	5cb2      	ldrb	r2, [r6, r2]
 801f106:	7840      	ldrb	r0, [r0, #1]
 801f108:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f10c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f110:	4422      	add	r2, r4
 801f112:	4420      	add	r0, r4
 801f114:	b29b      	uxth	r3, r3
 801f116:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f11a:	b289      	uxth	r1, r1
 801f11c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f120:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f122:	fb03 f901 	mul.w	r9, r3, r1
 801f126:	011b      	lsls	r3, r3, #4
 801f128:	f8b6 e000 	ldrh.w	lr, [r6]
 801f12c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f130:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f134:	eba3 0309 	sub.w	r3, r3, r9
 801f138:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f13c:	b289      	uxth	r1, r1
 801f13e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f142:	b29b      	uxth	r3, r3
 801f144:	eba8 0801 	sub.w	r8, r8, r1
 801f148:	435f      	muls	r7, r3
 801f14a:	fa1f f888 	uxth.w	r8, r8
 801f14e:	9310      	str	r3, [sp, #64]	; 0x40
 801f150:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f152:	fb08 770b 	mla	r7, r8, fp, r7
 801f156:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f15a:	fb01 770b 	mla	r7, r1, fp, r7
 801f15e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f162:	fb09 770b 	mla	r7, r9, fp, r7
 801f166:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f16a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f16e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f172:	fb1b fb03 	smulbb	fp, fp, r3
 801f176:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f178:	fb07 b706 	mla	r7, r7, r6, fp
 801f17c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f180:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f184:	f89c c000 	ldrb.w	ip, [ip]
 801f188:	b2bf      	uxth	r7, r7
 801f18a:	435d      	muls	r5, r3
 801f18c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f18e:	fb08 550b 	mla	r5, r8, fp, r5
 801f192:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f196:	fb01 550b 	mla	r5, r1, fp, r5
 801f19a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f19e:	fb09 550b 	mla	r5, r9, fp, r5
 801f1a2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f1a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f1aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f1ae:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f1b2:	fa5f fe8e 	uxtb.w	lr, lr
 801f1b6:	fb1b fb03 	smulbb	fp, fp, r3
 801f1ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f1bc:	fb03 f30c 	mul.w	r3, r3, ip
 801f1c0:	f892 c000 	ldrb.w	ip, [r2]
 801f1c4:	fb05 b506 	mla	r5, r5, r6, fp
 801f1c8:	fb08 330a 	mla	r3, r8, sl, r3
 801f1cc:	b2ad      	uxth	r5, r5
 801f1ce:	fb01 330c 	mla	r3, r1, ip, r3
 801f1d2:	f890 c000 	ldrb.w	ip, [r0]
 801f1d6:	f105 0b01 	add.w	fp, r5, #1
 801f1da:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f1de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f1e0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f1e4:	fb1e fe03 	smulbb	lr, lr, r3
 801f1e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f1ec:	1c7b      	adds	r3, r7, #1
 801f1ee:	096d      	lsrs	r5, r5, #5
 801f1f0:	fb0c e606 	mla	r6, ip, r6, lr
 801f1f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f1f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f1fc:	b2b6      	uxth	r6, r6
 801f1fe:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f202:	1c77      	adds	r7, r6, #1
 801f204:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f208:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f20c:	431f      	orrs	r7, r3
 801f20e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f210:	433d      	orrs	r5, r7
 801f212:	801d      	strh	r5, [r3, #0]
 801f214:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f216:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f218:	3302      	adds	r3, #2
 801f21a:	930c      	str	r3, [sp, #48]	; 0x30
 801f21c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f21e:	4413      	add	r3, r2
 801f220:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f222:	931f      	str	r3, [sp, #124]	; 0x7c
 801f224:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f226:	4413      	add	r3, r2
 801f228:	9320      	str	r3, [sp, #128]	; 0x80
 801f22a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f22c:	3b01      	subs	r3, #1
 801f22e:	9311      	str	r3, [sp, #68]	; 0x44
 801f230:	e732      	b.n	801f098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f232:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f234:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f236:	4433      	add	r3, r6
 801f238:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f23a:	931f      	str	r3, [sp, #124]	; 0x7c
 801f23c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f23e:	4433      	add	r3, r6
 801f240:	9320      	str	r3, [sp, #128]	; 0x80
 801f242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f244:	3b01      	subs	r3, #1
 801f246:	9309      	str	r3, [sp, #36]	; 0x24
 801f248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f24a:	3302      	adds	r3, #2
 801f24c:	930a      	str	r3, [sp, #40]	; 0x28
 801f24e:	e702      	b.n	801f056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f250:	d027      	beq.n	801f2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f252:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f254:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f256:	3b01      	subs	r3, #1
 801f258:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f25a:	fb00 5003 	mla	r0, r0, r3, r5
 801f25e:	1400      	asrs	r0, r0, #16
 801f260:	f53f af16 	bmi.w	801f090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f264:	3901      	subs	r1, #1
 801f266:	4288      	cmp	r0, r1
 801f268:	f6bf af12 	bge.w	801f090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f26c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f26e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f270:	fb01 0303 	mla	r3, r1, r3, r0
 801f274:	141b      	asrs	r3, r3, #16
 801f276:	f53f af0b 	bmi.w	801f090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f27a:	3a01      	subs	r2, #1
 801f27c:	4293      	cmp	r3, r2
 801f27e:	f6bf af07 	bge.w	801f090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f284:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f288:	9311      	str	r3, [sp, #68]	; 0x44
 801f28a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f28c:	930c      	str	r3, [sp, #48]	; 0x30
 801f28e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f290:	2b00      	cmp	r3, #0
 801f292:	dc70      	bgt.n	801f376 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f296:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f298:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f29c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f2a0:	930a      	str	r3, [sp, #40]	; 0x28
 801f2a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f2a4:	2b00      	cmp	r3, #0
 801f2a6:	f340 8124 	ble.w	801f4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f2aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f2ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f2b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2b8:	eef0 6a62 	vmov.f32	s13, s5
 801f2bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f2cc:	eef0 6a43 	vmov.f32	s13, s6
 801f2d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2d4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f2d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f2e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f2e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f2ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2f0:	ee12 2a90 	vmov	r2, s5
 801f2f4:	eef0 2a47 	vmov.f32	s5, s14
 801f2f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2fc:	ee13 2a10 	vmov	r2, s6
 801f300:	9321      	str	r3, [sp, #132]	; 0x84
 801f302:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f304:	eeb0 3a67 	vmov.f32	s6, s15
 801f308:	fb92 f3f3 	sdiv	r3, r2, r3
 801f30c:	9322      	str	r3, [sp, #136]	; 0x88
 801f30e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f310:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f312:	3b01      	subs	r3, #1
 801f314:	930e      	str	r3, [sp, #56]	; 0x38
 801f316:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f318:	bf08      	it	eq
 801f31a:	4613      	moveq	r3, r2
 801f31c:	9309      	str	r3, [sp, #36]	; 0x24
 801f31e:	e68c      	b.n	801f03a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f320:	b149      	cbz	r1, 801f336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f322:	5cb2      	ldrb	r2, [r6, r2]
 801f324:	4628      	mov	r0, r5
 801f326:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f32a:	4422      	add	r2, r4
 801f32c:	46ac      	mov	ip, r5
 801f32e:	e6f1      	b.n	801f114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f330:	4628      	mov	r0, r5
 801f332:	462a      	mov	r2, r5
 801f334:	e6ee      	b.n	801f114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f336:	4628      	mov	r0, r5
 801f338:	462a      	mov	r2, r5
 801f33a:	e7f7      	b.n	801f32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f33c:	1c47      	adds	r7, r0, #1
 801f33e:	f53f af69 	bmi.w	801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f342:	42ba      	cmp	r2, r7
 801f344:	f6ff af66 	blt.w	801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f348:	1c6f      	adds	r7, r5, #1
 801f34a:	f53f af63 	bmi.w	801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f34e:	42be      	cmp	r6, r7
 801f350:	f6ff af60 	blt.w	801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f354:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f356:	b236      	sxth	r6, r6
 801f358:	b212      	sxth	r2, r2
 801f35a:	9002      	str	r0, [sp, #8]
 801f35c:	9601      	str	r6, [sp, #4]
 801f35e:	9200      	str	r2, [sp, #0]
 801f360:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f362:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f366:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f36a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f36e:	4623      	mov	r3, r4
 801f370:	f7ff fd59 	bl	801ee26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f374:	e74e      	b.n	801f214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f376:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f378:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f37a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f37e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f380:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f382:	1400      	asrs	r0, r0, #16
 801f384:	142d      	asrs	r5, r5, #16
 801f386:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f388:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f38c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f390:	fb02 5000 	mla	r0, r2, r0, r5
 801f394:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f396:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f39a:	182e      	adds	r6, r5, r0
 801f39c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f3a0:	eb04 0509 	add.w	r5, r4, r9
 801f3a4:	2b00      	cmp	r3, #0
 801f3a6:	f000 8096 	beq.w	801f4d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f3aa:	7877      	ldrb	r7, [r6, #1]
 801f3ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f3b0:	4427      	add	r7, r4
 801f3b2:	2900      	cmp	r1, #0
 801f3b4:	f000 8097 	beq.w	801f4e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f3b8:	18b0      	adds	r0, r6, r2
 801f3ba:	5cb2      	ldrb	r2, [r6, r2]
 801f3bc:	7840      	ldrb	r0, [r0, #1]
 801f3be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f3c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f3c6:	4422      	add	r2, r4
 801f3c8:	4420      	add	r0, r4
 801f3ca:	b29b      	uxth	r3, r3
 801f3cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f3ce:	b289      	uxth	r1, r1
 801f3d0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f3d4:	f8b6 c000 	ldrh.w	ip, [r6]
 801f3d8:	fb03 f801 	mul.w	r8, r3, r1
 801f3dc:	011b      	lsls	r3, r3, #4
 801f3de:	78be      	ldrb	r6, [r7, #2]
 801f3e0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f3e4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f3e8:	eba3 0308 	sub.w	r3, r3, r8
 801f3ec:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f3f0:	b289      	uxth	r1, r1
 801f3f2:	b29b      	uxth	r3, r3
 801f3f4:	ebae 0e01 	sub.w	lr, lr, r1
 801f3f8:	435e      	muls	r6, r3
 801f3fa:	fa1f fe8e 	uxth.w	lr, lr
 801f3fe:	9310      	str	r3, [sp, #64]	; 0x40
 801f400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f402:	fb0e 660b 	mla	r6, lr, fp, r6
 801f406:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f40a:	fb01 660b 	mla	r6, r1, fp, r6
 801f40e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f412:	fb08 660b 	mla	r6, r8, fp, r6
 801f416:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f41a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f41e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f422:	fb1b fb03 	smulbb	fp, fp, r3
 801f426:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f428:	fb06 b60a 	mla	r6, r6, sl, fp
 801f42c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f430:	787d      	ldrb	r5, [r7, #1]
 801f432:	783f      	ldrb	r7, [r7, #0]
 801f434:	b2b6      	uxth	r6, r6
 801f436:	435d      	muls	r5, r3
 801f438:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f43a:	fb0e 550b 	mla	r5, lr, fp, r5
 801f43e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f442:	fb01 550b 	mla	r5, r1, fp, r5
 801f446:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f44a:	fb08 550b 	mla	r5, r8, fp, r5
 801f44e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f452:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f456:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f45a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f45e:	fa5f fc8c 	uxtb.w	ip, ip
 801f462:	fb1b fb03 	smulbb	fp, fp, r3
 801f466:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f468:	437b      	muls	r3, r7
 801f46a:	7817      	ldrb	r7, [r2, #0]
 801f46c:	fb05 b50a 	mla	r5, r5, sl, fp
 801f470:	fb0e 3309 	mla	r3, lr, r9, r3
 801f474:	b2ad      	uxth	r5, r5
 801f476:	fb01 3307 	mla	r3, r1, r7, r3
 801f47a:	7807      	ldrb	r7, [r0, #0]
 801f47c:	f105 0b01 	add.w	fp, r5, #1
 801f480:	fb08 3707 	mla	r7, r8, r7, r3
 801f484:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f486:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f48a:	fb1c fc03 	smulbb	ip, ip, r3
 801f48e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f492:	1c73      	adds	r3, r6, #1
 801f494:	096d      	lsrs	r5, r5, #5
 801f496:	fb07 c70a 	mla	r7, r7, sl, ip
 801f49a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f49e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f4a2:	b2bf      	uxth	r7, r7
 801f4a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f4a6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f4aa:	1c7a      	adds	r2, r7, #1
 801f4ac:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f4b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f4b4:	4316      	orrs	r6, r2
 801f4b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f4b8:	432e      	orrs	r6, r5
 801f4ba:	f823 6b02 	strh.w	r6, [r3], #2
 801f4be:	930c      	str	r3, [sp, #48]	; 0x30
 801f4c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f4c2:	4413      	add	r3, r2
 801f4c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f4c6:	931f      	str	r3, [sp, #124]	; 0x7c
 801f4c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4ca:	4413      	add	r3, r2
 801f4cc:	9320      	str	r3, [sp, #128]	; 0x80
 801f4ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f4d0:	3b01      	subs	r3, #1
 801f4d2:	9311      	str	r3, [sp, #68]	; 0x44
 801f4d4:	e6db      	b.n	801f28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f4d6:	b149      	cbz	r1, 801f4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f4d8:	5cb2      	ldrb	r2, [r6, r2]
 801f4da:	4628      	mov	r0, r5
 801f4dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f4e0:	4422      	add	r2, r4
 801f4e2:	462f      	mov	r7, r5
 801f4e4:	e771      	b.n	801f3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f4e6:	4628      	mov	r0, r5
 801f4e8:	462a      	mov	r2, r5
 801f4ea:	e76e      	b.n	801f3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f4ec:	4628      	mov	r0, r5
 801f4ee:	462a      	mov	r2, r5
 801f4f0:	e7f7      	b.n	801f4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f4f2:	b015      	add	sp, #84	; 0x54
 801f4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f4f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f4f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4fc:	880f      	ldrh	r7, [r1, #0]
 801f4fe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f502:	023c      	lsls	r4, r7, #8
 801f504:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f508:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f50c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f510:	017c      	lsls	r4, r7, #5
 801f512:	00ff      	lsls	r7, r7, #3
 801f514:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f518:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f51c:	b2ff      	uxtb	r7, r7
 801f51e:	ea4b 0404 	orr.w	r4, fp, r4
 801f522:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f526:	4327      	orrs	r7, r4
 801f528:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f52c:	2d00      	cmp	r5, #0
 801f52e:	9701      	str	r7, [sp, #4]
 801f530:	eb02 080a 	add.w	r8, r2, sl
 801f534:	db7e      	blt.n	801f634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f536:	45a9      	cmp	r9, r5
 801f538:	dd7c      	ble.n	801f634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f53a:	f1bc 0f00 	cmp.w	ip, #0
 801f53e:	db77      	blt.n	801f630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f540:	45e6      	cmp	lr, ip
 801f542:	dd75      	ble.n	801f630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f544:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f548:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f54c:	441f      	add	r7, r3
 801f54e:	f11c 0201 	adds.w	r2, ip, #1
 801f552:	d472      	bmi.n	801f63a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f554:	4596      	cmp	lr, r2
 801f556:	dd70      	ble.n	801f63a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f558:	2800      	cmp	r0, #0
 801f55a:	d06e      	beq.n	801f63a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f55c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f560:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f564:	441c      	add	r4, r3
 801f566:	3501      	adds	r5, #1
 801f568:	d46b      	bmi.n	801f642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f56a:	45a9      	cmp	r9, r5
 801f56c:	dd69      	ble.n	801f642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f56e:	2e00      	cmp	r6, #0
 801f570:	d067      	beq.n	801f642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f572:	f1bc 0f00 	cmp.w	ip, #0
 801f576:	db62      	blt.n	801f63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f578:	45e6      	cmp	lr, ip
 801f57a:	dd60      	ble.n	801f63e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f57c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f580:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f584:	441d      	add	r5, r3
 801f586:	f11c 0201 	adds.w	r2, ip, #1
 801f58a:	d45d      	bmi.n	801f648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f58c:	4596      	cmp	lr, r2
 801f58e:	dd5b      	ble.n	801f648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f590:	2800      	cmp	r0, #0
 801f592:	d059      	beq.n	801f648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f594:	44c6      	add	lr, r8
 801f596:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f59a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f59e:	4413      	add	r3, r2
 801f5a0:	b280      	uxth	r0, r0
 801f5a2:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f5a6:	b2b2      	uxth	r2, r6
 801f5a8:	f897 9000 	ldrb.w	r9, [r7]
 801f5ac:	787f      	ldrb	r7, [r7, #1]
 801f5ae:	fb00 f602 	mul.w	r6, r0, r2
 801f5b2:	0100      	lsls	r0, r0, #4
 801f5b4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f5b8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f5bc:	1b80      	subs	r0, r0, r6
 801f5be:	fa1f fc82 	uxth.w	ip, r2
 801f5c2:	b282      	uxth	r2, r0
 801f5c4:	78a0      	ldrb	r0, [r4, #2]
 801f5c6:	eba8 080c 	sub.w	r8, r8, ip
 801f5ca:	4350      	muls	r0, r2
 801f5cc:	fa1f f888 	uxth.w	r8, r8
 801f5d0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f5d4:	78a8      	ldrb	r0, [r5, #2]
 801f5d6:	fb0c e000 	mla	r0, ip, r0, lr
 801f5da:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f5de:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f5e2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f5e6:	f894 e000 	ldrb.w	lr, [r4]
 801f5ea:	fb02 fe0e 	mul.w	lr, r2, lr
 801f5ee:	fb08 e909 	mla	r9, r8, r9, lr
 801f5f2:	f895 e000 	ldrb.w	lr, [r5]
 801f5f6:	fb0c 990e 	mla	r9, ip, lr, r9
 801f5fa:	f893 e000 	ldrb.w	lr, [r3]
 801f5fe:	785b      	ldrb	r3, [r3, #1]
 801f600:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f604:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f608:	ea4e 0e00 	orr.w	lr, lr, r0
 801f60c:	7860      	ldrb	r0, [r4, #1]
 801f60e:	4350      	muls	r0, r2
 801f610:	786a      	ldrb	r2, [r5, #1]
 801f612:	fb08 0007 	mla	r0, r8, r7, r0
 801f616:	fb0c 0202 	mla	r2, ip, r2, r0
 801f61a:	fb06 2303 	mla	r3, r6, r3, r2
 801f61e:	095b      	lsrs	r3, r3, #5
 801f620:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f624:	ea4e 0303 	orr.w	r3, lr, r3
 801f628:	800b      	strh	r3, [r1, #0]
 801f62a:	b003      	add	sp, #12
 801f62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f630:	af01      	add	r7, sp, #4
 801f632:	e78c      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f634:	ac01      	add	r4, sp, #4
 801f636:	4627      	mov	r7, r4
 801f638:	e795      	b.n	801f566 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f63a:	ac01      	add	r4, sp, #4
 801f63c:	e793      	b.n	801f566 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f63e:	ad01      	add	r5, sp, #4
 801f640:	e7a1      	b.n	801f586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f642:	ab01      	add	r3, sp, #4
 801f644:	461d      	mov	r5, r3
 801f646:	e7ab      	b.n	801f5a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f648:	ab01      	add	r3, sp, #4
 801f64a:	e7a9      	b.n	801f5a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f64c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f650:	b08f      	sub	sp, #60	; 0x3c
 801f652:	920c      	str	r2, [sp, #48]	; 0x30
 801f654:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f656:	900d      	str	r0, [sp, #52]	; 0x34
 801f658:	910a      	str	r1, [sp, #40]	; 0x28
 801f65a:	6850      	ldr	r0, [r2, #4]
 801f65c:	9306      	str	r3, [sp, #24]
 801f65e:	6812      	ldr	r2, [r2, #0]
 801f660:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f664:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f668:	fb00 1303 	mla	r3, r0, r3, r1
 801f66c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f670:	9307      	str	r3, [sp, #28]
 801f672:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f674:	681b      	ldr	r3, [r3, #0]
 801f676:	9308      	str	r3, [sp, #32]
 801f678:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f67a:	685c      	ldr	r4, [r3, #4]
 801f67c:	3404      	adds	r4, #4
 801f67e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f680:	2b00      	cmp	r3, #0
 801f682:	dc03      	bgt.n	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f684:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f686:	2b00      	cmp	r3, #0
 801f688:	f340 81d5 	ble.w	801fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f68c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f68e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f692:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f696:	1e48      	subs	r0, r1, #1
 801f698:	1e56      	subs	r6, r2, #1
 801f69a:	9b06      	ldr	r3, [sp, #24]
 801f69c:	2b00      	cmp	r3, #0
 801f69e:	f340 80b6 	ble.w	801f80e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f6a2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f6a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f6aa:	d406      	bmi.n	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f6ac:	4287      	cmp	r7, r0
 801f6ae:	da04      	bge.n	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f6b0:	2b00      	cmp	r3, #0
 801f6b2:	db02      	blt.n	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f6b4:	42b3      	cmp	r3, r6
 801f6b6:	f2c0 80ab 	blt.w	801f810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f6ba:	3701      	adds	r7, #1
 801f6bc:	f100 809c 	bmi.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f6c0:	42b9      	cmp	r1, r7
 801f6c2:	f2c0 8099 	blt.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f6c6:	3301      	adds	r3, #1
 801f6c8:	f100 8096 	bmi.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f6cc:	429a      	cmp	r2, r3
 801f6ce:	f2c0 8093 	blt.w	801f7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f6d2:	9b06      	ldr	r3, [sp, #24]
 801f6d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6d6:	9b07      	ldr	r3, [sp, #28]
 801f6d8:	9309      	str	r3, [sp, #36]	; 0x24
 801f6da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6dc:	2b00      	cmp	r3, #0
 801f6de:	f340 80b4 	ble.w	801f84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f6e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f6e4:	142e      	asrs	r6, r5, #16
 801f6e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f6e8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f6ec:	68c7      	ldr	r7, [r0, #12]
 801f6ee:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f6f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f6f6:	6892      	ldr	r2, [r2, #8]
 801f6f8:	f100 80fb 	bmi.w	801f8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f6fc:	f102 3cff 	add.w	ip, r2, #4294967295
 801f700:	4560      	cmp	r0, ip
 801f702:	f280 80f6 	bge.w	801f8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f706:	2e00      	cmp	r6, #0
 801f708:	f2c0 80f3 	blt.w	801f8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f70c:	f107 3cff 	add.w	ip, r7, #4294967295
 801f710:	4566      	cmp	r6, ip
 801f712:	f280 80ee 	bge.w	801f8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f716:	b212      	sxth	r2, r2
 801f718:	fb06 0002 	mla	r0, r6, r2, r0
 801f71c:	9e08      	ldr	r6, [sp, #32]
 801f71e:	1837      	adds	r7, r6, r0
 801f720:	5c30      	ldrb	r0, [r6, r0]
 801f722:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f726:	eb04 0c08 	add.w	ip, r4, r8
 801f72a:	2b00      	cmp	r3, #0
 801f72c:	f000 80d3 	beq.w	801f8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f730:	787e      	ldrb	r6, [r7, #1]
 801f732:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f736:	4426      	add	r6, r4
 801f738:	2900      	cmp	r1, #0
 801f73a:	f000 80d4 	beq.w	801f8e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801f73e:	18b8      	adds	r0, r7, r2
 801f740:	5cba      	ldrb	r2, [r7, r2]
 801f742:	7840      	ldrb	r0, [r0, #1]
 801f744:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f748:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f74c:	4422      	add	r2, r4
 801f74e:	4420      	add	r0, r4
 801f750:	b29b      	uxth	r3, r3
 801f752:	78b7      	ldrb	r7, [r6, #2]
 801f754:	b289      	uxth	r1, r1
 801f756:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f75a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f75e:	fb03 f901 	mul.w	r9, r3, r1
 801f762:	011b      	lsls	r3, r3, #4
 801f764:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f768:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f76c:	eba3 0309 	sub.w	r3, r3, r9
 801f770:	b289      	uxth	r1, r1
 801f772:	b29b      	uxth	r3, r3
 801f774:	ebae 0e01 	sub.w	lr, lr, r1
 801f778:	435f      	muls	r7, r3
 801f77a:	fa1f fe8e 	uxth.w	lr, lr
 801f77e:	fb0e 770a 	mla	r7, lr, sl, r7
 801f782:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f786:	fb01 770a 	mla	r7, r1, sl, r7
 801f78a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f78e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f792:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f796:	f896 8000 	ldrb.w	r8, [r6]
 801f79a:	7876      	ldrb	r6, [r6, #1]
 801f79c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f7a0:	fb03 f808 	mul.w	r8, r3, r8
 801f7a4:	4373      	muls	r3, r6
 801f7a6:	fb0e 8807 	mla	r8, lr, r7, r8
 801f7aa:	7817      	ldrb	r7, [r2, #0]
 801f7ac:	fb0e 330c 	mla	r3, lr, ip, r3
 801f7b0:	fb01 8807 	mla	r8, r1, r7, r8
 801f7b4:	7807      	ldrb	r7, [r0, #0]
 801f7b6:	fb09 8707 	mla	r7, r9, r7, r8
 801f7ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f7be:	ea47 070a 	orr.w	r7, r7, sl
 801f7c2:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f7c6:	fb01 310a 	mla	r1, r1, sl, r3
 801f7ca:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f7ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7d0:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f7d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f7d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f7dc:	ea47 070a 	orr.w	r7, r7, sl
 801f7e0:	801f      	strh	r7, [r3, #0]
 801f7e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7e4:	3302      	adds	r3, #2
 801f7e6:	9309      	str	r3, [sp, #36]	; 0x24
 801f7e8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f7ea:	449b      	add	fp, r3
 801f7ec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f7ee:	441d      	add	r5, r3
 801f7f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7f2:	3b01      	subs	r3, #1
 801f7f4:	930b      	str	r3, [sp, #44]	; 0x2c
 801f7f6:	e770      	b.n	801f6da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f7f8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f7fa:	449b      	add	fp, r3
 801f7fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f7fe:	441d      	add	r5, r3
 801f800:	9b06      	ldr	r3, [sp, #24]
 801f802:	3b01      	subs	r3, #1
 801f804:	9306      	str	r3, [sp, #24]
 801f806:	9b07      	ldr	r3, [sp, #28]
 801f808:	3302      	adds	r3, #2
 801f80a:	9307      	str	r3, [sp, #28]
 801f80c:	e745      	b.n	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f80e:	d023      	beq.n	801f858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801f810:	9b06      	ldr	r3, [sp, #24]
 801f812:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f814:	3b01      	subs	r3, #1
 801f816:	fb00 b003 	mla	r0, r0, r3, fp
 801f81a:	1400      	asrs	r0, r0, #16
 801f81c:	f53f af59 	bmi.w	801f6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f820:	3901      	subs	r1, #1
 801f822:	4288      	cmp	r0, r1
 801f824:	f6bf af55 	bge.w	801f6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f828:	991c      	ldr	r1, [sp, #112]	; 0x70
 801f82a:	fb01 5303 	mla	r3, r1, r3, r5
 801f82e:	141b      	asrs	r3, r3, #16
 801f830:	f53f af4f 	bmi.w	801f6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f834:	3a01      	subs	r2, #1
 801f836:	4293      	cmp	r3, r2
 801f838:	f6bf af4b 	bge.w	801f6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f83c:	9b06      	ldr	r3, [sp, #24]
 801f83e:	9309      	str	r3, [sp, #36]	; 0x24
 801f840:	9b07      	ldr	r3, [sp, #28]
 801f842:	930b      	str	r3, [sp, #44]	; 0x2c
 801f844:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f846:	2b00      	cmp	r3, #0
 801f848:	dc70      	bgt.n	801f92c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f84a:	9b06      	ldr	r3, [sp, #24]
 801f84c:	9a07      	ldr	r2, [sp, #28]
 801f84e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f852:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f856:	9307      	str	r3, [sp, #28]
 801f858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f85a:	2b00      	cmp	r3, #0
 801f85c:	f340 80eb 	ble.w	801fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f860:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f864:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f866:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f86a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f86e:	eef0 6a62 	vmov.f32	s13, s5
 801f872:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f876:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f87a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f87e:	ee16 ba90 	vmov	fp, s13
 801f882:	eef0 6a43 	vmov.f32	s13, s6
 801f886:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f88a:	ee16 5a90 	vmov	r5, s13
 801f88e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f892:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f896:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f89a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f89e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f8a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f8a6:	ee12 2a90 	vmov	r2, s5
 801f8aa:	eef0 2a47 	vmov.f32	s5, s14
 801f8ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801f8b2:	ee13 2a10 	vmov	r2, s6
 801f8b6:	931b      	str	r3, [sp, #108]	; 0x6c
 801f8b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f8ba:	eeb0 3a67 	vmov.f32	s6, s15
 801f8be:	fb92 f3f3 	sdiv	r3, r2, r3
 801f8c2:	931c      	str	r3, [sp, #112]	; 0x70
 801f8c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f8c8:	3b01      	subs	r3, #1
 801f8ca:	930a      	str	r3, [sp, #40]	; 0x28
 801f8cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f8ce:	bf08      	it	eq
 801f8d0:	4613      	moveq	r3, r2
 801f8d2:	9306      	str	r3, [sp, #24]
 801f8d4:	e6d3      	b.n	801f67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f8d6:	b149      	cbz	r1, 801f8ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f8d8:	5cba      	ldrb	r2, [r7, r2]
 801f8da:	4660      	mov	r0, ip
 801f8dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8e0:	4422      	add	r2, r4
 801f8e2:	4666      	mov	r6, ip
 801f8e4:	e734      	b.n	801f750 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801f8e6:	4660      	mov	r0, ip
 801f8e8:	4662      	mov	r2, ip
 801f8ea:	e731      	b.n	801f750 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801f8ec:	4660      	mov	r0, ip
 801f8ee:	4662      	mov	r2, ip
 801f8f0:	e7f7      	b.n	801f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f8f2:	f110 0c01 	adds.w	ip, r0, #1
 801f8f6:	f53f af74 	bmi.w	801f7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f8fa:	4562      	cmp	r2, ip
 801f8fc:	f6ff af71 	blt.w	801f7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f900:	f116 0c01 	adds.w	ip, r6, #1
 801f904:	f53f af6d 	bmi.w	801f7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f908:	4567      	cmp	r7, ip
 801f90a:	f6ff af6a 	blt.w	801f7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f90e:	b23f      	sxth	r7, r7
 801f910:	b212      	sxth	r2, r2
 801f912:	9701      	str	r7, [sp, #4]
 801f914:	9200      	str	r2, [sp, #0]
 801f916:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801f91a:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801f91e:	4623      	mov	r3, r4
 801f920:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f922:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f926:	f7ff fde7 	bl	801f4f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801f92a:	e75a      	b.n	801f7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f92c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f92e:	ea4f 462b 	mov.w	r6, fp, asr #16
 801f932:	1428      	asrs	r0, r5, #16
 801f934:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f938:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f93c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f940:	fb02 6000 	mla	r0, r2, r0, r6
 801f944:	9e08      	ldr	r6, [sp, #32]
 801f946:	f816 8000 	ldrb.w	r8, [r6, r0]
 801f94a:	1837      	adds	r7, r6, r0
 801f94c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f950:	eb04 0c08 	add.w	ip, r4, r8
 801f954:	2b00      	cmp	r3, #0
 801f956:	d060      	beq.n	801fa1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801f958:	787e      	ldrb	r6, [r7, #1]
 801f95a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f95e:	4426      	add	r6, r4
 801f960:	2900      	cmp	r1, #0
 801f962:	d062      	beq.n	801fa2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801f964:	18b8      	adds	r0, r7, r2
 801f966:	5cba      	ldrb	r2, [r7, r2]
 801f968:	7840      	ldrb	r0, [r0, #1]
 801f96a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f96e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f972:	4422      	add	r2, r4
 801f974:	4420      	add	r0, r4
 801f976:	b29b      	uxth	r3, r3
 801f978:	78b7      	ldrb	r7, [r6, #2]
 801f97a:	b289      	uxth	r1, r1
 801f97c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f980:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f984:	fb03 f901 	mul.w	r9, r3, r1
 801f988:	011b      	lsls	r3, r3, #4
 801f98a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f98e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f992:	eba3 0309 	sub.w	r3, r3, r9
 801f996:	b289      	uxth	r1, r1
 801f998:	b29b      	uxth	r3, r3
 801f99a:	ebae 0e01 	sub.w	lr, lr, r1
 801f99e:	435f      	muls	r7, r3
 801f9a0:	fa1f fe8e 	uxth.w	lr, lr
 801f9a4:	fb0e 770a 	mla	r7, lr, sl, r7
 801f9a8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f9ac:	fb01 770a 	mla	r7, r1, sl, r7
 801f9b0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f9b4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f9b8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f9bc:	f896 8000 	ldrb.w	r8, [r6]
 801f9c0:	7876      	ldrb	r6, [r6, #1]
 801f9c2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f9c6:	fb03 f808 	mul.w	r8, r3, r8
 801f9ca:	4373      	muls	r3, r6
 801f9cc:	7856      	ldrb	r6, [r2, #1]
 801f9ce:	fb0e 8807 	mla	r8, lr, r7, r8
 801f9d2:	7817      	ldrb	r7, [r2, #0]
 801f9d4:	fb0e 330c 	mla	r3, lr, ip, r3
 801f9d8:	fb01 8807 	mla	r8, r1, r7, r8
 801f9dc:	7807      	ldrb	r7, [r0, #0]
 801f9de:	fb01 3306 	mla	r3, r1, r6, r3
 801f9e2:	fb09 8707 	mla	r7, r9, r7, r8
 801f9e6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f9ea:	ea47 070a 	orr.w	r7, r7, sl
 801f9ee:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f9f2:	fb09 3a0a 	mla	sl, r9, sl, r3
 801f9f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f9f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f9fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fa00:	ea47 070a 	orr.w	r7, r7, sl
 801fa04:	f823 7b02 	strh.w	r7, [r3], #2
 801fa08:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fa0c:	449b      	add	fp, r3
 801fa0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa10:	441d      	add	r5, r3
 801fa12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa14:	3b01      	subs	r3, #1
 801fa16:	9309      	str	r3, [sp, #36]	; 0x24
 801fa18:	e714      	b.n	801f844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801fa1a:	b149      	cbz	r1, 801fa30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801fa1c:	5cba      	ldrb	r2, [r7, r2]
 801fa1e:	4660      	mov	r0, ip
 801fa20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa24:	4422      	add	r2, r4
 801fa26:	4666      	mov	r6, ip
 801fa28:	e7a5      	b.n	801f976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801fa2a:	4660      	mov	r0, ip
 801fa2c:	4662      	mov	r2, ip
 801fa2e:	e7a2      	b.n	801f976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801fa30:	4660      	mov	r0, ip
 801fa32:	4662      	mov	r2, ip
 801fa34:	e7f7      	b.n	801fa26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801fa36:	b00f      	add	sp, #60	; 0x3c
 801fa38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fa3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa40:	b085      	sub	sp, #20
 801fa42:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fa46:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fa4a:	9102      	str	r1, [sp, #8]
 801fa4c:	2c00      	cmp	r4, #0
 801fa4e:	fb04 710c 	mla	r1, r4, ip, r7
 801fa52:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fa56:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fa5a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fa5e:	eb02 0e01 	add.w	lr, r2, r1
 801fa62:	f2c0 8122 	blt.w	801fcaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fa66:	45a0      	cmp	r8, r4
 801fa68:	f340 811f 	ble.w	801fcaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fa6c:	2f00      	cmp	r7, #0
 801fa6e:	f2c0 811a 	blt.w	801fca6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fa72:	45bc      	cmp	ip, r7
 801fa74:	f340 8117 	ble.w	801fca6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fa78:	5c52      	ldrb	r2, [r2, r1]
 801fa7a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fa7e:	1c7a      	adds	r2, r7, #1
 801fa80:	f100 8116 	bmi.w	801fcb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fa84:	4594      	cmp	ip, r2
 801fa86:	f340 8113 	ble.w	801fcb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fa8a:	2e00      	cmp	r6, #0
 801fa8c:	f000 8112 	beq.w	801fcb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fa90:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fa94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fa98:	3401      	adds	r4, #1
 801fa9a:	f100 810f 	bmi.w	801fcbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fa9e:	45a0      	cmp	r8, r4
 801faa0:	f340 810c 	ble.w	801fcbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801faa4:	2800      	cmp	r0, #0
 801faa6:	f000 810c 	beq.w	801fcc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801faaa:	2f00      	cmp	r7, #0
 801faac:	f2c0 8104 	blt.w	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fab0:	45bc      	cmp	ip, r7
 801fab2:	f340 8101 	ble.w	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fab6:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801faba:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fabe:	3701      	adds	r7, #1
 801fac0:	f100 8102 	bmi.w	801fcc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fac4:	45bc      	cmp	ip, r7
 801fac6:	f340 80ff 	ble.w	801fcc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801faca:	2e00      	cmp	r6, #0
 801facc:	f000 80fe 	beq.w	801fccc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fad0:	44f4      	add	ip, lr
 801fad2:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fad6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fada:	b2b6      	uxth	r6, r6
 801fadc:	b280      	uxth	r0, r0
 801fade:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fae2:	fb00 fe06 	mul.w	lr, r0, r6
 801fae6:	0136      	lsls	r6, r6, #4
 801fae8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801faec:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801faf0:	eba6 070e 	sub.w	r7, r6, lr
 801faf4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801faf8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fafc:	b280      	uxth	r0, r0
 801fafe:	b2bf      	uxth	r7, r7
 801fb00:	1a1b      	subs	r3, r3, r0
 801fb02:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fb06:	fb0a f607 	mul.w	r6, sl, r7
 801fb0a:	b29b      	uxth	r3, r3
 801fb0c:	fb0b 6603 	mla	r6, fp, r3, r6
 801fb10:	fb00 6609 	mla	r6, r0, r9, r6
 801fb14:	fb0e 6608 	mla	r6, lr, r8, r6
 801fb18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fb1c:	9600      	str	r6, [sp, #0]
 801fb1e:	2e00      	cmp	r6, #0
 801fb20:	f000 80be 	beq.w	801fca0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fb24:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fb28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fb2c:	9e02      	ldr	r6, [sp, #8]
 801fb2e:	fb0b fc0c 	mul.w	ip, fp, ip
 801fb32:	fb0b f505 	mul.w	r5, fp, r5
 801fb36:	8836      	ldrh	r6, [r6, #0]
 801fb38:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fb3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fb40:	9501      	str	r5, [sp, #4]
 801fb42:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fb46:	44dc      	add	ip, fp
 801fb48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb4c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fb50:	9503      	str	r5, [sp, #12]
 801fb52:	9d01      	ldr	r5, [sp, #4]
 801fb54:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fb58:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fb5c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fb60:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fb64:	fb0a fc0c 	mul.w	ip, sl, ip
 801fb68:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fb6c:	fb0a fa01 	mul.w	sl, sl, r1
 801fb70:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fb74:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fb78:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fb7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fb80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fb84:	4465      	add	r5, ip
 801fb86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fb8a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fb8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fb92:	fb09 fc0c 	mul.w	ip, r9, ip
 801fb96:	0a2d      	lsrs	r5, r5, #8
 801fb98:	fb09 f904 	mul.w	r9, r9, r4
 801fb9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fba0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fba4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fba8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fbac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fbb0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fbb4:	437d      	muls	r5, r7
 801fbb6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fbba:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fbbe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fbc2:	4461      	add	r1, ip
 801fbc4:	fb08 f404 	mul.w	r4, r8, r4
 801fbc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fbcc:	fb08 f802 	mul.w	r8, r8, r2
 801fbd0:	0a09      	lsrs	r1, r1, #8
 801fbd2:	0a22      	lsrs	r2, r4, #8
 801fbd4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fbd8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fbdc:	fb07 f70a 	mul.w	r7, r7, sl
 801fbe0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fbe4:	4414      	add	r4, r2
 801fbe6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fbea:	0a24      	lsrs	r4, r4, #8
 801fbec:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fbf0:	9a03      	ldr	r2, [sp, #12]
 801fbf2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fbf6:	fb02 5503 	mla	r5, r2, r3, r5
 801fbfa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fbfe:	9a00      	ldr	r2, [sp, #0]
 801fc00:	fb04 540e 	mla	r4, r4, lr, r5
 801fc04:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fc08:	1235      	asrs	r5, r6, #8
 801fc0a:	fb01 4100 	mla	r1, r1, r0, r4
 801fc0e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fc12:	0a09      	lsrs	r1, r1, #8
 801fc14:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801fc18:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fc1c:	fb03 7101 	mla	r1, r3, r1, r7
 801fc20:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fc24:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801fc28:	fb00 e101 	mla	r1, r0, r1, lr
 801fc2c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fc30:	b287      	uxth	r7, r0
 801fc32:	0a09      	lsrs	r1, r1, #8
 801fc34:	437a      	muls	r2, r7
 801fc36:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fc3a:	1c53      	adds	r3, r2, #1
 801fc3c:	4321      	orrs	r1, r4
 801fc3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc42:	0c0a      	lsrs	r2, r1, #16
 801fc44:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fc48:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fc4c:	b2c8      	uxtb	r0, r1
 801fc4e:	fb12 f207 	smulbb	r2, r2, r7
 801fc52:	fb14 f407 	smulbb	r4, r4, r7
 801fc56:	b2db      	uxtb	r3, r3
 801fc58:	fb10 f007 	smulbb	r0, r0, r7
 801fc5c:	fb05 2503 	mla	r5, r5, r3, r2
 801fc60:	10f2      	asrs	r2, r6, #3
 801fc62:	00f6      	lsls	r6, r6, #3
 801fc64:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc68:	b2ad      	uxth	r5, r5
 801fc6a:	b2f6      	uxtb	r6, r6
 801fc6c:	fb02 4203 	mla	r2, r2, r3, r4
 801fc70:	fb06 0303 	mla	r3, r6, r3, r0
 801fc74:	b294      	uxth	r4, r2
 801fc76:	b299      	uxth	r1, r3
 801fc78:	1c6b      	adds	r3, r5, #1
 801fc7a:	1c62      	adds	r2, r4, #1
 801fc7c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fc80:	1c4b      	adds	r3, r1, #1
 801fc82:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fc86:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fc8a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fc8e:	0952      	lsrs	r2, r2, #5
 801fc90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc98:	432b      	orrs	r3, r5
 801fc9a:	4313      	orrs	r3, r2
 801fc9c:	9a02      	ldr	r2, [sp, #8]
 801fc9e:	8013      	strh	r3, [r2, #0]
 801fca0:	b005      	add	sp, #20
 801fca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fca6:	2500      	movs	r5, #0
 801fca8:	e6e9      	b.n	801fa7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fcaa:	2100      	movs	r1, #0
 801fcac:	460d      	mov	r5, r1
 801fcae:	e6f3      	b.n	801fa98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fcb0:	2100      	movs	r1, #0
 801fcb2:	e6f1      	b.n	801fa98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fcb4:	4631      	mov	r1, r6
 801fcb6:	e6ef      	b.n	801fa98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fcb8:	2400      	movs	r4, #0
 801fcba:	e700      	b.n	801fabe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fcbc:	2200      	movs	r2, #0
 801fcbe:	4614      	mov	r4, r2
 801fcc0:	e70b      	b.n	801fada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fcc2:	4602      	mov	r2, r0
 801fcc4:	4604      	mov	r4, r0
 801fcc6:	e708      	b.n	801fada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fcc8:	2200      	movs	r2, #0
 801fcca:	e706      	b.n	801fada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fccc:	4632      	mov	r2, r6
 801fcce:	e704      	b.n	801fada <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fcd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fcd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcd4:	b09f      	sub	sp, #124	; 0x7c
 801fcd6:	921b      	str	r2, [sp, #108]	; 0x6c
 801fcd8:	9309      	str	r3, [sp, #36]	; 0x24
 801fcda:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801fcdc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801fce0:	901d      	str	r0, [sp, #116]	; 0x74
 801fce2:	931c      	str	r3, [sp, #112]	; 0x70
 801fce4:	6850      	ldr	r0, [r2, #4]
 801fce6:	9119      	str	r1, [sp, #100]	; 0x64
 801fce8:	6812      	ldr	r2, [r2, #0]
 801fcea:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801fcec:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801fcf0:	fb00 1303 	mla	r3, r0, r3, r1
 801fcf4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fcf8:	930c      	str	r3, [sp, #48]	; 0x30
 801fcfa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fcfc:	681b      	ldr	r3, [r3, #0]
 801fcfe:	9312      	str	r3, [sp, #72]	; 0x48
 801fd00:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fd02:	685e      	ldr	r6, [r3, #4]
 801fd04:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801fd08:	3604      	adds	r6, #4
 801fd0a:	930d      	str	r3, [sp, #52]	; 0x34
 801fd0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801fd0e:	2b00      	cmp	r3, #0
 801fd10:	dc03      	bgt.n	801fd1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fd12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd14:	2b00      	cmp	r3, #0
 801fd16:	f340 8387 	ble.w	8020428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801fd1a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fd1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd24:	1e48      	subs	r0, r1, #1
 801fd26:	1e57      	subs	r7, r2, #1
 801fd28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd2a:	2b00      	cmp	r3, #0
 801fd2c:	f340 8194 	ble.w	8020058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801fd30:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801fd32:	142b      	asrs	r3, r5, #16
 801fd34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fd38:	d406      	bmi.n	801fd48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd3a:	4584      	cmp	ip, r0
 801fd3c:	da04      	bge.n	801fd48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd3e:	2b00      	cmp	r3, #0
 801fd40:	db02      	blt.n	801fd48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fd42:	42bb      	cmp	r3, r7
 801fd44:	f2c0 8189 	blt.w	802005a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fd48:	f11c 0c01 	adds.w	ip, ip, #1
 801fd4c:	f100 8177 	bmi.w	802003e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fd50:	4561      	cmp	r1, ip
 801fd52:	f2c0 8174 	blt.w	802003e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fd56:	3301      	adds	r3, #1
 801fd58:	f100 8171 	bmi.w	802003e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fd5c:	429a      	cmp	r2, r3
 801fd5e:	f2c0 816e 	blt.w	802003e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fd62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd64:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fd66:	931a      	str	r3, [sp, #104]	; 0x68
 801fd68:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801fd6a:	2b00      	cmp	r3, #0
 801fd6c:	f340 8193 	ble.w	8020096 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801fd70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fd72:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fd76:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd7a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fd7e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fd80:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801fd84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fd86:	141b      	asrs	r3, r3, #16
 801fd88:	f100 81d6 	bmi.w	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fd8c:	f100 38ff 	add.w	r8, r0, #4294967295
 801fd90:	4543      	cmp	r3, r8
 801fd92:	f280 81d1 	bge.w	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fd96:	f1bc 0f00 	cmp.w	ip, #0
 801fd9a:	f2c0 81cd 	blt.w	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fd9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fda2:	45c4      	cmp	ip, r8
 801fda4:	f280 81c8 	bge.w	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fda8:	b200      	sxth	r0, r0
 801fdaa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fdac:	fb0c 3300 	mla	r3, ip, r0, r3
 801fdb0:	eb04 0803 	add.w	r8, r4, r3
 801fdb4:	5ce3      	ldrb	r3, [r4, r3]
 801fdb6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fdba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801fdbe:	2a00      	cmp	r2, #0
 801fdc0:	f000 81af 	beq.w	8020122 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801fdc4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801fdc8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801fdcc:	940e      	str	r4, [sp, #56]	; 0x38
 801fdce:	0e24      	lsrs	r4, r4, #24
 801fdd0:	9415      	str	r4, [sp, #84]	; 0x54
 801fdd2:	b179      	cbz	r1, 801fdf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801fdd4:	eb08 0c00 	add.w	ip, r8, r0
 801fdd8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801fddc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fde0:	900a      	str	r0, [sp, #40]	; 0x28
 801fde2:	0e00      	lsrs	r0, r0, #24
 801fde4:	9013      	str	r0, [sp, #76]	; 0x4c
 801fde6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801fdea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fdee:	900f      	str	r0, [sp, #60]	; 0x3c
 801fdf0:	0e00      	lsrs	r0, r0, #24
 801fdf2:	9016      	str	r0, [sp, #88]	; 0x58
 801fdf4:	b292      	uxth	r2, r2
 801fdf6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801fdf8:	b289      	uxth	r1, r1
 801fdfa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fdfc:	fb02 f901 	mul.w	r9, r2, r1
 801fe00:	0112      	lsls	r2, r2, #4
 801fe02:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fe06:	eba2 0809 	sub.w	r8, r2, r9
 801fe0a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801fe0e:	b289      	uxth	r1, r1
 801fe10:	fa1f f888 	uxth.w	r8, r8
 801fe14:	1a52      	subs	r2, r2, r1
 801fe16:	fb08 f000 	mul.w	r0, r8, r0
 801fe1a:	b292      	uxth	r2, r2
 801fe1c:	fb02 000e 	mla	r0, r2, lr, r0
 801fe20:	fb01 0004 	mla	r0, r1, r4, r0
 801fe24:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fe26:	fb09 0004 	mla	r0, r9, r4, r0
 801fe2a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fe2e:	2800      	cmp	r0, #0
 801fe30:	f000 80fa 	beq.w	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fe34:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801fe38:	d01b      	beq.n	801fe72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fe3a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fe3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fe42:	fb0e fa0a 	mul.w	sl, lr, sl
 801fe46:	fb0e fe03 	mul.w	lr, lr, r3
 801fe4a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fe4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fe52:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801fe56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fe5a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fe5e:	4453      	add	r3, sl
 801fe60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe64:	0a1b      	lsrs	r3, r3, #8
 801fe66:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fe6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fe6e:	ea43 030c 	orr.w	r3, r3, ip
 801fe72:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe74:	2cff      	cmp	r4, #255	; 0xff
 801fe76:	d021      	beq.n	801febc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801fe78:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe7a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fe7e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe80:	fb04 fb0b 	mul.w	fp, r4, fp
 801fe84:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe86:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fe8a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fe90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fe94:	fb04 fa0a 	mul.w	sl, r4, sl
 801fe98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fe9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fea0:	44de      	add	lr, fp
 801fea2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fea6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801feaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801feae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801feb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801feb6:	ea4e 040a 	orr.w	r4, lr, sl
 801feba:	940e      	str	r4, [sp, #56]	; 0x38
 801febc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801febe:	2cff      	cmp	r4, #255	; 0xff
 801fec0:	d021      	beq.n	801ff06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801fec2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fec4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fec8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801feca:	fb04 fb0b 	mul.w	fp, r4, fp
 801fece:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fed0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fed4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fed6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801feda:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fede:	fb04 fa0a 	mul.w	sl, r4, sl
 801fee2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fee6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801feea:	44de      	add	lr, fp
 801feec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fef0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fef4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fef8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fefc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ff00:	ea4e 040a 	orr.w	r4, lr, sl
 801ff04:	940a      	str	r4, [sp, #40]	; 0x28
 801ff06:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ff08:	2cff      	cmp	r4, #255	; 0xff
 801ff0a:	d021      	beq.n	801ff50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801ff0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ff0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ff12:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ff14:	fb04 fb0b 	mul.w	fp, r4, fp
 801ff18:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ff1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ff1e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ff20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ff24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ff28:	fb04 fa0a 	mul.w	sl, r4, sl
 801ff2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ff30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ff34:	44de      	add	lr, fp
 801ff36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ff3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ff3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ff42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ff46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ff4a:	ea4e 040a 	orr.w	r4, lr, sl
 801ff4e:	940f      	str	r4, [sp, #60]	; 0x3c
 801ff50:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ff52:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ff56:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ff5a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ff5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ff60:	fb08 fc0c 	mul.w	ip, r8, ip
 801ff64:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ff68:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ff6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ff6e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ff72:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ff76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ff78:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ff7c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ff80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ff82:	fb08 f80e 	mul.w	r8, r8, lr
 801ff86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff8a:	fb02 8303 	mla	r3, r2, r3, r8
 801ff8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ff90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ff94:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ff98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ff9a:	fb01 330a 	mla	r3, r1, sl, r3
 801ff9e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ffa2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ffa4:	fb09 3901 	mla	r9, r9, r1, r3
 801ffa8:	883b      	ldrh	r3, [r7, #0]
 801ffaa:	4342      	muls	r2, r0
 801ffac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ffb0:	1c50      	adds	r0, r2, #1
 801ffb2:	1219      	asrs	r1, r3, #8
 801ffb4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ffb8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ffbc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ffc0:	ea4c 0c09 	orr.w	ip, ip, r9
 801ffc4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ffc8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ffcc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ffd0:	b2c0      	uxtb	r0, r0
 801ffd2:	fb12 f204 	smulbb	r2, r2, r4
 801ffd6:	fa5f fc8c 	uxtb.w	ip, ip
 801ffda:	fb1e fe04 	smulbb	lr, lr, r4
 801ffde:	fb01 2100 	mla	r1, r1, r0, r2
 801ffe2:	10da      	asrs	r2, r3, #3
 801ffe4:	fb1c fc04 	smulbb	ip, ip, r4
 801ffe8:	00db      	lsls	r3, r3, #3
 801ffea:	b289      	uxth	r1, r1
 801ffec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fff0:	b2db      	uxtb	r3, r3
 801fff2:	fb02 e200 	mla	r2, r2, r0, lr
 801fff6:	fb03 c300 	mla	r3, r3, r0, ip
 801fffa:	b292      	uxth	r2, r2
 801fffc:	fa1f fc83 	uxth.w	ip, r3
 8020000:	1c4b      	adds	r3, r1, #1
 8020002:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020006:	f10c 0301 	add.w	r3, ip, #1
 802000a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802000e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020012:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020016:	430b      	orrs	r3, r1
 8020018:	1c51      	adds	r1, r2, #1
 802001a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802001e:	0952      	lsrs	r2, r2, #5
 8020020:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020024:	4313      	orrs	r3, r2
 8020026:	803b      	strh	r3, [r7, #0]
 8020028:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802002a:	3702      	adds	r7, #2
 802002c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802002e:	441a      	add	r2, r3
 8020030:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020032:	441d      	add	r5, r3
 8020034:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020036:	9229      	str	r2, [sp, #164]	; 0xa4
 8020038:	3b01      	subs	r3, #1
 802003a:	931a      	str	r3, [sp, #104]	; 0x68
 802003c:	e694      	b.n	801fd68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802003e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020040:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020042:	441c      	add	r4, r3
 8020044:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020046:	441d      	add	r5, r3
 8020048:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802004a:	9429      	str	r4, [sp, #164]	; 0xa4
 802004c:	3b01      	subs	r3, #1
 802004e:	9309      	str	r3, [sp, #36]	; 0x24
 8020050:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020052:	3302      	adds	r3, #2
 8020054:	930c      	str	r3, [sp, #48]	; 0x30
 8020056:	e667      	b.n	801fd28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020058:	d024      	beq.n	80200a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 802005a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802005c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802005e:	3b01      	subs	r3, #1
 8020060:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020062:	fb00 4003 	mla	r0, r0, r3, r4
 8020066:	1400      	asrs	r0, r0, #16
 8020068:	f53f ae7b 	bmi.w	801fd62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802006c:	3901      	subs	r1, #1
 802006e:	4288      	cmp	r0, r1
 8020070:	f6bf ae77 	bge.w	801fd62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020074:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020076:	fb01 5303 	mla	r3, r1, r3, r5
 802007a:	141b      	asrs	r3, r3, #16
 802007c:	f53f ae71 	bmi.w	801fd62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020080:	3a01      	subs	r2, #1
 8020082:	4293      	cmp	r3, r2
 8020084:	f6bf ae6d 	bge.w	801fd62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020088:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802008c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020090:	f1bb 0f00 	cmp.w	fp, #0
 8020094:	dc70      	bgt.n	8020178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8020096:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020098:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802009c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802009e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80200a2:	930c      	str	r3, [sp, #48]	; 0x30
 80200a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80200a6:	2b00      	cmp	r3, #0
 80200a8:	f340 81be 	ble.w	8020428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 80200ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80200b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80200b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80200ba:	eef0 6a62 	vmov.f32	s13, s5
 80200be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80200c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80200c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80200ca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80200ce:	eef0 6a43 	vmov.f32	s13, s6
 80200d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80200d6:	ee16 5a90 	vmov	r5, s13
 80200da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80200de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80200e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80200e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80200ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80200ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80200f2:	ee12 2a90 	vmov	r2, s5
 80200f6:	eef0 2a47 	vmov.f32	s5, s14
 80200fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80200fe:	ee13 2a10 	vmov	r2, s6
 8020102:	932b      	str	r3, [sp, #172]	; 0xac
 8020104:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020106:	eeb0 3a67 	vmov.f32	s6, s15
 802010a:	fb92 f3f3 	sdiv	r3, r2, r3
 802010e:	932c      	str	r3, [sp, #176]	; 0xb0
 8020110:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020112:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020114:	3b01      	subs	r3, #1
 8020116:	9319      	str	r3, [sp, #100]	; 0x64
 8020118:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802011a:	bf08      	it	eq
 802011c:	4613      	moveq	r3, r2
 802011e:	9309      	str	r3, [sp, #36]	; 0x24
 8020120:	e5f4      	b.n	801fd0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020122:	2900      	cmp	r1, #0
 8020124:	f43f ae66 	beq.w	801fdf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8020128:	f818 0000 	ldrb.w	r0, [r8, r0]
 802012c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020130:	900a      	str	r0, [sp, #40]	; 0x28
 8020132:	0e00      	lsrs	r0, r0, #24
 8020134:	9013      	str	r0, [sp, #76]	; 0x4c
 8020136:	e65d      	b.n	801fdf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8020138:	f113 0801 	adds.w	r8, r3, #1
 802013c:	f53f af74 	bmi.w	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020140:	4540      	cmp	r0, r8
 8020142:	f6ff af71 	blt.w	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020146:	f11c 0801 	adds.w	r8, ip, #1
 802014a:	f53f af6d 	bmi.w	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802014e:	45c6      	cmp	lr, r8
 8020150:	f6ff af6a 	blt.w	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020154:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020156:	b200      	sxth	r0, r0
 8020158:	9302      	str	r3, [sp, #8]
 802015a:	fa0f f38e 	sxth.w	r3, lr
 802015e:	9000      	str	r0, [sp, #0]
 8020160:	9301      	str	r3, [sp, #4]
 8020162:	4633      	mov	r3, r6
 8020164:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020166:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802016a:	e9cd c203 	strd	ip, r2, [sp, #12]
 802016e:	4639      	mov	r1, r7
 8020170:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020172:	f7ff fc63 	bl	801fa3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020176:	e757      	b.n	8020028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020178:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802017a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802017e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020180:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020184:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020186:	1427      	asrs	r7, r4, #16
 8020188:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802018a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802018e:	142b      	asrs	r3, r5, #16
 8020190:	fb01 7303 	mla	r3, r1, r3, r7
 8020194:	18e7      	adds	r7, r4, r3
 8020196:	5ce3      	ldrb	r3, [r4, r3]
 8020198:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802019c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80201a0:	2a00      	cmp	r2, #0
 80201a2:	f000 8137 	beq.w	8020414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80201a6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80201aa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80201ae:	9410      	str	r4, [sp, #64]	; 0x40
 80201b0:	0e24      	lsrs	r4, r4, #24
 80201b2:	9417      	str	r4, [sp, #92]	; 0x5c
 80201b4:	b170      	cbz	r0, 80201d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80201b6:	eb07 0e01 	add.w	lr, r7, r1
 80201ba:	5c79      	ldrb	r1, [r7, r1]
 80201bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80201c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80201c2:	0e09      	lsrs	r1, r1, #24
 80201c4:	9114      	str	r1, [sp, #80]	; 0x50
 80201c6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80201ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80201ce:	9111      	str	r1, [sp, #68]	; 0x44
 80201d0:	0e09      	lsrs	r1, r1, #24
 80201d2:	9118      	str	r1, [sp, #96]	; 0x60
 80201d4:	b292      	uxth	r2, r2
 80201d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80201d8:	b280      	uxth	r0, r0
 80201da:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80201dc:	fb02 f800 	mul.w	r8, r2, r0
 80201e0:	0112      	lsls	r2, r2, #4
 80201e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80201e6:	eba2 0e08 	sub.w	lr, r2, r8
 80201ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80201ee:	b280      	uxth	r0, r0
 80201f0:	fa1f fe8e 	uxth.w	lr, lr
 80201f4:	1a12      	subs	r2, r2, r0
 80201f6:	fb0e f101 	mul.w	r1, lr, r1
 80201fa:	b292      	uxth	r2, r2
 80201fc:	fb02 110c 	mla	r1, r2, ip, r1
 8020200:	fb00 1104 	mla	r1, r0, r4, r1
 8020204:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020206:	fb08 1104 	mla	r1, r8, r4, r1
 802020a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802020e:	2900      	cmp	r1, #0
 8020210:	f000 80f5 	beq.w	80203fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8020214:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020218:	d019      	beq.n	802024e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 802021a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802021e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020222:	fb0c fa0a 	mul.w	sl, ip, sl
 8020226:	fb0c fc03 	mul.w	ip, ip, r3
 802022a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802022e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020232:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020236:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802023a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802023e:	4453      	add	r3, sl
 8020240:	0a3f      	lsrs	r7, r7, #8
 8020242:	0a1b      	lsrs	r3, r3, #8
 8020244:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020248:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802024c:	433b      	orrs	r3, r7
 802024e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020250:	2cff      	cmp	r4, #255	; 0xff
 8020252:	d020      	beq.n	8020296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8020254:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020256:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802025a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802025c:	4367      	muls	r7, r4
 802025e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020260:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020264:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020268:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802026a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802026e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020272:	fb04 fa0a 	mul.w	sl, r4, sl
 8020276:	44bc      	add	ip, r7
 8020278:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802027c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020280:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020284:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020288:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802028c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020290:	ea4c 040a 	orr.w	r4, ip, sl
 8020294:	9410      	str	r4, [sp, #64]	; 0x40
 8020296:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020298:	2cff      	cmp	r4, #255	; 0xff
 802029a:	d020      	beq.n	80202de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 802029c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802029e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80202a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80202a4:	4367      	muls	r7, r4
 80202a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80202a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80202ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80202b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80202b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80202b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80202ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80202be:	44bc      	add	ip, r7
 80202c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80202c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80202cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80202d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80202d8:	ea4c 040a 	orr.w	r4, ip, sl
 80202dc:	940b      	str	r4, [sp, #44]	; 0x2c
 80202de:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80202e0:	2cff      	cmp	r4, #255	; 0xff
 80202e2:	d020      	beq.n	8020326 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 80202e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80202e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80202ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80202ec:	4367      	muls	r7, r4
 80202ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80202f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80202f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80202f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80202fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80202fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020302:	fb04 fa0a 	mul.w	sl, r4, sl
 8020306:	44bc      	add	ip, r7
 8020308:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802030c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020310:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020314:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020318:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802031c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020320:	ea4c 040a 	orr.w	r4, ip, sl
 8020324:	9411      	str	r4, [sp, #68]	; 0x44
 8020326:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020328:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802032c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020330:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020334:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020336:	fb0e f707 	mul.w	r7, lr, r7
 802033a:	fb02 770c 	mla	r7, r2, ip, r7
 802033e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020342:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020344:	fb00 770c 	mla	r7, r0, ip, r7
 8020348:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802034c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802034e:	fb08 770c 	mla	r7, r8, ip, r7
 8020352:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020356:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020358:	fb0e fe0c 	mul.w	lr, lr, ip
 802035c:	0a3f      	lsrs	r7, r7, #8
 802035e:	fb02 e303 	mla	r3, r2, r3, lr
 8020362:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020364:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020368:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802036c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802036e:	fb00 330a 	mla	r3, r0, sl, r3
 8020372:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020376:	f8b9 0000 	ldrh.w	r0, [r9]
 802037a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802037e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020380:	1202      	asrs	r2, r0, #8
 8020382:	434b      	muls	r3, r1
 8020384:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020388:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802038c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020390:	1c59      	adds	r1, r3, #1
 8020392:	ea47 070c 	orr.w	r7, r7, ip
 8020396:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802039a:	0c3b      	lsrs	r3, r7, #16
 802039c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80203a0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80203a4:	b2ff      	uxtb	r7, r7
 80203a6:	fb13 f304 	smulbb	r3, r3, r4
 80203aa:	b2c9      	uxtb	r1, r1
 80203ac:	fb1c fc04 	smulbb	ip, ip, r4
 80203b0:	fb02 3201 	mla	r2, r2, r1, r3
 80203b4:	10c3      	asrs	r3, r0, #3
 80203b6:	fb17 f704 	smulbb	r7, r7, r4
 80203ba:	00c0      	lsls	r0, r0, #3
 80203bc:	b292      	uxth	r2, r2
 80203be:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80203c2:	b2c0      	uxtb	r0, r0
 80203c4:	fb03 c301 	mla	r3, r3, r1, ip
 80203c8:	f102 0c01 	add.w	ip, r2, #1
 80203cc:	fb00 7001 	mla	r0, r0, r1, r7
 80203d0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80203d4:	b280      	uxth	r0, r0
 80203d6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80203da:	b29b      	uxth	r3, r3
 80203dc:	1c42      	adds	r2, r0, #1
 80203de:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80203e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80203e6:	ea42 020c 	orr.w	r2, r2, ip
 80203ea:	f103 0c01 	add.w	ip, r3, #1
 80203ee:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80203f2:	095b      	lsrs	r3, r3, #5
 80203f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80203f8:	431a      	orrs	r2, r3
 80203fa:	f8a9 2000 	strh.w	r2, [r9]
 80203fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020400:	f109 0902 	add.w	r9, r9, #2
 8020404:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020406:	f10b 3bff 	add.w	fp, fp, #4294967295
 802040a:	441a      	add	r2, r3
 802040c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802040e:	9229      	str	r2, [sp, #164]	; 0xa4
 8020410:	441d      	add	r5, r3
 8020412:	e63d      	b.n	8020090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020414:	2800      	cmp	r0, #0
 8020416:	f43f aedd 	beq.w	80201d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802041a:	5c79      	ldrb	r1, [r7, r1]
 802041c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020420:	910b      	str	r1, [sp, #44]	; 0x2c
 8020422:	0e09      	lsrs	r1, r1, #24
 8020424:	9114      	str	r1, [sp, #80]	; 0x50
 8020426:	e6d5      	b.n	80201d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8020428:	b01f      	add	sp, #124	; 0x7c
 802042a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802042e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802042e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020432:	b089      	sub	sp, #36	; 0x24
 8020434:	9101      	str	r1, [sp, #4]
 8020436:	9801      	ldr	r0, [sp, #4]
 8020438:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802043c:	8800      	ldrh	r0, [r0, #0]
 802043e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020442:	1206      	asrs	r6, r0, #8
 8020444:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020448:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802044c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020450:	9602      	str	r6, [sp, #8]
 8020452:	10c6      	asrs	r6, r0, #3
 8020454:	00c0      	lsls	r0, r0, #3
 8020456:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802045a:	b2c0      	uxtb	r0, r0
 802045c:	9603      	str	r6, [sp, #12]
 802045e:	9004      	str	r0, [sp, #16]
 8020460:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020464:	fb07 100c 	mla	r0, r7, ip, r1
 8020468:	2f00      	cmp	r7, #0
 802046a:	eb02 0e00 	add.w	lr, r2, r0
 802046e:	f2c0 810a 	blt.w	8020686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020472:	45b8      	cmp	r8, r7
 8020474:	f340 8107 	ble.w	8020686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020478:	2900      	cmp	r1, #0
 802047a:	f2c0 8102 	blt.w	8020682 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802047e:	458c      	cmp	ip, r1
 8020480:	f340 80ff 	ble.w	8020682 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020484:	5c12      	ldrb	r2, [r2, r0]
 8020486:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802048a:	1c4a      	adds	r2, r1, #1
 802048c:	f100 80fe 	bmi.w	802068c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020490:	4594      	cmp	ip, r2
 8020492:	f340 80fb 	ble.w	802068c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020496:	2d00      	cmp	r5, #0
 8020498:	f000 80fa 	beq.w	8020690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802049c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80204a0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80204a4:	3701      	adds	r7, #1
 80204a6:	f100 80f7 	bmi.w	8020698 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80204aa:	45b8      	cmp	r8, r7
 80204ac:	f340 80f4 	ble.w	8020698 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80204b0:	2c00      	cmp	r4, #0
 80204b2:	f000 80f4 	beq.w	802069e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80204b6:	2900      	cmp	r1, #0
 80204b8:	eb0e 020c 	add.w	r2, lr, ip
 80204bc:	f2c0 80ea 	blt.w	8020694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80204c0:	458c      	cmp	ip, r1
 80204c2:	f340 80e7 	ble.w	8020694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80204c6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80204ca:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80204ce:	3101      	adds	r1, #1
 80204d0:	f100 80e8 	bmi.w	80206a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80204d4:	458c      	cmp	ip, r1
 80204d6:	f340 80e5 	ble.w	80206a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80204da:	2d00      	cmp	r5, #0
 80204dc:	f000 80e4 	beq.w	80206a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80204e0:	7852      	ldrb	r2, [r2, #1]
 80204e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80204e6:	0e0b      	lsrs	r3, r1, #24
 80204e8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80204ec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80204f0:	9300      	str	r3, [sp, #0]
 80204f2:	b2a4      	uxth	r4, r4
 80204f4:	b2ab      	uxth	r3, r5
 80204f6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80204fa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80204fe:	fb03 f904 	mul.w	r9, r3, r4
 8020502:	011b      	lsls	r3, r3, #4
 8020504:	fb0a f505 	mul.w	r5, sl, r5
 8020508:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802050c:	eba3 0e09 	sub.w	lr, r3, r9
 8020510:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020514:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020518:	0a28      	lsrs	r0, r5, #8
 802051a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802051e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020522:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020526:	fb0a f303 	mul.w	r3, sl, r3
 802052a:	fb08 f707 	mul.w	r7, r8, r7
 802052e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020532:	4405      	add	r5, r0
 8020534:	fb08 fc0c 	mul.w	ip, r8, ip
 8020538:	b2a4      	uxth	r4, r4
 802053a:	0a2d      	lsrs	r5, r5, #8
 802053c:	fa1f fe8e 	uxth.w	lr, lr
 8020540:	1b12      	subs	r2, r2, r4
 8020542:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020546:	b292      	uxth	r2, r2
 8020548:	9005      	str	r0, [sp, #20]
 802054a:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802054e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020552:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020556:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802055a:	0a1b      	lsrs	r3, r3, #8
 802055c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020560:	9306      	str	r3, [sp, #24]
 8020562:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020566:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802056a:	4460      	add	r0, ip
 802056c:	fb0b f303 	mul.w	r3, fp, r3
 8020570:	fb0b f606 	mul.w	r6, fp, r6
 8020574:	0a00      	lsrs	r0, r0, #8
 8020576:	0a1d      	lsrs	r5, r3, #8
 8020578:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802057c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020580:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020584:	441d      	add	r5, r3
 8020586:	f506 7380 	add.w	r3, r6, #256	; 0x100
 802058a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802058e:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020592:	0a2d      	lsrs	r5, r5, #8
 8020594:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020598:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802059c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80205a0:	0a36      	lsrs	r6, r6, #8
 80205a2:	0a1b      	lsrs	r3, r3, #8
 80205a4:	fb05 f50e 	mul.w	r5, r5, lr
 80205a8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80205ac:	9307      	str	r3, [sp, #28]
 80205ae:	0e0b      	lsrs	r3, r1, #24
 80205b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80205b4:	fb0e f606 	mul.w	r6, lr, r6
 80205b8:	435f      	muls	r7, r3
 80205ba:	4359      	muls	r1, r3
 80205bc:	9b05      	ldr	r3, [sp, #20]
 80205be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80205c6:	fb03 5502 	mla	r5, r3, r2, r5
 80205ca:	9b06      	ldr	r3, [sp, #24]
 80205cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205d0:	fb0e fe0b 	mul.w	lr, lr, fp
 80205d4:	44bc      	add	ip, r7
 80205d6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80205da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205de:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80205e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205e6:	0a09      	lsrs	r1, r1, #8
 80205e8:	fb0c 5509 	mla	r5, ip, r9, r5
 80205ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80205f0:	fb00 5504 	mla	r5, r0, r4, r5
 80205f4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80205f8:	9b07      	ldr	r3, [sp, #28]
 80205fa:	fb02 6000 	mla	r0, r2, r0, r6
 80205fe:	0a2d      	lsrs	r5, r5, #8
 8020600:	fb02 e20a 	mla	r2, r2, sl, lr
 8020604:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020608:	fb09 0001 	mla	r0, r9, r1, r0
 802060c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020610:	fb04 0003 	mla	r0, r4, r3, r0
 8020614:	9b00      	ldr	r3, [sp, #0]
 8020616:	fb04 2408 	mla	r4, r4, r8, r2
 802061a:	9a04      	ldr	r2, [sp, #16]
 802061c:	0a00      	lsrs	r0, r0, #8
 802061e:	fb09 4903 	mla	r9, r9, r3, r4
 8020622:	9b02      	ldr	r3, [sp, #8]
 8020624:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020628:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802062c:	4305      	orrs	r5, r0
 802062e:	fa5f f989 	uxtb.w	r9, r9
 8020632:	fb03 f109 	mul.w	r1, r3, r9
 8020636:	9b03      	ldr	r3, [sp, #12]
 8020638:	fb03 f309 	mul.w	r3, r3, r9
 802063c:	fb02 f909 	mul.w	r9, r2, r9
 8020640:	1c4a      	adds	r2, r1, #1
 8020642:	1c58      	adds	r0, r3, #1
 8020644:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020648:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802064c:	0c2a      	lsrs	r2, r5, #16
 802064e:	0a2b      	lsrs	r3, r5, #8
 8020650:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020654:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020658:	0212      	lsls	r2, r2, #8
 802065a:	00db      	lsls	r3, r3, #3
 802065c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020660:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020664:	4313      	orrs	r3, r2
 8020666:	f109 0201 	add.w	r2, r9, #1
 802066a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802066e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020672:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020676:	431d      	orrs	r5, r3
 8020678:	9b01      	ldr	r3, [sp, #4]
 802067a:	801d      	strh	r5, [r3, #0]
 802067c:	b009      	add	sp, #36	; 0x24
 802067e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020682:	2000      	movs	r0, #0
 8020684:	e701      	b.n	802048a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020686:	2600      	movs	r6, #0
 8020688:	4630      	mov	r0, r6
 802068a:	e70b      	b.n	80204a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802068c:	2600      	movs	r6, #0
 802068e:	e709      	b.n	80204a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020690:	462e      	mov	r6, r5
 8020692:	e707      	b.n	80204a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020694:	2700      	movs	r7, #0
 8020696:	e71a      	b.n	80204ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020698:	2100      	movs	r1, #0
 802069a:	460f      	mov	r7, r1
 802069c:	e723      	b.n	80204e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802069e:	4621      	mov	r1, r4
 80206a0:	4627      	mov	r7, r4
 80206a2:	e720      	b.n	80204e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80206a4:	2100      	movs	r1, #0
 80206a6:	e71e      	b.n	80204e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80206a8:	4629      	mov	r1, r5
 80206aa:	e71c      	b.n	80204e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080206ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80206ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206b0:	b09b      	sub	sp, #108	; 0x6c
 80206b2:	9218      	str	r2, [sp, #96]	; 0x60
 80206b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80206b6:	9019      	str	r0, [sp, #100]	; 0x64
 80206b8:	9116      	str	r1, [sp, #88]	; 0x58
 80206ba:	6850      	ldr	r0, [r2, #4]
 80206bc:	9307      	str	r3, [sp, #28]
 80206be:	6812      	ldr	r2, [r2, #0]
 80206c0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80206c2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80206c6:	fb00 1303 	mla	r3, r0, r3, r1
 80206ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80206ce:	930a      	str	r3, [sp, #40]	; 0x28
 80206d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206d2:	681b      	ldr	r3, [r3, #0]
 80206d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80206d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206d8:	685e      	ldr	r6, [r3, #4]
 80206da:	3604      	adds	r6, #4
 80206dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80206de:	2b00      	cmp	r3, #0
 80206e0:	dc03      	bgt.n	80206ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80206e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80206e4:	2b00      	cmp	r3, #0
 80206e6:	f340 8373 	ble.w	8020dd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80206ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80206f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80206f4:	1e48      	subs	r0, r1, #1
 80206f6:	1e57      	subs	r7, r2, #1
 80206f8:	9b07      	ldr	r3, [sp, #28]
 80206fa:	2b00      	cmp	r3, #0
 80206fc:	f340 818f 	ble.w	8020a1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8020700:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020702:	142b      	asrs	r3, r5, #16
 8020704:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020708:	d406      	bmi.n	8020718 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802070a:	4584      	cmp	ip, r0
 802070c:	da04      	bge.n	8020718 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802070e:	2b00      	cmp	r3, #0
 8020710:	db02      	blt.n	8020718 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020712:	42bb      	cmp	r3, r7
 8020714:	f2c0 8184 	blt.w	8020a20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020718:	f11c 0c01 	adds.w	ip, ip, #1
 802071c:	f100 8172 	bmi.w	8020a04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020720:	4561      	cmp	r1, ip
 8020722:	f2c0 816f 	blt.w	8020a04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020726:	3301      	adds	r3, #1
 8020728:	f100 816c 	bmi.w	8020a04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802072c:	429a      	cmp	r2, r3
 802072e:	f2c0 8169 	blt.w	8020a04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020732:	9b07      	ldr	r3, [sp, #28]
 8020734:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020736:	9317      	str	r3, [sp, #92]	; 0x5c
 8020738:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802073a:	2b00      	cmp	r3, #0
 802073c:	f340 818e 	ble.w	8020a5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8020740:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020742:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020746:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802074a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802074e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020750:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020754:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020756:	141b      	asrs	r3, r3, #16
 8020758:	f100 81d1 	bmi.w	8020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802075c:	f101 38ff 	add.w	r8, r1, #4294967295
 8020760:	4543      	cmp	r3, r8
 8020762:	f280 81cc 	bge.w	8020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020766:	f1bc 0f00 	cmp.w	ip, #0
 802076a:	f2c0 81c8 	blt.w	8020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802076e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020772:	45c4      	cmp	ip, r8
 8020774:	f280 81c3 	bge.w	8020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020778:	b209      	sxth	r1, r1
 802077a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802077c:	fb0c 3301 	mla	r3, ip, r1, r3
 8020780:	eb04 0803 	add.w	r8, r4, r3
 8020784:	5ce3      	ldrb	r3, [r4, r3]
 8020786:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802078a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802078e:	2a00      	cmp	r2, #0
 8020790:	f000 81aa 	beq.w	8020ae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 8020794:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020798:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802079c:	940b      	str	r4, [sp, #44]	; 0x2c
 802079e:	0e24      	lsrs	r4, r4, #24
 80207a0:	9412      	str	r4, [sp, #72]	; 0x48
 80207a2:	b178      	cbz	r0, 80207c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80207a4:	eb08 0c01 	add.w	ip, r8, r1
 80207a8:	f818 1001 	ldrb.w	r1, [r8, r1]
 80207ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80207b0:	9108      	str	r1, [sp, #32]
 80207b2:	0e09      	lsrs	r1, r1, #24
 80207b4:	9110      	str	r1, [sp, #64]	; 0x40
 80207b6:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80207ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80207be:	910c      	str	r1, [sp, #48]	; 0x30
 80207c0:	0e09      	lsrs	r1, r1, #24
 80207c2:	9113      	str	r1, [sp, #76]	; 0x4c
 80207c4:	b292      	uxth	r2, r2
 80207c6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80207c8:	b280      	uxth	r0, r0
 80207ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80207cc:	fb02 f900 	mul.w	r9, r2, r0
 80207d0:	0112      	lsls	r2, r2, #4
 80207d2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80207d6:	eba2 0809 	sub.w	r8, r2, r9
 80207da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80207de:	b280      	uxth	r0, r0
 80207e0:	fa1f f888 	uxth.w	r8, r8
 80207e4:	1a12      	subs	r2, r2, r0
 80207e6:	fb08 f101 	mul.w	r1, r8, r1
 80207ea:	b292      	uxth	r2, r2
 80207ec:	fb02 110e 	mla	r1, r2, lr, r1
 80207f0:	fb00 1104 	mla	r1, r0, r4, r1
 80207f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80207f6:	fb09 1104 	mla	r1, r9, r4, r1
 80207fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80207fe:	2900      	cmp	r1, #0
 8020800:	f000 80f5 	beq.w	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020804:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020808:	d01b      	beq.n	8020842 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802080a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802080e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020812:	fb0e fa0a 	mul.w	sl, lr, sl
 8020816:	fb0e fe03 	mul.w	lr, lr, r3
 802081a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802081e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020822:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020826:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802082a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802082e:	4453      	add	r3, sl
 8020830:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020834:	0a1b      	lsrs	r3, r3, #8
 8020836:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802083a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802083e:	ea43 030c 	orr.w	r3, r3, ip
 8020842:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020844:	2cff      	cmp	r4, #255	; 0xff
 8020846:	d021      	beq.n	802088c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020848:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802084a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802084e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020850:	fb04 fb0b 	mul.w	fp, r4, fp
 8020854:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020856:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802085a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802085c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020860:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020864:	fb04 fa0a 	mul.w	sl, r4, sl
 8020868:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802086c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020870:	44de      	add	lr, fp
 8020872:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020876:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802087a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802087e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020882:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020886:	ea4e 040a 	orr.w	r4, lr, sl
 802088a:	940b      	str	r4, [sp, #44]	; 0x2c
 802088c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802088e:	2cff      	cmp	r4, #255	; 0xff
 8020890:	d021      	beq.n	80208d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020892:	9c08      	ldr	r4, [sp, #32]
 8020894:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020898:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802089a:	fb04 fb0b 	mul.w	fp, r4, fp
 802089e:	9c08      	ldr	r4, [sp, #32]
 80208a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80208a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80208aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80208ae:	fb04 fa0a 	mul.w	sl, r4, sl
 80208b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80208b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80208ba:	44de      	add	lr, fp
 80208bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80208c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80208c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80208cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80208d0:	ea4e 040a 	orr.w	r4, lr, sl
 80208d4:	9408      	str	r4, [sp, #32]
 80208d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80208d8:	2cff      	cmp	r4, #255	; 0xff
 80208da:	d021      	beq.n	8020920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80208dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80208de:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80208e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80208e4:	fb04 fb0b 	mul.w	fp, r4, fp
 80208e8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80208ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80208ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80208f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80208f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80208f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80208fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020900:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020904:	44de      	add	lr, fp
 8020906:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802090a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802090e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020912:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020916:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802091a:	ea4e 040a 	orr.w	r4, lr, sl
 802091e:	940c      	str	r4, [sp, #48]	; 0x30
 8020920:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020922:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020926:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802092a:	43c9      	mvns	r1, r1
 802092c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020930:	9c08      	ldr	r4, [sp, #32]
 8020932:	fb08 fc0c 	mul.w	ip, r8, ip
 8020936:	fb02 cc0e 	mla	ip, r2, lr, ip
 802093a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802093e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020940:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020944:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020948:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802094a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802094e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020952:	fb08 f80e 	mul.w	r8, r8, lr
 8020956:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802095a:	fa5f fe81 	uxtb.w	lr, r1
 802095e:	fb02 8303 	mla	r3, r2, r3, r8
 8020962:	9a08      	ldr	r2, [sp, #32]
 8020964:	f8b7 8000 	ldrh.w	r8, [r7]
 8020968:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802096c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020970:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020972:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020976:	fb00 330a 	mla	r3, r0, sl, r3
 802097a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802097e:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020982:	fb09 3900 	mla	r9, r9, r0, r3
 8020986:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802098a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802098e:	b2c9      	uxtb	r1, r1
 8020990:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020994:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020998:	fb02 f20e 	mul.w	r2, r2, lr
 802099c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80209a0:	fb00 f00e 	mul.w	r0, r0, lr
 80209a4:	1c53      	adds	r3, r2, #1
 80209a6:	fb01 f10e 	mul.w	r1, r1, lr
 80209aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80209ae:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80209b2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80209b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80209ba:	4a60      	ldr	r2, [pc, #384]	; (8020b3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80209bc:	b2db      	uxtb	r3, r3
 80209be:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80209c2:	1c43      	adds	r3, r0, #1
 80209c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80209c8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80209cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80209d0:	00db      	lsls	r3, r3, #3
 80209d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209d6:	4313      	orrs	r3, r2
 80209d8:	1c4a      	adds	r2, r1, #1
 80209da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80209de:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80209e2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80209e6:	ea4c 0c03 	orr.w	ip, ip, r3
 80209ea:	f8a7 c000 	strh.w	ip, [r7]
 80209ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80209f0:	3702      	adds	r7, #2
 80209f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80209f4:	441a      	add	r2, r3
 80209f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80209f8:	441d      	add	r5, r3
 80209fa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80209fc:	9225      	str	r2, [sp, #148]	; 0x94
 80209fe:	3b01      	subs	r3, #1
 8020a00:	9317      	str	r3, [sp, #92]	; 0x5c
 8020a02:	e699      	b.n	8020738 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020a04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020a06:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020a08:	441c      	add	r4, r3
 8020a0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a0c:	441d      	add	r5, r3
 8020a0e:	9b07      	ldr	r3, [sp, #28]
 8020a10:	9425      	str	r4, [sp, #148]	; 0x94
 8020a12:	3b01      	subs	r3, #1
 8020a14:	9307      	str	r3, [sp, #28]
 8020a16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a18:	3302      	adds	r3, #2
 8020a1a:	930a      	str	r3, [sp, #40]	; 0x28
 8020a1c:	e66c      	b.n	80206f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020a1e:	d024      	beq.n	8020a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8020a20:	9b07      	ldr	r3, [sp, #28]
 8020a22:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020a24:	3b01      	subs	r3, #1
 8020a26:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020a28:	fb00 4003 	mla	r0, r0, r3, r4
 8020a2c:	1400      	asrs	r0, r0, #16
 8020a2e:	f53f ae80 	bmi.w	8020732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020a32:	3901      	subs	r1, #1
 8020a34:	4288      	cmp	r0, r1
 8020a36:	f6bf ae7c 	bge.w	8020732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020a3a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020a3c:	fb01 5303 	mla	r3, r1, r3, r5
 8020a40:	141b      	asrs	r3, r3, #16
 8020a42:	f53f ae76 	bmi.w	8020732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020a46:	3a01      	subs	r2, #1
 8020a48:	4293      	cmp	r3, r2
 8020a4a:	f6bf ae72 	bge.w	8020732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020a4e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020a52:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020a56:	f1bb 0f00 	cmp.w	fp, #0
 8020a5a:	dc71      	bgt.n	8020b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020a5c:	9b07      	ldr	r3, [sp, #28]
 8020a5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020a62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a64:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020a68:	930a      	str	r3, [sp, #40]	; 0x28
 8020a6a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020a6c:	2b00      	cmp	r3, #0
 8020a6e:	f340 81af 	ble.w	8020dd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020a72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020a76:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a80:	eef0 6a62 	vmov.f32	s13, s5
 8020a84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020a88:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a90:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020a94:	eef0 6a43 	vmov.f32	s13, s6
 8020a98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a9c:	ee16 5a90 	vmov	r5, s13
 8020aa0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020aa4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020aa8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020aac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ab0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ab4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020ab8:	ee12 2a90 	vmov	r2, s5
 8020abc:	eef0 2a47 	vmov.f32	s5, s14
 8020ac0:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ac4:	ee13 2a10 	vmov	r2, s6
 8020ac8:	9327      	str	r3, [sp, #156]	; 0x9c
 8020aca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020acc:	eeb0 3a67 	vmov.f32	s6, s15
 8020ad0:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ad4:	9328      	str	r3, [sp, #160]	; 0xa0
 8020ad6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020ad8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020ada:	3b01      	subs	r3, #1
 8020adc:	9316      	str	r3, [sp, #88]	; 0x58
 8020ade:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ae0:	bf08      	it	eq
 8020ae2:	4613      	moveq	r3, r2
 8020ae4:	9307      	str	r3, [sp, #28]
 8020ae6:	e5f9      	b.n	80206dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020ae8:	2800      	cmp	r0, #0
 8020aea:	f43f ae6b 	beq.w	80207c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8020aee:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020af2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020af6:	9108      	str	r1, [sp, #32]
 8020af8:	0e09      	lsrs	r1, r1, #24
 8020afa:	9110      	str	r1, [sp, #64]	; 0x40
 8020afc:	e662      	b.n	80207c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8020afe:	f113 0801 	adds.w	r8, r3, #1
 8020b02:	f53f af74 	bmi.w	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020b06:	4541      	cmp	r1, r8
 8020b08:	f6ff af71 	blt.w	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020b0c:	f11c 0801 	adds.w	r8, ip, #1
 8020b10:	f53f af6d 	bmi.w	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020b14:	45c6      	cmp	lr, r8
 8020b16:	f6ff af6a 	blt.w	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020b1a:	b209      	sxth	r1, r1
 8020b1c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020b20:	fa0f f38e 	sxth.w	r3, lr
 8020b24:	9100      	str	r1, [sp, #0]
 8020b26:	4639      	mov	r1, r7
 8020b28:	9301      	str	r3, [sp, #4]
 8020b2a:	4633      	mov	r3, r6
 8020b2c:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020b30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020b32:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020b34:	f7ff fc7b 	bl	802042e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020b38:	e759      	b.n	80209ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020b3a:	bf00      	nop
 8020b3c:	fffff800 	.word	0xfffff800
 8020b40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020b42:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020b46:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020b48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020b4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b4e:	1427      	asrs	r7, r4, #16
 8020b50:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020b52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b56:	142b      	asrs	r3, r5, #16
 8020b58:	fb01 7303 	mla	r3, r1, r3, r7
 8020b5c:	18e7      	adds	r7, r4, r3
 8020b5e:	5ce3      	ldrb	r3, [r4, r3]
 8020b60:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020b64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020b68:	2a00      	cmp	r2, #0
 8020b6a:	f000 8127 	beq.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020b6e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020b72:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020b76:	940d      	str	r4, [sp, #52]	; 0x34
 8020b78:	0e24      	lsrs	r4, r4, #24
 8020b7a:	9414      	str	r4, [sp, #80]	; 0x50
 8020b7c:	b170      	cbz	r0, 8020b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020b7e:	eb07 0e01 	add.w	lr, r7, r1
 8020b82:	5c79      	ldrb	r1, [r7, r1]
 8020b84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b88:	9109      	str	r1, [sp, #36]	; 0x24
 8020b8a:	0e09      	lsrs	r1, r1, #24
 8020b8c:	9111      	str	r1, [sp, #68]	; 0x44
 8020b8e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020b92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b96:	910e      	str	r1, [sp, #56]	; 0x38
 8020b98:	0e09      	lsrs	r1, r1, #24
 8020b9a:	9115      	str	r1, [sp, #84]	; 0x54
 8020b9c:	b292      	uxth	r2, r2
 8020b9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020ba0:	b280      	uxth	r0, r0
 8020ba2:	fb02 f800 	mul.w	r8, r2, r0
 8020ba6:	0112      	lsls	r2, r2, #4
 8020ba8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020bac:	eba2 0e08 	sub.w	lr, r2, r8
 8020bb0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020bb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020bb6:	b280      	uxth	r0, r0
 8020bb8:	fa1f fe8e 	uxth.w	lr, lr
 8020bbc:	1a09      	subs	r1, r1, r0
 8020bbe:	fb0e f202 	mul.w	r2, lr, r2
 8020bc2:	b289      	uxth	r1, r1
 8020bc4:	fb01 220c 	mla	r2, r1, ip, r2
 8020bc8:	fb00 2204 	mla	r2, r0, r4, r2
 8020bcc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020bce:	fb08 2204 	mla	r2, r8, r4, r2
 8020bd2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020bd6:	2a00      	cmp	r2, #0
 8020bd8:	f000 80e5 	beq.w	8020da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020bdc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020be0:	d019      	beq.n	8020c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020be2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020be6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bea:	fb0c fa0a 	mul.w	sl, ip, sl
 8020bee:	fb0c fc03 	mul.w	ip, ip, r3
 8020bf2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020bf6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020bfa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020bfe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020c02:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020c06:	4453      	add	r3, sl
 8020c08:	0a3f      	lsrs	r7, r7, #8
 8020c0a:	0a1b      	lsrs	r3, r3, #8
 8020c0c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020c10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020c14:	433b      	orrs	r3, r7
 8020c16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020c18:	2cff      	cmp	r4, #255	; 0xff
 8020c1a:	d020      	beq.n	8020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020c1c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020c1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020c22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020c24:	4367      	muls	r7, r4
 8020c26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020c28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020c32:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c3a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c3e:	44bc      	add	ip, r7
 8020c40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020c44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c58:	ea4c 040a 	orr.w	r4, ip, sl
 8020c5c:	940d      	str	r4, [sp, #52]	; 0x34
 8020c5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c60:	2cff      	cmp	r4, #255	; 0xff
 8020c62:	d020      	beq.n	8020ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020c64:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020c66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020c6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c6c:	4367      	muls	r7, r4
 8020c6e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020c70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c78:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020c7a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c82:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c86:	44bc      	add	ip, r7
 8020c88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020c8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020c94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ca0:	ea4c 040a 	orr.w	r4, ip, sl
 8020ca4:	9409      	str	r4, [sp, #36]	; 0x24
 8020ca6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020ca8:	2cff      	cmp	r4, #255	; 0xff
 8020caa:	d020      	beq.n	8020cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020cac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020cae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020cb2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020cb4:	4367      	muls	r7, r4
 8020cb6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020cb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020cbc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020cc0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020cc2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020cc6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020cca:	fb04 fa0a 	mul.w	sl, r4, sl
 8020cce:	44bc      	add	ip, r7
 8020cd0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020cd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020cdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ce0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ce4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ce8:	ea4c 040a 	orr.w	r4, ip, sl
 8020cec:	940e      	str	r4, [sp, #56]	; 0x38
 8020cee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020cf0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020cf4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020cf8:	43d2      	mvns	r2, r2
 8020cfa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020cfe:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020d00:	b2d2      	uxtb	r2, r2
 8020d02:	fb0e f707 	mul.w	r7, lr, r7
 8020d06:	fb01 770c 	mla	r7, r1, ip, r7
 8020d0a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020d0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020d10:	fb00 770c 	mla	r7, r0, ip, r7
 8020d14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020d18:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020d1a:	fb08 770c 	mla	r7, r8, ip, r7
 8020d1e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020d22:	fb0e fe0c 	mul.w	lr, lr, ip
 8020d26:	0a3f      	lsrs	r7, r7, #8
 8020d28:	fb01 e303 	mla	r3, r1, r3, lr
 8020d2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020d2e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020d32:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020d36:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020d38:	fb00 330a 	mla	r3, r0, sl, r3
 8020d3c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020d40:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020d44:	f8b9 3000 	ldrh.w	r3, [r9]
 8020d48:	1218      	asrs	r0, r3, #8
 8020d4a:	10d9      	asrs	r1, r3, #3
 8020d4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020d54:	00db      	lsls	r3, r3, #3
 8020d56:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020d5a:	4350      	muls	r0, r2
 8020d5c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020d60:	b2db      	uxtb	r3, r3
 8020d62:	4351      	muls	r1, r2
 8020d64:	ea47 070c 	orr.w	r7, r7, ip
 8020d68:	4353      	muls	r3, r2
 8020d6a:	1c42      	adds	r2, r0, #1
 8020d6c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020d70:	0c3a      	lsrs	r2, r7, #16
 8020d72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020d76:	4a18      	ldr	r2, [pc, #96]	; (8020dd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020d78:	b2c0      	uxtb	r0, r0
 8020d7a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020d7e:	1c4a      	adds	r2, r1, #1
 8020d80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d84:	0a3a      	lsrs	r2, r7, #8
 8020d86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d8a:	00c9      	lsls	r1, r1, #3
 8020d8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020d90:	4301      	orrs	r1, r0
 8020d92:	1c58      	adds	r0, r3, #1
 8020d94:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020d98:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020d9c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020da0:	4308      	orrs	r0, r1
 8020da2:	f8a9 0000 	strh.w	r0, [r9]
 8020da6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020da8:	f109 0902 	add.w	r9, r9, #2
 8020dac:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020dae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020db2:	441a      	add	r2, r3
 8020db4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020db6:	9225      	str	r2, [sp, #148]	; 0x94
 8020db8:	441d      	add	r5, r3
 8020dba:	e64c      	b.n	8020a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8020dbc:	2800      	cmp	r0, #0
 8020dbe:	f43f aeed 	beq.w	8020b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020dc2:	5c79      	ldrb	r1, [r7, r1]
 8020dc4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020dc8:	9109      	str	r1, [sp, #36]	; 0x24
 8020dca:	0e09      	lsrs	r1, r1, #24
 8020dcc:	9111      	str	r1, [sp, #68]	; 0x44
 8020dce:	e6e5      	b.n	8020b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020dd0:	b01b      	add	sp, #108	; 0x6c
 8020dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dd6:	bf00      	nop
 8020dd8:	fffff800 	.word	0xfffff800

08020ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020de0:	b085      	sub	sp, #20
 8020de2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020de6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020dea:	2800      	cmp	r0, #0
 8020dec:	9103      	str	r1, [sp, #12]
 8020dee:	fb00 7406 	mla	r4, r0, r6, r7
 8020df2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020df6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020dfa:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020dfe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020e02:	eb03 0904 	add.w	r9, r3, r4
 8020e06:	9501      	str	r5, [sp, #4]
 8020e08:	f2c0 8150 	blt.w	80210ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020e0c:	4583      	cmp	fp, r0
 8020e0e:	f340 814d 	ble.w	80210ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020e12:	2f00      	cmp	r7, #0
 8020e14:	f2c0 8146 	blt.w	80210a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020e18:	42be      	cmp	r6, r7
 8020e1a:	f340 8143 	ble.w	80210a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020e1e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020e22:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020e26:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020e2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020e2e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020e32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e36:	4355      	muls	r5, r2
 8020e38:	fb0c f203 	mul.w	r2, ip, r3
 8020e3c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020e40:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020e44:	441d      	add	r5, r3
 8020e46:	f102 0320 	add.w	r3, r2, #32
 8020e4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020e4e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020e52:	0a1b      	lsrs	r3, r3, #8
 8020e54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e58:	431c      	orrs	r4, r3
 8020e5a:	1c7b      	adds	r3, r7, #1
 8020e5c:	f100 812b 	bmi.w	80210b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020e60:	429e      	cmp	r6, r3
 8020e62:	f340 8128 	ble.w	80210b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020e66:	2900      	cmp	r1, #0
 8020e68:	f000 8128 	beq.w	80210bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020e6c:	9a01      	ldr	r2, [sp, #4]
 8020e6e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020e72:	8855      	ldrh	r5, [r2, #2]
 8020e74:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020e78:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020e7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020e80:	fb08 f802 	mul.w	r8, r8, r2
 8020e84:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020e88:	435d      	muls	r5, r3
 8020e8a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020e8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020e92:	44d0      	add	r8, sl
 8020e94:	f105 0a20 	add.w	sl, r5, #32
 8020e98:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020e9c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020ea0:	0a2d      	lsrs	r5, r5, #8
 8020ea2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ea6:	432a      	orrs	r2, r5
 8020ea8:	3001      	adds	r0, #1
 8020eaa:	f100 810d 	bmi.w	80210c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020eae:	4583      	cmp	fp, r0
 8020eb0:	f340 810a 	ble.w	80210c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020eb4:	f1be 0f00 	cmp.w	lr, #0
 8020eb8:	f000 810b 	beq.w	80210d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020ebc:	2f00      	cmp	r7, #0
 8020ebe:	f2c0 8100 	blt.w	80210c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020ec2:	42be      	cmp	r6, r7
 8020ec4:	f340 80fd 	ble.w	80210c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020ec8:	9801      	ldr	r0, [sp, #4]
 8020eca:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020ece:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020ed2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020ed6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020eda:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020ede:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020ee2:	fb0a fa00 	mul.w	sl, sl, r0
 8020ee6:	fb05 f808 	mul.w	r8, r5, r8
 8020eea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020eee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020ef2:	4482      	add	sl, r0
 8020ef4:	f108 0020 	add.w	r0, r8, #32
 8020ef8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020efc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020f00:	0a00      	lsrs	r0, r0, #8
 8020f02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f06:	ea4b 0b00 	orr.w	fp, fp, r0
 8020f0a:	3701      	adds	r7, #1
 8020f0c:	f100 80e6 	bmi.w	80210dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020f10:	42be      	cmp	r6, r7
 8020f12:	f340 80e3 	ble.w	80210dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020f16:	2900      	cmp	r1, #0
 8020f18:	f000 80e3 	beq.w	80210e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020f1c:	3601      	adds	r6, #1
 8020f1e:	9801      	ldr	r0, [sp, #4]
 8020f20:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020f24:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020f28:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020f2c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020f30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f34:	fb09 f906 	mul.w	r9, r9, r6
 8020f38:	fb07 f800 	mul.w	r8, r7, r0
 8020f3c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020f40:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020f44:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020f48:	44d1      	add	r9, sl
 8020f4a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020f4e:	f108 0020 	add.w	r0, r8, #32
 8020f52:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020f56:	0a00      	lsrs	r0, r0, #8
 8020f58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f5c:	4330      	orrs	r0, r6
 8020f5e:	b28e      	uxth	r6, r1
 8020f60:	fa1f f98e 	uxth.w	r9, lr
 8020f64:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020f68:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020f6c:	fb06 f809 	mul.w	r8, r6, r9
 8020f70:	0136      	lsls	r6, r6, #4
 8020f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f76:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020f7a:	9601      	str	r6, [sp, #4]
 8020f7c:	ea4a 0404 	orr.w	r4, sl, r4
 8020f80:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020f84:	fa1f f689 	uxth.w	r6, r9
 8020f88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f8c:	fb11 f90e 	smulbb	r9, r1, lr
 8020f90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f94:	9602      	str	r6, [sp, #8]
 8020f96:	4626      	mov	r6, r4
 8020f98:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020f9c:	f1ce 0410 	rsb	r4, lr, #16
 8020fa0:	ea4a 0202 	orr.w	r2, sl, r2
 8020fa4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020fa8:	1a64      	subs	r4, r4, r1
 8020faa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020fae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020fb2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020fb6:	434a      	muls	r2, r1
 8020fb8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020fbc:	ea4a 0000 	orr.w	r0, sl, r0
 8020fc0:	9903      	ldr	r1, [sp, #12]
 8020fc2:	fb04 2406 	mla	r4, r4, r6, r2
 8020fc6:	9e02      	ldr	r6, [sp, #8]
 8020fc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020fcc:	fb09 4200 	mla	r2, r9, r0, r4
 8020fd0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020fd4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020fd8:	8808      	ldrh	r0, [r1, #0]
 8020fda:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020fde:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8020fe2:	ea44 0b0b 	orr.w	fp, r4, fp
 8020fe6:	9c01      	ldr	r4, [sp, #4]
 8020fe8:	b289      	uxth	r1, r1
 8020fea:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8020fee:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020ff2:	1ba4      	subs	r4, r4, r6
 8020ff4:	9e01      	ldr	r6, [sp, #4]
 8020ff6:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020ffa:	eba6 0608 	sub.w	r6, r6, r8
 8020ffe:	b2a4      	uxth	r4, r4
 8021000:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021004:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021008:	b2b6      	uxth	r6, r6
 802100a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802100e:	4373      	muls	r3, r6
 8021010:	ea42 0e0e 	orr.w	lr, r2, lr
 8021014:	fb0c 3304 	mla	r3, ip, r4, r3
 8021018:	9c02      	ldr	r4, [sp, #8]
 802101a:	fa1f f28e 	uxth.w	r2, lr
 802101e:	fb04 3505 	mla	r5, r4, r5, r3
 8021022:	10d4      	asrs	r4, r2, #3
 8021024:	fb08 5707 	mla	r7, r8, r7, r5
 8021028:	1215      	asrs	r5, r2, #8
 802102a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802102e:	00d2      	lsls	r2, r2, #3
 8021030:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021034:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021038:	b2d2      	uxtb	r2, r2
 802103a:	434f      	muls	r7, r1
 802103c:	1c7b      	adds	r3, r7, #1
 802103e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021042:	1203      	asrs	r3, r0, #8
 8021044:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021048:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802104c:	b2ff      	uxtb	r7, r7
 802104e:	fb13 f307 	smulbb	r3, r3, r7
 8021052:	fb05 3501 	mla	r5, r5, r1, r3
 8021056:	10c3      	asrs	r3, r0, #3
 8021058:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802105c:	b2ad      	uxth	r5, r5
 802105e:	fb13 f307 	smulbb	r3, r3, r7
 8021062:	fb04 3401 	mla	r4, r4, r1, r3
 8021066:	00c3      	lsls	r3, r0, #3
 8021068:	b2db      	uxtb	r3, r3
 802106a:	b2a4      	uxth	r4, r4
 802106c:	fb13 f307 	smulbb	r3, r3, r7
 8021070:	fb02 3101 	mla	r1, r2, r1, r3
 8021074:	1c6b      	adds	r3, r5, #1
 8021076:	1c62      	adds	r2, r4, #1
 8021078:	b289      	uxth	r1, r1
 802107a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802107e:	1c4b      	adds	r3, r1, #1
 8021080:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021084:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021088:	9a03      	ldr	r2, [sp, #12]
 802108a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802108e:	0964      	lsrs	r4, r4, #5
 8021090:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021094:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021098:	432b      	orrs	r3, r5
 802109a:	4323      	orrs	r3, r4
 802109c:	8013      	strh	r3, [r2, #0]
 802109e:	b005      	add	sp, #20
 80210a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210a4:	f04f 0c00 	mov.w	ip, #0
 80210a8:	4664      	mov	r4, ip
 80210aa:	e6d6      	b.n	8020e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80210ac:	2300      	movs	r3, #0
 80210ae:	469c      	mov	ip, r3
 80210b0:	461a      	mov	r2, r3
 80210b2:	461c      	mov	r4, r3
 80210b4:	e6f8      	b.n	8020ea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80210b6:	2300      	movs	r3, #0
 80210b8:	461a      	mov	r2, r3
 80210ba:	e6f5      	b.n	8020ea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80210bc:	460b      	mov	r3, r1
 80210be:	460a      	mov	r2, r1
 80210c0:	e6f2      	b.n	8020ea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80210c2:	2500      	movs	r5, #0
 80210c4:	46ab      	mov	fp, r5
 80210c6:	e720      	b.n	8020f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80210c8:	2700      	movs	r7, #0
 80210ca:	463d      	mov	r5, r7
 80210cc:	4638      	mov	r0, r7
 80210ce:	46bb      	mov	fp, r7
 80210d0:	e745      	b.n	8020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80210d2:	4677      	mov	r7, lr
 80210d4:	4675      	mov	r5, lr
 80210d6:	4670      	mov	r0, lr
 80210d8:	46f3      	mov	fp, lr
 80210da:	e740      	b.n	8020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80210dc:	2700      	movs	r7, #0
 80210de:	4638      	mov	r0, r7
 80210e0:	e73d      	b.n	8020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80210e2:	460f      	mov	r7, r1
 80210e4:	4608      	mov	r0, r1
 80210e6:	e73a      	b.n	8020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080210e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80210e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210ec:	b097      	sub	sp, #92	; 0x5c
 80210ee:	9214      	str	r2, [sp, #80]	; 0x50
 80210f0:	9308      	str	r3, [sp, #32]
 80210f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80210f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80210f8:	9015      	str	r0, [sp, #84]	; 0x54
 80210fa:	9312      	str	r3, [sp, #72]	; 0x48
 80210fc:	6850      	ldr	r0, [r2, #4]
 80210fe:	9111      	str	r1, [sp, #68]	; 0x44
 8021100:	6812      	ldr	r2, [r2, #0]
 8021102:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021106:	fb00 1303 	mla	r3, r0, r3, r1
 802110a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802110e:	9309      	str	r3, [sp, #36]	; 0x24
 8021110:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021112:	681b      	ldr	r3, [r3, #0]
 8021114:	930b      	str	r3, [sp, #44]	; 0x2c
 8021116:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021118:	685b      	ldr	r3, [r3, #4]
 802111a:	930c      	str	r3, [sp, #48]	; 0x30
 802111c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021120:	930a      	str	r3, [sp, #40]	; 0x28
 8021122:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021124:	2b00      	cmp	r3, #0
 8021126:	dc03      	bgt.n	8021130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021128:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802112a:	2b00      	cmp	r3, #0
 802112c:	f340 83cd 	ble.w	80218ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8021130:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021132:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021136:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802113a:	1e48      	subs	r0, r1, #1
 802113c:	1e55      	subs	r5, r2, #1
 802113e:	9b08      	ldr	r3, [sp, #32]
 8021140:	2b00      	cmp	r3, #0
 8021142:	f340 81a5 	ble.w	8021490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8021146:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021148:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802114a:	1436      	asrs	r6, r6, #16
 802114c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021150:	d406      	bmi.n	8021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021152:	4286      	cmp	r6, r0
 8021154:	da04      	bge.n	8021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021156:	2b00      	cmp	r3, #0
 8021158:	db02      	blt.n	8021160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802115a:	42ab      	cmp	r3, r5
 802115c:	f2c0 8199 	blt.w	8021492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021160:	3601      	adds	r6, #1
 8021162:	f100 8186 	bmi.w	8021472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021166:	42b1      	cmp	r1, r6
 8021168:	f2c0 8183 	blt.w	8021472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802116c:	3301      	adds	r3, #1
 802116e:	f100 8180 	bmi.w	8021472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021172:	429a      	cmp	r2, r3
 8021174:	f2c0 817d 	blt.w	8021472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021178:	9b08      	ldr	r3, [sp, #32]
 802117a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802117e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021180:	9313      	str	r3, [sp, #76]	; 0x4c
 8021182:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021184:	2b00      	cmp	r3, #0
 8021186:	f340 81a6 	ble.w	80214d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 802118a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802118c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802118e:	1418      	asrs	r0, r3, #16
 8021190:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021192:	142d      	asrs	r5, r5, #16
 8021194:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021198:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802119a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802119e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80211a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80211a4:	f100 81fa 	bmi.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80211a8:	f102 3eff 	add.w	lr, r2, #4294967295
 80211ac:	4575      	cmp	r5, lr
 80211ae:	f280 81f5 	bge.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80211b2:	2800      	cmp	r0, #0
 80211b4:	f2c0 81f2 	blt.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80211b8:	f103 3eff 	add.w	lr, r3, #4294967295
 80211bc:	4570      	cmp	r0, lr
 80211be:	f280 81ed 	bge.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80211c2:	b212      	sxth	r2, r2
 80211c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80211c6:	fa1f fe81 	uxth.w	lr, r1
 80211ca:	fb00 5002 	mla	r0, r0, r2, r5
 80211ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80211d2:	eb03 0a00 	add.w	sl, r3, r0
 80211d6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80211da:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80211de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80211e2:	b29b      	uxth	r3, r3
 80211e4:	f1bc 0f00 	cmp.w	ip, #0
 80211e8:	f000 81bb 	beq.w	8021562 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80211ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80211f0:	eb0a 0b02 	add.w	fp, sl, r2
 80211f4:	fa1f fa8c 	uxth.w	sl, ip
 80211f8:	940d      	str	r4, [sp, #52]	; 0x34
 80211fa:	fb0a fe0e 	mul.w	lr, sl, lr
 80211fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021202:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021206:	eba5 050e 	sub.w	r5, r5, lr
 802120a:	940e      	str	r4, [sp, #56]	; 0x38
 802120c:	fa1f fa8a 	uxth.w	sl, sl
 8021210:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021212:	b2ad      	uxth	r5, r5
 8021214:	eba3 030a 	sub.w	r3, r3, sl
 8021218:	fb08 f505 	mul.w	r5, r8, r5
 802121c:	b29b      	uxth	r3, r3
 802121e:	fb09 5303 	mla	r3, r9, r3, r5
 8021222:	fb0a 3304 	mla	r3, sl, r4, r3
 8021226:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021228:	fb0e 3304 	mla	r3, lr, r4, r3
 802122c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021230:	2b00      	cmp	r3, #0
 8021232:	f000 8111 	beq.w	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021236:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021238:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802123c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021240:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021244:	f000 8192 	beq.w	802156c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021248:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802124c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021250:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021254:	fb0a fe0e 	mul.w	lr, sl, lr
 8021258:	fb09 f000 	mul.w	r0, r9, r0
 802125c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021260:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021264:	f100 0b20 	add.w	fp, r0, #32
 8021268:	44ce      	add	lr, r9
 802126a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802126e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021272:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021276:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802127a:	ea4e 0909 	orr.w	r9, lr, r9
 802127e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021282:	8868      	ldrh	r0, [r5, #2]
 8021284:	d019      	beq.n	80212ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021286:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802128a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802128e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021292:	fb0a fe0e 	mul.w	lr, sl, lr
 8021296:	fb08 f800 	mul.w	r8, r8, r0
 802129a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802129e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80212a2:	f108 0b20 	add.w	fp, r8, #32
 80212a6:	4486      	add	lr, r0
 80212a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80212ac:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80212b0:	0a00      	lsrs	r0, r0, #8
 80212b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80212b6:	ea4e 0000 	orr.w	r0, lr, r0
 80212ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80212be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80212c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80212c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80212ca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80212ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80212d2:	ea4e 0909 	orr.w	r9, lr, r9
 80212d6:	ea4a 0000 	orr.w	r0, sl, r0
 80212da:	f1bc 0f00 	cmp.w	ip, #0
 80212de:	f000 8147 	beq.w	8021570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80212e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80212e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80212e8:	3a01      	subs	r2, #1
 80212ea:	2cff      	cmp	r4, #255	; 0xff
 80212ec:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80212f0:	f102 0202 	add.w	r2, r2, #2
 80212f4:	eb05 0e02 	add.w	lr, r5, r2
 80212f8:	5aaa      	ldrh	r2, [r5, r2]
 80212fa:	d018      	beq.n	802132e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80212fc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021300:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021304:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021308:	fb04 fa02 	mul.w	sl, r4, r2
 802130c:	fb08 f805 	mul.w	r8, r8, r5
 8021310:	f10a 0520 	add.w	r5, sl, #32
 8021314:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021318:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802131c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021320:	4442      	add	r2, r8
 8021322:	0a2d      	lsrs	r5, r5, #8
 8021324:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021328:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802132c:	432a      	orrs	r2, r5
 802132e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021330:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021334:	2cff      	cmp	r4, #255	; 0xff
 8021336:	d01a      	beq.n	802136e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8021338:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802133c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021340:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021344:	fb04 fa05 	mul.w	sl, r4, r5
 8021348:	fb08 f80e 	mul.w	r8, r8, lr
 802134c:	f10a 0e20 	add.w	lr, sl, #32
 8021350:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021354:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021358:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802135c:	4445      	add	r5, r8
 802135e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021362:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021366:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802136a:	ea45 050e 	orr.w	r5, r5, lr
 802136e:	fb1c fe01 	smulbb	lr, ip, r1
 8021372:	f1cc 0810 	rsb	r8, ip, #16
 8021376:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802137a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802137e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021382:	eba8 0801 	sub.w	r8, r8, r1
 8021386:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802138a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802138e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021392:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021396:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802139a:	ea4a 0202 	orr.w	r2, sl, r2
 802139e:	4341      	muls	r1, r0
 80213a0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80213a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80213a8:	fb09 1108 	mla	r1, r9, r8, r1
 80213ac:	ea4b 0505 	orr.w	r5, fp, r5
 80213b0:	fb0c 1102 	mla	r1, ip, r2, r1
 80213b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80213b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80213bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80213c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213c4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80213c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80213cc:	fa1f f28e 	uxth.w	r2, lr
 80213d0:	2bff      	cmp	r3, #255	; 0xff
 80213d2:	d103      	bne.n	80213dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80213d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80213d6:	29ff      	cmp	r1, #255	; 0xff
 80213d8:	f000 80de 	beq.w	8021598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80213dc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80213de:	1215      	asrs	r5, r2, #8
 80213e0:	8838      	ldrh	r0, [r7, #0]
 80213e2:	434b      	muls	r3, r1
 80213e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80213e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213ea:	f103 0c01 	add.w	ip, r3, #1
 80213ee:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80213f2:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80213f6:	fa5f fc83 	uxtb.w	ip, r3
 80213fa:	1203      	asrs	r3, r0, #8
 80213fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021400:	fb13 f30c 	smulbb	r3, r3, ip
 8021404:	fb05 3501 	mla	r5, r5, r1, r3
 8021408:	10c3      	asrs	r3, r0, #3
 802140a:	10d1      	asrs	r1, r2, #3
 802140c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021410:	00d2      	lsls	r2, r2, #3
 8021412:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021416:	b2ad      	uxth	r5, r5
 8021418:	fb13 f30c 	smulbb	r3, r3, ip
 802141c:	b2d2      	uxtb	r2, r2
 802141e:	fb01 3104 	mla	r1, r1, r4, r3
 8021422:	00c3      	lsls	r3, r0, #3
 8021424:	b2db      	uxtb	r3, r3
 8021426:	b289      	uxth	r1, r1
 8021428:	fb13 f30c 	smulbb	r3, r3, ip
 802142c:	fb02 3304 	mla	r3, r2, r4, r3
 8021430:	b29a      	uxth	r2, r3
 8021432:	1c6b      	adds	r3, r5, #1
 8021434:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021438:	1c53      	adds	r3, r2, #1
 802143a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802143e:	1c4a      	adds	r2, r1, #1
 8021440:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021444:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021448:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802144c:	0949      	lsrs	r1, r1, #5
 802144e:	432b      	orrs	r3, r5
 8021450:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021454:	430b      	orrs	r3, r1
 8021456:	803b      	strh	r3, [r7, #0]
 8021458:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802145a:	3702      	adds	r7, #2
 802145c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802145e:	4413      	add	r3, r2
 8021460:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021462:	9321      	str	r3, [sp, #132]	; 0x84
 8021464:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021466:	441a      	add	r2, r3
 8021468:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802146a:	3b01      	subs	r3, #1
 802146c:	9222      	str	r2, [sp, #136]	; 0x88
 802146e:	9313      	str	r3, [sp, #76]	; 0x4c
 8021470:	e687      	b.n	8021182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021472:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021474:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021476:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021478:	4433      	add	r3, r6
 802147a:	9321      	str	r3, [sp, #132]	; 0x84
 802147c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802147e:	441c      	add	r4, r3
 8021480:	9b08      	ldr	r3, [sp, #32]
 8021482:	3b01      	subs	r3, #1
 8021484:	9422      	str	r4, [sp, #136]	; 0x88
 8021486:	9308      	str	r3, [sp, #32]
 8021488:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802148a:	3302      	adds	r3, #2
 802148c:	9309      	str	r3, [sp, #36]	; 0x24
 802148e:	e656      	b.n	802113e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021490:	d028      	beq.n	80214e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8021492:	9b08      	ldr	r3, [sp, #32]
 8021494:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021496:	3b01      	subs	r3, #1
 8021498:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802149a:	fb00 5003 	mla	r0, r0, r3, r5
 802149e:	1400      	asrs	r0, r0, #16
 80214a0:	f53f ae6a 	bmi.w	8021178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214a4:	3901      	subs	r1, #1
 80214a6:	4288      	cmp	r0, r1
 80214a8:	f6bf ae66 	bge.w	8021178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214ac:	9924      	ldr	r1, [sp, #144]	; 0x90
 80214ae:	9822      	ldr	r0, [sp, #136]	; 0x88
 80214b0:	fb01 0303 	mla	r3, r1, r3, r0
 80214b4:	141b      	asrs	r3, r3, #16
 80214b6:	f53f ae5f 	bmi.w	8021178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214ba:	3a01      	subs	r2, #1
 80214bc:	4293      	cmp	r3, r2
 80214be:	f6bf ae5b 	bge.w	8021178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214c2:	9b08      	ldr	r3, [sp, #32]
 80214c4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80214c8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80214cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80214ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80214d0:	2b00      	cmp	r3, #0
 80214d2:	f300 8082 	bgt.w	80215da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 80214d6:	9b08      	ldr	r3, [sp, #32]
 80214d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80214dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80214e2:	9309      	str	r3, [sp, #36]	; 0x24
 80214e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80214e6:	2b00      	cmp	r3, #0
 80214e8:	f340 81ef 	ble.w	80218ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 80214ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80214f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80214f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214fa:	eef0 6a62 	vmov.f32	s13, s5
 80214fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021502:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021506:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802150a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802150e:	eef0 6a43 	vmov.f32	s13, s6
 8021512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021516:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802151a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802151e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021522:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021526:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802152a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802152e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021532:	ee12 2a90 	vmov	r2, s5
 8021536:	eef0 2a47 	vmov.f32	s5, s14
 802153a:	fb92 f3f3 	sdiv	r3, r2, r3
 802153e:	ee13 2a10 	vmov	r2, s6
 8021542:	9323      	str	r3, [sp, #140]	; 0x8c
 8021544:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021546:	eeb0 3a67 	vmov.f32	s6, s15
 802154a:	fb92 f3f3 	sdiv	r3, r2, r3
 802154e:	9324      	str	r3, [sp, #144]	; 0x90
 8021550:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021552:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021554:	3b01      	subs	r3, #1
 8021556:	9311      	str	r3, [sp, #68]	; 0x44
 8021558:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802155a:	bf08      	it	eq
 802155c:	4613      	moveq	r3, r2
 802155e:	9308      	str	r3, [sp, #32]
 8021560:	e5df      	b.n	8021122 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021562:	fb08 f505 	mul.w	r5, r8, r5
 8021566:	fb09 5303 	mla	r3, r9, r3, r5
 802156a:	e65f      	b.n	802122c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802156c:	4681      	mov	r9, r0
 802156e:	e686      	b.n	802127e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021570:	f1c1 0210 	rsb	r2, r1, #16
 8021574:	4341      	muls	r1, r0
 8021576:	fb09 1902 	mla	r9, r9, r2, r1
 802157a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802157e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021582:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021586:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802158a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802158e:	ea42 0909 	orr.w	r9, r2, r9
 8021592:	fa1f f289 	uxth.w	r2, r9
 8021596:	e71b      	b.n	80213d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021598:	803a      	strh	r2, [r7, #0]
 802159a:	e75d      	b.n	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802159c:	f115 0e01 	adds.w	lr, r5, #1
 80215a0:	f53f af5a 	bmi.w	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80215a4:	4572      	cmp	r2, lr
 80215a6:	f6ff af57 	blt.w	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80215aa:	f110 0e01 	adds.w	lr, r0, #1
 80215ae:	f53f af53 	bmi.w	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80215b2:	4573      	cmp	r3, lr
 80215b4:	f6ff af50 	blt.w	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80215b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80215ba:	b21b      	sxth	r3, r3
 80215bc:	b212      	sxth	r2, r2
 80215be:	9502      	str	r5, [sp, #8]
 80215c0:	9301      	str	r3, [sp, #4]
 80215c2:	9200      	str	r2, [sp, #0]
 80215c4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80215c8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80215cc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80215d0:	4639      	mov	r1, r7
 80215d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80215d4:	f7ff fc02 	bl	8020ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80215d8:	e73e      	b.n	8021458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80215da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80215dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80215e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80215e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80215e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215e8:	fa1f fc82 	uxth.w	ip, r2
 80215ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80215f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80215f6:	141f      	asrs	r7, r3, #16
 80215f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80215fa:	141b      	asrs	r3, r3, #16
 80215fc:	fb01 3707 	mla	r7, r1, r7, r3
 8021600:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021602:	eb03 0a07 	add.w	sl, r3, r7
 8021606:	f813 9007 	ldrb.w	r9, [r3, r7]
 802160a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802160e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021612:	b29b      	uxth	r3, r3
 8021614:	2d00      	cmp	r5, #0
 8021616:	f000 813d 	beq.w	8021894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 802161a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802161e:	eb0a 0b01 	add.w	fp, sl, r1
 8021622:	fa1f fa85 	uxth.w	sl, r5
 8021626:	940f      	str	r4, [sp, #60]	; 0x3c
 8021628:	fb0a fc0c 	mul.w	ip, sl, ip
 802162c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021630:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021634:	eba0 000c 	sub.w	r0, r0, ip
 8021638:	9410      	str	r4, [sp, #64]	; 0x40
 802163a:	fa1f fa8a 	uxth.w	sl, sl
 802163e:	b280      	uxth	r0, r0
 8021640:	eba3 030a 	sub.w	r3, r3, sl
 8021644:	fb08 f000 	mul.w	r0, r8, r0
 8021648:	b29b      	uxth	r3, r3
 802164a:	fb09 0303 	mla	r3, r9, r3, r0
 802164e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021650:	fb0a 3300 	mla	r3, sl, r0, r3
 8021654:	fb0c 3304 	mla	r3, ip, r4, r3
 8021658:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802165c:	2b00      	cmp	r3, #0
 802165e:	f000 810b 	beq.w	8021878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 8021662:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021664:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021668:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802166a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802166e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021672:	f000 8114 	beq.w	802189e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021676:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802167a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802167e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021682:	fb0a fc0c 	mul.w	ip, sl, ip
 8021686:	fb09 f707 	mul.w	r7, r9, r7
 802168a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802168e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021692:	f107 0b20 	add.w	fp, r7, #32
 8021696:	44cc      	add	ip, r9
 8021698:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802169c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80216a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80216a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80216a8:	ea4c 0909 	orr.w	r9, ip, r9
 80216ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80216b0:	8847      	ldrh	r7, [r0, #2]
 80216b2:	d019      	beq.n	80216e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 80216b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80216b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80216bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80216c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80216c4:	fb08 f807 	mul.w	r8, r8, r7
 80216c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80216cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80216d0:	f108 0b20 	add.w	fp, r8, #32
 80216d4:	44bc      	add	ip, r7
 80216d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80216da:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80216de:	0a3f      	lsrs	r7, r7, #8
 80216e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80216e4:	ea4c 0707 	orr.w	r7, ip, r7
 80216e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80216ec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80216f0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80216f4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80216f8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80216fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021700:	ea4c 0909 	orr.w	r9, ip, r9
 8021704:	ea4a 0707 	orr.w	r7, sl, r7
 8021708:	2d00      	cmp	r5, #0
 802170a:	f000 80ca 	beq.w	80218a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 802170e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021712:	3901      	subs	r1, #1
 8021714:	0049      	lsls	r1, r1, #1
 8021716:	3102      	adds	r1, #2
 8021718:	eb00 0c01 	add.w	ip, r0, r1
 802171c:	5a41      	ldrh	r1, [r0, r1]
 802171e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021720:	28ff      	cmp	r0, #255	; 0xff
 8021722:	d019      	beq.n	8021758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 8021724:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021728:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802172a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802172e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021732:	fb04 fa01 	mul.w	sl, r4, r1
 8021736:	fb08 f800 	mul.w	r8, r8, r0
 802173a:	f10a 0020 	add.w	r0, sl, #32
 802173e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021742:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021746:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802174a:	4441      	add	r1, r8
 802174c:	0a00      	lsrs	r0, r0, #8
 802174e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021752:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021756:	4301      	orrs	r1, r0
 8021758:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802175a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802175e:	2cff      	cmp	r4, #255	; 0xff
 8021760:	d01a      	beq.n	8021798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8021762:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021766:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802176a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802176e:	fb04 fa00 	mul.w	sl, r4, r0
 8021772:	fb08 f80c 	mul.w	r8, r8, ip
 8021776:	f10a 0c20 	add.w	ip, sl, #32
 802177a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802177e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021782:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021786:	4440      	add	r0, r8
 8021788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802178c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021790:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021794:	ea40 000c 	orr.w	r0, r0, ip
 8021798:	fb15 fc02 	smulbb	ip, r5, r2
 802179c:	f1c5 0810 	rsb	r8, r5, #16
 80217a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80217a4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80217a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80217ac:	eba8 0802 	sub.w	r8, r8, r2
 80217b0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80217b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80217b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80217bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80217c0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80217c4:	ea4a 0101 	orr.w	r1, sl, r1
 80217c8:	437a      	muls	r2, r7
 80217ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80217ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80217d2:	fb09 2208 	mla	r2, r9, r8, r2
 80217d6:	ea4b 0000 	orr.w	r0, fp, r0
 80217da:	fb05 2201 	mla	r2, r5, r1, r2
 80217de:	fb0c 2200 	mla	r2, ip, r0, r2
 80217e2:	0d57      	lsrs	r7, r2, #21
 80217e4:	0952      	lsrs	r2, r2, #5
 80217e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80217ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80217ee:	433a      	orrs	r2, r7
 80217f0:	2bff      	cmp	r3, #255	; 0xff
 80217f2:	b292      	uxth	r2, r2
 80217f4:	d102      	bne.n	80217fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80217f6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80217f8:	29ff      	cmp	r1, #255	; 0xff
 80217fa:	d063      	beq.n	80218c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 80217fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80217fe:	1215      	asrs	r5, r2, #8
 8021800:	f8be 1000 	ldrh.w	r1, [lr]
 8021804:	4343      	muls	r3, r0
 8021806:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021808:	10cf      	asrs	r7, r1, #3
 802180a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802180e:	1c58      	adds	r0, r3, #1
 8021810:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021814:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021818:	1208      	asrs	r0, r1, #8
 802181a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802181e:	00c9      	lsls	r1, r1, #3
 8021820:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021824:	b2db      	uxtb	r3, r3
 8021826:	b2c9      	uxtb	r1, r1
 8021828:	fb10 f003 	smulbb	r0, r0, r3
 802182c:	fb11 f103 	smulbb	r1, r1, r3
 8021830:	fb05 0504 	mla	r5, r5, r4, r0
 8021834:	10d0      	asrs	r0, r2, #3
 8021836:	fb17 f703 	smulbb	r7, r7, r3
 802183a:	00d2      	lsls	r2, r2, #3
 802183c:	b2ad      	uxth	r5, r5
 802183e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021842:	b2d2      	uxtb	r2, r2
 8021844:	fb00 7004 	mla	r0, r0, r4, r7
 8021848:	1c6b      	adds	r3, r5, #1
 802184a:	fb02 1204 	mla	r2, r2, r4, r1
 802184e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021852:	b292      	uxth	r2, r2
 8021854:	b280      	uxth	r0, r0
 8021856:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802185a:	1c57      	adds	r7, r2, #1
 802185c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021860:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021864:	433d      	orrs	r5, r7
 8021866:	1c47      	adds	r7, r0, #1
 8021868:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802186c:	097f      	lsrs	r7, r7, #5
 802186e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021872:	433d      	orrs	r5, r7
 8021874:	f8ae 5000 	strh.w	r5, [lr]
 8021878:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802187a:	f10e 0e02 	add.w	lr, lr, #2
 802187e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021880:	4413      	add	r3, r2
 8021882:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021884:	9321      	str	r3, [sp, #132]	; 0x84
 8021886:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021888:	441a      	add	r2, r3
 802188a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802188c:	3b01      	subs	r3, #1
 802188e:	9222      	str	r2, [sp, #136]	; 0x88
 8021890:	9313      	str	r3, [sp, #76]	; 0x4c
 8021892:	e61c      	b.n	80214ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021894:	fb08 f000 	mul.w	r0, r8, r0
 8021898:	fb09 0303 	mla	r3, r9, r3, r0
 802189c:	e6dc      	b.n	8021658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 802189e:	46b9      	mov	r9, r7
 80218a0:	e704      	b.n	80216ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 80218a2:	f1c2 0110 	rsb	r1, r2, #16
 80218a6:	437a      	muls	r2, r7
 80218a8:	fb09 2901 	mla	r9, r9, r1, r2
 80218ac:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80218b0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80218b4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80218b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80218c0:	4302      	orrs	r2, r0
 80218c2:	e795      	b.n	80217f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 80218c4:	f8ae 2000 	strh.w	r2, [lr]
 80218c8:	e7d6      	b.n	8021878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 80218ca:	b017      	add	sp, #92	; 0x5c
 80218cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080218d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80218d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80218d4:	b085      	sub	sp, #20
 80218d6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80218da:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80218de:	2800      	cmp	r0, #0
 80218e0:	9103      	str	r1, [sp, #12]
 80218e2:	fb00 7406 	mla	r4, r0, r6, r7
 80218e6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80218ea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80218ee:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80218f2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80218f6:	eb02 0904 	add.w	r9, r2, r4
 80218fa:	9501      	str	r5, [sp, #4]
 80218fc:	f2c0 8141 	blt.w	8021b82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021900:	4583      	cmp	fp, r0
 8021902:	f340 813e 	ble.w	8021b82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021906:	2f00      	cmp	r7, #0
 8021908:	f2c0 8137 	blt.w	8021b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802190c:	42be      	cmp	r6, r7
 802190e:	f340 8134 	ble.w	8021b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021912:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021916:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802191a:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802191e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021922:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021926:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802192a:	4355      	muls	r5, r2
 802192c:	fb0c f203 	mul.w	r2, ip, r3
 8021930:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021934:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021938:	441d      	add	r5, r3
 802193a:	f102 0320 	add.w	r3, r2, #32
 802193e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021942:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021946:	0a1b      	lsrs	r3, r3, #8
 8021948:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802194c:	431c      	orrs	r4, r3
 802194e:	1c7b      	adds	r3, r7, #1
 8021950:	f100 811c 	bmi.w	8021b8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021954:	429e      	cmp	r6, r3
 8021956:	f340 8119 	ble.w	8021b8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802195a:	2900      	cmp	r1, #0
 802195c:	f000 8119 	beq.w	8021b92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021960:	9a01      	ldr	r2, [sp, #4]
 8021962:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021966:	8855      	ldrh	r5, [r2, #2]
 8021968:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802196c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021970:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021974:	fb08 f802 	mul.w	r8, r8, r2
 8021978:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802197c:	435d      	muls	r5, r3
 802197e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021982:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021986:	44d0      	add	r8, sl
 8021988:	f105 0a20 	add.w	sl, r5, #32
 802198c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021990:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021994:	0a2d      	lsrs	r5, r5, #8
 8021996:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802199a:	432a      	orrs	r2, r5
 802199c:	3001      	adds	r0, #1
 802199e:	f100 80fe 	bmi.w	8021b9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80219a2:	4583      	cmp	fp, r0
 80219a4:	f340 80fb 	ble.w	8021b9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80219a8:	f1be 0f00 	cmp.w	lr, #0
 80219ac:	f000 80fc 	beq.w	8021ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80219b0:	2f00      	cmp	r7, #0
 80219b2:	f2c0 80f1 	blt.w	8021b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80219b6:	42be      	cmp	r6, r7
 80219b8:	f340 80ee 	ble.w	8021b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80219bc:	9801      	ldr	r0, [sp, #4]
 80219be:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80219c2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80219c6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80219ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80219ce:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80219d2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80219d6:	fb0a fa00 	mul.w	sl, sl, r0
 80219da:	fb05 f808 	mul.w	r8, r5, r8
 80219de:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80219e2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80219e6:	4482      	add	sl, r0
 80219e8:	f108 0020 	add.w	r0, r8, #32
 80219ec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80219f0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80219f4:	0a00      	lsrs	r0, r0, #8
 80219f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80219fa:	ea4b 0b00 	orr.w	fp, fp, r0
 80219fe:	3701      	adds	r7, #1
 8021a00:	f100 80d7 	bmi.w	8021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021a04:	42be      	cmp	r6, r7
 8021a06:	f340 80d4 	ble.w	8021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021a0a:	2900      	cmp	r1, #0
 8021a0c:	f000 80d4 	beq.w	8021bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021a10:	3601      	adds	r6, #1
 8021a12:	9801      	ldr	r0, [sp, #4]
 8021a14:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021a18:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021a1c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021a20:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021a24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a28:	fb09 f906 	mul.w	r9, r9, r6
 8021a2c:	fb07 f800 	mul.w	r8, r7, r0
 8021a30:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021a34:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021a38:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021a3c:	44d1      	add	r9, sl
 8021a3e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021a42:	f108 0020 	add.w	r0, r8, #32
 8021a46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021a4a:	0a00      	lsrs	r0, r0, #8
 8021a4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a50:	4330      	orrs	r0, r6
 8021a52:	b28e      	uxth	r6, r1
 8021a54:	fa1f f98e 	uxth.w	r9, lr
 8021a58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021a5c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021a60:	fb06 f809 	mul.w	r8, r6, r9
 8021a64:	0136      	lsls	r6, r6, #4
 8021a66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a6a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021a6e:	9601      	str	r6, [sp, #4]
 8021a70:	ea4a 0404 	orr.w	r4, sl, r4
 8021a74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021a78:	fa1f f689 	uxth.w	r6, r9
 8021a7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a80:	fb11 f90e 	smulbb	r9, r1, lr
 8021a84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a88:	9602      	str	r6, [sp, #8]
 8021a8a:	4626      	mov	r6, r4
 8021a8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021a90:	f1ce 0410 	rsb	r4, lr, #16
 8021a94:	ea4a 0202 	orr.w	r2, sl, r2
 8021a98:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021a9c:	1a64      	subs	r4, r4, r1
 8021a9e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021aa2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021aa6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021aaa:	434a      	muls	r2, r1
 8021aac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021ab0:	ea4a 0000 	orr.w	r0, sl, r0
 8021ab4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021ab8:	fb04 2406 	mla	r4, r4, r6, r2
 8021abc:	9903      	ldr	r1, [sp, #12]
 8021abe:	fb09 4200 	mla	r2, r9, r0, r4
 8021ac2:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021ac6:	9801      	ldr	r0, [sp, #4]
 8021ac8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021acc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021ad0:	8809      	ldrh	r1, [r1, #0]
 8021ad2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021ad6:	ea44 0b0b 	orr.w	fp, r4, fp
 8021ada:	9c02      	ldr	r4, [sp, #8]
 8021adc:	1b00      	subs	r0, r0, r4
 8021ade:	9c01      	ldr	r4, [sp, #4]
 8021ae0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021ae4:	eba4 0608 	sub.w	r6, r4, r8
 8021ae8:	b280      	uxth	r0, r0
 8021aea:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021aee:	b2b6      	uxth	r6, r6
 8021af0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021af4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021af8:	4373      	muls	r3, r6
 8021afa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021afe:	fb0c 3300 	mla	r3, ip, r0, r3
 8021b02:	9802      	ldr	r0, [sp, #8]
 8021b04:	ea42 0e0e 	orr.w	lr, r2, lr
 8021b08:	fb00 3505 	mla	r5, r0, r5, r3
 8021b0c:	120b      	asrs	r3, r1, #8
 8021b0e:	10c8      	asrs	r0, r1, #3
 8021b10:	fb08 5707 	mla	r7, r8, r7, r5
 8021b14:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021b18:	00c9      	lsls	r1, r1, #3
 8021b1a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021b1e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021b22:	fa1f f28e 	uxth.w	r2, lr
 8021b26:	b2c9      	uxtb	r1, r1
 8021b28:	b2ff      	uxtb	r7, r7
 8021b2a:	437b      	muls	r3, r7
 8021b2c:	4378      	muls	r0, r7
 8021b2e:	434f      	muls	r7, r1
 8021b30:	1c59      	adds	r1, r3, #1
 8021b32:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021b36:	1213      	asrs	r3, r2, #8
 8021b38:	f023 0307 	bic.w	r3, r3, #7
 8021b3c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021b40:	1c41      	adds	r1, r0, #1
 8021b42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021b46:	10d1      	asrs	r1, r2, #3
 8021b48:	021b      	lsls	r3, r3, #8
 8021b4a:	f021 0103 	bic.w	r1, r1, #3
 8021b4e:	00d2      	lsls	r2, r2, #3
 8021b50:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021b54:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021b58:	00c9      	lsls	r1, r1, #3
 8021b5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b5e:	430b      	orrs	r3, r1
 8021b60:	1c79      	adds	r1, r7, #1
 8021b62:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021b66:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021b6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021b6e:	431a      	orrs	r2, r3
 8021b70:	9b03      	ldr	r3, [sp, #12]
 8021b72:	801a      	strh	r2, [r3, #0]
 8021b74:	b005      	add	sp, #20
 8021b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b7a:	f04f 0c00 	mov.w	ip, #0
 8021b7e:	4664      	mov	r4, ip
 8021b80:	e6e5      	b.n	802194e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021b82:	2300      	movs	r3, #0
 8021b84:	469c      	mov	ip, r3
 8021b86:	461a      	mov	r2, r3
 8021b88:	461c      	mov	r4, r3
 8021b8a:	e707      	b.n	802199c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021b8c:	2300      	movs	r3, #0
 8021b8e:	461a      	mov	r2, r3
 8021b90:	e704      	b.n	802199c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021b92:	460b      	mov	r3, r1
 8021b94:	460a      	mov	r2, r1
 8021b96:	e701      	b.n	802199c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021b98:	2500      	movs	r5, #0
 8021b9a:	46ab      	mov	fp, r5
 8021b9c:	e72f      	b.n	80219fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021b9e:	2700      	movs	r7, #0
 8021ba0:	463d      	mov	r5, r7
 8021ba2:	4638      	mov	r0, r7
 8021ba4:	46bb      	mov	fp, r7
 8021ba6:	e754      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021ba8:	4677      	mov	r7, lr
 8021baa:	4675      	mov	r5, lr
 8021bac:	4670      	mov	r0, lr
 8021bae:	46f3      	mov	fp, lr
 8021bb0:	e74f      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021bb2:	2700      	movs	r7, #0
 8021bb4:	4638      	mov	r0, r7
 8021bb6:	e74c      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021bb8:	460f      	mov	r7, r1
 8021bba:	4608      	mov	r0, r1
 8021bbc:	e749      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bc4:	b093      	sub	sp, #76	; 0x4c
 8021bc6:	9210      	str	r2, [sp, #64]	; 0x40
 8021bc8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021bca:	9011      	str	r0, [sp, #68]	; 0x44
 8021bcc:	910e      	str	r1, [sp, #56]	; 0x38
 8021bce:	6850      	ldr	r0, [r2, #4]
 8021bd0:	9306      	str	r3, [sp, #24]
 8021bd2:	6812      	ldr	r2, [r2, #0]
 8021bd4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021bd8:	fb00 1303 	mla	r3, r0, r3, r1
 8021bdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021be0:	9307      	str	r3, [sp, #28]
 8021be2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021be4:	681b      	ldr	r3, [r3, #0]
 8021be6:	9308      	str	r3, [sp, #32]
 8021be8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bea:	685b      	ldr	r3, [r3, #4]
 8021bec:	9309      	str	r3, [sp, #36]	; 0x24
 8021bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021bf0:	2b00      	cmp	r3, #0
 8021bf2:	dc03      	bgt.n	8021bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021bf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021bf6:	2b00      	cmp	r3, #0
 8021bf8:	f340 83b6 	ble.w	8022368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021bfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c06:	1e48      	subs	r0, r1, #1
 8021c08:	1e55      	subs	r5, r2, #1
 8021c0a:	9b06      	ldr	r3, [sp, #24]
 8021c0c:	2b00      	cmp	r3, #0
 8021c0e:	f340 8165 	ble.w	8021edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021c12:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021c14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021c16:	1436      	asrs	r6, r6, #16
 8021c18:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021c1c:	d406      	bmi.n	8021c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021c1e:	4286      	cmp	r6, r0
 8021c20:	da04      	bge.n	8021c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021c22:	2b00      	cmp	r3, #0
 8021c24:	db02      	blt.n	8021c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021c26:	42ab      	cmp	r3, r5
 8021c28:	f2c0 8159 	blt.w	8021ede <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021c2c:	3601      	adds	r6, #1
 8021c2e:	f100 8146 	bmi.w	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021c32:	42b1      	cmp	r1, r6
 8021c34:	f2c0 8143 	blt.w	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021c38:	3301      	adds	r3, #1
 8021c3a:	f100 8140 	bmi.w	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021c3e:	429a      	cmp	r2, r3
 8021c40:	f2c0 813d 	blt.w	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021c44:	9b06      	ldr	r3, [sp, #24]
 8021c46:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021c4a:	9f07      	ldr	r7, [sp, #28]
 8021c4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8021c4e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021c50:	2b00      	cmp	r3, #0
 8021c52:	f340 8166 	ble.w	8021f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021c56:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021c58:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021c5a:	1418      	asrs	r0, r3, #16
 8021c5c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021c5e:	142d      	asrs	r5, r5, #16
 8021c60:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021c64:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021c66:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021c6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021c6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021c70:	f100 81f0 	bmi.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021c74:	f102 3eff 	add.w	lr, r2, #4294967295
 8021c78:	4575      	cmp	r5, lr
 8021c7a:	f280 81eb 	bge.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021c7e:	2800      	cmp	r0, #0
 8021c80:	f2c0 81e8 	blt.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021c84:	f103 3eff 	add.w	lr, r3, #4294967295
 8021c88:	4570      	cmp	r0, lr
 8021c8a:	f280 81e3 	bge.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021c8e:	b212      	sxth	r2, r2
 8021c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c92:	fa1f fe81 	uxth.w	lr, r1
 8021c96:	fb00 5002 	mla	r0, r0, r2, r5
 8021c9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021c9e:	eb03 0a00 	add.w	sl, r3, r0
 8021ca2:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021ca6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021caa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021cae:	b29b      	uxth	r3, r3
 8021cb0:	f1bc 0f00 	cmp.w	ip, #0
 8021cb4:	f000 817b 	beq.w	8021fae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8021cb8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021cbc:	eb0a 0b02 	add.w	fp, sl, r2
 8021cc0:	fa1f fa8c 	uxth.w	sl, ip
 8021cc4:	940a      	str	r4, [sp, #40]	; 0x28
 8021cc6:	fb0a fe0e 	mul.w	lr, sl, lr
 8021cca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021cce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021cd2:	eba5 050e 	sub.w	r5, r5, lr
 8021cd6:	940b      	str	r4, [sp, #44]	; 0x2c
 8021cd8:	fa1f fa8a 	uxth.w	sl, sl
 8021cdc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021cde:	b2ad      	uxth	r5, r5
 8021ce0:	eba3 030a 	sub.w	r3, r3, sl
 8021ce4:	fb08 f505 	mul.w	r5, r8, r5
 8021ce8:	b29b      	uxth	r3, r3
 8021cea:	fb09 5303 	mla	r3, r9, r3, r5
 8021cee:	fb0a 3304 	mla	r3, sl, r4, r3
 8021cf2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021cf4:	fb0e 3304 	mla	r3, lr, r4, r3
 8021cf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cfc:	2b00      	cmp	r3, #0
 8021cfe:	f000 80d1 	beq.w	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021d02:	9c08      	ldr	r4, [sp, #32]
 8021d04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021d08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021d0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021d10:	f000 8152 	beq.w	8021fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021d14:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021d18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021d1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d20:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d24:	fb09 f000 	mul.w	r0, r9, r0
 8021d28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021d2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021d30:	f100 0b20 	add.w	fp, r0, #32
 8021d34:	44ce      	add	lr, r9
 8021d36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021d3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021d3e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d46:	ea4e 0909 	orr.w	r9, lr, r9
 8021d4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021d4e:	8868      	ldrh	r0, [r5, #2]
 8021d50:	d019      	beq.n	8021d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021d52:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021d56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021d5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d5e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d62:	fb08 f800 	mul.w	r8, r8, r0
 8021d66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021d6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021d6e:	f108 0b20 	add.w	fp, r8, #32
 8021d72:	4486      	add	lr, r0
 8021d74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021d78:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021d7c:	0a00      	lsrs	r0, r0, #8
 8021d7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d82:	ea4e 0000 	orr.w	r0, lr, r0
 8021d86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021d8a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021d8e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021d92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021d96:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021d9a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d9e:	ea4e 0909 	orr.w	r9, lr, r9
 8021da2:	ea4a 0000 	orr.w	r0, sl, r0
 8021da6:	f1bc 0f00 	cmp.w	ip, #0
 8021daa:	f000 8107 	beq.w	8021fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8021dae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021db2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021db4:	3a01      	subs	r2, #1
 8021db6:	2cff      	cmp	r4, #255	; 0xff
 8021db8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8021dbc:	f102 0202 	add.w	r2, r2, #2
 8021dc0:	eb05 0e02 	add.w	lr, r5, r2
 8021dc4:	5aaa      	ldrh	r2, [r5, r2]
 8021dc6:	d018      	beq.n	8021dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021dc8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021dcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021dd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021dd4:	fb04 fa02 	mul.w	sl, r4, r2
 8021dd8:	fb08 f805 	mul.w	r8, r8, r5
 8021ddc:	f10a 0520 	add.w	r5, sl, #32
 8021de0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021de4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021de8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021dec:	4442      	add	r2, r8
 8021dee:	0a2d      	lsrs	r5, r5, #8
 8021df0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021df4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021df8:	432a      	orrs	r2, r5
 8021dfa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dfc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021e00:	2cff      	cmp	r4, #255	; 0xff
 8021e02:	d01a      	beq.n	8021e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8021e04:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021e08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021e0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e10:	fb04 fa05 	mul.w	sl, r4, r5
 8021e14:	fb08 f80e 	mul.w	r8, r8, lr
 8021e18:	f10a 0e20 	add.w	lr, sl, #32
 8021e1c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021e20:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021e24:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021e28:	4445      	add	r5, r8
 8021e2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e2e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021e32:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021e36:	ea45 050e 	orr.w	r5, r5, lr
 8021e3a:	fb1c fe01 	smulbb	lr, ip, r1
 8021e3e:	f1cc 0810 	rsb	r8, ip, #16
 8021e42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021e46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e4a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021e4e:	eba8 0801 	sub.w	r8, r8, r1
 8021e52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021e56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e5a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021e5e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021e62:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021e66:	ea4a 0202 	orr.w	r2, sl, r2
 8021e6a:	4341      	muls	r1, r0
 8021e6c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021e70:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e74:	fb09 1108 	mla	r1, r9, r8, r1
 8021e78:	ea4b 0505 	orr.w	r5, fp, r5
 8021e7c:	fb0c 1102 	mla	r1, ip, r2, r1
 8021e80:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021e84:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021e88:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021e8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e90:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021e94:	ea42 0e0e 	orr.w	lr, r2, lr
 8021e98:	fa1f f28e 	uxth.w	r2, lr
 8021e9c:	2bff      	cmp	r3, #255	; 0xff
 8021e9e:	f040 80a1 	bne.w	8021fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8021ea2:	803a      	strh	r2, [r7, #0]
 8021ea4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021ea6:	3702      	adds	r7, #2
 8021ea8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021eaa:	4413      	add	r3, r2
 8021eac:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021eae:	931d      	str	r3, [sp, #116]	; 0x74
 8021eb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021eb2:	441a      	add	r2, r3
 8021eb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021eb6:	3b01      	subs	r3, #1
 8021eb8:	921e      	str	r2, [sp, #120]	; 0x78
 8021eba:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ebc:	e6c7      	b.n	8021c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021ebe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021ec0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8021ec2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8021ec4:	4433      	add	r3, r6
 8021ec6:	931d      	str	r3, [sp, #116]	; 0x74
 8021ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021eca:	441c      	add	r4, r3
 8021ecc:	9b06      	ldr	r3, [sp, #24]
 8021ece:	3b01      	subs	r3, #1
 8021ed0:	941e      	str	r4, [sp, #120]	; 0x78
 8021ed2:	9306      	str	r3, [sp, #24]
 8021ed4:	9b07      	ldr	r3, [sp, #28]
 8021ed6:	3302      	adds	r3, #2
 8021ed8:	9307      	str	r3, [sp, #28]
 8021eda:	e696      	b.n	8021c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021edc:	d028      	beq.n	8021f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ede:	9b06      	ldr	r3, [sp, #24]
 8021ee0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021ee2:	3b01      	subs	r3, #1
 8021ee4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021ee6:	fb00 5003 	mla	r0, r0, r3, r5
 8021eea:	1400      	asrs	r0, r0, #16
 8021eec:	f53f aeaa 	bmi.w	8021c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021ef0:	3901      	subs	r1, #1
 8021ef2:	4288      	cmp	r0, r1
 8021ef4:	f6bf aea6 	bge.w	8021c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021ef8:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021efa:	981e      	ldr	r0, [sp, #120]	; 0x78
 8021efc:	fb01 0303 	mla	r3, r1, r3, r0
 8021f00:	141b      	asrs	r3, r3, #16
 8021f02:	f53f ae9f 	bmi.w	8021c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021f06:	3a01      	subs	r2, #1
 8021f08:	4293      	cmp	r3, r2
 8021f0a:	f6bf ae9b 	bge.w	8021c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021f0e:	9b06      	ldr	r3, [sp, #24]
 8021f10:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021f14:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021f18:	930f      	str	r3, [sp, #60]	; 0x3c
 8021f1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021f1c:	2b00      	cmp	r3, #0
 8021f1e:	f300 80b6 	bgt.w	802208e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8021f22:	9b06      	ldr	r3, [sp, #24]
 8021f24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021f28:	9b07      	ldr	r3, [sp, #28]
 8021f2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021f2e:	9307      	str	r3, [sp, #28]
 8021f30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021f32:	2b00      	cmp	r3, #0
 8021f34:	f340 8218 	ble.w	8022368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021f38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021f3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f46:	eef0 6a62 	vmov.f32	s13, s5
 8021f4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021f4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f56:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8021f5a:	eef0 6a43 	vmov.f32	s13, s6
 8021f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f62:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8021f66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f7e:	ee12 2a90 	vmov	r2, s5
 8021f82:	eef0 2a47 	vmov.f32	s5, s14
 8021f86:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f8a:	ee13 2a10 	vmov	r2, s6
 8021f8e:	931f      	str	r3, [sp, #124]	; 0x7c
 8021f90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f92:	eeb0 3a67 	vmov.f32	s6, s15
 8021f96:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f9a:	9320      	str	r3, [sp, #128]	; 0x80
 8021f9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021f9e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021fa0:	3b01      	subs	r3, #1
 8021fa2:	930e      	str	r3, [sp, #56]	; 0x38
 8021fa4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021fa6:	bf08      	it	eq
 8021fa8:	4613      	moveq	r3, r2
 8021faa:	9306      	str	r3, [sp, #24]
 8021fac:	e61f      	b.n	8021bee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021fae:	fb08 f505 	mul.w	r5, r8, r5
 8021fb2:	fb09 5303 	mla	r3, r9, r3, r5
 8021fb6:	e69f      	b.n	8021cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8021fb8:	4681      	mov	r9, r0
 8021fba:	e6c6      	b.n	8021d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8021fbc:	f1c1 0210 	rsb	r2, r1, #16
 8021fc0:	4341      	muls	r1, r0
 8021fc2:	fb09 1902 	mla	r9, r9, r2, r1
 8021fc6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021fca:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021fce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021fd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021fd6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021fda:	ea42 0909 	orr.w	r9, r2, r9
 8021fde:	fa1f f289 	uxth.w	r2, r9
 8021fe2:	e75b      	b.n	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8021fe4:	f8b7 c000 	ldrh.w	ip, [r7]
 8021fe8:	43db      	mvns	r3, r3
 8021fea:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021fee:	fa5f fe83 	uxtb.w	lr, r3
 8021ff2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021ff6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021ffa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021ffe:	fb00 f00e 	mul.w	r0, r0, lr
 8022002:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022006:	b2db      	uxtb	r3, r3
 8022008:	1c41      	adds	r1, r0, #1
 802200a:	fb05 f50e 	mul.w	r5, r5, lr
 802200e:	fb03 f30e 	mul.w	r3, r3, lr
 8022012:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022016:	1211      	asrs	r1, r2, #8
 8022018:	f021 0107 	bic.w	r1, r1, #7
 802201c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022020:	48d3      	ldr	r0, [pc, #844]	; (8022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8022022:	b2c9      	uxtb	r1, r1
 8022024:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022028:	1c69      	adds	r1, r5, #1
 802202a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802202e:	10d1      	asrs	r1, r2, #3
 8022030:	00d2      	lsls	r2, r2, #3
 8022032:	f021 0103 	bic.w	r1, r1, #3
 8022036:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802203a:	00c9      	lsls	r1, r1, #3
 802203c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022040:	4301      	orrs	r1, r0
 8022042:	1c58      	adds	r0, r3, #1
 8022044:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022048:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802204c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022050:	430a      	orrs	r2, r1
 8022052:	e726      	b.n	8021ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022054:	f115 0e01 	adds.w	lr, r5, #1
 8022058:	f53f af24 	bmi.w	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802205c:	4572      	cmp	r2, lr
 802205e:	f6ff af21 	blt.w	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022062:	f110 0e01 	adds.w	lr, r0, #1
 8022066:	f53f af1d 	bmi.w	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802206a:	4573      	cmp	r3, lr
 802206c:	f6ff af1a 	blt.w	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022070:	b21b      	sxth	r3, r3
 8022072:	b212      	sxth	r2, r2
 8022074:	9301      	str	r3, [sp, #4]
 8022076:	9200      	str	r2, [sp, #0]
 8022078:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802207c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022080:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022084:	4639      	mov	r1, r7
 8022086:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022088:	f7ff fc22 	bl	80218d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802208c:	e70a      	b.n	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802208e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022090:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022094:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022096:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802209a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802209c:	fa1f fc82 	uxth.w	ip, r2
 80220a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80220a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80220a6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80220aa:	141f      	asrs	r7, r3, #16
 80220ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80220ae:	141b      	asrs	r3, r3, #16
 80220b0:	fb01 3707 	mla	r7, r1, r7, r3
 80220b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220b6:	eb03 0a07 	add.w	sl, r3, r7
 80220ba:	f813 9007 	ldrb.w	r9, [r3, r7]
 80220be:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80220c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80220c6:	b29b      	uxth	r3, r3
 80220c8:	2d00      	cmp	r5, #0
 80220ca:	f000 80fe 	beq.w	80222ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 80220ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80220d2:	eb0a 0b01 	add.w	fp, sl, r1
 80220d6:	fa1f fa85 	uxth.w	sl, r5
 80220da:	940c      	str	r4, [sp, #48]	; 0x30
 80220dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80220e0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80220e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80220e8:	eba0 000c 	sub.w	r0, r0, ip
 80220ec:	940d      	str	r4, [sp, #52]	; 0x34
 80220ee:	fa1f fa8a 	uxth.w	sl, sl
 80220f2:	b280      	uxth	r0, r0
 80220f4:	eba3 030a 	sub.w	r3, r3, sl
 80220f8:	fb08 f000 	mul.w	r0, r8, r0
 80220fc:	b29b      	uxth	r3, r3
 80220fe:	fb09 0303 	mla	r3, r9, r3, r0
 8022102:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022104:	fb0a 3300 	mla	r3, sl, r0, r3
 8022108:	fb0c 3304 	mla	r3, ip, r4, r3
 802210c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022110:	2b00      	cmp	r3, #0
 8022112:	f000 80cc 	beq.w	80222ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8022116:	9808      	ldr	r0, [sp, #32]
 8022118:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802211c:	9c08      	ldr	r4, [sp, #32]
 802211e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022122:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022126:	f000 80d5 	beq.w	80222d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802212a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802212e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022132:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022136:	fb0a fc0c 	mul.w	ip, sl, ip
 802213a:	fb09 f707 	mul.w	r7, r9, r7
 802213e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022142:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022146:	f107 0b20 	add.w	fp, r7, #32
 802214a:	44cc      	add	ip, r9
 802214c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022150:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022154:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022158:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802215c:	ea4c 0909 	orr.w	r9, ip, r9
 8022160:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022164:	8847      	ldrh	r7, [r0, #2]
 8022166:	d019      	beq.n	802219c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 8022168:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802216c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022170:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022174:	fb0a fc0c 	mul.w	ip, sl, ip
 8022178:	fb08 f807 	mul.w	r8, r8, r7
 802217c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022180:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022184:	f108 0b20 	add.w	fp, r8, #32
 8022188:	44bc      	add	ip, r7
 802218a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802218e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022192:	0a3f      	lsrs	r7, r7, #8
 8022194:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022198:	ea4c 0707 	orr.w	r7, ip, r7
 802219c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80221a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80221a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80221ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80221b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221b4:	ea4c 0909 	orr.w	r9, ip, r9
 80221b8:	ea4a 0707 	orr.w	r7, sl, r7
 80221bc:	2d00      	cmp	r5, #0
 80221be:	f000 808b 	beq.w	80222d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 80221c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80221c6:	3901      	subs	r1, #1
 80221c8:	0049      	lsls	r1, r1, #1
 80221ca:	3102      	adds	r1, #2
 80221cc:	eb00 0c01 	add.w	ip, r0, r1
 80221d0:	5a41      	ldrh	r1, [r0, r1]
 80221d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80221d4:	28ff      	cmp	r0, #255	; 0xff
 80221d6:	d019      	beq.n	802220c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 80221d8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80221dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80221de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221e6:	fb04 fa01 	mul.w	sl, r4, r1
 80221ea:	fb08 f800 	mul.w	r8, r8, r0
 80221ee:	f10a 0020 	add.w	r0, sl, #32
 80221f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80221f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80221fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80221fe:	4441      	add	r1, r8
 8022200:	0a00      	lsrs	r0, r0, #8
 8022202:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022206:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802220a:	4301      	orrs	r1, r0
 802220c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802220e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022212:	2cff      	cmp	r4, #255	; 0xff
 8022214:	d01a      	beq.n	802224c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 8022216:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802221a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802221e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022222:	fb04 fa00 	mul.w	sl, r4, r0
 8022226:	fb08 f80c 	mul.w	r8, r8, ip
 802222a:	f10a 0c20 	add.w	ip, sl, #32
 802222e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022232:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022236:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802223a:	4440      	add	r0, r8
 802223c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022240:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022244:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022248:	ea40 000c 	orr.w	r0, r0, ip
 802224c:	fb15 fc02 	smulbb	ip, r5, r2
 8022250:	f1c5 0810 	rsb	r8, r5, #16
 8022254:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022258:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802225c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022260:	eba8 0802 	sub.w	r8, r8, r2
 8022264:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022268:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802226c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022270:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022274:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022278:	ea4a 0101 	orr.w	r1, sl, r1
 802227c:	437a      	muls	r2, r7
 802227e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022282:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022286:	fb09 2208 	mla	r2, r9, r8, r2
 802228a:	ea4b 0000 	orr.w	r0, fp, r0
 802228e:	fb05 2201 	mla	r2, r5, r1, r2
 8022292:	fb0c 2200 	mla	r2, ip, r0, r2
 8022296:	0d57      	lsrs	r7, r2, #21
 8022298:	0952      	lsrs	r2, r2, #5
 802229a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802229e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80222a2:	433a      	orrs	r2, r7
 80222a4:	2bff      	cmp	r3, #255	; 0xff
 80222a6:	b292      	uxth	r2, r2
 80222a8:	d127      	bne.n	80222fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 80222aa:	f8ae 2000 	strh.w	r2, [lr]
 80222ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222b0:	f10e 0e02 	add.w	lr, lr, #2
 80222b4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80222b6:	4413      	add	r3, r2
 80222b8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80222ba:	931d      	str	r3, [sp, #116]	; 0x74
 80222bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80222be:	441a      	add	r2, r3
 80222c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222c2:	3b01      	subs	r3, #1
 80222c4:	921e      	str	r2, [sp, #120]	; 0x78
 80222c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80222c8:	e627      	b.n	8021f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80222ca:	fb08 f000 	mul.w	r0, r8, r0
 80222ce:	fb09 0303 	mla	r3, r9, r3, r0
 80222d2:	e71b      	b.n	802210c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 80222d4:	46b9      	mov	r9, r7
 80222d6:	e743      	b.n	8022160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 80222d8:	f1c2 0110 	rsb	r1, r2, #16
 80222dc:	437a      	muls	r2, r7
 80222de:	fb09 2901 	mla	r9, r9, r1, r2
 80222e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80222e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80222ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80222ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80222f6:	4302      	orrs	r2, r0
 80222f8:	e7d4      	b.n	80222a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 80222fa:	f8be 7000 	ldrh.w	r7, [lr]
 80222fe:	43db      	mvns	r3, r3
 8022300:	4c1b      	ldr	r4, [pc, #108]	; (8022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8022302:	1238      	asrs	r0, r7, #8
 8022304:	fa5f fc83 	uxtb.w	ip, r3
 8022308:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802230c:	10fd      	asrs	r5, r7, #3
 802230e:	00fb      	lsls	r3, r7, #3
 8022310:	fb00 f00c 	mul.w	r0, r0, ip
 8022314:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022318:	b2db      	uxtb	r3, r3
 802231a:	fb05 f10c 	mul.w	r1, r5, ip
 802231e:	1c45      	adds	r5, r0, #1
 8022320:	fb03 f30c 	mul.w	r3, r3, ip
 8022324:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022328:	1215      	asrs	r5, r2, #8
 802232a:	f025 0507 	bic.w	r5, r5, #7
 802232e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022332:	1c4d      	adds	r5, r1, #1
 8022334:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022338:	10d1      	asrs	r1, r2, #3
 802233a:	b2c0      	uxtb	r0, r0
 802233c:	f021 0103 	bic.w	r1, r1, #3
 8022340:	00d2      	lsls	r2, r2, #3
 8022342:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022346:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802234a:	00c9      	lsls	r1, r1, #3
 802234c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022350:	4308      	orrs	r0, r1
 8022352:	1c59      	adds	r1, r3, #1
 8022354:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022358:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802235c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022360:	4318      	orrs	r0, r3
 8022362:	f8ae 0000 	strh.w	r0, [lr]
 8022366:	e7a2      	b.n	80222ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8022368:	b013      	add	sp, #76	; 0x4c
 802236a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802236e:	bf00      	nop
 8022370:	fffff800 	.word	0xfffff800

08022374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022378:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 802237c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022380:	fb05 4c03 	mla	ip, r5, r3, r4
 8022384:	2d00      	cmp	r5, #0
 8022386:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802238a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802238e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022392:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022396:	8808      	ldrh	r0, [r1, #0]
 8022398:	f2c0 80a7 	blt.w	80224ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802239c:	45aa      	cmp	sl, r5
 802239e:	f340 80a4 	ble.w	80224ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80223a2:	2c00      	cmp	r4, #0
 80223a4:	f2c0 809f 	blt.w	80224e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80223a8:	42a3      	cmp	r3, r4
 80223aa:	f340 809c 	ble.w	80224e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80223ae:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80223b2:	1c62      	adds	r2, r4, #1
 80223b4:	f100 809c 	bmi.w	80224f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80223b8:	4293      	cmp	r3, r2
 80223ba:	f340 8099 	ble.w	80224f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80223be:	f1b9 0f00 	cmp.w	r9, #0
 80223c2:	f000 8095 	beq.w	80224f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80223c6:	f8be c002 	ldrh.w	ip, [lr, #2]
 80223ca:	3501      	adds	r5, #1
 80223cc:	f100 8094 	bmi.w	80224f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80223d0:	45aa      	cmp	sl, r5
 80223d2:	f340 8091 	ble.w	80224f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80223d6:	2f00      	cmp	r7, #0
 80223d8:	f000 808e 	beq.w	80224f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80223dc:	2c00      	cmp	r4, #0
 80223de:	f2c0 8089 	blt.w	80224f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80223e2:	42a3      	cmp	r3, r4
 80223e4:	f340 8086 	ble.w	80224f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80223e8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80223ec:	3401      	adds	r4, #1
 80223ee:	f100 8086 	bmi.w	80224fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80223f2:	42a3      	cmp	r3, r4
 80223f4:	f340 8083 	ble.w	80224fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80223f8:	f1b9 0f00 	cmp.w	r9, #0
 80223fc:	d07f      	beq.n	80224fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80223fe:	3301      	adds	r3, #1
 8022400:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022404:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022408:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802240c:	fb19 fe07 	smulbb	lr, r9, r7
 8022410:	f1c7 0210 	rsb	r2, r7, #16
 8022414:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022418:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802241c:	eba2 0209 	sub.w	r2, r2, r9
 8022420:	ea44 0808 	orr.w	r8, r4, r8
 8022424:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022428:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802242c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022430:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022434:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022438:	ea44 0c0c 	orr.w	ip, r4, ip
 802243c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022440:	fb04 f40c 	mul.w	r4, r4, ip
 8022444:	fb02 4808 	mla	r8, r2, r8, r4
 8022448:	041a      	lsls	r2, r3, #16
 802244a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802244e:	b2b4      	uxth	r4, r6
 8022450:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022454:	43f6      	mvns	r6, r6
 8022456:	4313      	orrs	r3, r2
 8022458:	042a      	lsls	r2, r5, #16
 802245a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802245e:	b2f6      	uxtb	r6, r6
 8022460:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022464:	fb0e 8303 	mla	r3, lr, r3, r8
 8022468:	432a      	orrs	r2, r5
 802246a:	fb07 3202 	mla	r2, r7, r2, r3
 802246e:	10c7      	asrs	r7, r0, #3
 8022470:	0d53      	lsrs	r3, r2, #21
 8022472:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022476:	0952      	lsrs	r2, r2, #5
 8022478:	fb17 f706 	smulbb	r7, r7, r6
 802247c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022480:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022484:	431a      	orrs	r2, r3
 8022486:	b293      	uxth	r3, r2
 8022488:	1202      	asrs	r2, r0, #8
 802248a:	121d      	asrs	r5, r3, #8
 802248c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022490:	00c0      	lsls	r0, r0, #3
 8022492:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022496:	fb12 f206 	smulbb	r2, r2, r6
 802249a:	b2c0      	uxtb	r0, r0
 802249c:	fb05 2504 	mla	r5, r5, r4, r2
 80224a0:	10da      	asrs	r2, r3, #3
 80224a2:	fb10 f006 	smulbb	r0, r0, r6
 80224a6:	00db      	lsls	r3, r3, #3
 80224a8:	b2ad      	uxth	r5, r5
 80224aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80224ae:	b2db      	uxtb	r3, r3
 80224b0:	fb02 7204 	mla	r2, r2, r4, r7
 80224b4:	fb03 0004 	mla	r0, r3, r4, r0
 80224b8:	1c6b      	adds	r3, r5, #1
 80224ba:	b292      	uxth	r2, r2
 80224bc:	b280      	uxth	r0, r0
 80224be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80224c2:	1c43      	adds	r3, r0, #1
 80224c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80224c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80224cc:	1c50      	adds	r0, r2, #1
 80224ce:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80224d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80224d6:	0952      	lsrs	r2, r2, #5
 80224d8:	432b      	orrs	r3, r5
 80224da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224de:	4313      	orrs	r3, r2
 80224e0:	800b      	strh	r3, [r1, #0]
 80224e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80224e6:	4680      	mov	r8, r0
 80224e8:	e763      	b.n	80223b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80224ea:	4684      	mov	ip, r0
 80224ec:	4680      	mov	r8, r0
 80224ee:	e76c      	b.n	80223ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80224f0:	4684      	mov	ip, r0
 80224f2:	e76a      	b.n	80223ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80224f4:	4605      	mov	r5, r0
 80224f6:	e779      	b.n	80223ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80224f8:	4603      	mov	r3, r0
 80224fa:	4605      	mov	r5, r0
 80224fc:	e782      	b.n	8022404 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80224fe:	4603      	mov	r3, r0
 8022500:	e780      	b.n	8022404 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022502:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022506:	b093      	sub	sp, #76	; 0x4c
 8022508:	461d      	mov	r5, r3
 802250a:	9210      	str	r2, [sp, #64]	; 0x40
 802250c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802250e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022512:	910a      	str	r1, [sp, #40]	; 0x28
 8022514:	920b      	str	r2, [sp, #44]	; 0x2c
 8022516:	6859      	ldr	r1, [r3, #4]
 8022518:	681b      	ldr	r3, [r3, #0]
 802251a:	9011      	str	r0, [sp, #68]	; 0x44
 802251c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022520:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022524:	fb01 2707 	mla	r7, r1, r7, r2
 8022528:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802252c:	9307      	str	r3, [sp, #28]
 802252e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022530:	681b      	ldr	r3, [r3, #0]
 8022532:	9309      	str	r3, [sp, #36]	; 0x24
 8022534:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022536:	43db      	mvns	r3, r3
 8022538:	b2db      	uxtb	r3, r3
 802253a:	9308      	str	r3, [sp, #32]
 802253c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802253e:	2b00      	cmp	r3, #0
 8022540:	dc03      	bgt.n	802254a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022542:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022544:	2b00      	cmp	r3, #0
 8022546:	f340 8205 	ble.w	8022954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802254a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802254c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022550:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022554:	1e48      	subs	r0, r1, #1
 8022556:	f102 3cff 	add.w	ip, r2, #4294967295
 802255a:	2d00      	cmp	r5, #0
 802255c:	f340 80da 	ble.w	8022714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022560:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022564:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022568:	d406      	bmi.n	8022578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802256a:	4586      	cmp	lr, r0
 802256c:	da04      	bge.n	8022578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802256e:	2b00      	cmp	r3, #0
 8022570:	db02      	blt.n	8022578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022572:	4563      	cmp	r3, ip
 8022574:	f2c0 80cf 	blt.w	8022716 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022578:	f11e 0e01 	adds.w	lr, lr, #1
 802257c:	f100 80c1 	bmi.w	8022702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022580:	4571      	cmp	r1, lr
 8022582:	f2c0 80be 	blt.w	8022702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022586:	3301      	adds	r3, #1
 8022588:	f100 80bb 	bmi.w	8022702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802258c:	429a      	cmp	r2, r3
 802258e:	f2c0 80b8 	blt.w	8022702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022592:	46a9      	mov	r9, r5
 8022594:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022598:	f1b9 0f00 	cmp.w	r9, #0
 802259c:	f340 80d8 	ble.w	8022750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80225a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80225a2:	1421      	asrs	r1, r4, #16
 80225a4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80225a8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80225ac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80225b0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80225b4:	f100 8112 	bmi.w	80227dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80225b8:	f10e 3aff 	add.w	sl, lr, #4294967295
 80225bc:	4551      	cmp	r1, sl
 80225be:	f280 810d 	bge.w	80227dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80225c2:	2800      	cmp	r0, #0
 80225c4:	f2c0 810a 	blt.w	80227dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80225c8:	f103 3aff 	add.w	sl, r3, #4294967295
 80225cc:	4550      	cmp	r0, sl
 80225ce:	f280 8105 	bge.w	80227dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80225d2:	fa0f f38e 	sxth.w	r3, lr
 80225d6:	fb00 1103 	mla	r1, r0, r3, r1
 80225da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80225dc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80225e0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80225e4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80225e8:	f1bc 0f00 	cmp.w	ip, #0
 80225ec:	d007      	beq.n	80225fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80225ee:	005b      	lsls	r3, r3, #1
 80225f0:	eb0a 0003 	add.w	r0, sl, r3
 80225f4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80225f8:	930c      	str	r3, [sp, #48]	; 0x30
 80225fa:	8843      	ldrh	r3, [r0, #2]
 80225fc:	930d      	str	r3, [sp, #52]	; 0x34
 80225fe:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022602:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022606:	fb12 f30c 	smulbb	r3, r2, ip
 802260a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802260e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022612:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022616:	10db      	asrs	r3, r3, #3
 8022618:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802261c:	ea40 000e 	orr.w	r0, r0, lr
 8022620:	f1cc 0e10 	rsb	lr, ip, #16
 8022624:	ea4a 0101 	orr.w	r1, sl, r1
 8022628:	9f08      	ldr	r7, [sp, #32]
 802262a:	ebae 0e02 	sub.w	lr, lr, r2
 802262e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022632:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022636:	4351      	muls	r1, r2
 8022638:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802263a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802263e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022640:	0410      	lsls	r0, r2, #16
 8022642:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022646:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802264a:	4310      	orrs	r0, r2
 802264c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802264e:	0412      	lsls	r2, r2, #16
 8022650:	fb03 e000 	mla	r0, r3, r0, lr
 8022654:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022658:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802265c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022660:	ea42 020e 	orr.w	r2, r2, lr
 8022664:	fb03 0302 	mla	r3, r3, r2, r0
 8022668:	f8b8 0000 	ldrh.w	r0, [r8]
 802266c:	0d5a      	lsrs	r2, r3, #21
 802266e:	095b      	lsrs	r3, r3, #5
 8022670:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022674:	1201      	asrs	r1, r0, #8
 8022676:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802267a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802267e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022682:	00c0      	lsls	r0, r0, #3
 8022684:	4313      	orrs	r3, r2
 8022686:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802268a:	fb11 f107 	smulbb	r1, r1, r7
 802268e:	b2c0      	uxtb	r0, r0
 8022690:	b29b      	uxth	r3, r3
 8022692:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022696:	fb10 f007 	smulbb	r0, r0, r7
 802269a:	fb1e fe07 	smulbb	lr, lr, r7
 802269e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80226a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80226a6:	fb0c 1c02 	mla	ip, ip, r2, r1
 80226aa:	10d9      	asrs	r1, r3, #3
 80226ac:	00db      	lsls	r3, r3, #3
 80226ae:	fa1f fc8c 	uxth.w	ip, ip
 80226b2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80226b6:	b2db      	uxtb	r3, r3
 80226b8:	fb01 e102 	mla	r1, r1, r2, lr
 80226bc:	fb03 0302 	mla	r3, r3, r2, r0
 80226c0:	b289      	uxth	r1, r1
 80226c2:	b29a      	uxth	r2, r3
 80226c4:	f10c 0301 	add.w	r3, ip, #1
 80226c8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80226cc:	1c53      	adds	r3, r2, #1
 80226ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80226d2:	1c4a      	adds	r2, r1, #1
 80226d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80226d8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80226dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226e0:	0949      	lsrs	r1, r1, #5
 80226e2:	ea43 030c 	orr.w	r3, r3, ip
 80226e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226ea:	430b      	orrs	r3, r1
 80226ec:	f8a8 3000 	strh.w	r3, [r8]
 80226f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80226f2:	f108 0802 	add.w	r8, r8, #2
 80226f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80226fa:	441c      	add	r4, r3
 80226fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80226fe:	441e      	add	r6, r3
 8022700:	e74a      	b.n	8022598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022702:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022704:	3d01      	subs	r5, #1
 8022706:	441c      	add	r4, r3
 8022708:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802270a:	441e      	add	r6, r3
 802270c:	9b07      	ldr	r3, [sp, #28]
 802270e:	3302      	adds	r3, #2
 8022710:	9307      	str	r3, [sp, #28]
 8022712:	e722      	b.n	802255a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022714:	d022      	beq.n	802275c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022716:	1e6b      	subs	r3, r5, #1
 8022718:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802271a:	fb00 4003 	mla	r0, r0, r3, r4
 802271e:	1400      	asrs	r0, r0, #16
 8022720:	f53f af37 	bmi.w	8022592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022724:	3901      	subs	r1, #1
 8022726:	4288      	cmp	r0, r1
 8022728:	f6bf af33 	bge.w	8022592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802272c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802272e:	fb01 6303 	mla	r3, r1, r3, r6
 8022732:	141b      	asrs	r3, r3, #16
 8022734:	f53f af2d 	bmi.w	8022592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022738:	3a01      	subs	r2, #1
 802273a:	4293      	cmp	r3, r2
 802273c:	f6bf af29 	bge.w	8022592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022740:	46a8      	mov	r8, r5
 8022742:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022746:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802274a:	f1b8 0f00 	cmp.w	r8, #0
 802274e:	dc60      	bgt.n	8022812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 8022750:	9b07      	ldr	r3, [sp, #28]
 8022752:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022756:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802275a:	9307      	str	r3, [sp, #28]
 802275c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802275e:	2b00      	cmp	r3, #0
 8022760:	f340 80f8 	ble.w	8022954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022764:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022768:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802276a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802276e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022772:	eef0 6a62 	vmov.f32	s13, s5
 8022776:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802277a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802277e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022782:	ee16 4a90 	vmov	r4, s13
 8022786:	eef0 6a43 	vmov.f32	s13, s6
 802278a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802278e:	ee16 6a90 	vmov	r6, s13
 8022792:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022796:	ee61 7a27 	vmul.f32	s15, s2, s15
 802279a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802279e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80227a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80227a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80227aa:	ee12 2a90 	vmov	r2, s5
 80227ae:	eef0 2a47 	vmov.f32	s5, s14
 80227b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80227b6:	ee13 2a10 	vmov	r2, s6
 80227ba:	931f      	str	r3, [sp, #124]	; 0x7c
 80227bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80227be:	eeb0 3a67 	vmov.f32	s6, s15
 80227c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80227c6:	9320      	str	r3, [sp, #128]	; 0x80
 80227c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80227ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80227cc:	3b01      	subs	r3, #1
 80227ce:	930a      	str	r3, [sp, #40]	; 0x28
 80227d0:	bf08      	it	eq
 80227d2:	4615      	moveq	r5, r2
 80227d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80227d6:	bf18      	it	ne
 80227d8:	461d      	movne	r5, r3
 80227da:	e6af      	b.n	802253c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80227dc:	f111 0a01 	adds.w	sl, r1, #1
 80227e0:	d486      	bmi.n	80226f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80227e2:	45d6      	cmp	lr, sl
 80227e4:	db84      	blt.n	80226f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80227e6:	f110 0a01 	adds.w	sl, r0, #1
 80227ea:	d481      	bmi.n	80226f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80227ec:	4553      	cmp	r3, sl
 80227ee:	f6ff af7f 	blt.w	80226f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80227f2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80227f4:	b21b      	sxth	r3, r3
 80227f6:	9101      	str	r1, [sp, #4]
 80227f8:	4641      	mov	r1, r8
 80227fa:	9300      	str	r3, [sp, #0]
 80227fc:	fa0f f38e 	sxth.w	r3, lr
 8022800:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022804:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022808:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802280a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802280c:	f7ff fdb2 	bl	8022374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022810:	e76e      	b.n	80226f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022812:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022814:	1430      	asrs	r0, r6, #16
 8022816:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022818:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802281c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022820:	1423      	asrs	r3, r4, #16
 8022822:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022826:	fb01 3000 	mla	r0, r1, r0, r3
 802282a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802282c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022830:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022834:	8858      	ldrh	r0, [r3, #2]
 8022836:	f1be 0f00 	cmp.w	lr, #0
 802283a:	d00b      	beq.n	8022854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802283c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022840:	3901      	subs	r1, #1
 8022842:	0049      	lsls	r1, r1, #1
 8022844:	3102      	adds	r1, #2
 8022846:	eb03 0b01 	add.w	fp, r3, r1
 802284a:	5a5b      	ldrh	r3, [r3, r1]
 802284c:	930e      	str	r3, [sp, #56]	; 0x38
 802284e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022852:	930f      	str	r3, [sp, #60]	; 0x3c
 8022854:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022858:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802285c:	fb12 f30e 	smulbb	r3, r2, lr
 8022860:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022864:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022868:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802286c:	10db      	asrs	r3, r3, #3
 802286e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022872:	ea41 010c 	orr.w	r1, r1, ip
 8022876:	f1ce 0c10 	rsb	ip, lr, #16
 802287a:	ea4b 0000 	orr.w	r0, fp, r0
 802287e:	9f08      	ldr	r7, [sp, #32]
 8022880:	ebac 0c02 	sub.w	ip, ip, r2
 8022884:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022888:	f108 38ff 	add.w	r8, r8, #4294967295
 802288c:	4350      	muls	r0, r2
 802288e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022892:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022894:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022898:	980e      	ldr	r0, [sp, #56]	; 0x38
 802289a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802289e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80228a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80228a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228a8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80228ac:	0412      	lsls	r2, r2, #16
 80228ae:	ea4b 0101 	orr.w	r1, fp, r1
 80228b2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80228b6:	fb03 c101 	mla	r1, r3, r1, ip
 80228ba:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80228be:	4302      	orrs	r2, r0
 80228c0:	fb03 1202 	mla	r2, r3, r2, r1
 80228c4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80228c8:	0952      	lsrs	r2, r2, #5
 80228ca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80228ce:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80228d2:	f8b9 2000 	ldrh.w	r2, [r9]
 80228d6:	ea4b 0303 	orr.w	r3, fp, r3
 80228da:	1211      	asrs	r1, r2, #8
 80228dc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80228e0:	b29b      	uxth	r3, r3
 80228e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80228e6:	00d2      	lsls	r2, r2, #3
 80228e8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80228ec:	fb11 f107 	smulbb	r1, r1, r7
 80228f0:	1218      	asrs	r0, r3, #8
 80228f2:	fb1c fc07 	smulbb	ip, ip, r7
 80228f6:	b2d2      	uxtb	r2, r2
 80228f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80228fc:	fb12 f207 	smulbb	r2, r2, r7
 8022900:	fb00 100a 	mla	r0, r0, sl, r1
 8022904:	10d9      	asrs	r1, r3, #3
 8022906:	00db      	lsls	r3, r3, #3
 8022908:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802290c:	b280      	uxth	r0, r0
 802290e:	b2db      	uxtb	r3, r3
 8022910:	fb01 c10a 	mla	r1, r1, sl, ip
 8022914:	fb03 230a 	mla	r3, r3, sl, r2
 8022918:	1c42      	adds	r2, r0, #1
 802291a:	b289      	uxth	r1, r1
 802291c:	b29b      	uxth	r3, r3
 802291e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022922:	f101 0c01 	add.w	ip, r1, #1
 8022926:	1c5a      	adds	r2, r3, #1
 8022928:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802292c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022930:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022934:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022936:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802293a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802293e:	441c      	add	r4, r3
 8022940:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022944:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022946:	4310      	orrs	r0, r2
 8022948:	441e      	add	r6, r3
 802294a:	ea40 000c 	orr.w	r0, r0, ip
 802294e:	f829 0b02 	strh.w	r0, [r9], #2
 8022952:	e6fa      	b.n	802274a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022954:	b013      	add	sp, #76	; 0x4c
 8022956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802295a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802295a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802295e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022962:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022966:	fb0e 4703 	mla	r7, lr, r3, r4
 802296a:	f1be 0f00 	cmp.w	lr, #0
 802296e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022972:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022976:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802297a:	8808      	ldrh	r0, [r1, #0]
 802297c:	db60      	blt.n	8022a40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802297e:	45f1      	cmp	r9, lr
 8022980:	dd5e      	ble.n	8022a40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022982:	2c00      	cmp	r4, #0
 8022984:	db5a      	blt.n	8022a3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022986:	42a3      	cmp	r3, r4
 8022988:	dd58      	ble.n	8022a3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802298a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802298e:	1c62      	adds	r2, r4, #1
 8022990:	d459      	bmi.n	8022a46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022992:	4293      	cmp	r3, r2
 8022994:	dd57      	ble.n	8022a46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022996:	2d00      	cmp	r5, #0
 8022998:	d055      	beq.n	8022a46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802299a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802299e:	f11e 0e01 	adds.w	lr, lr, #1
 80229a2:	d454      	bmi.n	8022a4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80229a4:	45f1      	cmp	r9, lr
 80229a6:	dd52      	ble.n	8022a4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80229a8:	2e00      	cmp	r6, #0
 80229aa:	d050      	beq.n	8022a4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80229ac:	2c00      	cmp	r4, #0
 80229ae:	db4c      	blt.n	8022a4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80229b0:	42a3      	cmp	r3, r4
 80229b2:	dd4a      	ble.n	8022a4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80229b4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80229b8:	3401      	adds	r4, #1
 80229ba:	d405      	bmi.n	80229c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80229bc:	42a3      	cmp	r3, r4
 80229be:	dd03      	ble.n	80229c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80229c0:	b115      	cbz	r5, 80229c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80229c2:	3301      	adds	r3, #1
 80229c4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80229c8:	fb15 f406 	smulbb	r4, r5, r6
 80229cc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80229d0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80229d4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80229d8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80229dc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80229e0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80229e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80229e8:	ea43 0c0c 	orr.w	ip, r3, ip
 80229ec:	f1c6 0310 	rsb	r3, r6, #16
 80229f0:	ea4e 0707 	orr.w	r7, lr, r7
 80229f4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80229f8:	1b5b      	subs	r3, r3, r5
 80229fa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80229fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022a02:	437d      	muls	r5, r7
 8022a04:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022a08:	0403      	lsls	r3, r0, #16
 8022a0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a12:	4318      	orrs	r0, r3
 8022a14:	0413      	lsls	r3, r2, #16
 8022a16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a1e:	fb04 c000 	mla	r0, r4, r0, ip
 8022a22:	4313      	orrs	r3, r2
 8022a24:	fb06 0003 	mla	r0, r6, r3, r0
 8022a28:	0d43      	lsrs	r3, r0, #21
 8022a2a:	0940      	lsrs	r0, r0, #5
 8022a2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022a30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a34:	4318      	orrs	r0, r3
 8022a36:	8008      	strh	r0, [r1, #0]
 8022a38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022a3c:	4684      	mov	ip, r0
 8022a3e:	e7a6      	b.n	802298e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022a40:	4607      	mov	r7, r0
 8022a42:	4684      	mov	ip, r0
 8022a44:	e7ab      	b.n	802299e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022a46:	4607      	mov	r7, r0
 8022a48:	e7a9      	b.n	802299e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022a4a:	4602      	mov	r2, r0
 8022a4c:	e7b4      	b.n	80229b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022a4e:	4602      	mov	r2, r0
 8022a50:	e7ba      	b.n	80229c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022a52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022a52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a56:	b08f      	sub	sp, #60	; 0x3c
 8022a58:	461d      	mov	r5, r3
 8022a5a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022a5c:	9107      	str	r1, [sp, #28]
 8022a5e:	920c      	str	r2, [sp, #48]	; 0x30
 8022a60:	6859      	ldr	r1, [r3, #4]
 8022a62:	681b      	ldr	r3, [r3, #0]
 8022a64:	900d      	str	r0, [sp, #52]	; 0x34
 8022a66:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022a6a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022a6e:	fb01 2707 	mla	r7, r1, r7, r2
 8022a72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022a76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a78:	f8d3 8000 	ldr.w	r8, [r3]
 8022a7c:	9b07      	ldr	r3, [sp, #28]
 8022a7e:	2b00      	cmp	r3, #0
 8022a80:	dc03      	bgt.n	8022a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022a82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a84:	2b00      	cmp	r3, #0
 8022a86:	f340 8182 	ble.w	8022d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8022a8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022a90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022a94:	1e48      	subs	r0, r1, #1
 8022a96:	f102 3cff 	add.w	ip, r2, #4294967295
 8022a9a:	2d00      	cmp	r5, #0
 8022a9c:	f340 809b 	ble.w	8022bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022aa0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022aa4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022aa8:	d406      	bmi.n	8022ab8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022aaa:	4586      	cmp	lr, r0
 8022aac:	da04      	bge.n	8022ab8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022aae:	2b00      	cmp	r3, #0
 8022ab0:	db02      	blt.n	8022ab8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022ab2:	4563      	cmp	r3, ip
 8022ab4:	f2c0 8090 	blt.w	8022bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ab8:	f11e 0e01 	adds.w	lr, lr, #1
 8022abc:	f100 8084 	bmi.w	8022bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ac0:	4571      	cmp	r1, lr
 8022ac2:	f2c0 8081 	blt.w	8022bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ac6:	3301      	adds	r3, #1
 8022ac8:	d47e      	bmi.n	8022bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022aca:	429a      	cmp	r2, r3
 8022acc:	db7c      	blt.n	8022bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ace:	46aa      	mov	sl, r5
 8022ad0:	46b9      	mov	r9, r7
 8022ad2:	f1ba 0f00 	cmp.w	sl, #0
 8022ad6:	f340 8099 	ble.w	8022c0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022ada:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022adc:	1421      	asrs	r1, r4, #16
 8022ade:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022ae2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022ae6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022aea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022aee:	f100 80d1 	bmi.w	8022c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022af2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022af6:	4559      	cmp	r1, fp
 8022af8:	f280 80cc 	bge.w	8022c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022afc:	2800      	cmp	r0, #0
 8022afe:	f2c0 80c9 	blt.w	8022c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022b02:	f103 3bff 	add.w	fp, r3, #4294967295
 8022b06:	4558      	cmp	r0, fp
 8022b08:	f280 80c4 	bge.w	8022c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022b0c:	fa0f fe8e 	sxth.w	lr, lr
 8022b10:	fb00 110e 	mla	r1, r0, lr, r1
 8022b14:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022b18:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022b1c:	8841      	ldrh	r1, [r0, #2]
 8022b1e:	f1bc 0f00 	cmp.w	ip, #0
 8022b22:	d00b      	beq.n	8022b3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022b24:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022b28:	3b01      	subs	r3, #1
 8022b2a:	005b      	lsls	r3, r3, #1
 8022b2c:	3302      	adds	r3, #2
 8022b2e:	eb00 0e03 	add.w	lr, r0, r3
 8022b32:	5ac3      	ldrh	r3, [r0, r3]
 8022b34:	9308      	str	r3, [sp, #32]
 8022b36:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022b3a:	9309      	str	r3, [sp, #36]	; 0x24
 8022b3c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022b40:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022b44:	fb12 f30c 	smulbb	r3, r2, ip
 8022b48:	f1cc 0e10 	rsb	lr, ip, #16
 8022b4c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022b50:	10db      	asrs	r3, r3, #3
 8022b52:	ebae 0e02 	sub.w	lr, lr, r2
 8022b56:	ea40 000b 	orr.w	r0, r0, fp
 8022b5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022b5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b62:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022b66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b6a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022b6e:	ea4b 0101 	orr.w	r1, fp, r1
 8022b72:	4351      	muls	r1, r2
 8022b74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022b76:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022b7a:	0410      	lsls	r0, r2, #16
 8022b7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b80:	9908      	ldr	r1, [sp, #32]
 8022b82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022b86:	4310      	orrs	r0, r2
 8022b88:	9a08      	ldr	r2, [sp, #32]
 8022b8a:	0412      	lsls	r2, r2, #16
 8022b8c:	fb03 e000 	mla	r0, r3, r0, lr
 8022b90:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022b94:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022b98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022b9c:	ea42 020e 	orr.w	r2, r2, lr
 8022ba0:	fb03 0302 	mla	r3, r3, r2, r0
 8022ba4:	0d5a      	lsrs	r2, r3, #21
 8022ba6:	095b      	lsrs	r3, r3, #5
 8022ba8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022bac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022bb0:	4313      	orrs	r3, r2
 8022bb2:	f8a9 3000 	strh.w	r3, [r9]
 8022bb6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022bb8:	f109 0902 	add.w	r9, r9, #2
 8022bbc:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022bc0:	441c      	add	r4, r3
 8022bc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022bc4:	441e      	add	r6, r3
 8022bc6:	e784      	b.n	8022ad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022bc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022bca:	3d01      	subs	r5, #1
 8022bcc:	3702      	adds	r7, #2
 8022bce:	441c      	add	r4, r3
 8022bd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022bd2:	441e      	add	r6, r3
 8022bd4:	e761      	b.n	8022a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022bd6:	d01d      	beq.n	8022c14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022bd8:	1e6b      	subs	r3, r5, #1
 8022bda:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022bdc:	fb00 4003 	mla	r0, r0, r3, r4
 8022be0:	1400      	asrs	r0, r0, #16
 8022be2:	f53f af74 	bmi.w	8022ace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022be6:	3901      	subs	r1, #1
 8022be8:	4288      	cmp	r0, r1
 8022bea:	f6bf af70 	bge.w	8022ace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022bee:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022bf0:	fb01 6303 	mla	r3, r1, r3, r6
 8022bf4:	141b      	asrs	r3, r3, #16
 8022bf6:	f53f af6a 	bmi.w	8022ace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022bfa:	3a01      	subs	r2, #1
 8022bfc:	4293      	cmp	r3, r2
 8022bfe:	f6bf af66 	bge.w	8022ace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022c02:	46a9      	mov	r9, r5
 8022c04:	46ba      	mov	sl, r7
 8022c06:	f1b9 0f00 	cmp.w	r9, #0
 8022c0a:	dc5b      	bgt.n	8022cc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022c0c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022c10:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022c14:	9b07      	ldr	r3, [sp, #28]
 8022c16:	2b00      	cmp	r3, #0
 8022c18:	f340 80b9 	ble.w	8022d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8022c1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022c20:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c2a:	eef0 6a62 	vmov.f32	s13, s5
 8022c2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c3a:	ee16 4a90 	vmov	r4, s13
 8022c3e:	eef0 6a43 	vmov.f32	s13, s6
 8022c42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c46:	ee16 6a90 	vmov	r6, s13
 8022c4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022c4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022c52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022c56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022c5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022c5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022c62:	ee12 2a90 	vmov	r2, s5
 8022c66:	eef0 2a47 	vmov.f32	s5, s14
 8022c6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c6e:	ee13 2a10 	vmov	r2, s6
 8022c72:	931b      	str	r3, [sp, #108]	; 0x6c
 8022c74:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c76:	eeb0 3a67 	vmov.f32	s6, s15
 8022c7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c7e:	931c      	str	r3, [sp, #112]	; 0x70
 8022c80:	9b07      	ldr	r3, [sp, #28]
 8022c82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022c84:	3b01      	subs	r3, #1
 8022c86:	9307      	str	r3, [sp, #28]
 8022c88:	bf08      	it	eq
 8022c8a:	4615      	moveq	r5, r2
 8022c8c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c8e:	bf18      	it	ne
 8022c90:	461d      	movne	r5, r3
 8022c92:	e6f3      	b.n	8022a7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022c94:	f111 0b01 	adds.w	fp, r1, #1
 8022c98:	d48d      	bmi.n	8022bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022c9a:	45de      	cmp	lr, fp
 8022c9c:	db8b      	blt.n	8022bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022c9e:	f110 0b01 	adds.w	fp, r0, #1
 8022ca2:	d488      	bmi.n	8022bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022ca4:	455b      	cmp	r3, fp
 8022ca6:	db86      	blt.n	8022bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022ca8:	b21b      	sxth	r3, r3
 8022caa:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022cae:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022cb2:	9300      	str	r3, [sp, #0]
 8022cb4:	4642      	mov	r2, r8
 8022cb6:	fa0f f38e 	sxth.w	r3, lr
 8022cba:	4649      	mov	r1, r9
 8022cbc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022cbe:	f7ff fe4c 	bl	802295a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022cc2:	e778      	b.n	8022bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022cc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cc6:	1420      	asrs	r0, r4, #16
 8022cc8:	1431      	asrs	r1, r6, #16
 8022cca:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022cce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022cd2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022cd6:	fb03 0101 	mla	r1, r3, r1, r0
 8022cda:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022cde:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022ce2:	8841      	ldrh	r1, [r0, #2]
 8022ce4:	f1be 0f00 	cmp.w	lr, #0
 8022ce8:	d00b      	beq.n	8022d02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8022cea:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022cee:	3b01      	subs	r3, #1
 8022cf0:	005b      	lsls	r3, r3, #1
 8022cf2:	3302      	adds	r3, #2
 8022cf4:	eb00 0b03 	add.w	fp, r0, r3
 8022cf8:	5ac3      	ldrh	r3, [r0, r3]
 8022cfa:	930a      	str	r3, [sp, #40]	; 0x28
 8022cfc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022d00:	930b      	str	r3, [sp, #44]	; 0x2c
 8022d02:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022d06:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d0a:	fb12 f30e 	smulbb	r3, r2, lr
 8022d0e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022d12:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022d16:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d1a:	10db      	asrs	r3, r3, #3
 8022d1c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d20:	ea40 000c 	orr.w	r0, r0, ip
 8022d24:	f1ce 0c10 	rsb	ip, lr, #16
 8022d28:	ea4b 0101 	orr.w	r1, fp, r1
 8022d2c:	f109 39ff 	add.w	r9, r9, #4294967295
 8022d30:	ebac 0c02 	sub.w	ip, ip, r2
 8022d34:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022d38:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022d3c:	4351      	muls	r1, r2
 8022d3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022d40:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022d44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022d46:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022d4a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022d4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022d50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d54:	0412      	lsls	r2, r2, #16
 8022d56:	ea4b 0000 	orr.w	r0, fp, r0
 8022d5a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8022d5e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d62:	fb03 c000 	mla	r0, r3, r0, ip
 8022d66:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022d6a:	ea42 0b0b 	orr.w	fp, r2, fp
 8022d6e:	fb03 000b 	mla	r0, r3, fp, r0
 8022d72:	0d43      	lsrs	r3, r0, #21
 8022d74:	0940      	lsrs	r0, r0, #5
 8022d76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d7e:	4318      	orrs	r0, r3
 8022d80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022d82:	441c      	add	r4, r3
 8022d84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022d86:	f82a 0b02 	strh.w	r0, [sl], #2
 8022d8a:	441e      	add	r6, r3
 8022d8c:	e73b      	b.n	8022c06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022d8e:	b00f      	add	sp, #60	; 0x3c
 8022d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d98:	b085      	sub	sp, #20
 8022d9a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022d9e:	9102      	str	r1, [sp, #8]
 8022da0:	2c00      	cmp	r4, #0
 8022da2:	fb04 7103 	mla	r1, r4, r3, r7
 8022da6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022daa:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022dae:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022db2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022db6:	f2c0 811b 	blt.w	8022ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022dba:	45a6      	cmp	lr, r4
 8022dbc:	f340 8118 	ble.w	8022ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022dc0:	2f00      	cmp	r7, #0
 8022dc2:	f2c0 8113 	blt.w	8022fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022dc6:	42bb      	cmp	r3, r7
 8022dc8:	f340 8110 	ble.w	8022fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022dcc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022dd0:	1c7a      	adds	r2, r7, #1
 8022dd2:	f100 8110 	bmi.w	8022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022dd6:	4293      	cmp	r3, r2
 8022dd8:	f340 810d 	ble.w	8022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022ddc:	2e00      	cmp	r6, #0
 8022dde:	f000 810c 	beq.w	8022ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022de2:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022de6:	3401      	adds	r4, #1
 8022de8:	f100 810b 	bmi.w	8023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022dec:	45a6      	cmp	lr, r4
 8022dee:	f340 8108 	ble.w	8023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022df2:	2800      	cmp	r0, #0
 8022df4:	f000 8108 	beq.w	8023008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022df8:	2f00      	cmp	r7, #0
 8022dfa:	f2c0 8100 	blt.w	8022ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022dfe:	42bb      	cmp	r3, r7
 8022e00:	f340 80fd 	ble.w	8022ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022e04:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022e08:	3701      	adds	r7, #1
 8022e0a:	f100 8100 	bmi.w	802300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022e0e:	42bb      	cmp	r3, r7
 8022e10:	f340 80fd 	ble.w	802300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022e14:	2e00      	cmp	r6, #0
 8022e16:	f000 80fc 	beq.w	8023012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022e1a:	3301      	adds	r3, #1
 8022e1c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022e20:	b2b6      	uxth	r6, r6
 8022e22:	b280      	uxth	r0, r0
 8022e24:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022e28:	fb00 fe06 	mul.w	lr, r0, r6
 8022e2c:	0136      	lsls	r6, r6, #4
 8022e2e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022e32:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022e36:	eba6 070e 	sub.w	r7, r6, lr
 8022e3a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022e3e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022e42:	b280      	uxth	r0, r0
 8022e44:	b2bf      	uxth	r7, r7
 8022e46:	1a1b      	subs	r3, r3, r0
 8022e48:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022e4c:	fb0a f607 	mul.w	r6, sl, r7
 8022e50:	b29b      	uxth	r3, r3
 8022e52:	fb0b 6603 	mla	r6, fp, r3, r6
 8022e56:	fb00 6609 	mla	r6, r0, r9, r6
 8022e5a:	fb0e 6608 	mla	r6, lr, r8, r6
 8022e5e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022e62:	9600      	str	r6, [sp, #0]
 8022e64:	2e00      	cmp	r6, #0
 8022e66:	f000 80be 	beq.w	8022fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022e6a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022e6e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022e72:	9e02      	ldr	r6, [sp, #8]
 8022e74:	fb0b fc0c 	mul.w	ip, fp, ip
 8022e78:	fb0b f505 	mul.w	r5, fp, r5
 8022e7c:	8836      	ldrh	r6, [r6, #0]
 8022e7e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022e82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022e86:	9501      	str	r5, [sp, #4]
 8022e88:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022e8c:	44dc      	add	ip, fp
 8022e8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e92:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022e96:	9503      	str	r5, [sp, #12]
 8022e98:	9d01      	ldr	r5, [sp, #4]
 8022e9a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022e9e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022ea2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022ea6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022eaa:	fb0a fc0c 	mul.w	ip, sl, ip
 8022eae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022eb2:	fb0a fa01 	mul.w	sl, sl, r1
 8022eb6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022eba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022ebe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022ec2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022ec6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022eca:	4465      	add	r5, ip
 8022ecc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022ed0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022ed4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ed8:	fb09 fc0c 	mul.w	ip, r9, ip
 8022edc:	0a2d      	lsrs	r5, r5, #8
 8022ede:	fb09 f904 	mul.w	r9, r9, r4
 8022ee2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022ee6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022eea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022eee:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022ef2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022ef6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022efa:	437d      	muls	r5, r7
 8022efc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022f00:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022f04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022f08:	4461      	add	r1, ip
 8022f0a:	fb08 f404 	mul.w	r4, r8, r4
 8022f0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022f12:	fb08 f802 	mul.w	r8, r8, r2
 8022f16:	0a09      	lsrs	r1, r1, #8
 8022f18:	0a22      	lsrs	r2, r4, #8
 8022f1a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022f1e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022f22:	fb07 f70a 	mul.w	r7, r7, sl
 8022f26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022f2a:	4414      	add	r4, r2
 8022f2c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022f30:	0a24      	lsrs	r4, r4, #8
 8022f32:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022f36:	9a03      	ldr	r2, [sp, #12]
 8022f38:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022f3c:	fb02 5503 	mla	r5, r2, r3, r5
 8022f40:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022f44:	9a00      	ldr	r2, [sp, #0]
 8022f46:	fb04 540e 	mla	r4, r4, lr, r5
 8022f4a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022f4e:	1235      	asrs	r5, r6, #8
 8022f50:	fb01 4100 	mla	r1, r1, r0, r4
 8022f54:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022f58:	0a09      	lsrs	r1, r1, #8
 8022f5a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022f5e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022f62:	fb03 7101 	mla	r1, r3, r1, r7
 8022f66:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022f6a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022f6e:	fb00 e101 	mla	r1, r0, r1, lr
 8022f72:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022f76:	b287      	uxth	r7, r0
 8022f78:	0a09      	lsrs	r1, r1, #8
 8022f7a:	437a      	muls	r2, r7
 8022f7c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022f80:	1c53      	adds	r3, r2, #1
 8022f82:	4321      	orrs	r1, r4
 8022f84:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f88:	0c0a      	lsrs	r2, r1, #16
 8022f8a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022f8e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022f92:	b2c8      	uxtb	r0, r1
 8022f94:	fb12 f207 	smulbb	r2, r2, r7
 8022f98:	fb14 f407 	smulbb	r4, r4, r7
 8022f9c:	b2db      	uxtb	r3, r3
 8022f9e:	fb10 f007 	smulbb	r0, r0, r7
 8022fa2:	fb05 2503 	mla	r5, r5, r3, r2
 8022fa6:	10f2      	asrs	r2, r6, #3
 8022fa8:	00f6      	lsls	r6, r6, #3
 8022faa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022fae:	b2ad      	uxth	r5, r5
 8022fb0:	b2f6      	uxtb	r6, r6
 8022fb2:	fb02 4203 	mla	r2, r2, r3, r4
 8022fb6:	fb06 0303 	mla	r3, r6, r3, r0
 8022fba:	b294      	uxth	r4, r2
 8022fbc:	b299      	uxth	r1, r3
 8022fbe:	1c6b      	adds	r3, r5, #1
 8022fc0:	1c62      	adds	r2, r4, #1
 8022fc2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fc6:	1c4b      	adds	r3, r1, #1
 8022fc8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022fcc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022fd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022fd4:	0952      	lsrs	r2, r2, #5
 8022fd6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022fda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fde:	432b      	orrs	r3, r5
 8022fe0:	4313      	orrs	r3, r2
 8022fe2:	9a02      	ldr	r2, [sp, #8]
 8022fe4:	8013      	strh	r3, [r2, #0]
 8022fe6:	b005      	add	sp, #20
 8022fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022fec:	2500      	movs	r5, #0
 8022fee:	e6ef      	b.n	8022dd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8022ff0:	2100      	movs	r1, #0
 8022ff2:	460d      	mov	r5, r1
 8022ff4:	e6f7      	b.n	8022de6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022ff6:	2100      	movs	r1, #0
 8022ff8:	e6f5      	b.n	8022de6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022ffa:	4631      	mov	r1, r6
 8022ffc:	e6f3      	b.n	8022de6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022ffe:	2400      	movs	r4, #0
 8023000:	e702      	b.n	8022e08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023002:	2200      	movs	r2, #0
 8023004:	4614      	mov	r4, r2
 8023006:	e70b      	b.n	8022e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023008:	4602      	mov	r2, r0
 802300a:	4604      	mov	r4, r0
 802300c:	e708      	b.n	8022e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802300e:	2200      	movs	r2, #0
 8023010:	e706      	b.n	8022e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023012:	4632      	mov	r2, r6
 8023014:	e704      	b.n	8022e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023016 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023016:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802301a:	b09d      	sub	sp, #116	; 0x74
 802301c:	9219      	str	r2, [sp, #100]	; 0x64
 802301e:	9307      	str	r3, [sp, #28]
 8023020:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023022:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023026:	901b      	str	r0, [sp, #108]	; 0x6c
 8023028:	931a      	str	r3, [sp, #104]	; 0x68
 802302a:	6850      	ldr	r0, [r2, #4]
 802302c:	9117      	str	r1, [sp, #92]	; 0x5c
 802302e:	6812      	ldr	r2, [r2, #0]
 8023030:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023034:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023038:	fb00 1303 	mla	r3, r0, r3, r1
 802303c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023040:	930a      	str	r3, [sp, #40]	; 0x28
 8023042:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023044:	681b      	ldr	r3, [r3, #0]
 8023046:	9310      	str	r3, [sp, #64]	; 0x40
 8023048:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802304c:	930b      	str	r3, [sp, #44]	; 0x2c
 802304e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023050:	2b00      	cmp	r3, #0
 8023052:	dc03      	bgt.n	802305c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023054:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023056:	2b00      	cmp	r3, #0
 8023058:	f340 8375 	ble.w	8023746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802305c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802305e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023062:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023066:	1e48      	subs	r0, r1, #1
 8023068:	1e57      	subs	r7, r2, #1
 802306a:	9b07      	ldr	r3, [sp, #28]
 802306c:	2b00      	cmp	r3, #0
 802306e:	f340 818e 	ble.w	802338e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023072:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023076:	ea4f 4326 	mov.w	r3, r6, asr #16
 802307a:	d406      	bmi.n	802308a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802307c:	4584      	cmp	ip, r0
 802307e:	da04      	bge.n	802308a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023080:	2b00      	cmp	r3, #0
 8023082:	db02      	blt.n	802308a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023084:	42bb      	cmp	r3, r7
 8023086:	f2c0 8183 	blt.w	8023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802308a:	f11c 0c01 	adds.w	ip, ip, #1
 802308e:	f100 8173 	bmi.w	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023092:	4561      	cmp	r1, ip
 8023094:	f2c0 8170 	blt.w	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023098:	3301      	adds	r3, #1
 802309a:	f100 816d 	bmi.w	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802309e:	429a      	cmp	r2, r3
 80230a0:	f2c0 816a 	blt.w	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80230a4:	9b07      	ldr	r3, [sp, #28]
 80230a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80230a8:	9318      	str	r3, [sp, #96]	; 0x60
 80230aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80230ac:	2b00      	cmp	r3, #0
 80230ae:	f340 818c 	ble.w	80233ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80230b2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80230b4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80230b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80230ba:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80230be:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80230c2:	1422      	asrs	r2, r4, #16
 80230c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80230c8:	689b      	ldr	r3, [r3, #8]
 80230ca:	f100 81cd 	bmi.w	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80230ce:	f103 38ff 	add.w	r8, r3, #4294967295
 80230d2:	4542      	cmp	r2, r8
 80230d4:	f280 81c8 	bge.w	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80230d8:	f1bc 0f00 	cmp.w	ip, #0
 80230dc:	f2c0 81c4 	blt.w	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80230e0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80230e4:	45c4      	cmp	ip, r8
 80230e6:	f280 81bf 	bge.w	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80230ea:	b21b      	sxth	r3, r3
 80230ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80230ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80230f2:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80230f6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80230fa:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80230fe:	2800      	cmp	r0, #0
 8023100:	f000 81a9 	beq.w	8023456 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023104:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023108:	950c      	str	r5, [sp, #48]	; 0x30
 802310a:	0e2d      	lsrs	r5, r5, #24
 802310c:	9513      	str	r5, [sp, #76]	; 0x4c
 802310e:	b181      	cbz	r1, 8023132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023110:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023114:	3b01      	subs	r3, #1
 8023116:	009b      	lsls	r3, r3, #2
 8023118:	3304      	adds	r3, #4
 802311a:	eb08 0c03 	add.w	ip, r8, r3
 802311e:	f858 3003 	ldr.w	r3, [r8, r3]
 8023122:	9308      	str	r3, [sp, #32]
 8023124:	0e1b      	lsrs	r3, r3, #24
 8023126:	9311      	str	r3, [sp, #68]	; 0x44
 8023128:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802312c:	930d      	str	r3, [sp, #52]	; 0x34
 802312e:	0e1b      	lsrs	r3, r3, #24
 8023130:	9314      	str	r3, [sp, #80]	; 0x50
 8023132:	b280      	uxth	r0, r0
 8023134:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023136:	b289      	uxth	r1, r1
 8023138:	fb00 f901 	mul.w	r9, r0, r1
 802313c:	0100      	lsls	r0, r0, #4
 802313e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023142:	eba0 0809 	sub.w	r8, r0, r9
 8023146:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802314a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802314c:	b289      	uxth	r1, r1
 802314e:	fa1f f888 	uxth.w	r8, r8
 8023152:	1a5b      	subs	r3, r3, r1
 8023154:	fb08 f000 	mul.w	r0, r8, r0
 8023158:	b29b      	uxth	r3, r3
 802315a:	fb03 000e 	mla	r0, r3, lr, r0
 802315e:	fb01 0005 	mla	r0, r1, r5, r0
 8023162:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023164:	fb09 0005 	mla	r0, r9, r5, r0
 8023168:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802316c:	2800      	cmp	r0, #0
 802316e:	f000 80fa 	beq.w	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023172:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023176:	d01b      	beq.n	80231b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023178:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802317c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023180:	fb0e fa0a 	mul.w	sl, lr, sl
 8023184:	fb0e fe02 	mul.w	lr, lr, r2
 8023188:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802318c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023190:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023194:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023198:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802319c:	4452      	add	r2, sl
 802319e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231a2:	0a12      	lsrs	r2, r2, #8
 80231a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80231a8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80231ac:	ea42 020c 	orr.w	r2, r2, ip
 80231b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80231b2:	2dff      	cmp	r5, #255	; 0xff
 80231b4:	d021      	beq.n	80231fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80231b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80231b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80231bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80231be:	fb05 fb0b 	mul.w	fp, r5, fp
 80231c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80231c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80231c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80231ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80231ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80231d2:	fb05 fa0a 	mul.w	sl, r5, sl
 80231d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80231da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80231de:	44de      	add	lr, fp
 80231e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80231e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80231e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80231f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231f4:	ea4e 050a 	orr.w	r5, lr, sl
 80231f8:	950c      	str	r5, [sp, #48]	; 0x30
 80231fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80231fc:	2dff      	cmp	r5, #255	; 0xff
 80231fe:	d021      	beq.n	8023244 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023200:	9d08      	ldr	r5, [sp, #32]
 8023202:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023206:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023208:	fb05 fb0b 	mul.w	fp, r5, fp
 802320c:	9d08      	ldr	r5, [sp, #32]
 802320e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023212:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023214:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023218:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802321c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023220:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023224:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023228:	44de      	add	lr, fp
 802322a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802322e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023232:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023236:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802323a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802323e:	ea4e 050a 	orr.w	r5, lr, sl
 8023242:	9508      	str	r5, [sp, #32]
 8023244:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023246:	2dff      	cmp	r5, #255	; 0xff
 8023248:	d021      	beq.n	802328e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802324a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802324c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023250:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023252:	fb05 fb0b 	mul.w	fp, r5, fp
 8023256:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023258:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802325c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802325e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023262:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023266:	fb05 fa0a 	mul.w	sl, r5, sl
 802326a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802326e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023272:	44de      	add	lr, fp
 8023274:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023278:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802327c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023280:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023284:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023288:	ea4e 050a 	orr.w	r5, lr, sl
 802328c:	950d      	str	r5, [sp, #52]	; 0x34
 802328e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023290:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023294:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023298:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802329c:	9d08      	ldr	r5, [sp, #32]
 802329e:	fb08 fc0c 	mul.w	ip, r8, ip
 80232a2:	fb03 cc0e 	mla	ip, r3, lr, ip
 80232a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80232aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80232ac:	fb01 cc0e 	mla	ip, r1, lr, ip
 80232b0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80232b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80232b6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80232ba:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80232be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80232c0:	fb08 f80e 	mul.w	r8, r8, lr
 80232c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80232c8:	fb03 8202 	mla	r2, r3, r2, r8
 80232cc:	9b08      	ldr	r3, [sp, #32]
 80232ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80232d2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80232d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80232d8:	fb01 220a 	mla	r2, r1, sl, r2
 80232dc:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80232e0:	883b      	ldrh	r3, [r7, #0]
 80232e2:	fb09 2901 	mla	r9, r9, r1, r2
 80232e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80232e8:	1219      	asrs	r1, r3, #8
 80232ea:	4342      	muls	r2, r0
 80232ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80232f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80232f4:	1c50      	adds	r0, r2, #1
 80232f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80232fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80232fe:	ea4c 0c09 	orr.w	ip, ip, r9
 8023302:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023306:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802330a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802330e:	fa5f fc8c 	uxtb.w	ip, ip
 8023312:	fb12 f205 	smulbb	r2, r2, r5
 8023316:	b2c0      	uxtb	r0, r0
 8023318:	fb1c fc05 	smulbb	ip, ip, r5
 802331c:	fb01 2100 	mla	r1, r1, r0, r2
 8023320:	10da      	asrs	r2, r3, #3
 8023322:	fb1e fe05 	smulbb	lr, lr, r5
 8023326:	00db      	lsls	r3, r3, #3
 8023328:	b289      	uxth	r1, r1
 802332a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802332e:	b2db      	uxtb	r3, r3
 8023330:	fb02 e200 	mla	r2, r2, r0, lr
 8023334:	fb03 c300 	mla	r3, r3, r0, ip
 8023338:	b292      	uxth	r2, r2
 802333a:	fa1f fc83 	uxth.w	ip, r3
 802333e:	1c4b      	adds	r3, r1, #1
 8023340:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023344:	f10c 0301 	add.w	r3, ip, #1
 8023348:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802334c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023350:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023354:	430b      	orrs	r3, r1
 8023356:	1c51      	adds	r1, r2, #1
 8023358:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802335c:	0952      	lsrs	r2, r2, #5
 802335e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023362:	4313      	orrs	r3, r2
 8023364:	803b      	strh	r3, [r7, #0]
 8023366:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023368:	3702      	adds	r7, #2
 802336a:	441c      	add	r4, r3
 802336c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802336e:	441e      	add	r6, r3
 8023370:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023372:	3b01      	subs	r3, #1
 8023374:	9318      	str	r3, [sp, #96]	; 0x60
 8023376:	e698      	b.n	80230aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023378:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802337a:	441c      	add	r4, r3
 802337c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802337e:	441e      	add	r6, r3
 8023380:	9b07      	ldr	r3, [sp, #28]
 8023382:	3b01      	subs	r3, #1
 8023384:	9307      	str	r3, [sp, #28]
 8023386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023388:	3302      	adds	r3, #2
 802338a:	930a      	str	r3, [sp, #40]	; 0x28
 802338c:	e66d      	b.n	802306a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802338e:	d023      	beq.n	80233d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023390:	9b07      	ldr	r3, [sp, #28]
 8023392:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023394:	3b01      	subs	r3, #1
 8023396:	fb00 4003 	mla	r0, r0, r3, r4
 802339a:	1400      	asrs	r0, r0, #16
 802339c:	f53f ae82 	bmi.w	80230a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80233a0:	3901      	subs	r1, #1
 80233a2:	4288      	cmp	r0, r1
 80233a4:	f6bf ae7e 	bge.w	80230a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80233a8:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80233aa:	fb01 6303 	mla	r3, r1, r3, r6
 80233ae:	141b      	asrs	r3, r3, #16
 80233b0:	f53f ae78 	bmi.w	80230a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80233b4:	3a01      	subs	r2, #1
 80233b6:	4293      	cmp	r3, r2
 80233b8:	f6bf ae74 	bge.w	80230a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80233bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80233c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80233c4:	f1bb 0f00 	cmp.w	fp, #0
 80233c8:	dc6c      	bgt.n	80234a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80233ca:	9b07      	ldr	r3, [sp, #28]
 80233cc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80233d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80233d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80233d6:	930a      	str	r3, [sp, #40]	; 0x28
 80233d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80233da:	2b00      	cmp	r3, #0
 80233dc:	f340 81b3 	ble.w	8023746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80233e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80233e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80233e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80233ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80233ee:	eef0 6a62 	vmov.f32	s13, s5
 80233f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80233f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80233fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233fe:	ee16 4a90 	vmov	r4, s13
 8023402:	eef0 6a43 	vmov.f32	s13, s6
 8023406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802340a:	ee16 6a90 	vmov	r6, s13
 802340e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023412:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023416:	ee77 2a62 	vsub.f32	s5, s14, s5
 802341a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802341e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023426:	ee12 2a90 	vmov	r2, s5
 802342a:	eef0 2a47 	vmov.f32	s5, s14
 802342e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023432:	ee13 2a10 	vmov	r2, s6
 8023436:	9329      	str	r3, [sp, #164]	; 0xa4
 8023438:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802343a:	eeb0 3a67 	vmov.f32	s6, s15
 802343e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023442:	932a      	str	r3, [sp, #168]	; 0xa8
 8023444:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023446:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023448:	3b01      	subs	r3, #1
 802344a:	9317      	str	r3, [sp, #92]	; 0x5c
 802344c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802344e:	bf08      	it	eq
 8023450:	4613      	moveq	r3, r2
 8023452:	9307      	str	r3, [sp, #28]
 8023454:	e5fb      	b.n	802304e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023456:	2900      	cmp	r1, #0
 8023458:	f43f ae6b 	beq.w	8023132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802345c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023460:	9308      	str	r3, [sp, #32]
 8023462:	0e1b      	lsrs	r3, r3, #24
 8023464:	9311      	str	r3, [sp, #68]	; 0x44
 8023466:	e664      	b.n	8023132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023468:	f112 0801 	adds.w	r8, r2, #1
 802346c:	f53f af7b 	bmi.w	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023470:	4543      	cmp	r3, r8
 8023472:	f6ff af78 	blt.w	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023476:	f11c 0801 	adds.w	r8, ip, #1
 802347a:	f53f af74 	bmi.w	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802347e:	45c6      	cmp	lr, r8
 8023480:	f6ff af71 	blt.w	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023484:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023486:	b21b      	sxth	r3, r3
 8023488:	9201      	str	r2, [sp, #4]
 802348a:	fa0f f28e 	sxth.w	r2, lr
 802348e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023492:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023496:	9200      	str	r2, [sp, #0]
 8023498:	4639      	mov	r1, r7
 802349a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802349c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802349e:	f7ff fc79 	bl	8022d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80234a2:	e760      	b.n	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80234a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80234a6:	1427      	asrs	r7, r4, #16
 80234a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80234ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234b2:	1433      	asrs	r3, r6, #16
 80234b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80234b8:	fb01 7303 	mla	r3, r1, r3, r7
 80234bc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80234c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80234c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80234c8:	2a00      	cmp	r2, #0
 80234ca:	f000 8133 	beq.w	8023734 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80234ce:	687d      	ldr	r5, [r7, #4]
 80234d0:	950e      	str	r5, [sp, #56]	; 0x38
 80234d2:	0e2d      	lsrs	r5, r5, #24
 80234d4:	9515      	str	r5, [sp, #84]	; 0x54
 80234d6:	b178      	cbz	r0, 80234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80234d8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80234dc:	3901      	subs	r1, #1
 80234de:	0089      	lsls	r1, r1, #2
 80234e0:	3104      	adds	r1, #4
 80234e2:	eb07 0e01 	add.w	lr, r7, r1
 80234e6:	5879      	ldr	r1, [r7, r1]
 80234e8:	9109      	str	r1, [sp, #36]	; 0x24
 80234ea:	0e09      	lsrs	r1, r1, #24
 80234ec:	9112      	str	r1, [sp, #72]	; 0x48
 80234ee:	f8de 1004 	ldr.w	r1, [lr, #4]
 80234f2:	910f      	str	r1, [sp, #60]	; 0x3c
 80234f4:	0e09      	lsrs	r1, r1, #24
 80234f6:	9116      	str	r1, [sp, #88]	; 0x58
 80234f8:	b292      	uxth	r2, r2
 80234fa:	9915      	ldr	r1, [sp, #84]	; 0x54
 80234fc:	b280      	uxth	r0, r0
 80234fe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023500:	fb02 f800 	mul.w	r8, r2, r0
 8023504:	0112      	lsls	r2, r2, #4
 8023506:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802350a:	eba2 0e08 	sub.w	lr, r2, r8
 802350e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023512:	b280      	uxth	r0, r0
 8023514:	fa1f fe8e 	uxth.w	lr, lr
 8023518:	1a12      	subs	r2, r2, r0
 802351a:	fb0e f101 	mul.w	r1, lr, r1
 802351e:	b292      	uxth	r2, r2
 8023520:	fb02 110c 	mla	r1, r2, ip, r1
 8023524:	fb00 1105 	mla	r1, r0, r5, r1
 8023528:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802352a:	fb08 1105 	mla	r1, r8, r5, r1
 802352e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023532:	2900      	cmp	r1, #0
 8023534:	f000 80f5 	beq.w	8023722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023538:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802353c:	d019      	beq.n	8023572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802353e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023542:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023546:	fb0c fa0a 	mul.w	sl, ip, sl
 802354a:	fb0c fc03 	mul.w	ip, ip, r3
 802354e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023552:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023556:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802355a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802355e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023562:	4453      	add	r3, sl
 8023564:	0a3f      	lsrs	r7, r7, #8
 8023566:	0a1b      	lsrs	r3, r3, #8
 8023568:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802356c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023570:	433b      	orrs	r3, r7
 8023572:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023574:	2dff      	cmp	r5, #255	; 0xff
 8023576:	d020      	beq.n	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023578:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802357a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802357e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023580:	436f      	muls	r7, r5
 8023582:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023584:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023588:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802358c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802358e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023592:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023596:	fb05 fa0a 	mul.w	sl, r5, sl
 802359a:	44bc      	add	ip, r7
 802359c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80235a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80235a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235b4:	ea4c 050a 	orr.w	r5, ip, sl
 80235b8:	950e      	str	r5, [sp, #56]	; 0x38
 80235ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80235bc:	2dff      	cmp	r5, #255	; 0xff
 80235be:	d020      	beq.n	8023602 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80235c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80235c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80235c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80235c8:	436f      	muls	r7, r5
 80235ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80235cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80235d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80235d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80235d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80235da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235de:	fb05 fa0a 	mul.w	sl, r5, sl
 80235e2:	44bc      	add	ip, r7
 80235e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80235e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80235f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235fc:	ea4c 050a 	orr.w	r5, ip, sl
 8023600:	9509      	str	r5, [sp, #36]	; 0x24
 8023602:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023604:	2dff      	cmp	r5, #255	; 0xff
 8023606:	d020      	beq.n	802364a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023608:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802360a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802360e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023610:	436f      	muls	r7, r5
 8023612:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023614:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023618:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802361c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802361e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023622:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023626:	fb05 fa0a 	mul.w	sl, r5, sl
 802362a:	44bc      	add	ip, r7
 802362c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023630:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023634:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023638:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802363c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023640:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023644:	ea4c 050a 	orr.w	r5, ip, sl
 8023648:	950f      	str	r5, [sp, #60]	; 0x3c
 802364a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802364c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023650:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023654:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023658:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802365a:	fb0e f707 	mul.w	r7, lr, r7
 802365e:	fb02 770c 	mla	r7, r2, ip, r7
 8023662:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023666:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023668:	fb00 770c 	mla	r7, r0, ip, r7
 802366c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023670:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023672:	fb08 770c 	mla	r7, r8, ip, r7
 8023676:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802367a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802367c:	fb0e fe0c 	mul.w	lr, lr, ip
 8023680:	0a3f      	lsrs	r7, r7, #8
 8023682:	fb02 e303 	mla	r3, r2, r3, lr
 8023686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023688:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802368c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023690:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023692:	fb00 330a 	mla	r3, r0, sl, r3
 8023696:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802369a:	f8b9 0000 	ldrh.w	r0, [r9]
 802369e:	fb08 3c0c 	mla	ip, r8, ip, r3
 80236a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80236a4:	1202      	asrs	r2, r0, #8
 80236a6:	4359      	muls	r1, r3
 80236a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236ac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80236b0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80236b4:	1c4b      	adds	r3, r1, #1
 80236b6:	ea47 070c 	orr.w	r7, r7, ip
 80236ba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80236be:	0c3b      	lsrs	r3, r7, #16
 80236c0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80236c4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80236c8:	b2ff      	uxtb	r7, r7
 80236ca:	fb13 f305 	smulbb	r3, r3, r5
 80236ce:	b2c9      	uxtb	r1, r1
 80236d0:	fb17 f705 	smulbb	r7, r7, r5
 80236d4:	fb02 3201 	mla	r2, r2, r1, r3
 80236d8:	10c3      	asrs	r3, r0, #3
 80236da:	fb1c fc05 	smulbb	ip, ip, r5
 80236de:	00c0      	lsls	r0, r0, #3
 80236e0:	b292      	uxth	r2, r2
 80236e2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80236e6:	b2c0      	uxtb	r0, r0
 80236e8:	fb03 c301 	mla	r3, r3, r1, ip
 80236ec:	fb00 7001 	mla	r0, r0, r1, r7
 80236f0:	1c51      	adds	r1, r2, #1
 80236f2:	b29b      	uxth	r3, r3
 80236f4:	b280      	uxth	r0, r0
 80236f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80236fa:	f100 0c01 	add.w	ip, r0, #1
 80236fe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023702:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023706:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802370a:	ea4c 0202 	orr.w	r2, ip, r2
 802370e:	f103 0c01 	add.w	ip, r3, #1
 8023712:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023716:	095b      	lsrs	r3, r3, #5
 8023718:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802371c:	431a      	orrs	r2, r3
 802371e:	f8a9 2000 	strh.w	r2, [r9]
 8023722:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023724:	f109 0902 	add.w	r9, r9, #2
 8023728:	f10b 3bff 	add.w	fp, fp, #4294967295
 802372c:	441c      	add	r4, r3
 802372e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023730:	441e      	add	r6, r3
 8023732:	e647      	b.n	80233c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023734:	2800      	cmp	r0, #0
 8023736:	f43f aedf 	beq.w	80234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802373a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802373e:	9109      	str	r1, [sp, #36]	; 0x24
 8023740:	0e09      	lsrs	r1, r1, #24
 8023742:	9112      	str	r1, [sp, #72]	; 0x48
 8023744:	e6d8      	b.n	80234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023746:	b01d      	add	sp, #116	; 0x74
 8023748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802374c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802374c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023750:	b085      	sub	sp, #20
 8023752:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023756:	9102      	str	r1, [sp, #8]
 8023758:	2c00      	cmp	r4, #0
 802375a:	fb04 7103 	mla	r1, r4, r3, r7
 802375e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023762:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023766:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802376a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802376e:	f2c0 810c 	blt.w	802398a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023772:	45a6      	cmp	lr, r4
 8023774:	f340 8109 	ble.w	802398a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023778:	2f00      	cmp	r7, #0
 802377a:	f2c0 8104 	blt.w	8023986 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802377e:	42bb      	cmp	r3, r7
 8023780:	f340 8101 	ble.w	8023986 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023784:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023788:	1c7a      	adds	r2, r7, #1
 802378a:	f100 8101 	bmi.w	8023990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802378e:	4293      	cmp	r3, r2
 8023790:	f340 80fe 	ble.w	8023990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023794:	2e00      	cmp	r6, #0
 8023796:	f000 80fd 	beq.w	8023994 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802379a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802379e:	3401      	adds	r4, #1
 80237a0:	f100 80fc 	bmi.w	802399c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80237a4:	45a6      	cmp	lr, r4
 80237a6:	f340 80f9 	ble.w	802399c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80237aa:	2800      	cmp	r0, #0
 80237ac:	f000 80f9 	beq.w	80239a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80237b0:	2f00      	cmp	r7, #0
 80237b2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80237b6:	f2c0 80ef 	blt.w	8023998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80237ba:	42bb      	cmp	r3, r7
 80237bc:	f340 80ec 	ble.w	8023998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80237c0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80237c4:	3701      	adds	r7, #1
 80237c6:	f100 80ef 	bmi.w	80239a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80237ca:	42bb      	cmp	r3, r7
 80237cc:	f340 80ec 	ble.w	80239a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80237d0:	2e00      	cmp	r6, #0
 80237d2:	f000 80eb 	beq.w	80239ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80237d6:	6852      	ldr	r2, [r2, #4]
 80237d8:	b2b6      	uxth	r6, r6
 80237da:	b280      	uxth	r0, r0
 80237dc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80237e0:	fb00 fe06 	mul.w	lr, r0, r6
 80237e4:	0136      	lsls	r6, r6, #4
 80237e6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80237ea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80237ee:	eba6 070e 	sub.w	r7, r6, lr
 80237f2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80237f6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80237fa:	b280      	uxth	r0, r0
 80237fc:	b2bf      	uxth	r7, r7
 80237fe:	1a1b      	subs	r3, r3, r0
 8023800:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023804:	fb07 f60a 	mul.w	r6, r7, sl
 8023808:	b29b      	uxth	r3, r3
 802380a:	fb0b 6603 	mla	r6, fp, r3, r6
 802380e:	fb00 6609 	mla	r6, r0, r9, r6
 8023812:	fb0e 6608 	mla	r6, lr, r8, r6
 8023816:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802381a:	9600      	str	r6, [sp, #0]
 802381c:	2e00      	cmp	r6, #0
 802381e:	f000 80af 	beq.w	8023980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023822:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023826:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802382a:	9e02      	ldr	r6, [sp, #8]
 802382c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023830:	fb0b f505 	mul.w	r5, fp, r5
 8023834:	8836      	ldrh	r6, [r6, #0]
 8023836:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802383a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802383e:	9501      	str	r5, [sp, #4]
 8023840:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023844:	44dc      	add	ip, fp
 8023846:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802384a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802384e:	9503      	str	r5, [sp, #12]
 8023850:	9d01      	ldr	r5, [sp, #4]
 8023852:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023856:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802385a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802385e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023862:	fb0a fc0c 	mul.w	ip, sl, ip
 8023866:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802386a:	fb0a fa01 	mul.w	sl, sl, r1
 802386e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023872:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023876:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802387a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802387e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023882:	4465      	add	r5, ip
 8023884:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023888:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802388c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023890:	fb09 fc0c 	mul.w	ip, r9, ip
 8023894:	0a2d      	lsrs	r5, r5, #8
 8023896:	fb09 f904 	mul.w	r9, r9, r4
 802389a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802389e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80238a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80238a6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80238aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80238ae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80238b2:	437d      	muls	r5, r7
 80238b4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80238b8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80238bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80238c0:	4461      	add	r1, ip
 80238c2:	fb08 f404 	mul.w	r4, r8, r4
 80238c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80238ca:	fb08 f802 	mul.w	r8, r8, r2
 80238ce:	0a09      	lsrs	r1, r1, #8
 80238d0:	0a22      	lsrs	r2, r4, #8
 80238d2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80238d6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80238da:	fb07 f70a 	mul.w	r7, r7, sl
 80238de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80238e2:	4414      	add	r4, r2
 80238e4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80238e8:	0a24      	lsrs	r4, r4, #8
 80238ea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80238ee:	9a03      	ldr	r2, [sp, #12]
 80238f0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80238f4:	fb02 5503 	mla	r5, r2, r3, r5
 80238f8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80238fc:	fb04 540e 	mla	r4, r4, lr, r5
 8023900:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023904:	fb01 4100 	mla	r1, r1, r0, r4
 8023908:	0a09      	lsrs	r1, r1, #8
 802390a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802390e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023912:	fb03 7101 	mla	r1, r3, r1, r7
 8023916:	9b00      	ldr	r3, [sp, #0]
 8023918:	fb0e 1e08 	mla	lr, lr, r8, r1
 802391c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023920:	43da      	mvns	r2, r3
 8023922:	1233      	asrs	r3, r6, #8
 8023924:	fb00 e101 	mla	r1, r0, r1, lr
 8023928:	10f0      	asrs	r0, r6, #3
 802392a:	b2d2      	uxtb	r2, r2
 802392c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023930:	0a09      	lsrs	r1, r1, #8
 8023932:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023936:	00f6      	lsls	r6, r6, #3
 8023938:	4353      	muls	r3, r2
 802393a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802393e:	4350      	muls	r0, r2
 8023940:	b2f6      	uxtb	r6, r6
 8023942:	4321      	orrs	r1, r4
 8023944:	4356      	muls	r6, r2
 8023946:	1c5a      	adds	r2, r3, #1
 8023948:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802394c:	0c0b      	lsrs	r3, r1, #16
 802394e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023952:	1c42      	adds	r2, r0, #1
 8023954:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023958:	0a0a      	lsrs	r2, r1, #8
 802395a:	021b      	lsls	r3, r3, #8
 802395c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023960:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023964:	00d2      	lsls	r2, r2, #3
 8023966:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802396a:	4313      	orrs	r3, r2
 802396c:	1c72      	adds	r2, r6, #1
 802396e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023972:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023976:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802397a:	4319      	orrs	r1, r3
 802397c:	9b02      	ldr	r3, [sp, #8]
 802397e:	8019      	strh	r1, [r3, #0]
 8023980:	b005      	add	sp, #20
 8023982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023986:	2500      	movs	r5, #0
 8023988:	e6fe      	b.n	8023788 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802398a:	2100      	movs	r1, #0
 802398c:	460d      	mov	r5, r1
 802398e:	e706      	b.n	802379e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023990:	2100      	movs	r1, #0
 8023992:	e704      	b.n	802379e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023994:	4631      	mov	r1, r6
 8023996:	e702      	b.n	802379e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023998:	2400      	movs	r4, #0
 802399a:	e713      	b.n	80237c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802399c:	2200      	movs	r2, #0
 802399e:	4614      	mov	r4, r2
 80239a0:	e71a      	b.n	80237d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80239a2:	4602      	mov	r2, r0
 80239a4:	4604      	mov	r4, r0
 80239a6:	e717      	b.n	80237d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80239a8:	2200      	movs	r2, #0
 80239aa:	e715      	b.n	80237d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80239ac:	4632      	mov	r2, r6
 80239ae:	e713      	b.n	80237d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

080239b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80239b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239b4:	b09b      	sub	sp, #108	; 0x6c
 80239b6:	9218      	str	r2, [sp, #96]	; 0x60
 80239b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80239ba:	9019      	str	r0, [sp, #100]	; 0x64
 80239bc:	9116      	str	r1, [sp, #88]	; 0x58
 80239be:	6850      	ldr	r0, [r2, #4]
 80239c0:	9307      	str	r3, [sp, #28]
 80239c2:	6812      	ldr	r2, [r2, #0]
 80239c4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80239c8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80239cc:	fb00 1303 	mla	r3, r0, r3, r1
 80239d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80239d4:	930a      	str	r3, [sp, #40]	; 0x28
 80239d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80239d8:	681b      	ldr	r3, [r3, #0]
 80239da:	930f      	str	r3, [sp, #60]	; 0x3c
 80239dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80239de:	2b00      	cmp	r3, #0
 80239e0:	dc03      	bgt.n	80239ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80239e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80239e4:	2b00      	cmp	r3, #0
 80239e6:	f340 8387 	ble.w	80240f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80239ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80239ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80239f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80239f4:	1e48      	subs	r0, r1, #1
 80239f6:	1e57      	subs	r7, r2, #1
 80239f8:	9b07      	ldr	r3, [sp, #28]
 80239fa:	2b00      	cmp	r3, #0
 80239fc:	f340 8166 	ble.w	8023ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023a00:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023a04:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023a08:	d406      	bmi.n	8023a18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023a0a:	4584      	cmp	ip, r0
 8023a0c:	da04      	bge.n	8023a18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023a0e:	2b00      	cmp	r3, #0
 8023a10:	db02      	blt.n	8023a18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023a12:	42bb      	cmp	r3, r7
 8023a14:	f2c0 815b 	blt.w	8023cce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023a18:	f11c 0c01 	adds.w	ip, ip, #1
 8023a1c:	f100 814b 	bmi.w	8023cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023a20:	4561      	cmp	r1, ip
 8023a22:	f2c0 8148 	blt.w	8023cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023a26:	3301      	adds	r3, #1
 8023a28:	f100 8145 	bmi.w	8023cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023a2c:	429a      	cmp	r2, r3
 8023a2e:	f2c0 8142 	blt.w	8023cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023a32:	9b07      	ldr	r3, [sp, #28]
 8023a34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023a36:	9317      	str	r3, [sp, #92]	; 0x5c
 8023a38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a3a:	2b00      	cmp	r3, #0
 8023a3c:	f340 8165 	ble.w	8023d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023a42:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023a46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023a48:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023a4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023a50:	1422      	asrs	r2, r4, #16
 8023a52:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023a56:	689b      	ldr	r3, [r3, #8]
 8023a58:	f100 81d5 	bmi.w	8023e06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023a5c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023a60:	4542      	cmp	r2, r8
 8023a62:	f280 81d0 	bge.w	8023e06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023a66:	f1bc 0f00 	cmp.w	ip, #0
 8023a6a:	f2c0 81cc 	blt.w	8023e06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023a6e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023a72:	45c4      	cmp	ip, r8
 8023a74:	f280 81c7 	bge.w	8023e06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023a78:	b21b      	sxth	r3, r3
 8023a7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a7c:	fb0c 2203 	mla	r2, ip, r3, r2
 8023a80:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023a84:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023a88:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023a8c:	2900      	cmp	r1, #0
 8023a8e:	f000 8182 	beq.w	8023d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023a92:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023a96:	950b      	str	r5, [sp, #44]	; 0x2c
 8023a98:	0e2d      	lsrs	r5, r5, #24
 8023a9a:	9512      	str	r5, [sp, #72]	; 0x48
 8023a9c:	b180      	cbz	r0, 8023ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023a9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023aa2:	3b01      	subs	r3, #1
 8023aa4:	009b      	lsls	r3, r3, #2
 8023aa6:	3304      	adds	r3, #4
 8023aa8:	eb08 0c03 	add.w	ip, r8, r3
 8023aac:	f858 3003 	ldr.w	r3, [r8, r3]
 8023ab0:	9308      	str	r3, [sp, #32]
 8023ab2:	0e1b      	lsrs	r3, r3, #24
 8023ab4:	9310      	str	r3, [sp, #64]	; 0x40
 8023ab6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023aba:	930c      	str	r3, [sp, #48]	; 0x30
 8023abc:	0e1b      	lsrs	r3, r3, #24
 8023abe:	9313      	str	r3, [sp, #76]	; 0x4c
 8023ac0:	b289      	uxth	r1, r1
 8023ac2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023ac4:	b280      	uxth	r0, r0
 8023ac6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ac8:	fb01 f900 	mul.w	r9, r1, r0
 8023acc:	0109      	lsls	r1, r1, #4
 8023ace:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023ad2:	eba1 0809 	sub.w	r8, r1, r9
 8023ad6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023ada:	b280      	uxth	r0, r0
 8023adc:	fa1f f888 	uxth.w	r8, r8
 8023ae0:	1a09      	subs	r1, r1, r0
 8023ae2:	fb08 f303 	mul.w	r3, r8, r3
 8023ae6:	b289      	uxth	r1, r1
 8023ae8:	fb01 330e 	mla	r3, r1, lr, r3
 8023aec:	fb00 3305 	mla	r3, r0, r5, r3
 8023af0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023af2:	fb09 3305 	mla	r3, r9, r5, r3
 8023af6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023afa:	2b00      	cmp	r3, #0
 8023afc:	f000 80d2 	beq.w	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023b00:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023b04:	d01b      	beq.n	8023b3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023b06:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023b0a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b0e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023b12:	fb0e fe02 	mul.w	lr, lr, r2
 8023b16:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023b1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023b1e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023b22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023b26:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023b2a:	4452      	add	r2, sl
 8023b2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b30:	0a12      	lsrs	r2, r2, #8
 8023b32:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023b36:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023b3a:	ea42 020c 	orr.w	r2, r2, ip
 8023b3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b40:	2dff      	cmp	r5, #255	; 0xff
 8023b42:	d021      	beq.n	8023b88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023b44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023b46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023b4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b4c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023b50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023b52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b56:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023b60:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023b6c:	44de      	add	lr, fp
 8023b6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023b72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b82:	ea4e 050a 	orr.w	r5, lr, sl
 8023b86:	950b      	str	r5, [sp, #44]	; 0x2c
 8023b88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b8a:	2dff      	cmp	r5, #255	; 0xff
 8023b8c:	d021      	beq.n	8023bd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023b8e:	9d08      	ldr	r5, [sp, #32]
 8023b90:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023b94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b96:	fb05 fb0b 	mul.w	fp, r5, fp
 8023b9a:	9d08      	ldr	r5, [sp, #32]
 8023b9c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023ba0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ba2:	fb05 fa0e 	mul.w	sl, r5, lr
 8023ba6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023baa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023bae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023bb2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023bb6:	44de      	add	lr, fp
 8023bb8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bbc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023bc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023bcc:	ea4e 050a 	orr.w	r5, lr, sl
 8023bd0:	9508      	str	r5, [sp, #32]
 8023bd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023bd4:	2dff      	cmp	r5, #255	; 0xff
 8023bd6:	d021      	beq.n	8023c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023bd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023bda:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023bde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023be0:	fb05 fb0b 	mul.w	fp, r5, fp
 8023be4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023be6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023bea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023bec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023bf0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023bf4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023bf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023bfc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023c00:	44de      	add	lr, fp
 8023c02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c16:	ea4e 050a 	orr.w	r5, lr, sl
 8023c1a:	950c      	str	r5, [sp, #48]	; 0x30
 8023c1c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023c1e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023c22:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023c26:	2bff      	cmp	r3, #255	; 0xff
 8023c28:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023c2c:	9d08      	ldr	r5, [sp, #32]
 8023c2e:	fb08 fc0c 	mul.w	ip, r8, ip
 8023c32:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023c36:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023c3a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023c3c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023c40:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023c44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023c46:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023c4a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023c4e:	fb08 f80e 	mul.w	r8, r8, lr
 8023c52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c56:	fb01 8202 	mla	r2, r1, r2, r8
 8023c5a:	9908      	ldr	r1, [sp, #32]
 8023c5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c60:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023c64:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023c66:	fb00 220a 	mla	r2, r0, sl, r2
 8023c6a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023c6e:	fb09 2900 	mla	r9, r9, r0, r2
 8023c72:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c76:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023c7a:	ea4c 0c09 	orr.w	ip, ip, r9
 8023c7e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023c82:	f040 8091 	bne.w	8023da8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023c86:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023c8a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023c8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023c92:	f022 0207 	bic.w	r2, r2, #7
 8023c96:	431a      	orrs	r2, r3
 8023c98:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023c9c:	ea4c 0c02 	orr.w	ip, ip, r2
 8023ca0:	f8a7 c000 	strh.w	ip, [r7]
 8023ca4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023ca6:	3702      	adds	r7, #2
 8023ca8:	441c      	add	r4, r3
 8023caa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023cac:	441e      	add	r6, r3
 8023cae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023cb0:	3b01      	subs	r3, #1
 8023cb2:	9317      	str	r3, [sp, #92]	; 0x5c
 8023cb4:	e6c0      	b.n	8023a38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023cb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023cb8:	441c      	add	r4, r3
 8023cba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023cbc:	441e      	add	r6, r3
 8023cbe:	9b07      	ldr	r3, [sp, #28]
 8023cc0:	3b01      	subs	r3, #1
 8023cc2:	9307      	str	r3, [sp, #28]
 8023cc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cc6:	3302      	adds	r3, #2
 8023cc8:	930a      	str	r3, [sp, #40]	; 0x28
 8023cca:	e695      	b.n	80239f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023ccc:	d024      	beq.n	8023d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023cce:	9b07      	ldr	r3, [sp, #28]
 8023cd0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023cd2:	3b01      	subs	r3, #1
 8023cd4:	fb00 4003 	mla	r0, r0, r3, r4
 8023cd8:	1400      	asrs	r0, r0, #16
 8023cda:	f53f aeaa 	bmi.w	8023a32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023cde:	3901      	subs	r1, #1
 8023ce0:	4288      	cmp	r0, r1
 8023ce2:	f6bf aea6 	bge.w	8023a32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023ce6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023ce8:	fb01 6303 	mla	r3, r1, r3, r6
 8023cec:	141b      	asrs	r3, r3, #16
 8023cee:	f53f aea0 	bmi.w	8023a32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023cf2:	3a01      	subs	r2, #1
 8023cf4:	4293      	cmp	r3, r2
 8023cf6:	f6bf ae9c 	bge.w	8023a32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023cfa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023cfe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023d02:	f1bb 0f00 	cmp.w	fp, #0
 8023d06:	f300 809a 	bgt.w	8023e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023d0a:	9b07      	ldr	r3, [sp, #28]
 8023d0c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d12:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023d16:	930a      	str	r3, [sp, #40]	; 0x28
 8023d18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d1a:	2b00      	cmp	r3, #0
 8023d1c:	f340 81ec 	ble.w	80240f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023d20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d26:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d2e:	eef0 6a62 	vmov.f32	s13, s5
 8023d32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d3e:	ee16 4a90 	vmov	r4, s13
 8023d42:	eef0 6a43 	vmov.f32	s13, s6
 8023d46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d4a:	ee16 6a90 	vmov	r6, s13
 8023d4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d66:	ee12 2a90 	vmov	r2, s5
 8023d6a:	eef0 2a47 	vmov.f32	s5, s14
 8023d6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d72:	ee13 2a10 	vmov	r2, s6
 8023d76:	9327      	str	r3, [sp, #156]	; 0x9c
 8023d78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d7a:	eeb0 3a67 	vmov.f32	s6, s15
 8023d7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d82:	9328      	str	r3, [sp, #160]	; 0xa0
 8023d84:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d86:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023d88:	3b01      	subs	r3, #1
 8023d8a:	9316      	str	r3, [sp, #88]	; 0x58
 8023d8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d8e:	bf08      	it	eq
 8023d90:	4613      	moveq	r3, r2
 8023d92:	9307      	str	r3, [sp, #28]
 8023d94:	e622      	b.n	80239dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023d96:	2800      	cmp	r0, #0
 8023d98:	f43f ae92 	beq.w	8023ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023d9c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023da0:	9308      	str	r3, [sp, #32]
 8023da2:	0e1b      	lsrs	r3, r3, #24
 8023da4:	9310      	str	r3, [sp, #64]	; 0x40
 8023da6:	e68b      	b.n	8023ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023da8:	8839      	ldrh	r1, [r7, #0]
 8023daa:	43db      	mvns	r3, r3
 8023dac:	4dd4      	ldr	r5, [pc, #848]	; (8024100 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8023dae:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023db2:	fa5f f883 	uxtb.w	r8, r3
 8023db6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8023dba:	10c8      	asrs	r0, r1, #3
 8023dbc:	00cb      	lsls	r3, r1, #3
 8023dbe:	fb0e fe08 	mul.w	lr, lr, r8
 8023dc2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023dc6:	b2db      	uxtb	r3, r3
 8023dc8:	f10e 0101 	add.w	r1, lr, #1
 8023dcc:	fb00 f008 	mul.w	r0, r0, r8
 8023dd0:	fb03 f308 	mul.w	r3, r3, r8
 8023dd4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023dd8:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023ddc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023de0:	f100 0e01 	add.w	lr, r0, #1
 8023de4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023de8:	b2c9      	uxtb	r1, r1
 8023dea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023dee:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023df2:	00d2      	lsls	r2, r2, #3
 8023df4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023df8:	430a      	orrs	r2, r1
 8023dfa:	1c59      	adds	r1, r3, #1
 8023dfc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023e00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023e04:	e748      	b.n	8023c98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023e06:	f112 0801 	adds.w	r8, r2, #1
 8023e0a:	f53f af4b 	bmi.w	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e0e:	4543      	cmp	r3, r8
 8023e10:	f6ff af48 	blt.w	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e14:	f11c 0801 	adds.w	r8, ip, #1
 8023e18:	f53f af44 	bmi.w	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e1c:	45c6      	cmp	lr, r8
 8023e1e:	f6ff af41 	blt.w	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e22:	b21b      	sxth	r3, r3
 8023e24:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023e28:	fa0f f28e 	sxth.w	r2, lr
 8023e2c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023e30:	9200      	str	r2, [sp, #0]
 8023e32:	4639      	mov	r1, r7
 8023e34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023e36:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023e38:	f7ff fc88 	bl	802374c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023e3c:	e732      	b.n	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023e40:	1421      	asrs	r1, r4, #16
 8023e42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023e44:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023e48:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023e4c:	1433      	asrs	r3, r6, #16
 8023e4e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023e52:	fb07 1303 	mla	r3, r7, r3, r1
 8023e56:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023e58:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023e5c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023e60:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023e64:	2a00      	cmp	r2, #0
 8023e66:	f000 8108 	beq.w	802407a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8023e6a:	684d      	ldr	r5, [r1, #4]
 8023e6c:	950d      	str	r5, [sp, #52]	; 0x34
 8023e6e:	0e2d      	lsrs	r5, r5, #24
 8023e70:	9514      	str	r5, [sp, #80]	; 0x50
 8023e72:	b178      	cbz	r0, 8023e94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023e74:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8023e78:	3f01      	subs	r7, #1
 8023e7a:	00bf      	lsls	r7, r7, #2
 8023e7c:	3704      	adds	r7, #4
 8023e7e:	eb01 0e07 	add.w	lr, r1, r7
 8023e82:	59c9      	ldr	r1, [r1, r7]
 8023e84:	9109      	str	r1, [sp, #36]	; 0x24
 8023e86:	0e09      	lsrs	r1, r1, #24
 8023e88:	9111      	str	r1, [sp, #68]	; 0x44
 8023e8a:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023e8e:	910e      	str	r1, [sp, #56]	; 0x38
 8023e90:	0e09      	lsrs	r1, r1, #24
 8023e92:	9115      	str	r1, [sp, #84]	; 0x54
 8023e94:	b292      	uxth	r2, r2
 8023e96:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e98:	b280      	uxth	r0, r0
 8023e9a:	fb02 f900 	mul.w	r9, r2, r0
 8023e9e:	0112      	lsls	r2, r2, #4
 8023ea0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023ea4:	eba2 0e09 	sub.w	lr, r2, r9
 8023ea8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023eac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023eae:	b280      	uxth	r0, r0
 8023eb0:	fa1f fe8e 	uxth.w	lr, lr
 8023eb4:	1a09      	subs	r1, r1, r0
 8023eb6:	fb0e f202 	mul.w	r2, lr, r2
 8023eba:	b289      	uxth	r1, r1
 8023ebc:	fb01 220c 	mla	r2, r1, ip, r2
 8023ec0:	fb00 2205 	mla	r2, r0, r5, r2
 8023ec4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023ec6:	fb09 2205 	mla	r2, r9, r5, r2
 8023eca:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023ece:	2a00      	cmp	r2, #0
 8023ed0:	f000 80ca 	beq.w	8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8023ed4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023ed8:	d019      	beq.n	8023f0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8023eda:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023ede:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ee2:	fb0c fa0a 	mul.w	sl, ip, sl
 8023ee6:	fb0c fc03 	mul.w	ip, ip, r3
 8023eea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023eee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ef2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023ef6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023efa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023efe:	4453      	add	r3, sl
 8023f00:	0a3f      	lsrs	r7, r7, #8
 8023f02:	0a1b      	lsrs	r3, r3, #8
 8023f04:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023f08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023f0c:	433b      	orrs	r3, r7
 8023f0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023f10:	2dff      	cmp	r5, #255	; 0xff
 8023f12:	d020      	beq.n	8023f56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023f14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023f16:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023f1a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023f1c:	436f      	muls	r7, r5
 8023f1e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023f20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f24:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f28:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023f2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f32:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f36:	44bc      	add	ip, r7
 8023f38:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f50:	ea4c 050a 	orr.w	r5, ip, sl
 8023f54:	950d      	str	r5, [sp, #52]	; 0x34
 8023f56:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023f58:	2dff      	cmp	r5, #255	; 0xff
 8023f5a:	d020      	beq.n	8023f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8023f5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023f5e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023f62:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023f64:	436f      	muls	r7, r5
 8023f66:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023f68:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023f6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023f6e:	fb05 fa0c 	mul.w	sl, r5, ip
 8023f72:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f7e:	44bc      	add	ip, r7
 8023f80:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f98:	ea4c 050a 	orr.w	r5, ip, sl
 8023f9c:	9509      	str	r5, [sp, #36]	; 0x24
 8023f9e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023fa0:	2dff      	cmp	r5, #255	; 0xff
 8023fa2:	d020      	beq.n	8023fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023fa4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023fa6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023faa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023fac:	436f      	muls	r7, r5
 8023fae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023fb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023fb4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023fb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023fba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023fbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023fc2:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fc6:	44bc      	add	ip, r7
 8023fc8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023fcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023fd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023fd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023fe0:	ea4c 050a 	orr.w	r5, ip, sl
 8023fe4:	950e      	str	r5, [sp, #56]	; 0x38
 8023fe6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023fe8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023fec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ff0:	2aff      	cmp	r2, #255	; 0xff
 8023ff2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023ff6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023ff8:	fb0e f707 	mul.w	r7, lr, r7
 8023ffc:	fb01 770c 	mla	r7, r1, ip, r7
 8024000:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024004:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024006:	fb00 770c 	mla	r7, r0, ip, r7
 802400a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802400e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024010:	fb09 770c 	mla	r7, r9, ip, r7
 8024014:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024018:	fb0e fe0c 	mul.w	lr, lr, ip
 802401c:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8024020:	fb01 e303 	mla	r3, r1, r3, lr
 8024024:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024026:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802402a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802402e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024030:	fb00 330a 	mla	r3, r0, sl, r3
 8024034:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024038:	fb09 3c0c 	mla	ip, r9, ip, r3
 802403c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024040:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024044:	ea47 070c 	orr.w	r7, r7, ip
 8024048:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802404c:	d11e      	bne.n	802408c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 802404e:	097a      	lsrs	r2, r7, #5
 8024050:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024054:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024058:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802405c:	f023 0307 	bic.w	r3, r3, #7
 8024060:	4313      	orrs	r3, r2
 8024062:	431f      	orrs	r7, r3
 8024064:	f8a8 7000 	strh.w	r7, [r8]
 8024068:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802406a:	f108 0802 	add.w	r8, r8, #2
 802406e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024072:	441c      	add	r4, r3
 8024074:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024076:	441e      	add	r6, r3
 8024078:	e643      	b.n	8023d02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802407a:	2800      	cmp	r0, #0
 802407c:	f43f af0a 	beq.w	8023e94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024080:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024084:	9109      	str	r1, [sp, #36]	; 0x24
 8024086:	0e09      	lsrs	r1, r1, #24
 8024088:	9111      	str	r1, [sp, #68]	; 0x44
 802408a:	e703      	b.n	8023e94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802408c:	f8b8 1000 	ldrh.w	r1, [r8]
 8024090:	43d2      	mvns	r2, r2
 8024092:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024096:	fa5f fe82 	uxtb.w	lr, r2
 802409a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802409e:	10c8      	asrs	r0, r1, #3
 80240a0:	00ca      	lsls	r2, r1, #3
 80240a2:	fb0c fc0e 	mul.w	ip, ip, lr
 80240a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80240aa:	b2d2      	uxtb	r2, r2
 80240ac:	f10c 0101 	add.w	r1, ip, #1
 80240b0:	fb00 f00e 	mul.w	r0, r0, lr
 80240b4:	fb02 f20e 	mul.w	r2, r2, lr
 80240b8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80240bc:	0c39      	lsrs	r1, r7, #16
 80240be:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80240c2:	490f      	ldr	r1, [pc, #60]	; (8024100 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 80240c4:	fa5f fc8c 	uxtb.w	ip, ip
 80240c8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80240cc:	1c41      	adds	r1, r0, #1
 80240ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80240d2:	1c51      	adds	r1, r2, #1
 80240d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80240d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80240dc:	00c0      	lsls	r0, r0, #3
 80240de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80240e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80240e6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80240ea:	ea4c 0c00 	orr.w	ip, ip, r0
 80240ee:	ea47 0c0c 	orr.w	ip, r7, ip
 80240f2:	f8a8 c000 	strh.w	ip, [r8]
 80240f6:	e7b7      	b.n	8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 80240f8:	b01b      	add	sp, #108	; 0x6c
 80240fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80240fe:	bf00      	nop
 8024100:	fffff800 	.word	0xfffff800

08024104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024108:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802410c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024110:	2d00      	cmp	r5, #0
 8024112:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024116:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802411a:	fb05 0e03 	mla	lr, r5, r3, r0
 802411e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024122:	f2c0 808c 	blt.w	802423e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024126:	45a9      	cmp	r9, r5
 8024128:	f340 8089 	ble.w	802423e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802412c:	2800      	cmp	r0, #0
 802412e:	f2c0 8084 	blt.w	802423a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024132:	4580      	cmp	r8, r0
 8024134:	f340 8081 	ble.w	802423a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024138:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802413c:	f01e 0f01 	tst.w	lr, #1
 8024140:	5d16      	ldrb	r6, [r2, r4]
 8024142:	bf0c      	ite	eq
 8024144:	f006 060f 	andeq.w	r6, r6, #15
 8024148:	1136      	asrne	r6, r6, #4
 802414a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802414e:	b2f6      	uxtb	r6, r6
 8024150:	1c44      	adds	r4, r0, #1
 8024152:	d477      	bmi.n	8024244 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024154:	45a0      	cmp	r8, r4
 8024156:	dd75      	ble.n	8024244 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024158:	2f00      	cmp	r7, #0
 802415a:	d075      	beq.n	8024248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802415c:	f10e 0a01 	add.w	sl, lr, #1
 8024160:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024164:	f01a 0f01 	tst.w	sl, #1
 8024168:	5d14      	ldrb	r4, [r2, r4]
 802416a:	bf0c      	ite	eq
 802416c:	f004 040f 	andeq.w	r4, r4, #15
 8024170:	1124      	asrne	r4, r4, #4
 8024172:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024176:	b2e4      	uxtb	r4, r4
 8024178:	3501      	adds	r5, #1
 802417a:	d469      	bmi.n	8024250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802417c:	45a9      	cmp	r9, r5
 802417e:	dd67      	ble.n	8024250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024180:	f1bc 0f00 	cmp.w	ip, #0
 8024184:	d067      	beq.n	8024256 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024186:	2800      	cmp	r0, #0
 8024188:	db60      	blt.n	802424c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802418a:	4580      	cmp	r8, r0
 802418c:	dd5e      	ble.n	802424c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802418e:	eb03 090e 	add.w	r9, r3, lr
 8024192:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024196:	f019 0f01 	tst.w	r9, #1
 802419a:	5d55      	ldrb	r5, [r2, r5]
 802419c:	bf0c      	ite	eq
 802419e:	f005 050f 	andeq.w	r5, r5, #15
 80241a2:	112d      	asrne	r5, r5, #4
 80241a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80241a8:	b2ed      	uxtb	r5, r5
 80241aa:	3001      	adds	r0, #1
 80241ac:	d456      	bmi.n	802425c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80241ae:	4580      	cmp	r8, r0
 80241b0:	dd54      	ble.n	802425c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80241b2:	2f00      	cmp	r7, #0
 80241b4:	d054      	beq.n	8024260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80241b6:	3301      	adds	r3, #1
 80241b8:	449e      	add	lr, r3
 80241ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80241be:	f01e 0f01 	tst.w	lr, #1
 80241c2:	5cd0      	ldrb	r0, [r2, r3]
 80241c4:	bf0c      	ite	eq
 80241c6:	f000 000f 	andeq.w	r0, r0, #15
 80241ca:	1100      	asrne	r0, r0, #4
 80241cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80241d0:	b2c3      	uxtb	r3, r0
 80241d2:	b2ba      	uxth	r2, r7
 80241d4:	fa1f fc8c 	uxth.w	ip, ip
 80241d8:	fb02 f00c 	mul.w	r0, r2, ip
 80241dc:	0112      	lsls	r2, r2, #4
 80241de:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80241e2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80241e6:	1a12      	subs	r2, r2, r0
 80241e8:	fa1f fc8c 	uxth.w	ip, ip
 80241ec:	b292      	uxth	r2, r2
 80241ee:	eba7 070c 	sub.w	r7, r7, ip
 80241f2:	4362      	muls	r2, r4
 80241f4:	b2bf      	uxth	r7, r7
 80241f6:	fb06 2207 	mla	r2, r6, r7, r2
 80241fa:	fb0c 2505 	mla	r5, ip, r5, r2
 80241fe:	fb00 5303 	mla	r3, r0, r3, r5
 8024202:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024206:	b1b3      	cbz	r3, 8024236 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024208:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802420c:	435a      	muls	r2, r3
 802420e:	1c53      	adds	r3, r2, #1
 8024210:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024214:	4a2d      	ldr	r2, [pc, #180]	; (80242cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024216:	121b      	asrs	r3, r3, #8
 8024218:	6812      	ldr	r2, [r2, #0]
 802421a:	2bff      	cmp	r3, #255	; 0xff
 802421c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024220:	d120      	bne.n	8024264 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024222:	0950      	lsrs	r0, r2, #5
 8024224:	4b2a      	ldr	r3, [pc, #168]	; (80242d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024226:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802422a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802422e:	4033      	ands	r3, r6
 8024230:	4318      	orrs	r0, r3
 8024232:	4302      	orrs	r2, r0
 8024234:	800a      	strh	r2, [r1, #0]
 8024236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802423a:	2600      	movs	r6, #0
 802423c:	e788      	b.n	8024150 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802423e:	2400      	movs	r4, #0
 8024240:	4626      	mov	r6, r4
 8024242:	e799      	b.n	8024178 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024244:	2400      	movs	r4, #0
 8024246:	e797      	b.n	8024178 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024248:	463c      	mov	r4, r7
 802424a:	e795      	b.n	8024178 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802424c:	2500      	movs	r5, #0
 802424e:	e7ac      	b.n	80241aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024250:	2300      	movs	r3, #0
 8024252:	461d      	mov	r5, r3
 8024254:	e7bd      	b.n	80241d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024256:	4663      	mov	r3, ip
 8024258:	4665      	mov	r5, ip
 802425a:	e7ba      	b.n	80241d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802425c:	2300      	movs	r3, #0
 802425e:	e7b8      	b.n	80241d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024260:	463b      	mov	r3, r7
 8024262:	e7b6      	b.n	80241d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024264:	880d      	ldrh	r5, [r1, #0]
 8024266:	b29f      	uxth	r7, r3
 8024268:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802426c:	43db      	mvns	r3, r3
 802426e:	122c      	asrs	r4, r5, #8
 8024270:	fb10 f007 	smulbb	r0, r0, r7
 8024274:	b2db      	uxtb	r3, r3
 8024276:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802427a:	b2f6      	uxtb	r6, r6
 802427c:	b2d2      	uxtb	r2, r2
 802427e:	fb04 0403 	mla	r4, r4, r3, r0
 8024282:	10e8      	asrs	r0, r5, #3
 8024284:	fb12 f207 	smulbb	r2, r2, r7
 8024288:	00ed      	lsls	r5, r5, #3
 802428a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802428e:	b2a4      	uxth	r4, r4
 8024290:	fb16 f607 	smulbb	r6, r6, r7
 8024294:	b2ed      	uxtb	r5, r5
 8024296:	fb00 6603 	mla	r6, r0, r3, r6
 802429a:	fb05 2303 	mla	r3, r5, r3, r2
 802429e:	b2b0      	uxth	r0, r6
 80242a0:	b29a      	uxth	r2, r3
 80242a2:	1c63      	adds	r3, r4, #1
 80242a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80242a8:	1c53      	adds	r3, r2, #1
 80242aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80242ae:	1c42      	adds	r2, r0, #1
 80242b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80242b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80242bc:	0940      	lsrs	r0, r0, #5
 80242be:	4323      	orrs	r3, r4
 80242c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80242c4:	4303      	orrs	r3, r0
 80242c6:	800b      	strh	r3, [r1, #0]
 80242c8:	e7b5      	b.n	8024236 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80242ca:	bf00      	nop
 80242cc:	24002fac 	.word	0x24002fac
 80242d0:	00fff800 	.word	0x00fff800

080242d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80242d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242d8:	b097      	sub	sp, #92	; 0x5c
 80242da:	9214      	str	r2, [sp, #80]	; 0x50
 80242dc:	9309      	str	r3, [sp, #36]	; 0x24
 80242de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80242e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80242e4:	9015      	str	r0, [sp, #84]	; 0x54
 80242e6:	910d      	str	r1, [sp, #52]	; 0x34
 80242e8:	6850      	ldr	r0, [r2, #4]
 80242ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80242ec:	6812      	ldr	r2, [r2, #0]
 80242ee:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80242f2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80242f6:	fb00 1303 	mla	r3, r0, r3, r1
 80242fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80242fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024300:	689b      	ldr	r3, [r3, #8]
 8024302:	3301      	adds	r3, #1
 8024304:	f023 0301 	bic.w	r3, r3, #1
 8024308:	930a      	str	r3, [sp, #40]	; 0x28
 802430a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802430c:	681f      	ldr	r7, [r3, #0]
 802430e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024310:	2b00      	cmp	r3, #0
 8024312:	dc03      	bgt.n	802431c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024314:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024316:	2b00      	cmp	r3, #0
 8024318:	f340 8289 	ble.w	802482e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802431c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802431e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024322:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024326:	1e48      	subs	r0, r1, #1
 8024328:	f102 3cff 	add.w	ip, r2, #4294967295
 802432c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802432e:	2b00      	cmp	r3, #0
 8024330:	f340 80c5 	ble.w	80244be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024334:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024338:	ea4f 4326 	mov.w	r3, r6, asr #16
 802433c:	d406      	bmi.n	802434c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802433e:	4586      	cmp	lr, r0
 8024340:	da04      	bge.n	802434c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024342:	2b00      	cmp	r3, #0
 8024344:	db02      	blt.n	802434c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024346:	4563      	cmp	r3, ip
 8024348:	f2c0 80ba 	blt.w	80244c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802434c:	f11e 0e01 	adds.w	lr, lr, #1
 8024350:	f100 80ab 	bmi.w	80244aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024354:	4571      	cmp	r1, lr
 8024356:	f2c0 80a8 	blt.w	80244aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802435a:	3301      	adds	r3, #1
 802435c:	f100 80a5 	bmi.w	80244aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024360:	429a      	cmp	r2, r3
 8024362:	f2c0 80a2 	blt.w	80244aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024366:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024368:	46c8      	mov	r8, r9
 802436a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802436e:	930e      	str	r3, [sp, #56]	; 0x38
 8024370:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024372:	2b00      	cmp	r3, #0
 8024374:	f340 80c4 	ble.w	8024500 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024378:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802437a:	1430      	asrs	r0, r6, #16
 802437c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024380:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024384:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024388:	1423      	asrs	r3, r4, #16
 802438a:	f100 814f 	bmi.w	802462c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802438e:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024392:	455b      	cmp	r3, fp
 8024394:	f280 814a 	bge.w	802462c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8024398:	2800      	cmp	r0, #0
 802439a:	f2c0 8147 	blt.w	802462c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802439e:	f10e 3bff 	add.w	fp, lr, #4294967295
 80243a2:	4558      	cmp	r0, fp
 80243a4:	f280 8142 	bge.w	802462c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80243a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80243aa:	fb00 3305 	mla	r3, r0, r5, r3
 80243ae:	0858      	lsrs	r0, r3, #1
 80243b0:	07dd      	lsls	r5, r3, #31
 80243b2:	f817 c000 	ldrb.w	ip, [r7, r0]
 80243b6:	bf54      	ite	pl
 80243b8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80243bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80243c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80243c4:	fa5f fc8c 	uxtb.w	ip, ip
 80243c8:	2a00      	cmp	r2, #0
 80243ca:	f000 80dd 	beq.w	8024588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80243ce:	1c58      	adds	r0, r3, #1
 80243d0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80243d4:	07c0      	lsls	r0, r0, #31
 80243d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80243da:	bf54      	ite	pl
 80243dc:	f00e 0e0f 	andpl.w	lr, lr, #15
 80243e0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80243e4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80243e8:	fa5f f08e 	uxtb.w	r0, lr
 80243ec:	9010      	str	r0, [sp, #64]	; 0x40
 80243ee:	b1d9      	cbz	r1, 8024428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80243f0:	4453      	add	r3, sl
 80243f2:	0858      	lsrs	r0, r3, #1
 80243f4:	07dd      	lsls	r5, r3, #31
 80243f6:	f103 0301 	add.w	r3, r3, #1
 80243fa:	5c38      	ldrb	r0, [r7, r0]
 80243fc:	bf54      	ite	pl
 80243fe:	f000 000f 	andpl.w	r0, r0, #15
 8024402:	1100      	asrmi	r0, r0, #4
 8024404:	07dd      	lsls	r5, r3, #31
 8024406:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802440a:	b2c0      	uxtb	r0, r0
 802440c:	900b      	str	r0, [sp, #44]	; 0x2c
 802440e:	ea4f 0053 	mov.w	r0, r3, lsr #1
 8024412:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024416:	bf54      	ite	pl
 8024418:	f00e 030f 	andpl.w	r3, lr, #15
 802441c:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024420:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024424:	b2db      	uxtb	r3, r3
 8024426:	9311      	str	r3, [sp, #68]	; 0x44
 8024428:	b292      	uxth	r2, r2
 802442a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802442c:	b289      	uxth	r1, r1
 802442e:	fb02 f301 	mul.w	r3, r2, r1
 8024432:	0112      	lsls	r2, r2, #4
 8024434:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024438:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802443c:	1ad2      	subs	r2, r2, r3
 802443e:	b289      	uxth	r1, r1
 8024440:	b292      	uxth	r2, r2
 8024442:	1a40      	subs	r0, r0, r1
 8024444:	436a      	muls	r2, r5
 8024446:	b280      	uxth	r0, r0
 8024448:	fb0c 2c00 	mla	ip, ip, r0, r2
 802444c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802444e:	fb01 c102 	mla	r1, r1, r2, ip
 8024452:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024454:	fb03 1302 	mla	r3, r3, r2, r1
 8024458:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802445c:	b1db      	cbz	r3, 8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802445e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024460:	4353      	muls	r3, r2
 8024462:	1c5a      	adds	r2, r3, #1
 8024464:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024468:	4ac6      	ldr	r2, [pc, #792]	; (8024784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 802446a:	121b      	asrs	r3, r3, #8
 802446c:	6812      	ldr	r2, [r2, #0]
 802446e:	2bff      	cmp	r3, #255	; 0xff
 8024470:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024474:	f040 8099 	bne.w	80245aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8024478:	0953      	lsrs	r3, r2, #5
 802447a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802447e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024482:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024486:	f02c 0c07 	bic.w	ip, ip, #7
 802448a:	ea43 0c0c 	orr.w	ip, r3, ip
 802448e:	ea4c 0202 	orr.w	r2, ip, r2
 8024492:	f8a8 2000 	strh.w	r2, [r8]
 8024496:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024498:	f108 0802 	add.w	r8, r8, #2
 802449c:	441c      	add	r4, r3
 802449e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80244a0:	441e      	add	r6, r3
 80244a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80244a4:	3b01      	subs	r3, #1
 80244a6:	930e      	str	r3, [sp, #56]	; 0x38
 80244a8:	e762      	b.n	8024370 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80244aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80244ac:	f109 0902 	add.w	r9, r9, #2
 80244b0:	441c      	add	r4, r3
 80244b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80244b4:	441e      	add	r6, r3
 80244b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244b8:	3b01      	subs	r3, #1
 80244ba:	9309      	str	r3, [sp, #36]	; 0x24
 80244bc:	e736      	b.n	802432c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80244be:	d024      	beq.n	802450a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80244c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244c2:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80244c4:	3b01      	subs	r3, #1
 80244c6:	fb00 4003 	mla	r0, r0, r3, r4
 80244ca:	1400      	asrs	r0, r0, #16
 80244cc:	f53f af4b 	bmi.w	8024366 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244d0:	3901      	subs	r1, #1
 80244d2:	4288      	cmp	r0, r1
 80244d4:	f6bf af47 	bge.w	8024366 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244d8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80244da:	fb01 6303 	mla	r3, r1, r3, r6
 80244de:	141b      	asrs	r3, r3, #16
 80244e0:	f53f af41 	bmi.w	8024366 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244e4:	3a01      	subs	r2, #1
 80244e6:	4293      	cmp	r3, r2
 80244e8:	f6bf af3d 	bge.w	8024366 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244ec:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80244f0:	46c8      	mov	r8, r9
 80244f2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80244f6:	930e      	str	r3, [sp, #56]	; 0x38
 80244f8:	f1bb 0f00 	cmp.w	fp, #0
 80244fc:	f300 80b7 	bgt.w	802466e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8024500:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024502:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024506:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802450a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802450c:	2b00      	cmp	r3, #0
 802450e:	f340 818e 	ble.w	802482e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8024512:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024516:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024518:	ee30 0a04 	vadd.f32	s0, s0, s8
 802451c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024520:	eef0 6a62 	vmov.f32	s13, s5
 8024524:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024528:	ee31 1a05 	vadd.f32	s2, s2, s10
 802452c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024530:	ee16 4a90 	vmov	r4, s13
 8024534:	eef0 6a43 	vmov.f32	s13, s6
 8024538:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802453c:	ee16 6a90 	vmov	r6, s13
 8024540:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024544:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024548:	ee77 2a62 	vsub.f32	s5, s14, s5
 802454c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024550:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024554:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024558:	ee12 2a90 	vmov	r2, s5
 802455c:	eef0 2a47 	vmov.f32	s5, s14
 8024560:	fb92 f3f3 	sdiv	r3, r2, r3
 8024564:	ee13 2a10 	vmov	r2, s6
 8024568:	9323      	str	r3, [sp, #140]	; 0x8c
 802456a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802456c:	eeb0 3a67 	vmov.f32	s6, s15
 8024570:	fb92 f3f3 	sdiv	r3, r2, r3
 8024574:	9324      	str	r3, [sp, #144]	; 0x90
 8024576:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024578:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802457a:	3b01      	subs	r3, #1
 802457c:	930d      	str	r3, [sp, #52]	; 0x34
 802457e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024580:	bf08      	it	eq
 8024582:	4613      	moveq	r3, r2
 8024584:	9309      	str	r3, [sp, #36]	; 0x24
 8024586:	e6c2      	b.n	802430e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024588:	2900      	cmp	r1, #0
 802458a:	f43f af4d 	beq.w	8024428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802458e:	eb0a 0003 	add.w	r0, sl, r3
 8024592:	0843      	lsrs	r3, r0, #1
 8024594:	07c0      	lsls	r0, r0, #31
 8024596:	5cfb      	ldrb	r3, [r7, r3]
 8024598:	bf54      	ite	pl
 802459a:	f003 030f 	andpl.w	r3, r3, #15
 802459e:	111b      	asrmi	r3, r3, #4
 80245a0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80245a4:	b2db      	uxtb	r3, r3
 80245a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80245a8:	e73e      	b.n	8024428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80245aa:	f8b8 e000 	ldrh.w	lr, [r8]
 80245ae:	fa1f fb83 	uxth.w	fp, r3
 80245b2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80245b6:	43db      	mvns	r3, r3
 80245b8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80245bc:	fb11 f10b 	smulbb	r1, r1, fp
 80245c0:	b2db      	uxtb	r3, r3
 80245c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80245c6:	fa5f fc8c 	uxtb.w	ip, ip
 80245ca:	b2d2      	uxtb	r2, r2
 80245cc:	fb00 1003 	mla	r0, r0, r3, r1
 80245d0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80245d4:	fb1c fc0b 	smulbb	ip, ip, fp
 80245d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80245dc:	b280      	uxth	r0, r0
 80245de:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80245e2:	fb12 fb0b 	smulbb	fp, r2, fp
 80245e6:	fa5f fe8e 	uxtb.w	lr, lr
 80245ea:	fb01 cc03 	mla	ip, r1, r3, ip
 80245ee:	fb0e bb03 	mla	fp, lr, r3, fp
 80245f2:	1c43      	adds	r3, r0, #1
 80245f4:	fa1f fc8c 	uxth.w	ip, ip
 80245f8:	fa1f fb8b 	uxth.w	fp, fp
 80245fc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024600:	f10c 0101 	add.w	r1, ip, #1
 8024604:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024608:	f10b 0001 	add.w	r0, fp, #1
 802460c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024610:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024614:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024618:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802461c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024620:	4318      	orrs	r0, r3
 8024622:	ea40 000c 	orr.w	r0, r0, ip
 8024626:	f8a8 0000 	strh.w	r0, [r8]
 802462a:	e734      	b.n	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802462c:	f113 0b01 	adds.w	fp, r3, #1
 8024630:	f53f af31 	bmi.w	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024634:	45dc      	cmp	ip, fp
 8024636:	f6ff af2e 	blt.w	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802463a:	f110 0b01 	adds.w	fp, r0, #1
 802463e:	f53f af2a 	bmi.w	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024642:	45de      	cmp	lr, fp
 8024644:	f6ff af27 	blt.w	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024648:	9302      	str	r3, [sp, #8]
 802464a:	fa0f f38e 	sxth.w	r3, lr
 802464e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024650:	9301      	str	r3, [sp, #4]
 8024652:	fa0f f38c 	sxth.w	r3, ip
 8024656:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802465a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802465e:	9300      	str	r3, [sp, #0]
 8024660:	463a      	mov	r2, r7
 8024662:	4653      	mov	r3, sl
 8024664:	4641      	mov	r1, r8
 8024666:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024668:	f7ff fd4c 	bl	8024104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802466c:	e713      	b.n	8024496 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802466e:	1422      	asrs	r2, r4, #16
 8024670:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024672:	1433      	asrs	r3, r6, #16
 8024674:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024678:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802467c:	fb05 2303 	mla	r3, r5, r3, r2
 8024680:	085a      	lsrs	r2, r3, #1
 8024682:	07dd      	lsls	r5, r3, #31
 8024684:	5cba      	ldrb	r2, [r7, r2]
 8024686:	bf54      	ite	pl
 8024688:	f002 020f 	andpl.w	r2, r2, #15
 802468c:	1112      	asrmi	r2, r2, #4
 802468e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024692:	b2d2      	uxtb	r2, r2
 8024694:	2900      	cmp	r1, #0
 8024696:	d077      	beq.n	8024788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8024698:	f103 0e01 	add.w	lr, r3, #1
 802469c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80246a0:	f01e 0f01 	tst.w	lr, #1
 80246a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80246a8:	bf0c      	ite	eq
 80246aa:	f00c 0c0f 	andeq.w	ip, ip, #15
 80246ae:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80246b2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80246b6:	fa5f f58c 	uxtb.w	r5, ip
 80246ba:	9512      	str	r5, [sp, #72]	; 0x48
 80246bc:	b308      	cbz	r0, 8024702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80246be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80246c0:	442b      	add	r3, r5
 80246c2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80246c6:	07dd      	lsls	r5, r3, #31
 80246c8:	f103 0301 	add.w	r3, r3, #1
 80246cc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80246d0:	bf54      	ite	pl
 80246d2:	f00c 0c0f 	andpl.w	ip, ip, #15
 80246d6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80246da:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80246de:	fa5f f58c 	uxtb.w	r5, ip
 80246e2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80246e6:	950c      	str	r5, [sp, #48]	; 0x30
 80246e8:	07dd      	lsls	r5, r3, #31
 80246ea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80246ee:	bf54      	ite	pl
 80246f0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80246f4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80246f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80246fc:	fa5f f38c 	uxtb.w	r3, ip
 8024700:	9313      	str	r3, [sp, #76]	; 0x4c
 8024702:	b289      	uxth	r1, r1
 8024704:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024706:	b280      	uxth	r0, r0
 8024708:	fb01 f300 	mul.w	r3, r1, r0
 802470c:	0109      	lsls	r1, r1, #4
 802470e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024712:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024716:	1ac9      	subs	r1, r1, r3
 8024718:	b280      	uxth	r0, r0
 802471a:	b289      	uxth	r1, r1
 802471c:	ebac 0c00 	sub.w	ip, ip, r0
 8024720:	4369      	muls	r1, r5
 8024722:	fa1f fc8c 	uxth.w	ip, ip
 8024726:	fb02 120c 	mla	r2, r2, ip, r1
 802472a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802472c:	fb00 2001 	mla	r0, r0, r1, r2
 8024730:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024732:	fb03 0302 	mla	r3, r3, r2, r0
 8024736:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802473a:	b1d3      	cbz	r3, 8024772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802473c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802473e:	4353      	muls	r3, r2
 8024740:	1c5a      	adds	r2, r3, #1
 8024742:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024746:	4a0f      	ldr	r2, [pc, #60]	; (8024784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8024748:	121b      	asrs	r3, r3, #8
 802474a:	6812      	ldr	r2, [r2, #0]
 802474c:	2bff      	cmp	r3, #255	; 0xff
 802474e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024752:	d12d      	bne.n	80247b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8024754:	0953      	lsrs	r3, r2, #5
 8024756:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802475a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802475e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024762:	f02c 0c07 	bic.w	ip, ip, #7
 8024766:	ea43 0c0c 	orr.w	ip, r3, ip
 802476a:	ea4c 0202 	orr.w	r2, ip, r2
 802476e:	f8a8 2000 	strh.w	r2, [r8]
 8024772:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024774:	f108 0802 	add.w	r8, r8, #2
 8024778:	f10b 3bff 	add.w	fp, fp, #4294967295
 802477c:	441c      	add	r4, r3
 802477e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024780:	441e      	add	r6, r3
 8024782:	e6b9      	b.n	80244f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8024784:	24002fac 	.word	0x24002fac
 8024788:	2800      	cmp	r0, #0
 802478a:	d0ba      	beq.n	8024702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802478c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802478e:	442b      	add	r3, r5
 8024790:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024794:	07db      	lsls	r3, r3, #31
 8024796:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802479a:	bf54      	ite	pl
 802479c:	f00c 0c0f 	andpl.w	ip, ip, #15
 80247a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80247a4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80247a8:	fa5f f38c 	uxtb.w	r3, ip
 80247ac:	930c      	str	r3, [sp, #48]	; 0x30
 80247ae:	e7a8      	b.n	8024702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80247b0:	f8b8 e000 	ldrh.w	lr, [r8]
 80247b4:	fa1f fa83 	uxth.w	sl, r3
 80247b8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80247bc:	43db      	mvns	r3, r3
 80247be:	ea4f 202e 	mov.w	r0, lr, asr #8
 80247c2:	fb11 f10a 	smulbb	r1, r1, sl
 80247c6:	b2db      	uxtb	r3, r3
 80247c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80247cc:	b2d2      	uxtb	r2, r2
 80247ce:	fa5f fc8c 	uxtb.w	ip, ip
 80247d2:	fb00 1003 	mla	r0, r0, r3, r1
 80247d6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80247da:	fb12 f20a 	smulbb	r2, r2, sl
 80247de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80247e2:	b280      	uxth	r0, r0
 80247e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80247e8:	fb1c fc0a 	smulbb	ip, ip, sl
 80247ec:	fa5f fe8e 	uxtb.w	lr, lr
 80247f0:	fb0e 2203 	mla	r2, lr, r3, r2
 80247f4:	fb01 cc03 	mla	ip, r1, r3, ip
 80247f8:	1c43      	adds	r3, r0, #1
 80247fa:	b292      	uxth	r2, r2
 80247fc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024800:	1c51      	adds	r1, r2, #1
 8024802:	fa1f fc8c 	uxth.w	ip, ip
 8024806:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802480a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802480e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024812:	4308      	orrs	r0, r1
 8024814:	f10c 0101 	add.w	r1, ip, #1
 8024818:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802481c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024820:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024824:	ea40 000c 	orr.w	r0, r0, ip
 8024828:	f8a8 0000 	strh.w	r0, [r8]
 802482c:	e7a1      	b.n	8024772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802482e:	b017      	add	sp, #92	; 0x5c
 8024830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024838:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802483c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024840:	2d00      	cmp	r5, #0
 8024842:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024846:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802484a:	fb05 0e03 	mla	lr, r5, r3, r0
 802484e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024852:	f2c0 80b0 	blt.w	80249b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024856:	45a9      	cmp	r9, r5
 8024858:	f340 80ad 	ble.w	80249b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802485c:	2800      	cmp	r0, #0
 802485e:	f2c0 80a8 	blt.w	80249b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024862:	4580      	cmp	r8, r0
 8024864:	f340 80a5 	ble.w	80249b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024868:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802486c:	f01e 0f01 	tst.w	lr, #1
 8024870:	5d16      	ldrb	r6, [r2, r4]
 8024872:	bf0c      	ite	eq
 8024874:	f006 060f 	andeq.w	r6, r6, #15
 8024878:	1136      	asrne	r6, r6, #4
 802487a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802487e:	b2f6      	uxtb	r6, r6
 8024880:	1c44      	adds	r4, r0, #1
 8024882:	f100 809b 	bmi.w	80249bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024886:	45a0      	cmp	r8, r4
 8024888:	f340 8098 	ble.w	80249bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802488c:	2f00      	cmp	r7, #0
 802488e:	f000 8097 	beq.w	80249c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024892:	f10e 0a01 	add.w	sl, lr, #1
 8024896:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802489a:	f01a 0f01 	tst.w	sl, #1
 802489e:	5d14      	ldrb	r4, [r2, r4]
 80248a0:	bf0c      	ite	eq
 80248a2:	f004 040f 	andeq.w	r4, r4, #15
 80248a6:	1124      	asrne	r4, r4, #4
 80248a8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80248ac:	b2e4      	uxtb	r4, r4
 80248ae:	3501      	adds	r5, #1
 80248b0:	f100 808a 	bmi.w	80249c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80248b4:	45a9      	cmp	r9, r5
 80248b6:	f340 8087 	ble.w	80249c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80248ba:	f1bc 0f00 	cmp.w	ip, #0
 80248be:	f000 8086 	beq.w	80249ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80248c2:	2800      	cmp	r0, #0
 80248c4:	db7e      	blt.n	80249c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80248c6:	4580      	cmp	r8, r0
 80248c8:	dd7c      	ble.n	80249c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80248ca:	eb03 090e 	add.w	r9, r3, lr
 80248ce:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80248d2:	f019 0f01 	tst.w	r9, #1
 80248d6:	5d55      	ldrb	r5, [r2, r5]
 80248d8:	bf0c      	ite	eq
 80248da:	f005 050f 	andeq.w	r5, r5, #15
 80248de:	112d      	asrne	r5, r5, #4
 80248e0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80248e4:	b2ed      	uxtb	r5, r5
 80248e6:	3001      	adds	r0, #1
 80248e8:	d474      	bmi.n	80249d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80248ea:	4580      	cmp	r8, r0
 80248ec:	dd72      	ble.n	80249d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80248ee:	2f00      	cmp	r7, #0
 80248f0:	d072      	beq.n	80249d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80248f2:	3301      	adds	r3, #1
 80248f4:	449e      	add	lr, r3
 80248f6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80248fa:	f01e 0f01 	tst.w	lr, #1
 80248fe:	5cd0      	ldrb	r0, [r2, r3]
 8024900:	bf0c      	ite	eq
 8024902:	f000 000f 	andeq.w	r0, r0, #15
 8024906:	1100      	asrne	r0, r0, #4
 8024908:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802490c:	b2c3      	uxtb	r3, r0
 802490e:	b2ba      	uxth	r2, r7
 8024910:	fa1f fc8c 	uxth.w	ip, ip
 8024914:	fb02 f00c 	mul.w	r0, r2, ip
 8024918:	0112      	lsls	r2, r2, #4
 802491a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802491e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024922:	1a12      	subs	r2, r2, r0
 8024924:	fa1f fc8c 	uxth.w	ip, ip
 8024928:	b292      	uxth	r2, r2
 802492a:	eba7 070c 	sub.w	r7, r7, ip
 802492e:	4362      	muls	r2, r4
 8024930:	b2bf      	uxth	r7, r7
 8024932:	fb06 2207 	mla	r2, r6, r7, r2
 8024936:	fb0c 2505 	mla	r5, ip, r5, r2
 802493a:	fb00 5303 	mla	r3, r0, r3, r5
 802493e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024942:	b3a3      	cbz	r3, 80249ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024944:	4a25      	ldr	r2, [pc, #148]	; (80249dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024946:	880e      	ldrh	r6, [r1, #0]
 8024948:	6815      	ldr	r5, [r2, #0]
 802494a:	b29a      	uxth	r2, r3
 802494c:	1234      	asrs	r4, r6, #8
 802494e:	43db      	mvns	r3, r3
 8024950:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024954:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024958:	b2db      	uxtb	r3, r3
 802495a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802495e:	fb10 f002 	smulbb	r0, r0, r2
 8024962:	b2ed      	uxtb	r5, r5
 8024964:	fb17 f702 	smulbb	r7, r7, r2
 8024968:	fb04 0403 	mla	r4, r4, r3, r0
 802496c:	10f0      	asrs	r0, r6, #3
 802496e:	fb15 f202 	smulbb	r2, r5, r2
 8024972:	00f6      	lsls	r6, r6, #3
 8024974:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024978:	b2a4      	uxth	r4, r4
 802497a:	b2f6      	uxtb	r6, r6
 802497c:	fb00 7003 	mla	r0, r0, r3, r7
 8024980:	fb06 2303 	mla	r3, r6, r3, r2
 8024984:	b280      	uxth	r0, r0
 8024986:	b29a      	uxth	r2, r3
 8024988:	1c63      	adds	r3, r4, #1
 802498a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802498e:	1c53      	adds	r3, r2, #1
 8024990:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024994:	1c42      	adds	r2, r0, #1
 8024996:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802499a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802499e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249a2:	0940      	lsrs	r0, r0, #5
 80249a4:	4323      	orrs	r3, r4
 80249a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80249aa:	4303      	orrs	r3, r0
 80249ac:	800b      	strh	r3, [r1, #0]
 80249ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80249b2:	2600      	movs	r6, #0
 80249b4:	e764      	b.n	8024880 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80249b6:	2400      	movs	r4, #0
 80249b8:	4626      	mov	r6, r4
 80249ba:	e778      	b.n	80248ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80249bc:	2400      	movs	r4, #0
 80249be:	e776      	b.n	80248ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80249c0:	463c      	mov	r4, r7
 80249c2:	e774      	b.n	80248ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80249c4:	2500      	movs	r5, #0
 80249c6:	e78e      	b.n	80248e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80249c8:	2300      	movs	r3, #0
 80249ca:	461d      	mov	r5, r3
 80249cc:	e79f      	b.n	802490e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80249ce:	4663      	mov	r3, ip
 80249d0:	4665      	mov	r5, ip
 80249d2:	e79c      	b.n	802490e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80249d4:	2300      	movs	r3, #0
 80249d6:	e79a      	b.n	802490e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80249d8:	463b      	mov	r3, r7
 80249da:	e798      	b.n	802490e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80249dc:	24002fac 	.word	0x24002fac

080249e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249e4:	b093      	sub	sp, #76	; 0x4c
 80249e6:	461d      	mov	r5, r3
 80249e8:	920c      	str	r2, [sp, #48]	; 0x30
 80249ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80249ec:	9011      	str	r0, [sp, #68]	; 0x44
 80249ee:	9107      	str	r1, [sp, #28]
 80249f0:	6850      	ldr	r0, [r2, #4]
 80249f2:	6812      	ldr	r2, [r2, #0]
 80249f4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80249f8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80249fc:	fb00 1303 	mla	r3, r0, r3, r1
 8024a00:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024a04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a06:	689b      	ldr	r3, [r3, #8]
 8024a08:	3301      	adds	r3, #1
 8024a0a:	f023 0301 	bic.w	r3, r3, #1
 8024a0e:	9306      	str	r3, [sp, #24]
 8024a10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a12:	681f      	ldr	r7, [r3, #0]
 8024a14:	9b07      	ldr	r3, [sp, #28]
 8024a16:	2b00      	cmp	r3, #0
 8024a18:	dc03      	bgt.n	8024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024a1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024a1c:	2b00      	cmp	r3, #0
 8024a1e:	f340 8267 	ble.w	8024ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a2c:	1e48      	subs	r0, r1, #1
 8024a2e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024a32:	2d00      	cmp	r5, #0
 8024a34:	f340 80b7 	ble.w	8024ba6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8024a38:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024a3c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024a40:	d406      	bmi.n	8024a50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024a42:	4586      	cmp	lr, r0
 8024a44:	da04      	bge.n	8024a50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024a46:	2b00      	cmp	r3, #0
 8024a48:	db02      	blt.n	8024a50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024a4a:	4563      	cmp	r3, ip
 8024a4c:	f2c0 80ac 	blt.w	8024ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024a50:	f11e 0e01 	adds.w	lr, lr, #1
 8024a54:	f100 809f 	bmi.w	8024b96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024a58:	4571      	cmp	r1, lr
 8024a5a:	f2c0 809c 	blt.w	8024b96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024a5e:	3301      	adds	r3, #1
 8024a60:	f100 8099 	bmi.w	8024b96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024a64:	429a      	cmp	r2, r3
 8024a66:	f2c0 8096 	blt.w	8024b96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024a6a:	46c8      	mov	r8, r9
 8024a6c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024a70:	9509      	str	r5, [sp, #36]	; 0x24
 8024a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a74:	2b00      	cmp	r3, #0
 8024a76:	f340 80b5 	ble.w	8024be4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8024a7a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024a7e:	1430      	asrs	r0, r6, #16
 8024a80:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024a84:	9308      	str	r3, [sp, #32]
 8024a86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a88:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024a8c:	1423      	asrs	r3, r4, #16
 8024a8e:	f100 813f 	bmi.w	8024d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024a92:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024a96:	455b      	cmp	r3, fp
 8024a98:	f280 813a 	bge.w	8024d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024a9c:	2800      	cmp	r0, #0
 8024a9e:	f2c0 8137 	blt.w	8024d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024aa2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024aa6:	4558      	cmp	r0, fp
 8024aa8:	f280 8132 	bge.w	8024d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024aac:	9a06      	ldr	r2, [sp, #24]
 8024aae:	fb00 3302 	mla	r3, r0, r2, r3
 8024ab2:	0858      	lsrs	r0, r3, #1
 8024ab4:	07da      	lsls	r2, r3, #31
 8024ab6:	9a08      	ldr	r2, [sp, #32]
 8024ab8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024abc:	bf54      	ite	pl
 8024abe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ac2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ac6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024aca:	fa5f fc8c 	uxtb.w	ip, ip
 8024ace:	2a00      	cmp	r2, #0
 8024ad0:	f000 80cc 	beq.w	8024c6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024ad4:	1c58      	adds	r0, r3, #1
 8024ad6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024ada:	07c0      	lsls	r0, r0, #31
 8024adc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024ae0:	bf54      	ite	pl
 8024ae2:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ae6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024aea:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024aee:	fa5f fe8e 	uxtb.w	lr, lr
 8024af2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024af6:	b1b9      	cbz	r1, 8024b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024af8:	4453      	add	r3, sl
 8024afa:	0858      	lsrs	r0, r3, #1
 8024afc:	07da      	lsls	r2, r3, #31
 8024afe:	5c38      	ldrb	r0, [r7, r0]
 8024b00:	bf54      	ite	pl
 8024b02:	f000 000f 	andpl.w	r0, r0, #15
 8024b06:	1100      	asrmi	r0, r0, #4
 8024b08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024b0c:	b2c0      	uxtb	r0, r0
 8024b0e:	900a      	str	r0, [sp, #40]	; 0x28
 8024b10:	1c58      	adds	r0, r3, #1
 8024b12:	0843      	lsrs	r3, r0, #1
 8024b14:	07c2      	lsls	r2, r0, #31
 8024b16:	5cfb      	ldrb	r3, [r7, r3]
 8024b18:	bf54      	ite	pl
 8024b1a:	f003 030f 	andpl.w	r3, r3, #15
 8024b1e:	111b      	asrmi	r3, r3, #4
 8024b20:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b24:	b2db      	uxtb	r3, r3
 8024b26:	930e      	str	r3, [sp, #56]	; 0x38
 8024b28:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024b2c:	b289      	uxth	r1, r1
 8024b2e:	fb02 f301 	mul.w	r3, r2, r1
 8024b32:	0112      	lsls	r2, r2, #4
 8024b34:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024b38:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024b3c:	1ad2      	subs	r2, r2, r3
 8024b3e:	b289      	uxth	r1, r1
 8024b40:	b292      	uxth	r2, r2
 8024b42:	1a40      	subs	r0, r0, r1
 8024b44:	fa1f fe80 	uxth.w	lr, r0
 8024b48:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024b4a:	4342      	muls	r2, r0
 8024b4c:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024b50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024b52:	fb01 c102 	mla	r1, r1, r2, ip
 8024b56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024b58:	fb03 1302 	mla	r3, r3, r2, r1
 8024b5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b60:	2bff      	cmp	r3, #255	; 0xff
 8024b62:	f040 8094 	bne.w	8024c8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024b66:	4bbf      	ldr	r3, [pc, #764]	; (8024e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024b68:	681a      	ldr	r2, [r3, #0]
 8024b6a:	4bbf      	ldr	r3, [pc, #764]	; (8024e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024b6c:	0951      	lsrs	r1, r2, #5
 8024b6e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024b72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024b76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024b7a:	430b      	orrs	r3, r1
 8024b7c:	4313      	orrs	r3, r2
 8024b7e:	f8a8 3000 	strh.w	r3, [r8]
 8024b82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024b84:	f108 0802 	add.w	r8, r8, #2
 8024b88:	441c      	add	r4, r3
 8024b8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b8c:	441e      	add	r6, r3
 8024b8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b90:	3b01      	subs	r3, #1
 8024b92:	9309      	str	r3, [sp, #36]	; 0x24
 8024b94:	e76d      	b.n	8024a72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b96:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024b98:	3d01      	subs	r5, #1
 8024b9a:	f109 0902 	add.w	r9, r9, #2
 8024b9e:	441c      	add	r4, r3
 8024ba0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ba2:	441e      	add	r6, r3
 8024ba4:	e745      	b.n	8024a32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024ba6:	d021      	beq.n	8024bec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8024ba8:	1e6b      	subs	r3, r5, #1
 8024baa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024bac:	fb00 4003 	mla	r0, r0, r3, r4
 8024bb0:	1400      	asrs	r0, r0, #16
 8024bb2:	f53f af5a 	bmi.w	8024a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024bb6:	3901      	subs	r1, #1
 8024bb8:	4288      	cmp	r0, r1
 8024bba:	f6bf af56 	bge.w	8024a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024bbe:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024bc0:	fb01 6303 	mla	r3, r1, r3, r6
 8024bc4:	141b      	asrs	r3, r3, #16
 8024bc6:	f53f af50 	bmi.w	8024a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024bca:	3a01      	subs	r2, #1
 8024bcc:	4293      	cmp	r3, r2
 8024bce:	f6bf af4c 	bge.w	8024a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024bd2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024bd6:	46a8      	mov	r8, r5
 8024bd8:	46ce      	mov	lr, r9
 8024bda:	9308      	str	r3, [sp, #32]
 8024bdc:	f1b8 0f00 	cmp.w	r8, #0
 8024be0:	f300 80b6 	bgt.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024be4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024be8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024bec:	9b07      	ldr	r3, [sp, #28]
 8024bee:	2b00      	cmp	r3, #0
 8024bf0:	f340 817e 	ble.w	8024ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024bf4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024bf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024bfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024bfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c02:	eef0 6a62 	vmov.f32	s13, s5
 8024c06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c12:	ee16 4a90 	vmov	r4, s13
 8024c16:	eef0 6a43 	vmov.f32	s13, s6
 8024c1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c1e:	ee16 6a90 	vmov	r6, s13
 8024c22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024c3a:	ee12 2a90 	vmov	r2, s5
 8024c3e:	eef0 2a47 	vmov.f32	s5, s14
 8024c42:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c46:	ee13 2a10 	vmov	r2, s6
 8024c4a:	931f      	str	r3, [sp, #124]	; 0x7c
 8024c4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c4e:	eeb0 3a67 	vmov.f32	s6, s15
 8024c52:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c56:	9320      	str	r3, [sp, #128]	; 0x80
 8024c58:	9b07      	ldr	r3, [sp, #28]
 8024c5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024c5c:	3b01      	subs	r3, #1
 8024c5e:	9307      	str	r3, [sp, #28]
 8024c60:	bf08      	it	eq
 8024c62:	4615      	moveq	r5, r2
 8024c64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c66:	bf18      	it	ne
 8024c68:	461d      	movne	r5, r3
 8024c6a:	e6d3      	b.n	8024a14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024c6c:	2900      	cmp	r1, #0
 8024c6e:	f43f af5b 	beq.w	8024b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024c72:	eb0a 0003 	add.w	r0, sl, r3
 8024c76:	0843      	lsrs	r3, r0, #1
 8024c78:	07c0      	lsls	r0, r0, #31
 8024c7a:	5cfb      	ldrb	r3, [r7, r3]
 8024c7c:	bf54      	ite	pl
 8024c7e:	f003 030f 	andpl.w	r3, r3, #15
 8024c82:	111b      	asrmi	r3, r3, #4
 8024c84:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024c88:	b2db      	uxtb	r3, r3
 8024c8a:	930a      	str	r3, [sp, #40]	; 0x28
 8024c8c:	e74c      	b.n	8024b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024c8e:	2b00      	cmp	r3, #0
 8024c90:	f43f af77 	beq.w	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024c94:	4a73      	ldr	r2, [pc, #460]	; (8024e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024c96:	fa1f fe83 	uxth.w	lr, r3
 8024c9a:	f8b8 c000 	ldrh.w	ip, [r8]
 8024c9e:	43db      	mvns	r3, r3
 8024ca0:	6810      	ldr	r0, [r2, #0]
 8024ca2:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024ca6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024caa:	b2db      	uxtb	r3, r3
 8024cac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024cb0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024cb4:	fb12 f20e 	smulbb	r2, r2, lr
 8024cb8:	b2c0      	uxtb	r0, r0
 8024cba:	fb1b fb0e 	smulbb	fp, fp, lr
 8024cbe:	fb01 2103 	mla	r1, r1, r3, r2
 8024cc2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024cc6:	fb10 fe0e 	smulbb	lr, r0, lr
 8024cca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024cce:	b289      	uxth	r1, r1
 8024cd0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024cd4:	fa5f fc8c 	uxtb.w	ip, ip
 8024cd8:	fb02 b203 	mla	r2, r2, r3, fp
 8024cdc:	1c48      	adds	r0, r1, #1
 8024cde:	fb0c e303 	mla	r3, ip, r3, lr
 8024ce2:	b292      	uxth	r2, r2
 8024ce4:	b29b      	uxth	r3, r3
 8024ce6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024cea:	f102 0b01 	add.w	fp, r2, #1
 8024cee:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024cf2:	1c59      	adds	r1, r3, #1
 8024cf4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024cf8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024cfc:	0952      	lsrs	r2, r2, #5
 8024cfe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024d02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024d06:	4301      	orrs	r1, r0
 8024d08:	4311      	orrs	r1, r2
 8024d0a:	f8a8 1000 	strh.w	r1, [r8]
 8024d0e:	e738      	b.n	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d10:	f113 0b01 	adds.w	fp, r3, #1
 8024d14:	f53f af35 	bmi.w	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d18:	45dc      	cmp	ip, fp
 8024d1a:	f6ff af32 	blt.w	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d1e:	f110 0b01 	adds.w	fp, r0, #1
 8024d22:	f53f af2e 	bmi.w	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d26:	45de      	cmp	lr, fp
 8024d28:	f6ff af2b 	blt.w	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d2c:	9302      	str	r3, [sp, #8]
 8024d2e:	fa0f f38e 	sxth.w	r3, lr
 8024d32:	9a08      	ldr	r2, [sp, #32]
 8024d34:	9301      	str	r3, [sp, #4]
 8024d36:	fa0f f38c 	sxth.w	r3, ip
 8024d3a:	9105      	str	r1, [sp, #20]
 8024d3c:	4641      	mov	r1, r8
 8024d3e:	9300      	str	r3, [sp, #0]
 8024d40:	4653      	mov	r3, sl
 8024d42:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024d46:	463a      	mov	r2, r7
 8024d48:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024d4a:	f7ff fd73 	bl	8024834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024d4e:	e718      	b.n	8024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024d50:	1422      	asrs	r2, r4, #16
 8024d52:	9906      	ldr	r1, [sp, #24]
 8024d54:	1433      	asrs	r3, r6, #16
 8024d56:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024d5a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024d5e:	fb01 2303 	mla	r3, r1, r3, r2
 8024d62:	085a      	lsrs	r2, r3, #1
 8024d64:	07d9      	lsls	r1, r3, #31
 8024d66:	5cba      	ldrb	r2, [r7, r2]
 8024d68:	bf54      	ite	pl
 8024d6a:	f002 020f 	andpl.w	r2, r2, #15
 8024d6e:	1112      	asrmi	r2, r2, #4
 8024d70:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024d74:	b2d2      	uxtb	r2, r2
 8024d76:	2800      	cmp	r0, #0
 8024d78:	d063      	beq.n	8024e42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8024d7a:	f103 0a01 	add.w	sl, r3, #1
 8024d7e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024d82:	f01a 0f01 	tst.w	sl, #1
 8024d86:	5c79      	ldrb	r1, [r7, r1]
 8024d88:	bf0c      	ite	eq
 8024d8a:	f001 010f 	andeq.w	r1, r1, #15
 8024d8e:	1109      	asrne	r1, r1, #4
 8024d90:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024d94:	b2c9      	uxtb	r1, r1
 8024d96:	910f      	str	r1, [sp, #60]	; 0x3c
 8024d98:	f1bc 0f00 	cmp.w	ip, #0
 8024d9c:	d01a      	beq.n	8024dd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024d9e:	9908      	ldr	r1, [sp, #32]
 8024da0:	440b      	add	r3, r1
 8024da2:	0859      	lsrs	r1, r3, #1
 8024da4:	f013 0f01 	tst.w	r3, #1
 8024da8:	f103 0301 	add.w	r3, r3, #1
 8024dac:	5c79      	ldrb	r1, [r7, r1]
 8024dae:	bf0c      	ite	eq
 8024db0:	f001 010f 	andeq.w	r1, r1, #15
 8024db4:	1109      	asrne	r1, r1, #4
 8024db6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024dba:	b2c9      	uxtb	r1, r1
 8024dbc:	910b      	str	r1, [sp, #44]	; 0x2c
 8024dbe:	0859      	lsrs	r1, r3, #1
 8024dc0:	07db      	lsls	r3, r3, #31
 8024dc2:	5c79      	ldrb	r1, [r7, r1]
 8024dc4:	bf54      	ite	pl
 8024dc6:	f001 010f 	andpl.w	r1, r1, #15
 8024dca:	1109      	asrmi	r1, r1, #4
 8024dcc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024dd0:	b2c9      	uxtb	r1, r1
 8024dd2:	9110      	str	r1, [sp, #64]	; 0x40
 8024dd4:	b280      	uxth	r0, r0
 8024dd6:	fa1f fc8c 	uxth.w	ip, ip
 8024dda:	fb00 f30c 	mul.w	r3, r0, ip
 8024dde:	0100      	lsls	r0, r0, #4
 8024de0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024de4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8024de8:	1ac0      	subs	r0, r0, r3
 8024dea:	fa1f fc8c 	uxth.w	ip, ip
 8024dee:	b280      	uxth	r0, r0
 8024df0:	eba1 010c 	sub.w	r1, r1, ip
 8024df4:	fa1f fa81 	uxth.w	sl, r1
 8024df8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024dfa:	4348      	muls	r0, r1
 8024dfc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8024dfe:	fb02 020a 	mla	r2, r2, sl, r0
 8024e02:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024e06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024e08:	fb03 c302 	mla	r3, r3, r2, ip
 8024e0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e10:	2bff      	cmp	r3, #255	; 0xff
 8024e12:	d12b      	bne.n	8024e6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024e14:	4b13      	ldr	r3, [pc, #76]	; (8024e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024e16:	681a      	ldr	r2, [r3, #0]
 8024e18:	4b13      	ldr	r3, [pc, #76]	; (8024e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024e1a:	0951      	lsrs	r1, r2, #5
 8024e1c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024e20:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e24:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024e28:	430b      	orrs	r3, r1
 8024e2a:	4313      	orrs	r3, r2
 8024e2c:	f8ae 3000 	strh.w	r3, [lr]
 8024e30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e32:	f10e 0e02 	add.w	lr, lr, #2
 8024e36:	f108 38ff 	add.w	r8, r8, #4294967295
 8024e3a:	441c      	add	r4, r3
 8024e3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e3e:	441e      	add	r6, r3
 8024e40:	e6cc      	b.n	8024bdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8024e42:	f1bc 0f00 	cmp.w	ip, #0
 8024e46:	d0c5      	beq.n	8024dd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024e48:	9908      	ldr	r1, [sp, #32]
 8024e4a:	440b      	add	r3, r1
 8024e4c:	0859      	lsrs	r1, r3, #1
 8024e4e:	07db      	lsls	r3, r3, #31
 8024e50:	5c79      	ldrb	r1, [r7, r1]
 8024e52:	bf54      	ite	pl
 8024e54:	f001 010f 	andpl.w	r1, r1, #15
 8024e58:	1109      	asrmi	r1, r1, #4
 8024e5a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024e5e:	b2c9      	uxtb	r1, r1
 8024e60:	910b      	str	r1, [sp, #44]	; 0x2c
 8024e62:	e7b7      	b.n	8024dd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024e64:	24002fac 	.word	0x24002fac
 8024e68:	fffff800 	.word	0xfffff800
 8024e6c:	2b00      	cmp	r3, #0
 8024e6e:	d0df      	beq.n	8024e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8024e70:	4a21      	ldr	r2, [pc, #132]	; (8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024e72:	fa1f fa83 	uxth.w	sl, r3
 8024e76:	f8be c000 	ldrh.w	ip, [lr]
 8024e7a:	43db      	mvns	r3, r3
 8024e7c:	6810      	ldr	r0, [r2, #0]
 8024e7e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024e82:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024e86:	b2db      	uxtb	r3, r3
 8024e88:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024e8c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024e90:	fb12 f20a 	smulbb	r2, r2, sl
 8024e94:	b2c0      	uxtb	r0, r0
 8024e96:	fb1b fb0a 	smulbb	fp, fp, sl
 8024e9a:	fb01 2103 	mla	r1, r1, r3, r2
 8024e9e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024ea2:	fb10 f00a 	smulbb	r0, r0, sl
 8024ea6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024eaa:	b289      	uxth	r1, r1
 8024eac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024eb0:	fa5f fc8c 	uxtb.w	ip, ip
 8024eb4:	fb02 b203 	mla	r2, r2, r3, fp
 8024eb8:	fb0c 0003 	mla	r0, ip, r3, r0
 8024ebc:	1c4b      	adds	r3, r1, #1
 8024ebe:	b292      	uxth	r2, r2
 8024ec0:	b280      	uxth	r0, r0
 8024ec2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024ec6:	f100 0b01 	add.w	fp, r0, #1
 8024eca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024ece:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024ed2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024ed6:	ea4b 0101 	orr.w	r1, fp, r1
 8024eda:	f102 0b01 	add.w	fp, r2, #1
 8024ede:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024ee2:	0952      	lsrs	r2, r2, #5
 8024ee4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ee8:	4311      	orrs	r1, r2
 8024eea:	f8ae 1000 	strh.w	r1, [lr]
 8024eee:	e79f      	b.n	8024e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8024ef0:	b013      	add	sp, #76	; 0x4c
 8024ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ef6:	bf00      	nop
 8024ef8:	24002fac 	.word	0x24002fac

08024efc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024efc:	b570      	push	{r4, r5, r6, lr}
 8024efe:	1208      	asrs	r0, r1, #8
 8024f00:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8024f04:	b29e      	uxth	r6, r3
 8024f06:	1213      	asrs	r3, r2, #8
 8024f08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f0c:	10cc      	asrs	r4, r1, #3
 8024f0e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024f12:	00c9      	lsls	r1, r1, #3
 8024f14:	fb10 f006 	smulbb	r0, r0, r6
 8024f18:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8024f1c:	fb13 f305 	smulbb	r3, r3, r5
 8024f20:	fb14 f406 	smulbb	r4, r4, r6
 8024f24:	4418      	add	r0, r3
 8024f26:	10d3      	asrs	r3, r2, #3
 8024f28:	00d2      	lsls	r2, r2, #3
 8024f2a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024f2e:	b280      	uxth	r0, r0
 8024f30:	b2d2      	uxtb	r2, r2
 8024f32:	fb13 f305 	smulbb	r3, r3, r5
 8024f36:	fb12 f205 	smulbb	r2, r2, r5
 8024f3a:	441c      	add	r4, r3
 8024f3c:	b2cb      	uxtb	r3, r1
 8024f3e:	fb13 f306 	smulbb	r3, r3, r6
 8024f42:	b2a4      	uxth	r4, r4
 8024f44:	4413      	add	r3, r2
 8024f46:	1c42      	adds	r2, r0, #1
 8024f48:	b29b      	uxth	r3, r3
 8024f4a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f4e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8024f52:	1c58      	adds	r0, r3, #1
 8024f54:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024f58:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024f5c:	4310      	orrs	r0, r2
 8024f5e:	1c62      	adds	r2, r4, #1
 8024f60:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024f64:	0964      	lsrs	r4, r4, #5
 8024f66:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024f6a:	4320      	orrs	r0, r4
 8024f6c:	bd70      	pop	{r4, r5, r6, pc}
	...

08024f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f74:	b08f      	sub	sp, #60	; 0x3c
 8024f76:	461c      	mov	r4, r3
 8024f78:	460d      	mov	r5, r1
 8024f7a:	4616      	mov	r6, r2
 8024f7c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024f80:	9004      	str	r0, [sp, #16]
 8024f82:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024f84:	2f00      	cmp	r7, #0
 8024f86:	f000 80f6 	beq.w	8025176 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8024f8a:	6820      	ldr	r0, [r4, #0]
 8024f8c:	aa0a      	add	r2, sp, #40	; 0x28
 8024f8e:	6861      	ldr	r1, [r4, #4]
 8024f90:	f04f 0802 	mov.w	r8, #2
 8024f94:	3604      	adds	r6, #4
 8024f96:	c203      	stmia	r2!, {r0, r1}
 8024f98:	6818      	ldr	r0, [r3, #0]
 8024f9a:	aa0c      	add	r2, sp, #48	; 0x30
 8024f9c:	6859      	ldr	r1, [r3, #4]
 8024f9e:	c203      	stmia	r2!, {r0, r1}
 8024fa0:	a80a      	add	r0, sp, #40	; 0x28
 8024fa2:	f7f0 f9e7 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024fa6:	4621      	mov	r1, r4
 8024fa8:	a80c      	add	r0, sp, #48	; 0x30
 8024faa:	f7f0 fa0b 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024fae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024fb2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024fb6:	f002 0301 	and.w	r3, r2, #1
 8024fba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8024fbe:	9306      	str	r3, [sp, #24]
 8024fc0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024fc4:	f003 0101 	and.w	r1, r3, #1
 8024fc8:	9105      	str	r1, [sp, #20]
 8024fca:	9805      	ldr	r0, [sp, #20]
 8024fcc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024fd0:	4403      	add	r3, r0
 8024fd2:	fb01 2303 	mla	r3, r1, r3, r2
 8024fd6:	fb93 f3f8 	sdiv	r3, r3, r8
 8024fda:	441d      	add	r5, r3
 8024fdc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024fe0:	441a      	add	r2, r3
 8024fe2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8024fe6:	4419      	add	r1, r3
 8024fe8:	4b64      	ldr	r3, [pc, #400]	; (802517c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024fea:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024fee:	6818      	ldr	r0, [r3, #0]
 8024ff0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024ff4:	6803      	ldr	r3, [r0, #0]
 8024ff6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024ff8:	4798      	blx	r3
 8024ffa:	4a61      	ldr	r2, [pc, #388]	; (8025180 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024ffc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025000:	2fff      	cmp	r7, #255	; 0xff
 8025002:	8813      	ldrh	r3, [r2, #0]
 8025004:	4611      	mov	r1, r2
 8025006:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802500a:	fb03 fb0b 	mul.w	fp, r3, fp
 802500e:	fb03 a404 	mla	r4, r3, r4, sl
 8025012:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025016:	d06b      	beq.n	80250f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8025018:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802501c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025020:	9303      	str	r3, [sp, #12]
 8025022:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025026:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802502a:	9b07      	ldr	r3, [sp, #28]
 802502c:	42a3      	cmp	r3, r4
 802502e:	f240 809d 	bls.w	802516c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025032:	9b06      	ldr	r3, [sp, #24]
 8025034:	2b00      	cmp	r3, #0
 8025036:	d039      	beq.n	80250ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8025038:	782b      	ldrb	r3, [r5, #0]
 802503a:	f105 0801 	add.w	r8, r5, #1
 802503e:	f109 3bff 	add.w	fp, r9, #4294967295
 8025042:	8822      	ldrh	r2, [r4, #0]
 8025044:	f003 030f 	and.w	r3, r3, #15
 8025048:	9804      	ldr	r0, [sp, #16]
 802504a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802504e:	9b03      	ldr	r3, [sp, #12]
 8025050:	9300      	str	r3, [sp, #0]
 8025052:	463b      	mov	r3, r7
 8025054:	f7ff ff52 	bl	8024efc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025058:	f824 0b02 	strh.w	r0, [r4], #2
 802505c:	f1bb 0f01 	cmp.w	fp, #1
 8025060:	46a2      	mov	sl, r4
 8025062:	f104 0404 	add.w	r4, r4, #4
 8025066:	dd24      	ble.n	80250b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8025068:	f898 3000 	ldrb.w	r3, [r8]
 802506c:	f1ab 0b02 	sub.w	fp, fp, #2
 8025070:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025074:	091b      	lsrs	r3, r3, #4
 8025076:	9804      	ldr	r0, [sp, #16]
 8025078:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802507c:	9b03      	ldr	r3, [sp, #12]
 802507e:	9300      	str	r3, [sp, #0]
 8025080:	463b      	mov	r3, r7
 8025082:	f7ff ff3b 	bl	8024efc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025086:	f824 0c04 	strh.w	r0, [r4, #-4]
 802508a:	f818 3b01 	ldrb.w	r3, [r8], #1
 802508e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025092:	f003 030f 	and.w	r3, r3, #15
 8025096:	9804      	ldr	r0, [sp, #16]
 8025098:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802509c:	9b03      	ldr	r3, [sp, #12]
 802509e:	9300      	str	r3, [sp, #0]
 80250a0:	463b      	mov	r3, r7
 80250a2:	f7ff ff2b 	bl	8024efc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80250a6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80250aa:	e7d7      	b.n	802505c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80250ac:	46a8      	mov	r8, r5
 80250ae:	46cb      	mov	fp, r9
 80250b0:	e7d4      	b.n	802505c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80250b2:	d10e      	bne.n	80250d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 80250b4:	f898 3000 	ldrb.w	r3, [r8]
 80250b8:	f8ba 2000 	ldrh.w	r2, [sl]
 80250bc:	091b      	lsrs	r3, r3, #4
 80250be:	9804      	ldr	r0, [sp, #16]
 80250c0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80250c4:	9b03      	ldr	r3, [sp, #12]
 80250c6:	9300      	str	r3, [sp, #0]
 80250c8:	463b      	mov	r3, r7
 80250ca:	f7ff ff17 	bl	8024efc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80250ce:	f82a 0b02 	strh.w	r0, [sl], #2
 80250d2:	9b08      	ldr	r3, [sp, #32]
 80250d4:	9a05      	ldr	r2, [sp, #20]
 80250d6:	881c      	ldrh	r4, [r3, #0]
 80250d8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80250dc:	eba4 0409 	sub.w	r4, r4, r9
 80250e0:	4413      	add	r3, r2
 80250e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80250e4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80250e8:	fb93 f3f2 	sdiv	r3, r3, r2
 80250ec:	441d      	add	r5, r3
 80250ee:	e79c      	b.n	802502a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 80250f0:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80250f4:	45a3      	cmp	fp, r4
 80250f6:	d939      	bls.n	802516c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80250f8:	9b06      	ldr	r3, [sp, #24]
 80250fa:	b1fb      	cbz	r3, 802513c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80250fc:	782b      	ldrb	r3, [r5, #0]
 80250fe:	1c6a      	adds	r2, r5, #1
 8025100:	f109 30ff 	add.w	r0, r9, #4294967295
 8025104:	3402      	adds	r4, #2
 8025106:	f003 030f 	and.w	r3, r3, #15
 802510a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802510e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025112:	2801      	cmp	r0, #1
 8025114:	4623      	mov	r3, r4
 8025116:	f104 0404 	add.w	r4, r4, #4
 802511a:	dd12      	ble.n	8025142 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802511c:	7813      	ldrb	r3, [r2, #0]
 802511e:	3802      	subs	r0, #2
 8025120:	091b      	lsrs	r3, r3, #4
 8025122:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025126:	f824 3c04 	strh.w	r3, [r4, #-4]
 802512a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802512e:	f003 030f 	and.w	r3, r3, #15
 8025132:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025136:	f824 3c02 	strh.w	r3, [r4, #-2]
 802513a:	e7ea      	b.n	8025112 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802513c:	462a      	mov	r2, r5
 802513e:	4648      	mov	r0, r9
 8025140:	e7e7      	b.n	8025112 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025142:	d106      	bne.n	8025152 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025144:	7812      	ldrb	r2, [r2, #0]
 8025146:	3302      	adds	r3, #2
 8025148:	0912      	lsrs	r2, r2, #4
 802514a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802514e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025152:	880c      	ldrh	r4, [r1, #0]
 8025154:	9a05      	ldr	r2, [sp, #20]
 8025156:	eba4 0409 	sub.w	r4, r4, r9
 802515a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802515e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025162:	4413      	add	r3, r2
 8025164:	fb93 f3f8 	sdiv	r3, r3, r8
 8025168:	441d      	add	r5, r3
 802516a:	e7c3      	b.n	80250f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 802516c:	4b03      	ldr	r3, [pc, #12]	; (802517c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802516e:	6818      	ldr	r0, [r3, #0]
 8025170:	6803      	ldr	r3, [r0, #0]
 8025172:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025174:	4798      	blx	r3
 8025176:	b00f      	add	sp, #60	; 0x3c
 8025178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802517c:	24002fa4 	.word	0x24002fa4
 8025180:	24002f9e 	.word	0x24002f9e

08025184 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025184:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025186:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802518a:	0a0f      	lsrs	r7, r1, #8
 802518c:	2dff      	cmp	r5, #255	; 0xff
 802518e:	d10c      	bne.n	80251aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025190:	2bff      	cmp	r3, #255	; 0xff
 8025192:	d10a      	bne.n	80251aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025194:	0948      	lsrs	r0, r1, #5
 8025196:	4b25      	ldr	r3, [pc, #148]	; (802522c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025198:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802519c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80251a0:	403b      	ands	r3, r7
 80251a2:	4318      	orrs	r0, r3
 80251a4:	4308      	orrs	r0, r1
 80251a6:	b280      	uxth	r0, r0
 80251a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80251aa:	fb15 f503 	smulbb	r5, r5, r3
 80251ae:	1214      	asrs	r4, r2, #8
 80251b0:	10d6      	asrs	r6, r2, #3
 80251b2:	b2ab      	uxth	r3, r5
 80251b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80251b8:	00d0      	lsls	r0, r2, #3
 80251ba:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80251be:	1c5d      	adds	r5, r3, #1
 80251c0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80251c4:	b2c0      	uxtb	r0, r0
 80251c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80251ca:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80251ce:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80251d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80251d6:	fa1f fc85 	uxth.w	ip, r5
 80251da:	43ed      	mvns	r5, r5
 80251dc:	fb12 f20c 	smulbb	r2, r2, ip
 80251e0:	b2eb      	uxtb	r3, r5
 80251e2:	b2fd      	uxtb	r5, r7
 80251e4:	fb04 2403 	mla	r4, r4, r3, r2
 80251e8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80251ec:	fb15 f50c 	smulbb	r5, r5, ip
 80251f0:	b2c8      	uxtb	r0, r1
 80251f2:	b2a4      	uxth	r4, r4
 80251f4:	fb10 f00c 	smulbb	r0, r0, ip
 80251f8:	fb06 5503 	mla	r5, r6, r3, r5
 80251fc:	fb02 0003 	mla	r0, r2, r3, r0
 8025200:	b2ad      	uxth	r5, r5
 8025202:	b283      	uxth	r3, r0
 8025204:	1c60      	adds	r0, r4, #1
 8025206:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802520a:	1c58      	adds	r0, r3, #1
 802520c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025210:	1c6b      	adds	r3, r5, #1
 8025212:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025216:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802521a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802521e:	096d      	lsrs	r5, r5, #5
 8025220:	4320      	orrs	r0, r4
 8025222:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025226:	4328      	orrs	r0, r5
 8025228:	e7be      	b.n	80251a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802522a:	bf00      	nop
 802522c:	00fff800 	.word	0x00fff800

08025230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025234:	461c      	mov	r4, r3
 8025236:	b08d      	sub	sp, #52	; 0x34
 8025238:	460d      	mov	r5, r1
 802523a:	4616      	mov	r6, r2
 802523c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802523e:	4680      	mov	r8, r0
 8025240:	6861      	ldr	r1, [r4, #4]
 8025242:	aa08      	add	r2, sp, #32
 8025244:	6820      	ldr	r0, [r4, #0]
 8025246:	f04f 0a02 	mov.w	sl, #2
 802524a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802524e:	3604      	adds	r6, #4
 8025250:	c203      	stmia	r2!, {r0, r1}
 8025252:	6818      	ldr	r0, [r3, #0]
 8025254:	aa0a      	add	r2, sp, #40	; 0x28
 8025256:	6859      	ldr	r1, [r3, #4]
 8025258:	c203      	stmia	r2!, {r0, r1}
 802525a:	a808      	add	r0, sp, #32
 802525c:	f7f0 f88a 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025260:	4621      	mov	r1, r4
 8025262:	a80a      	add	r0, sp, #40	; 0x28
 8025264:	f7f0 f8ae 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025268:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802526c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025270:	f002 0301 	and.w	r3, r2, #1
 8025274:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025278:	9303      	str	r3, [sp, #12]
 802527a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802527e:	f003 0101 	and.w	r1, r3, #1
 8025282:	9102      	str	r1, [sp, #8]
 8025284:	9802      	ldr	r0, [sp, #8]
 8025286:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802528a:	4403      	add	r3, r0
 802528c:	fb01 2303 	mla	r3, r1, r3, r2
 8025290:	fb93 f3fa 	sdiv	r3, r3, sl
 8025294:	441d      	add	r5, r3
 8025296:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802529a:	441a      	add	r2, r3
 802529c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80252a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80252a4:	4419      	add	r1, r3
 80252a6:	4a3e      	ldr	r2, [pc, #248]	; (80253a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80252a8:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80252ac:	6810      	ldr	r0, [r2, #0]
 80252ae:	9205      	str	r2, [sp, #20]
 80252b0:	6803      	ldr	r3, [r0, #0]
 80252b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80252b4:	4798      	blx	r3
 80252b6:	4b3b      	ldr	r3, [pc, #236]	; (80253a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80252b8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80252bc:	8819      	ldrh	r1, [r3, #0]
 80252be:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80252c2:	434f      	muls	r7, r1
 80252c4:	fb01 c404 	mla	r4, r1, r4, ip
 80252c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80252cc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80252d0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80252d4:	9204      	str	r2, [sp, #16]
 80252d6:	9b04      	ldr	r3, [sp, #16]
 80252d8:	429c      	cmp	r4, r3
 80252da:	d258      	bcs.n	802538e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80252dc:	9b03      	ldr	r3, [sp, #12]
 80252de:	2b00      	cmp	r3, #0
 80252e0:	d034      	beq.n	802534c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80252e2:	782b      	ldrb	r3, [r5, #0]
 80252e4:	1c6f      	adds	r7, r5, #1
 80252e6:	f003 030f 	and.w	r3, r3, #15
 80252ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80252ee:	0e0b      	lsrs	r3, r1, #24
 80252f0:	d006      	beq.n	8025300 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80252f2:	8822      	ldrh	r2, [r4, #0]
 80252f4:	4640      	mov	r0, r8
 80252f6:	9300      	str	r3, [sp, #0]
 80252f8:	464b      	mov	r3, r9
 80252fa:	f7ff ff43 	bl	8025184 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80252fe:	8020      	strh	r0, [r4, #0]
 8025300:	3402      	adds	r4, #2
 8025302:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025306:	f1ba 0f01 	cmp.w	sl, #1
 802530a:	dd22      	ble.n	8025352 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802530c:	783b      	ldrb	r3, [r7, #0]
 802530e:	091b      	lsrs	r3, r3, #4
 8025310:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025314:	0e0b      	lsrs	r3, r1, #24
 8025316:	d006      	beq.n	8025326 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025318:	8822      	ldrh	r2, [r4, #0]
 802531a:	4640      	mov	r0, r8
 802531c:	9300      	str	r3, [sp, #0]
 802531e:	464b      	mov	r3, r9
 8025320:	f7ff ff30 	bl	8025184 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025324:	8020      	strh	r0, [r4, #0]
 8025326:	f817 3b01 	ldrb.w	r3, [r7], #1
 802532a:	f003 030f 	and.w	r3, r3, #15
 802532e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025332:	0e0b      	lsrs	r3, r1, #24
 8025334:	d006      	beq.n	8025344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025336:	8862      	ldrh	r2, [r4, #2]
 8025338:	4640      	mov	r0, r8
 802533a:	9300      	str	r3, [sp, #0]
 802533c:	464b      	mov	r3, r9
 802533e:	f7ff ff21 	bl	8025184 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025342:	8060      	strh	r0, [r4, #2]
 8025344:	3404      	adds	r4, #4
 8025346:	f1aa 0a02 	sub.w	sl, sl, #2
 802534a:	e7dc      	b.n	8025306 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802534c:	462f      	mov	r7, r5
 802534e:	46da      	mov	sl, fp
 8025350:	e7d9      	b.n	8025306 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025352:	d10d      	bne.n	8025370 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025354:	783b      	ldrb	r3, [r7, #0]
 8025356:	091b      	lsrs	r3, r3, #4
 8025358:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802535c:	0e0b      	lsrs	r3, r1, #24
 802535e:	d006      	beq.n	802536e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025360:	8822      	ldrh	r2, [r4, #0]
 8025362:	4640      	mov	r0, r8
 8025364:	9300      	str	r3, [sp, #0]
 8025366:	464b      	mov	r3, r9
 8025368:	f7ff ff0c 	bl	8025184 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802536c:	8020      	strh	r0, [r4, #0]
 802536e:	3402      	adds	r4, #2
 8025370:	9b06      	ldr	r3, [sp, #24]
 8025372:	9a02      	ldr	r2, [sp, #8]
 8025374:	881b      	ldrh	r3, [r3, #0]
 8025376:	eba3 030b 	sub.w	r3, r3, fp
 802537a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802537e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025382:	4413      	add	r3, r2
 8025384:	9a07      	ldr	r2, [sp, #28]
 8025386:	fb93 f3f2 	sdiv	r3, r3, r2
 802538a:	441d      	add	r5, r3
 802538c:	e7a3      	b.n	80252d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802538e:	9b05      	ldr	r3, [sp, #20]
 8025390:	6818      	ldr	r0, [r3, #0]
 8025392:	6803      	ldr	r3, [r0, #0]
 8025394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025396:	4798      	blx	r3
 8025398:	b00d      	add	sp, #52	; 0x34
 802539a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802539e:	bf00      	nop
 80253a0:	24002fa4 	.word	0x24002fa4
 80253a4:	24002f9e 	.word	0x24002f9e

080253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80253a8:	b570      	push	{r4, r5, r6, lr}
 80253aa:	1214      	asrs	r4, r2, #8
 80253ac:	788d      	ldrb	r5, [r1, #2]
 80253ae:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80253b2:	10d0      	asrs	r0, r2, #3
 80253b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80253b8:	00d2      	lsls	r2, r2, #3
 80253ba:	fb15 f503 	smulbb	r5, r5, r3
 80253be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80253c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80253c6:	b2d2      	uxtb	r2, r2
 80253c8:	fb04 5506 	mla	r5, r4, r6, r5
 80253cc:	784c      	ldrb	r4, [r1, #1]
 80253ce:	7809      	ldrb	r1, [r1, #0]
 80253d0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80253d4:	fb14 f403 	smulbb	r4, r4, r3
 80253d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80253dc:	fb11 f303 	smulbb	r3, r1, r3
 80253e0:	b2ad      	uxth	r5, r5
 80253e2:	fb00 4406 	mla	r4, r0, r6, r4
 80253e6:	fb02 3306 	mla	r3, r2, r6, r3
 80253ea:	1c68      	adds	r0, r5, #1
 80253ec:	b2a4      	uxth	r4, r4
 80253ee:	b29b      	uxth	r3, r3
 80253f0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80253f4:	1c62      	adds	r2, r4, #1
 80253f6:	1c58      	adds	r0, r3, #1
 80253f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80253fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025400:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025404:	0964      	lsrs	r4, r4, #5
 8025406:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802540a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802540e:	4328      	orrs	r0, r5
 8025410:	4320      	orrs	r0, r4
 8025412:	bd70      	pop	{r4, r5, r6, pc}

08025414 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025418:	b08f      	sub	sp, #60	; 0x3c
 802541a:	461c      	mov	r4, r3
 802541c:	4682      	mov	sl, r0
 802541e:	460e      	mov	r6, r1
 8025420:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025424:	4615      	mov	r5, r2
 8025426:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025428:	2f00      	cmp	r7, #0
 802542a:	f000 8141 	beq.w	80256b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 802542e:	6820      	ldr	r0, [r4, #0]
 8025430:	aa0a      	add	r2, sp, #40	; 0x28
 8025432:	6861      	ldr	r1, [r4, #4]
 8025434:	f04f 0802 	mov.w	r8, #2
 8025438:	3504      	adds	r5, #4
 802543a:	c203      	stmia	r2!, {r0, r1}
 802543c:	6818      	ldr	r0, [r3, #0]
 802543e:	aa0c      	add	r2, sp, #48	; 0x30
 8025440:	6859      	ldr	r1, [r3, #4]
 8025442:	c203      	stmia	r2!, {r0, r1}
 8025444:	a80a      	add	r0, sp, #40	; 0x28
 8025446:	f7ef ff95 	bl	8015374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802544a:	4621      	mov	r1, r4
 802544c:	a80c      	add	r0, sp, #48	; 0x30
 802544e:	f7ef ffb9 	bl	80153c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025452:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025456:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802545a:	f002 0301 	and.w	r3, r2, #1
 802545e:	9306      	str	r3, [sp, #24]
 8025460:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025464:	f003 0101 	and.w	r1, r3, #1
 8025468:	9105      	str	r1, [sp, #20]
 802546a:	9805      	ldr	r0, [sp, #20]
 802546c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025470:	4403      	add	r3, r0
 8025472:	fb01 2303 	mla	r3, r1, r3, r2
 8025476:	fb93 f3f8 	sdiv	r3, r3, r8
 802547a:	441e      	add	r6, r3
 802547c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025480:	441a      	add	r2, r3
 8025482:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025486:	4419      	add	r1, r3
 8025488:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802548c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025490:	9303      	str	r3, [sp, #12]
 8025492:	4b89      	ldr	r3, [pc, #548]	; (80256b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025494:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025498:	6818      	ldr	r0, [r3, #0]
 802549a:	6803      	ldr	r3, [r0, #0]
 802549c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802549e:	4798      	blx	r3
 80254a0:	4a86      	ldr	r2, [pc, #536]	; (80256bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80254a2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80254a6:	2fff      	cmp	r7, #255	; 0xff
 80254a8:	8813      	ldrh	r3, [r2, #0]
 80254aa:	4694      	mov	ip, r2
 80254ac:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80254b0:	fb03 9404 	mla	r4, r3, r4, r9
 80254b4:	fb03 f30b 	mul.w	r3, r3, fp
 80254b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80254bc:	d071      	beq.n	80255a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 80254be:	43f9      	mvns	r1, r7
 80254c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80254c4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80254c8:	b2c9      	uxtb	r1, r1
 80254ca:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80254ce:	9104      	str	r1, [sp, #16]
 80254d0:	9b07      	ldr	r3, [sp, #28]
 80254d2:	42a3      	cmp	r3, r4
 80254d4:	f240 80e7 	bls.w	80256a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80254d8:	9b06      	ldr	r3, [sp, #24]
 80254da:	2b00      	cmp	r3, #0
 80254dc:	d03d      	beq.n	802555a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 80254de:	7831      	ldrb	r1, [r6, #0]
 80254e0:	4650      	mov	r0, sl
 80254e2:	9b04      	ldr	r3, [sp, #16]
 80254e4:	f106 0801 	add.w	r8, r6, #1
 80254e8:	f001 010f 	and.w	r1, r1, #15
 80254ec:	8822      	ldrh	r2, [r4, #0]
 80254ee:	9300      	str	r3, [sp, #0]
 80254f0:	463b      	mov	r3, r7
 80254f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80254f6:	4429      	add	r1, r5
 80254f8:	f7ff ff56 	bl	80253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80254fc:	9b03      	ldr	r3, [sp, #12]
 80254fe:	f824 0b02 	strh.w	r0, [r4], #2
 8025502:	f103 3bff 	add.w	fp, r3, #4294967295
 8025506:	f1bb 0f01 	cmp.w	fp, #1
 802550a:	46a1      	mov	r9, r4
 802550c:	f104 0404 	add.w	r4, r4, #4
 8025510:	dd27      	ble.n	8025562 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8025512:	f898 1000 	ldrb.w	r1, [r8]
 8025516:	4650      	mov	r0, sl
 8025518:	9b04      	ldr	r3, [sp, #16]
 802551a:	f1ab 0b02 	sub.w	fp, fp, #2
 802551e:	0909      	lsrs	r1, r1, #4
 8025520:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025524:	9300      	str	r3, [sp, #0]
 8025526:	463b      	mov	r3, r7
 8025528:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802552c:	4429      	add	r1, r5
 802552e:	f7ff ff3b 	bl	80253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025532:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025536:	f818 1b01 	ldrb.w	r1, [r8], #1
 802553a:	4650      	mov	r0, sl
 802553c:	9b04      	ldr	r3, [sp, #16]
 802553e:	f001 010f 	and.w	r1, r1, #15
 8025542:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025546:	9300      	str	r3, [sp, #0]
 8025548:	463b      	mov	r3, r7
 802554a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802554e:	4429      	add	r1, r5
 8025550:	f7ff ff2a 	bl	80253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025554:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025558:	e7d5      	b.n	8025506 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802555a:	46b0      	mov	r8, r6
 802555c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025560:	e7d1      	b.n	8025506 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8025562:	d10f      	bne.n	8025584 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8025564:	f898 1000 	ldrb.w	r1, [r8]
 8025568:	4650      	mov	r0, sl
 802556a:	9b04      	ldr	r3, [sp, #16]
 802556c:	0909      	lsrs	r1, r1, #4
 802556e:	f8b9 2000 	ldrh.w	r2, [r9]
 8025572:	9300      	str	r3, [sp, #0]
 8025574:	463b      	mov	r3, r7
 8025576:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802557a:	4429      	add	r1, r5
 802557c:	f7ff ff14 	bl	80253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025580:	f829 0b02 	strh.w	r0, [r9], #2
 8025584:	9b08      	ldr	r3, [sp, #32]
 8025586:	9a05      	ldr	r2, [sp, #20]
 8025588:	881c      	ldrh	r4, [r3, #0]
 802558a:	9b03      	ldr	r3, [sp, #12]
 802558c:	1ae4      	subs	r4, r4, r3
 802558e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025592:	4413      	add	r3, r2
 8025594:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025596:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802559a:	fb93 f3f2 	sdiv	r3, r3, r2
 802559e:	441e      	add	r6, r3
 80255a0:	e796      	b.n	80254d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 80255a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80255a6:	4f46      	ldr	r7, [pc, #280]	; (80256c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80255a8:	42a3      	cmp	r3, r4
 80255aa:	d97c      	bls.n	80256a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80255ac:	9a06      	ldr	r2, [sp, #24]
 80255ae:	2a00      	cmp	r2, #0
 80255b0:	d054      	beq.n	802565c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80255b2:	7830      	ldrb	r0, [r6, #0]
 80255b4:	1c71      	adds	r1, r6, #1
 80255b6:	f000 000f 	and.w	r0, r0, #15
 80255ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80255be:	eb05 0e00 	add.w	lr, r5, r0
 80255c2:	5c28      	ldrb	r0, [r5, r0]
 80255c4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80255c8:	f89e e001 	ldrb.w	lr, [lr, #1]
 80255cc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80255d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80255d4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80255d8:	ea42 020e 	orr.w	r2, r2, lr
 80255dc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80255e0:	f824 2b02 	strh.w	r2, [r4], #2
 80255e4:	9a03      	ldr	r2, [sp, #12]
 80255e6:	f102 3eff 	add.w	lr, r2, #4294967295
 80255ea:	f1be 0f01 	cmp.w	lr, #1
 80255ee:	4620      	mov	r0, r4
 80255f0:	f104 0404 	add.w	r4, r4, #4
 80255f4:	dd36      	ble.n	8025664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80255f6:	7808      	ldrb	r0, [r1, #0]
 80255f8:	f1ae 0e02 	sub.w	lr, lr, #2
 80255fc:	0900      	lsrs	r0, r0, #4
 80255fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025602:	eb05 0a00 	add.w	sl, r5, r0
 8025606:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802560a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802560e:	00d2      	lsls	r2, r2, #3
 8025610:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025614:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025618:	ea49 0202 	orr.w	r2, r9, r2
 802561c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025620:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025624:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025628:	f811 0b01 	ldrb.w	r0, [r1], #1
 802562c:	f000 000f 	and.w	r0, r0, #15
 8025630:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025634:	eb05 0a00 	add.w	sl, r5, r0
 8025638:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802563c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025640:	00d2      	lsls	r2, r2, #3
 8025642:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025646:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802564a:	ea49 0202 	orr.w	r2, r9, r2
 802564e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025652:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025656:	f824 2c02 	strh.w	r2, [r4, #-2]
 802565a:	e7c6      	b.n	80255ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802565c:	4631      	mov	r1, r6
 802565e:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025662:	e7c2      	b.n	80255ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8025664:	d111      	bne.n	802568a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8025666:	7809      	ldrb	r1, [r1, #0]
 8025668:	0909      	lsrs	r1, r1, #4
 802566a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802566e:	186c      	adds	r4, r5, r1
 8025670:	5c69      	ldrb	r1, [r5, r1]
 8025672:	78a2      	ldrb	r2, [r4, #2]
 8025674:	7864      	ldrb	r4, [r4, #1]
 8025676:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802567a:	00e4      	lsls	r4, r4, #3
 802567c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025680:	4322      	orrs	r2, r4
 8025682:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025686:	f820 2b02 	strh.w	r2, [r0], #2
 802568a:	9a03      	ldr	r2, [sp, #12]
 802568c:	f8bc 4000 	ldrh.w	r4, [ip]
 8025690:	9905      	ldr	r1, [sp, #20]
 8025692:	1aa4      	subs	r4, r4, r2
 8025694:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025698:	440a      	add	r2, r1
 802569a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802569e:	fb92 f2f8 	sdiv	r2, r2, r8
 80256a2:	4416      	add	r6, r2
 80256a4:	e780      	b.n	80255a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80256a6:	4b04      	ldr	r3, [pc, #16]	; (80256b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80256a8:	6818      	ldr	r0, [r3, #0]
 80256aa:	6803      	ldr	r3, [r0, #0]
 80256ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80256ae:	4798      	blx	r3
 80256b0:	b00f      	add	sp, #60	; 0x3c
 80256b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256b6:	bf00      	nop
 80256b8:	24002fa4 	.word	0x24002fa4
 80256bc:	24002f9e 	.word	0x24002f9e
 80256c0:	fffff800 	.word	0xfffff800

080256c4 <CRC_Lock>:
 80256c4:	4a20      	ldr	r2, [pc, #128]	; (8025748 <CRC_Lock+0x84>)
 80256c6:	b530      	push	{r4, r5, lr}
 80256c8:	6813      	ldr	r3, [r2, #0]
 80256ca:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80256ce:	f24c 2540 	movw	r5, #49728	; 0xc240
 80256d2:	f023 0301 	bic.w	r3, r3, #1
 80256d6:	6013      	str	r3, [r2, #0]
 80256d8:	4b1c      	ldr	r3, [pc, #112]	; (802574c <CRC_Lock+0x88>)
 80256da:	681a      	ldr	r2, [r3, #0]
 80256dc:	4022      	ands	r2, r4
 80256de:	42aa      	cmp	r2, r5
 80256e0:	d005      	beq.n	80256ee <CRC_Lock+0x2a>
 80256e2:	681b      	ldr	r3, [r3, #0]
 80256e4:	f24c 2270 	movw	r2, #49776	; 0xc270
 80256e8:	4023      	ands	r3, r4
 80256ea:	4293      	cmp	r3, r2
 80256ec:	d124      	bne.n	8025738 <CRC_Lock+0x74>
 80256ee:	4b18      	ldr	r3, [pc, #96]	; (8025750 <CRC_Lock+0x8c>)
 80256f0:	681b      	ldr	r3, [r3, #0]
 80256f2:	bb0b      	cbnz	r3, 8025738 <CRC_Lock+0x74>
 80256f4:	4b17      	ldr	r3, [pc, #92]	; (8025754 <CRC_Lock+0x90>)
 80256f6:	681a      	ldr	r2, [r3, #0]
 80256f8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80256fc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025700:	d00d      	beq.n	802571e <CRC_Lock+0x5a>
 8025702:	681a      	ldr	r2, [r3, #0]
 8025704:	f240 4483 	movw	r4, #1155	; 0x483
 8025708:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802570c:	42a2      	cmp	r2, r4
 802570e:	d006      	beq.n	802571e <CRC_Lock+0x5a>
 8025710:	681b      	ldr	r3, [r3, #0]
 8025712:	f240 4285 	movw	r2, #1157	; 0x485
 8025716:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802571a:	4293      	cmp	r3, r2
 802571c:	d10c      	bne.n	8025738 <CRC_Lock+0x74>
 802571e:	4b0e      	ldr	r3, [pc, #56]	; (8025758 <CRC_Lock+0x94>)
 8025720:	2201      	movs	r2, #1
 8025722:	601a      	str	r2, [r3, #0]
 8025724:	681a      	ldr	r2, [r3, #0]
 8025726:	2a00      	cmp	r2, #0
 8025728:	d1fc      	bne.n	8025724 <CRC_Lock+0x60>
 802572a:	4b0c      	ldr	r3, [pc, #48]	; (802575c <CRC_Lock+0x98>)
 802572c:	6018      	str	r0, [r3, #0]
 802572e:	6818      	ldr	r0, [r3, #0]
 8025730:	1a43      	subs	r3, r0, r1
 8025732:	4258      	negs	r0, r3
 8025734:	4158      	adcs	r0, r3
 8025736:	bd30      	pop	{r4, r5, pc}
 8025738:	4b09      	ldr	r3, [pc, #36]	; (8025760 <CRC_Lock+0x9c>)
 802573a:	2201      	movs	r2, #1
 802573c:	601a      	str	r2, [r3, #0]
 802573e:	681a      	ldr	r2, [r3, #0]
 8025740:	2a00      	cmp	r2, #0
 8025742:	d1fc      	bne.n	802573e <CRC_Lock+0x7a>
 8025744:	4b07      	ldr	r3, [pc, #28]	; (8025764 <CRC_Lock+0xa0>)
 8025746:	e7f1      	b.n	802572c <CRC_Lock+0x68>
 8025748:	e0002000 	.word	0xe0002000
 802574c:	e000ed00 	.word	0xe000ed00
 8025750:	e0042000 	.word	0xe0042000
 8025754:	5c001000 	.word	0x5c001000
 8025758:	58024c08 	.word	0x58024c08
 802575c:	58024c00 	.word	0x58024c00
 8025760:	40023008 	.word	0x40023008
 8025764:	40023000 	.word	0x40023000

08025768 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025768:	6101      	str	r1, [r0, #16]
 802576a:	4770      	bx	lr

0802576c <_ZN8touchgfx8Gestures4tickEv>:
 802576c:	7b83      	ldrb	r3, [r0, #14]
 802576e:	b14b      	cbz	r3, 8025784 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025770:	8903      	ldrh	r3, [r0, #8]
 8025772:	3301      	adds	r3, #1
 8025774:	b29b      	uxth	r3, r3
 8025776:	2b07      	cmp	r3, #7
 8025778:	8103      	strh	r3, [r0, #8]
 802577a:	bf81      	itttt	hi
 802577c:	2300      	movhi	r3, #0
 802577e:	8143      	strhhi	r3, [r0, #10]
 8025780:	8183      	strhhi	r3, [r0, #12]
 8025782:	7383      	strbhi	r3, [r0, #14]
 8025784:	4770      	bx	lr
	...

08025788 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025788:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802578c:	4698      	mov	r8, r3
 802578e:	8883      	ldrh	r3, [r0, #4]
 8025790:	4604      	mov	r4, r0
 8025792:	4617      	mov	r7, r2
 8025794:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025798:	eba8 0303 	sub.w	r3, r8, r3
 802579c:	4a19      	ldr	r2, [pc, #100]	; (8025804 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802579e:	460e      	mov	r6, r1
 80257a0:	b21b      	sxth	r3, r3
 80257a2:	88c1      	ldrh	r1, [r0, #6]
 80257a4:	9200      	str	r2, [sp, #0]
 80257a6:	2000      	movs	r0, #0
 80257a8:	2b00      	cmp	r3, #0
 80257aa:	8aa2      	ldrh	r2, [r4, #20]
 80257ac:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80257b0:	bfb8      	it	lt
 80257b2:	425b      	neglt	r3, r3
 80257b4:	f88d 0004 	strb.w	r0, [sp, #4]
 80257b8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80257bc:	b21b      	sxth	r3, r3
 80257be:	f8ad 800a 	strh.w	r8, [sp, #10]
 80257c2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80257c6:	4293      	cmp	r3, r2
 80257c8:	dc07      	bgt.n	80257da <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80257ca:	1a69      	subs	r1, r5, r1
 80257cc:	b209      	sxth	r1, r1
 80257ce:	2900      	cmp	r1, #0
 80257d0:	bfb8      	it	lt
 80257d2:	4249      	neglt	r1, r1
 80257d4:	b209      	sxth	r1, r1
 80257d6:	428a      	cmp	r2, r1
 80257d8:	da10      	bge.n	80257fc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80257da:	6920      	ldr	r0, [r4, #16]
 80257dc:	4669      	mov	r1, sp
 80257de:	eba8 0606 	sub.w	r6, r8, r6
 80257e2:	1bef      	subs	r7, r5, r7
 80257e4:	6803      	ldr	r3, [r0, #0]
 80257e6:	685b      	ldr	r3, [r3, #4]
 80257e8:	4798      	blx	r3
 80257ea:	2300      	movs	r3, #0
 80257ec:	2001      	movs	r0, #1
 80257ee:	8166      	strh	r6, [r4, #10]
 80257f0:	8123      	strh	r3, [r4, #8]
 80257f2:	81a7      	strh	r7, [r4, #12]
 80257f4:	f8a4 8004 	strh.w	r8, [r4, #4]
 80257f8:	80e5      	strh	r5, [r4, #6]
 80257fa:	73a0      	strb	r0, [r4, #14]
 80257fc:	b004      	add	sp, #16
 80257fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025802:	bf00      	nop
 8025804:	08028c30 	.word	0x08028c30

08025808 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025808:	b5f0      	push	{r4, r5, r6, r7, lr}
 802580a:	461e      	mov	r6, r3
 802580c:	1e4b      	subs	r3, r1, #1
 802580e:	b085      	sub	sp, #20
 8025810:	4604      	mov	r4, r0
 8025812:	2b01      	cmp	r3, #1
 8025814:	460d      	mov	r5, r1
 8025816:	4617      	mov	r7, r2
 8025818:	d84b      	bhi.n	80258b2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802581a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802581e:	1cd3      	adds	r3, r2, #3
 8025820:	b29b      	uxth	r3, r3
 8025822:	2b06      	cmp	r3, #6
 8025824:	d916      	bls.n	8025854 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025826:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80258c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802582a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802582e:	f8cd c004 	str.w	ip, [sp, #4]
 8025832:	f04f 0c00 	mov.w	ip, #0
 8025836:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802583a:	6900      	ldr	r0, [r0, #16]
 802583c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025840:	a901      	add	r1, sp, #4
 8025842:	f88d c008 	strb.w	ip, [sp, #8]
 8025846:	f8ad 200a 	strh.w	r2, [sp, #10]
 802584a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802584e:	6803      	ldr	r3, [r0, #0]
 8025850:	689b      	ldr	r3, [r3, #8]
 8025852:	4798      	blx	r3
 8025854:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025858:	1cd3      	adds	r3, r2, #3
 802585a:	b29b      	uxth	r3, r3
 802585c:	2b06      	cmp	r3, #6
 802585e:	d916      	bls.n	802588e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025860:	f8df c064 	ldr.w	ip, [pc, #100]	; 80258c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025864:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025868:	f8cd c004 	str.w	ip, [sp, #4]
 802586c:	f04f 0c01 	mov.w	ip, #1
 8025870:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025874:	6920      	ldr	r0, [r4, #16]
 8025876:	f8ad 100c 	strh.w	r1, [sp, #12]
 802587a:	a901      	add	r1, sp, #4
 802587c:	f88d c008 	strb.w	ip, [sp, #8]
 8025880:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025884:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025888:	6803      	ldr	r3, [r0, #0]
 802588a:	689b      	ldr	r3, [r3, #8]
 802588c:	4798      	blx	r3
 802588e:	4b0d      	ldr	r3, [pc, #52]	; (80258c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025890:	a901      	add	r1, sp, #4
 8025892:	6920      	ldr	r0, [r4, #16]
 8025894:	9301      	str	r3, [sp, #4]
 8025896:	2300      	movs	r3, #0
 8025898:	f88d 5008 	strb.w	r5, [sp, #8]
 802589c:	f8ad 700a 	strh.w	r7, [sp, #10]
 80258a0:	f8ad 600c 	strh.w	r6, [sp, #12]
 80258a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80258a8:	6803      	ldr	r3, [r0, #0]
 80258aa:	681b      	ldr	r3, [r3, #0]
 80258ac:	4798      	blx	r3
 80258ae:	b005      	add	sp, #20
 80258b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80258b2:	2900      	cmp	r1, #0
 80258b4:	d1eb      	bne.n	802588e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80258b6:	80a2      	strh	r2, [r4, #4]
 80258b8:	80c6      	strh	r6, [r0, #6]
 80258ba:	60a1      	str	r1, [r4, #8]
 80258bc:	81a1      	strh	r1, [r4, #12]
 80258be:	73a1      	strb	r1, [r4, #14]
 80258c0:	e7e5      	b.n	802588e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80258c2:	bf00      	nop
 80258c4:	08028c1c 	.word	0x08028c1c
 80258c8:	08028c44 	.word	0x08028c44

080258cc <__aeabi_atexit>:
 80258cc:	460b      	mov	r3, r1
 80258ce:	4601      	mov	r1, r0
 80258d0:	4618      	mov	r0, r3
 80258d2:	f000 b90f 	b.w	8025af4 <__cxa_atexit>

080258d6 <_ZdlPvj>:
 80258d6:	f000 b812 	b.w	80258fe <_ZdlPv>

080258da <__cxa_guard_acquire>:
 80258da:	6803      	ldr	r3, [r0, #0]
 80258dc:	07db      	lsls	r3, r3, #31
 80258de:	d406      	bmi.n	80258ee <__cxa_guard_acquire+0x14>
 80258e0:	7843      	ldrb	r3, [r0, #1]
 80258e2:	b103      	cbz	r3, 80258e6 <__cxa_guard_acquire+0xc>
 80258e4:	deff      	udf	#255	; 0xff
 80258e6:	2301      	movs	r3, #1
 80258e8:	7043      	strb	r3, [r0, #1]
 80258ea:	4618      	mov	r0, r3
 80258ec:	4770      	bx	lr
 80258ee:	2000      	movs	r0, #0
 80258f0:	4770      	bx	lr

080258f2 <__cxa_guard_release>:
 80258f2:	2301      	movs	r3, #1
 80258f4:	6003      	str	r3, [r0, #0]
 80258f6:	4770      	bx	lr

080258f8 <__cxa_pure_virtual>:
 80258f8:	b508      	push	{r3, lr}
 80258fa:	f000 f80f 	bl	802591c <_ZSt9terminatev>

080258fe <_ZdlPv>:
 80258fe:	f000 b845 	b.w	802598c <free>

08025902 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025902:	b508      	push	{r3, lr}
 8025904:	4780      	blx	r0
 8025906:	f000 f80e 	bl	8025926 <abort>
	...

0802590c <_ZSt13get_terminatev>:
 802590c:	4b02      	ldr	r3, [pc, #8]	; (8025918 <_ZSt13get_terminatev+0xc>)
 802590e:	6818      	ldr	r0, [r3, #0]
 8025910:	f3bf 8f5b 	dmb	ish
 8025914:	4770      	bx	lr
 8025916:	bf00      	nop
 8025918:	24000098 	.word	0x24000098

0802591c <_ZSt9terminatev>:
 802591c:	b508      	push	{r3, lr}
 802591e:	f7ff fff5 	bl	802590c <_ZSt13get_terminatev>
 8025922:	f7ff ffee 	bl	8025902 <_ZN10__cxxabiv111__terminateEPFvvE>

08025926 <abort>:
 8025926:	b508      	push	{r3, lr}
 8025928:	2006      	movs	r0, #6
 802592a:	f000 fa39 	bl	8025da0 <raise>
 802592e:	2001      	movs	r0, #1
 8025930:	f7db ff10 	bl	8001754 <_exit>

08025934 <__assert_func>:
 8025934:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025936:	4614      	mov	r4, r2
 8025938:	461a      	mov	r2, r3
 802593a:	4b09      	ldr	r3, [pc, #36]	; (8025960 <__assert_func+0x2c>)
 802593c:	681b      	ldr	r3, [r3, #0]
 802593e:	4605      	mov	r5, r0
 8025940:	68d8      	ldr	r0, [r3, #12]
 8025942:	b14c      	cbz	r4, 8025958 <__assert_func+0x24>
 8025944:	4b07      	ldr	r3, [pc, #28]	; (8025964 <__assert_func+0x30>)
 8025946:	9100      	str	r1, [sp, #0]
 8025948:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802594c:	4906      	ldr	r1, [pc, #24]	; (8025968 <__assert_func+0x34>)
 802594e:	462b      	mov	r3, r5
 8025950:	f000 f982 	bl	8025c58 <fiprintf>
 8025954:	f7ff ffe7 	bl	8025926 <abort>
 8025958:	4b04      	ldr	r3, [pc, #16]	; (802596c <__assert_func+0x38>)
 802595a:	461c      	mov	r4, r3
 802595c:	e7f3      	b.n	8025946 <__assert_func+0x12>
 802595e:	bf00      	nop
 8025960:	240000f4 	.word	0x240000f4
 8025964:	08028f60 	.word	0x08028f60
 8025968:	08028f6d 	.word	0x08028f6d
 802596c:	08028f9b 	.word	0x08028f9b

08025970 <atexit>:
 8025970:	2300      	movs	r3, #0
 8025972:	4601      	mov	r1, r0
 8025974:	461a      	mov	r2, r3
 8025976:	4618      	mov	r0, r3
 8025978:	f000 bac0 	b.w	8025efc <__register_exitproc>

0802597c <malloc>:
 802597c:	4b02      	ldr	r3, [pc, #8]	; (8025988 <malloc+0xc>)
 802597e:	4601      	mov	r1, r0
 8025980:	6818      	ldr	r0, [r3, #0]
 8025982:	f000 b82b 	b.w	80259dc <_malloc_r>
 8025986:	bf00      	nop
 8025988:	240000f4 	.word	0x240000f4

0802598c <free>:
 802598c:	4b02      	ldr	r3, [pc, #8]	; (8025998 <free+0xc>)
 802598e:	4601      	mov	r1, r0
 8025990:	6818      	ldr	r0, [r3, #0]
 8025992:	f000 bb11 	b.w	8025fb8 <_free_r>
 8025996:	bf00      	nop
 8025998:	240000f4 	.word	0x240000f4

0802599c <sbrk_aligned>:
 802599c:	b570      	push	{r4, r5, r6, lr}
 802599e:	4e0e      	ldr	r6, [pc, #56]	; (80259d8 <sbrk_aligned+0x3c>)
 80259a0:	460c      	mov	r4, r1
 80259a2:	6831      	ldr	r1, [r6, #0]
 80259a4:	4605      	mov	r5, r0
 80259a6:	b911      	cbnz	r1, 80259ae <sbrk_aligned+0x12>
 80259a8:	f000 fa4a 	bl	8025e40 <_sbrk_r>
 80259ac:	6030      	str	r0, [r6, #0]
 80259ae:	4621      	mov	r1, r4
 80259b0:	4628      	mov	r0, r5
 80259b2:	f000 fa45 	bl	8025e40 <_sbrk_r>
 80259b6:	1c43      	adds	r3, r0, #1
 80259b8:	d00a      	beq.n	80259d0 <sbrk_aligned+0x34>
 80259ba:	1cc4      	adds	r4, r0, #3
 80259bc:	f024 0403 	bic.w	r4, r4, #3
 80259c0:	42a0      	cmp	r0, r4
 80259c2:	d007      	beq.n	80259d4 <sbrk_aligned+0x38>
 80259c4:	1a21      	subs	r1, r4, r0
 80259c6:	4628      	mov	r0, r5
 80259c8:	f000 fa3a 	bl	8025e40 <_sbrk_r>
 80259cc:	3001      	adds	r0, #1
 80259ce:	d101      	bne.n	80259d4 <sbrk_aligned+0x38>
 80259d0:	f04f 34ff 	mov.w	r4, #4294967295
 80259d4:	4620      	mov	r0, r4
 80259d6:	bd70      	pop	{r4, r5, r6, pc}
 80259d8:	240038f4 	.word	0x240038f4

080259dc <_malloc_r>:
 80259dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80259e0:	1ccd      	adds	r5, r1, #3
 80259e2:	f025 0503 	bic.w	r5, r5, #3
 80259e6:	3508      	adds	r5, #8
 80259e8:	2d0c      	cmp	r5, #12
 80259ea:	bf38      	it	cc
 80259ec:	250c      	movcc	r5, #12
 80259ee:	2d00      	cmp	r5, #0
 80259f0:	4607      	mov	r7, r0
 80259f2:	db01      	blt.n	80259f8 <_malloc_r+0x1c>
 80259f4:	42a9      	cmp	r1, r5
 80259f6:	d905      	bls.n	8025a04 <_malloc_r+0x28>
 80259f8:	230c      	movs	r3, #12
 80259fa:	603b      	str	r3, [r7, #0]
 80259fc:	2600      	movs	r6, #0
 80259fe:	4630      	mov	r0, r6
 8025a00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025a04:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8025ad8 <_malloc_r+0xfc>
 8025a08:	f000 f868 	bl	8025adc <__malloc_lock>
 8025a0c:	f8d8 3000 	ldr.w	r3, [r8]
 8025a10:	461c      	mov	r4, r3
 8025a12:	bb5c      	cbnz	r4, 8025a6c <_malloc_r+0x90>
 8025a14:	4629      	mov	r1, r5
 8025a16:	4638      	mov	r0, r7
 8025a18:	f7ff ffc0 	bl	802599c <sbrk_aligned>
 8025a1c:	1c43      	adds	r3, r0, #1
 8025a1e:	4604      	mov	r4, r0
 8025a20:	d155      	bne.n	8025ace <_malloc_r+0xf2>
 8025a22:	f8d8 4000 	ldr.w	r4, [r8]
 8025a26:	4626      	mov	r6, r4
 8025a28:	2e00      	cmp	r6, #0
 8025a2a:	d145      	bne.n	8025ab8 <_malloc_r+0xdc>
 8025a2c:	2c00      	cmp	r4, #0
 8025a2e:	d048      	beq.n	8025ac2 <_malloc_r+0xe6>
 8025a30:	6823      	ldr	r3, [r4, #0]
 8025a32:	4631      	mov	r1, r6
 8025a34:	4638      	mov	r0, r7
 8025a36:	eb04 0903 	add.w	r9, r4, r3
 8025a3a:	f000 fa01 	bl	8025e40 <_sbrk_r>
 8025a3e:	4581      	cmp	r9, r0
 8025a40:	d13f      	bne.n	8025ac2 <_malloc_r+0xe6>
 8025a42:	6821      	ldr	r1, [r4, #0]
 8025a44:	1a6d      	subs	r5, r5, r1
 8025a46:	4629      	mov	r1, r5
 8025a48:	4638      	mov	r0, r7
 8025a4a:	f7ff ffa7 	bl	802599c <sbrk_aligned>
 8025a4e:	3001      	adds	r0, #1
 8025a50:	d037      	beq.n	8025ac2 <_malloc_r+0xe6>
 8025a52:	6823      	ldr	r3, [r4, #0]
 8025a54:	442b      	add	r3, r5
 8025a56:	6023      	str	r3, [r4, #0]
 8025a58:	f8d8 3000 	ldr.w	r3, [r8]
 8025a5c:	2b00      	cmp	r3, #0
 8025a5e:	d038      	beq.n	8025ad2 <_malloc_r+0xf6>
 8025a60:	685a      	ldr	r2, [r3, #4]
 8025a62:	42a2      	cmp	r2, r4
 8025a64:	d12b      	bne.n	8025abe <_malloc_r+0xe2>
 8025a66:	2200      	movs	r2, #0
 8025a68:	605a      	str	r2, [r3, #4]
 8025a6a:	e00f      	b.n	8025a8c <_malloc_r+0xb0>
 8025a6c:	6822      	ldr	r2, [r4, #0]
 8025a6e:	1b52      	subs	r2, r2, r5
 8025a70:	d41f      	bmi.n	8025ab2 <_malloc_r+0xd6>
 8025a72:	2a0b      	cmp	r2, #11
 8025a74:	d917      	bls.n	8025aa6 <_malloc_r+0xca>
 8025a76:	1961      	adds	r1, r4, r5
 8025a78:	42a3      	cmp	r3, r4
 8025a7a:	6025      	str	r5, [r4, #0]
 8025a7c:	bf18      	it	ne
 8025a7e:	6059      	strne	r1, [r3, #4]
 8025a80:	6863      	ldr	r3, [r4, #4]
 8025a82:	bf08      	it	eq
 8025a84:	f8c8 1000 	streq.w	r1, [r8]
 8025a88:	5162      	str	r2, [r4, r5]
 8025a8a:	604b      	str	r3, [r1, #4]
 8025a8c:	4638      	mov	r0, r7
 8025a8e:	f104 060b 	add.w	r6, r4, #11
 8025a92:	f000 f829 	bl	8025ae8 <__malloc_unlock>
 8025a96:	f026 0607 	bic.w	r6, r6, #7
 8025a9a:	1d23      	adds	r3, r4, #4
 8025a9c:	1af2      	subs	r2, r6, r3
 8025a9e:	d0ae      	beq.n	80259fe <_malloc_r+0x22>
 8025aa0:	1b9b      	subs	r3, r3, r6
 8025aa2:	50a3      	str	r3, [r4, r2]
 8025aa4:	e7ab      	b.n	80259fe <_malloc_r+0x22>
 8025aa6:	42a3      	cmp	r3, r4
 8025aa8:	6862      	ldr	r2, [r4, #4]
 8025aaa:	d1dd      	bne.n	8025a68 <_malloc_r+0x8c>
 8025aac:	f8c8 2000 	str.w	r2, [r8]
 8025ab0:	e7ec      	b.n	8025a8c <_malloc_r+0xb0>
 8025ab2:	4623      	mov	r3, r4
 8025ab4:	6864      	ldr	r4, [r4, #4]
 8025ab6:	e7ac      	b.n	8025a12 <_malloc_r+0x36>
 8025ab8:	4634      	mov	r4, r6
 8025aba:	6876      	ldr	r6, [r6, #4]
 8025abc:	e7b4      	b.n	8025a28 <_malloc_r+0x4c>
 8025abe:	4613      	mov	r3, r2
 8025ac0:	e7cc      	b.n	8025a5c <_malloc_r+0x80>
 8025ac2:	230c      	movs	r3, #12
 8025ac4:	603b      	str	r3, [r7, #0]
 8025ac6:	4638      	mov	r0, r7
 8025ac8:	f000 f80e 	bl	8025ae8 <__malloc_unlock>
 8025acc:	e797      	b.n	80259fe <_malloc_r+0x22>
 8025ace:	6025      	str	r5, [r4, #0]
 8025ad0:	e7dc      	b.n	8025a8c <_malloc_r+0xb0>
 8025ad2:	605b      	str	r3, [r3, #4]
 8025ad4:	deff      	udf	#255	; 0xff
 8025ad6:	bf00      	nop
 8025ad8:	240038f0 	.word	0x240038f0

08025adc <__malloc_lock>:
 8025adc:	4801      	ldr	r0, [pc, #4]	; (8025ae4 <__malloc_lock+0x8>)
 8025ade:	f000 b9fc 	b.w	8025eda <__retarget_lock_acquire_recursive>
 8025ae2:	bf00      	nop
 8025ae4:	24003a39 	.word	0x24003a39

08025ae8 <__malloc_unlock>:
 8025ae8:	4801      	ldr	r0, [pc, #4]	; (8025af0 <__malloc_unlock+0x8>)
 8025aea:	f000 b9f7 	b.w	8025edc <__retarget_lock_release_recursive>
 8025aee:	bf00      	nop
 8025af0:	24003a39 	.word	0x24003a39

08025af4 <__cxa_atexit>:
 8025af4:	b510      	push	{r4, lr}
 8025af6:	4c05      	ldr	r4, [pc, #20]	; (8025b0c <__cxa_atexit+0x18>)
 8025af8:	4613      	mov	r3, r2
 8025afa:	b12c      	cbz	r4, 8025b08 <__cxa_atexit+0x14>
 8025afc:	460a      	mov	r2, r1
 8025afe:	4601      	mov	r1, r0
 8025b00:	2002      	movs	r0, #2
 8025b02:	f000 f9fb 	bl	8025efc <__register_exitproc>
 8025b06:	bd10      	pop	{r4, pc}
 8025b08:	4620      	mov	r0, r4
 8025b0a:	e7fc      	b.n	8025b06 <__cxa_atexit+0x12>
 8025b0c:	08025efd 	.word	0x08025efd

08025b10 <std>:
 8025b10:	2300      	movs	r3, #0
 8025b12:	b510      	push	{r4, lr}
 8025b14:	4604      	mov	r4, r0
 8025b16:	e9c0 3300 	strd	r3, r3, [r0]
 8025b1a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025b1e:	6083      	str	r3, [r0, #8]
 8025b20:	8181      	strh	r1, [r0, #12]
 8025b22:	6643      	str	r3, [r0, #100]	; 0x64
 8025b24:	81c2      	strh	r2, [r0, #14]
 8025b26:	6183      	str	r3, [r0, #24]
 8025b28:	4619      	mov	r1, r3
 8025b2a:	2208      	movs	r2, #8
 8025b2c:	305c      	adds	r0, #92	; 0x5c
 8025b2e:	f000 f906 	bl	8025d3e <memset>
 8025b32:	4b0d      	ldr	r3, [pc, #52]	; (8025b68 <std+0x58>)
 8025b34:	6263      	str	r3, [r4, #36]	; 0x24
 8025b36:	4b0d      	ldr	r3, [pc, #52]	; (8025b6c <std+0x5c>)
 8025b38:	62a3      	str	r3, [r4, #40]	; 0x28
 8025b3a:	4b0d      	ldr	r3, [pc, #52]	; (8025b70 <std+0x60>)
 8025b3c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025b3e:	4b0d      	ldr	r3, [pc, #52]	; (8025b74 <std+0x64>)
 8025b40:	6323      	str	r3, [r4, #48]	; 0x30
 8025b42:	4b0d      	ldr	r3, [pc, #52]	; (8025b78 <std+0x68>)
 8025b44:	6224      	str	r4, [r4, #32]
 8025b46:	429c      	cmp	r4, r3
 8025b48:	d006      	beq.n	8025b58 <std+0x48>
 8025b4a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8025b4e:	4294      	cmp	r4, r2
 8025b50:	d002      	beq.n	8025b58 <std+0x48>
 8025b52:	33d0      	adds	r3, #208	; 0xd0
 8025b54:	429c      	cmp	r4, r3
 8025b56:	d105      	bne.n	8025b64 <std+0x54>
 8025b58:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8025b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025b60:	f000 b9ba 	b.w	8025ed8 <__retarget_lock_init_recursive>
 8025b64:	bd10      	pop	{r4, pc}
 8025b66:	bf00      	nop
 8025b68:	08025cb9 	.word	0x08025cb9
 8025b6c:	08025cdb 	.word	0x08025cdb
 8025b70:	08025d13 	.word	0x08025d13
 8025b74:	08025d37 	.word	0x08025d37
 8025b78:	240038f8 	.word	0x240038f8

08025b7c <stdio_exit_handler>:
 8025b7c:	4a02      	ldr	r2, [pc, #8]	; (8025b88 <stdio_exit_handler+0xc>)
 8025b7e:	4903      	ldr	r1, [pc, #12]	; (8025b8c <stdio_exit_handler+0x10>)
 8025b80:	4803      	ldr	r0, [pc, #12]	; (8025b90 <stdio_exit_handler+0x14>)
 8025b82:	f000 b87b 	b.w	8025c7c <_fwalk_sglue>
 8025b86:	bf00      	nop
 8025b88:	2400009c 	.word	0x2400009c
 8025b8c:	08026705 	.word	0x08026705
 8025b90:	240000a8 	.word	0x240000a8

08025b94 <cleanup_stdio>:
 8025b94:	6841      	ldr	r1, [r0, #4]
 8025b96:	4b0c      	ldr	r3, [pc, #48]	; (8025bc8 <cleanup_stdio+0x34>)
 8025b98:	4299      	cmp	r1, r3
 8025b9a:	b510      	push	{r4, lr}
 8025b9c:	4604      	mov	r4, r0
 8025b9e:	d001      	beq.n	8025ba4 <cleanup_stdio+0x10>
 8025ba0:	f000 fdb0 	bl	8026704 <_fflush_r>
 8025ba4:	68a1      	ldr	r1, [r4, #8]
 8025ba6:	4b09      	ldr	r3, [pc, #36]	; (8025bcc <cleanup_stdio+0x38>)
 8025ba8:	4299      	cmp	r1, r3
 8025baa:	d002      	beq.n	8025bb2 <cleanup_stdio+0x1e>
 8025bac:	4620      	mov	r0, r4
 8025bae:	f000 fda9 	bl	8026704 <_fflush_r>
 8025bb2:	68e1      	ldr	r1, [r4, #12]
 8025bb4:	4b06      	ldr	r3, [pc, #24]	; (8025bd0 <cleanup_stdio+0x3c>)
 8025bb6:	4299      	cmp	r1, r3
 8025bb8:	d004      	beq.n	8025bc4 <cleanup_stdio+0x30>
 8025bba:	4620      	mov	r0, r4
 8025bbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025bc0:	f000 bda0 	b.w	8026704 <_fflush_r>
 8025bc4:	bd10      	pop	{r4, pc}
 8025bc6:	bf00      	nop
 8025bc8:	240038f8 	.word	0x240038f8
 8025bcc:	24003960 	.word	0x24003960
 8025bd0:	240039c8 	.word	0x240039c8

08025bd4 <global_stdio_init.part.0>:
 8025bd4:	b510      	push	{r4, lr}
 8025bd6:	4b0b      	ldr	r3, [pc, #44]	; (8025c04 <global_stdio_init.part.0+0x30>)
 8025bd8:	4c0b      	ldr	r4, [pc, #44]	; (8025c08 <global_stdio_init.part.0+0x34>)
 8025bda:	4a0c      	ldr	r2, [pc, #48]	; (8025c0c <global_stdio_init.part.0+0x38>)
 8025bdc:	601a      	str	r2, [r3, #0]
 8025bde:	4620      	mov	r0, r4
 8025be0:	2200      	movs	r2, #0
 8025be2:	2104      	movs	r1, #4
 8025be4:	f7ff ff94 	bl	8025b10 <std>
 8025be8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8025bec:	2201      	movs	r2, #1
 8025bee:	2109      	movs	r1, #9
 8025bf0:	f7ff ff8e 	bl	8025b10 <std>
 8025bf4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8025bf8:	2202      	movs	r2, #2
 8025bfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025bfe:	2112      	movs	r1, #18
 8025c00:	f7ff bf86 	b.w	8025b10 <std>
 8025c04:	24003a30 	.word	0x24003a30
 8025c08:	240038f8 	.word	0x240038f8
 8025c0c:	08025b7d 	.word	0x08025b7d

08025c10 <__sfp_lock_acquire>:
 8025c10:	4801      	ldr	r0, [pc, #4]	; (8025c18 <__sfp_lock_acquire+0x8>)
 8025c12:	f000 b962 	b.w	8025eda <__retarget_lock_acquire_recursive>
 8025c16:	bf00      	nop
 8025c18:	24003a3a 	.word	0x24003a3a

08025c1c <__sfp_lock_release>:
 8025c1c:	4801      	ldr	r0, [pc, #4]	; (8025c24 <__sfp_lock_release+0x8>)
 8025c1e:	f000 b95d 	b.w	8025edc <__retarget_lock_release_recursive>
 8025c22:	bf00      	nop
 8025c24:	24003a3a 	.word	0x24003a3a

08025c28 <__sinit>:
 8025c28:	b510      	push	{r4, lr}
 8025c2a:	4604      	mov	r4, r0
 8025c2c:	f7ff fff0 	bl	8025c10 <__sfp_lock_acquire>
 8025c30:	6a23      	ldr	r3, [r4, #32]
 8025c32:	b11b      	cbz	r3, 8025c3c <__sinit+0x14>
 8025c34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025c38:	f7ff bff0 	b.w	8025c1c <__sfp_lock_release>
 8025c3c:	4b04      	ldr	r3, [pc, #16]	; (8025c50 <__sinit+0x28>)
 8025c3e:	6223      	str	r3, [r4, #32]
 8025c40:	4b04      	ldr	r3, [pc, #16]	; (8025c54 <__sinit+0x2c>)
 8025c42:	681b      	ldr	r3, [r3, #0]
 8025c44:	2b00      	cmp	r3, #0
 8025c46:	d1f5      	bne.n	8025c34 <__sinit+0xc>
 8025c48:	f7ff ffc4 	bl	8025bd4 <global_stdio_init.part.0>
 8025c4c:	e7f2      	b.n	8025c34 <__sinit+0xc>
 8025c4e:	bf00      	nop
 8025c50:	08025b95 	.word	0x08025b95
 8025c54:	24003a30 	.word	0x24003a30

08025c58 <fiprintf>:
 8025c58:	b40e      	push	{r1, r2, r3}
 8025c5a:	b503      	push	{r0, r1, lr}
 8025c5c:	4601      	mov	r1, r0
 8025c5e:	ab03      	add	r3, sp, #12
 8025c60:	4805      	ldr	r0, [pc, #20]	; (8025c78 <fiprintf+0x20>)
 8025c62:	f853 2b04 	ldr.w	r2, [r3], #4
 8025c66:	6800      	ldr	r0, [r0, #0]
 8025c68:	9301      	str	r3, [sp, #4]
 8025c6a:	f000 fa1b 	bl	80260a4 <_vfiprintf_r>
 8025c6e:	b002      	add	sp, #8
 8025c70:	f85d eb04 	ldr.w	lr, [sp], #4
 8025c74:	b003      	add	sp, #12
 8025c76:	4770      	bx	lr
 8025c78:	240000f4 	.word	0x240000f4

08025c7c <_fwalk_sglue>:
 8025c7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025c80:	4607      	mov	r7, r0
 8025c82:	4688      	mov	r8, r1
 8025c84:	4614      	mov	r4, r2
 8025c86:	2600      	movs	r6, #0
 8025c88:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025c8c:	f1b9 0901 	subs.w	r9, r9, #1
 8025c90:	d505      	bpl.n	8025c9e <_fwalk_sglue+0x22>
 8025c92:	6824      	ldr	r4, [r4, #0]
 8025c94:	2c00      	cmp	r4, #0
 8025c96:	d1f7      	bne.n	8025c88 <_fwalk_sglue+0xc>
 8025c98:	4630      	mov	r0, r6
 8025c9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025c9e:	89ab      	ldrh	r3, [r5, #12]
 8025ca0:	2b01      	cmp	r3, #1
 8025ca2:	d907      	bls.n	8025cb4 <_fwalk_sglue+0x38>
 8025ca4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025ca8:	3301      	adds	r3, #1
 8025caa:	d003      	beq.n	8025cb4 <_fwalk_sglue+0x38>
 8025cac:	4629      	mov	r1, r5
 8025cae:	4638      	mov	r0, r7
 8025cb0:	47c0      	blx	r8
 8025cb2:	4306      	orrs	r6, r0
 8025cb4:	3568      	adds	r5, #104	; 0x68
 8025cb6:	e7e9      	b.n	8025c8c <_fwalk_sglue+0x10>

08025cb8 <__sread>:
 8025cb8:	b510      	push	{r4, lr}
 8025cba:	460c      	mov	r4, r1
 8025cbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025cc0:	f000 f898 	bl	8025df4 <_read_r>
 8025cc4:	2800      	cmp	r0, #0
 8025cc6:	bfab      	itete	ge
 8025cc8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8025cca:	89a3      	ldrhlt	r3, [r4, #12]
 8025ccc:	181b      	addge	r3, r3, r0
 8025cce:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8025cd2:	bfac      	ite	ge
 8025cd4:	6563      	strge	r3, [r4, #84]	; 0x54
 8025cd6:	81a3      	strhlt	r3, [r4, #12]
 8025cd8:	bd10      	pop	{r4, pc}

08025cda <__swrite>:
 8025cda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025cde:	461f      	mov	r7, r3
 8025ce0:	898b      	ldrh	r3, [r1, #12]
 8025ce2:	05db      	lsls	r3, r3, #23
 8025ce4:	4605      	mov	r5, r0
 8025ce6:	460c      	mov	r4, r1
 8025ce8:	4616      	mov	r6, r2
 8025cea:	d505      	bpl.n	8025cf8 <__swrite+0x1e>
 8025cec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025cf0:	2302      	movs	r3, #2
 8025cf2:	2200      	movs	r2, #0
 8025cf4:	f000 f86c 	bl	8025dd0 <_lseek_r>
 8025cf8:	89a3      	ldrh	r3, [r4, #12]
 8025cfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025cfe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8025d02:	81a3      	strh	r3, [r4, #12]
 8025d04:	4632      	mov	r2, r6
 8025d06:	463b      	mov	r3, r7
 8025d08:	4628      	mov	r0, r5
 8025d0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025d0e:	f000 b8a7 	b.w	8025e60 <_write_r>

08025d12 <__sseek>:
 8025d12:	b510      	push	{r4, lr}
 8025d14:	460c      	mov	r4, r1
 8025d16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025d1a:	f000 f859 	bl	8025dd0 <_lseek_r>
 8025d1e:	1c43      	adds	r3, r0, #1
 8025d20:	89a3      	ldrh	r3, [r4, #12]
 8025d22:	bf15      	itete	ne
 8025d24:	6560      	strne	r0, [r4, #84]	; 0x54
 8025d26:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8025d2a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8025d2e:	81a3      	strheq	r3, [r4, #12]
 8025d30:	bf18      	it	ne
 8025d32:	81a3      	strhne	r3, [r4, #12]
 8025d34:	bd10      	pop	{r4, pc}

08025d36 <__sclose>:
 8025d36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025d3a:	f000 b839 	b.w	8025db0 <_close_r>

08025d3e <memset>:
 8025d3e:	4402      	add	r2, r0
 8025d40:	4603      	mov	r3, r0
 8025d42:	4293      	cmp	r3, r2
 8025d44:	d100      	bne.n	8025d48 <memset+0xa>
 8025d46:	4770      	bx	lr
 8025d48:	f803 1b01 	strb.w	r1, [r3], #1
 8025d4c:	e7f9      	b.n	8025d42 <memset+0x4>

08025d4e <_raise_r>:
 8025d4e:	291f      	cmp	r1, #31
 8025d50:	b538      	push	{r3, r4, r5, lr}
 8025d52:	4604      	mov	r4, r0
 8025d54:	460d      	mov	r5, r1
 8025d56:	d904      	bls.n	8025d62 <_raise_r+0x14>
 8025d58:	2316      	movs	r3, #22
 8025d5a:	6003      	str	r3, [r0, #0]
 8025d5c:	f04f 30ff 	mov.w	r0, #4294967295
 8025d60:	bd38      	pop	{r3, r4, r5, pc}
 8025d62:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8025d64:	b112      	cbz	r2, 8025d6c <_raise_r+0x1e>
 8025d66:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025d6a:	b94b      	cbnz	r3, 8025d80 <_raise_r+0x32>
 8025d6c:	4620      	mov	r0, r4
 8025d6e:	f000 f865 	bl	8025e3c <_getpid_r>
 8025d72:	462a      	mov	r2, r5
 8025d74:	4601      	mov	r1, r0
 8025d76:	4620      	mov	r0, r4
 8025d78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025d7c:	f000 b84c 	b.w	8025e18 <_kill_r>
 8025d80:	2b01      	cmp	r3, #1
 8025d82:	d00a      	beq.n	8025d9a <_raise_r+0x4c>
 8025d84:	1c59      	adds	r1, r3, #1
 8025d86:	d103      	bne.n	8025d90 <_raise_r+0x42>
 8025d88:	2316      	movs	r3, #22
 8025d8a:	6003      	str	r3, [r0, #0]
 8025d8c:	2001      	movs	r0, #1
 8025d8e:	e7e7      	b.n	8025d60 <_raise_r+0x12>
 8025d90:	2400      	movs	r4, #0
 8025d92:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8025d96:	4628      	mov	r0, r5
 8025d98:	4798      	blx	r3
 8025d9a:	2000      	movs	r0, #0
 8025d9c:	e7e0      	b.n	8025d60 <_raise_r+0x12>
	...

08025da0 <raise>:
 8025da0:	4b02      	ldr	r3, [pc, #8]	; (8025dac <raise+0xc>)
 8025da2:	4601      	mov	r1, r0
 8025da4:	6818      	ldr	r0, [r3, #0]
 8025da6:	f7ff bfd2 	b.w	8025d4e <_raise_r>
 8025daa:	bf00      	nop
 8025dac:	240000f4 	.word	0x240000f4

08025db0 <_close_r>:
 8025db0:	b538      	push	{r3, r4, r5, lr}
 8025db2:	4d06      	ldr	r5, [pc, #24]	; (8025dcc <_close_r+0x1c>)
 8025db4:	2300      	movs	r3, #0
 8025db6:	4604      	mov	r4, r0
 8025db8:	4608      	mov	r0, r1
 8025dba:	602b      	str	r3, [r5, #0]
 8025dbc:	f7db fd0d 	bl	80017da <_close>
 8025dc0:	1c43      	adds	r3, r0, #1
 8025dc2:	d102      	bne.n	8025dca <_close_r+0x1a>
 8025dc4:	682b      	ldr	r3, [r5, #0]
 8025dc6:	b103      	cbz	r3, 8025dca <_close_r+0x1a>
 8025dc8:	6023      	str	r3, [r4, #0]
 8025dca:	bd38      	pop	{r3, r4, r5, pc}
 8025dcc:	24003a34 	.word	0x24003a34

08025dd0 <_lseek_r>:
 8025dd0:	b538      	push	{r3, r4, r5, lr}
 8025dd2:	4d07      	ldr	r5, [pc, #28]	; (8025df0 <_lseek_r+0x20>)
 8025dd4:	4604      	mov	r4, r0
 8025dd6:	4608      	mov	r0, r1
 8025dd8:	4611      	mov	r1, r2
 8025dda:	2200      	movs	r2, #0
 8025ddc:	602a      	str	r2, [r5, #0]
 8025dde:	461a      	mov	r2, r3
 8025de0:	f7db fd22 	bl	8001828 <_lseek>
 8025de4:	1c43      	adds	r3, r0, #1
 8025de6:	d102      	bne.n	8025dee <_lseek_r+0x1e>
 8025de8:	682b      	ldr	r3, [r5, #0]
 8025dea:	b103      	cbz	r3, 8025dee <_lseek_r+0x1e>
 8025dec:	6023      	str	r3, [r4, #0]
 8025dee:	bd38      	pop	{r3, r4, r5, pc}
 8025df0:	24003a34 	.word	0x24003a34

08025df4 <_read_r>:
 8025df4:	b538      	push	{r3, r4, r5, lr}
 8025df6:	4d07      	ldr	r5, [pc, #28]	; (8025e14 <_read_r+0x20>)
 8025df8:	4604      	mov	r4, r0
 8025dfa:	4608      	mov	r0, r1
 8025dfc:	4611      	mov	r1, r2
 8025dfe:	2200      	movs	r2, #0
 8025e00:	602a      	str	r2, [r5, #0]
 8025e02:	461a      	mov	r2, r3
 8025e04:	f7db fcb0 	bl	8001768 <_read>
 8025e08:	1c43      	adds	r3, r0, #1
 8025e0a:	d102      	bne.n	8025e12 <_read_r+0x1e>
 8025e0c:	682b      	ldr	r3, [r5, #0]
 8025e0e:	b103      	cbz	r3, 8025e12 <_read_r+0x1e>
 8025e10:	6023      	str	r3, [r4, #0]
 8025e12:	bd38      	pop	{r3, r4, r5, pc}
 8025e14:	24003a34 	.word	0x24003a34

08025e18 <_kill_r>:
 8025e18:	b538      	push	{r3, r4, r5, lr}
 8025e1a:	4d07      	ldr	r5, [pc, #28]	; (8025e38 <_kill_r+0x20>)
 8025e1c:	2300      	movs	r3, #0
 8025e1e:	4604      	mov	r4, r0
 8025e20:	4608      	mov	r0, r1
 8025e22:	4611      	mov	r1, r2
 8025e24:	602b      	str	r3, [r5, #0]
 8025e26:	f7db fc85 	bl	8001734 <_kill>
 8025e2a:	1c43      	adds	r3, r0, #1
 8025e2c:	d102      	bne.n	8025e34 <_kill_r+0x1c>
 8025e2e:	682b      	ldr	r3, [r5, #0]
 8025e30:	b103      	cbz	r3, 8025e34 <_kill_r+0x1c>
 8025e32:	6023      	str	r3, [r4, #0]
 8025e34:	bd38      	pop	{r3, r4, r5, pc}
 8025e36:	bf00      	nop
 8025e38:	24003a34 	.word	0x24003a34

08025e3c <_getpid_r>:
 8025e3c:	f7db bc72 	b.w	8001724 <_getpid>

08025e40 <_sbrk_r>:
 8025e40:	b538      	push	{r3, r4, r5, lr}
 8025e42:	4d06      	ldr	r5, [pc, #24]	; (8025e5c <_sbrk_r+0x1c>)
 8025e44:	2300      	movs	r3, #0
 8025e46:	4604      	mov	r4, r0
 8025e48:	4608      	mov	r0, r1
 8025e4a:	602b      	str	r3, [r5, #0]
 8025e4c:	f7db fcfa 	bl	8001844 <_sbrk>
 8025e50:	1c43      	adds	r3, r0, #1
 8025e52:	d102      	bne.n	8025e5a <_sbrk_r+0x1a>
 8025e54:	682b      	ldr	r3, [r5, #0]
 8025e56:	b103      	cbz	r3, 8025e5a <_sbrk_r+0x1a>
 8025e58:	6023      	str	r3, [r4, #0]
 8025e5a:	bd38      	pop	{r3, r4, r5, pc}
 8025e5c:	24003a34 	.word	0x24003a34

08025e60 <_write_r>:
 8025e60:	b538      	push	{r3, r4, r5, lr}
 8025e62:	4d07      	ldr	r5, [pc, #28]	; (8025e80 <_write_r+0x20>)
 8025e64:	4604      	mov	r4, r0
 8025e66:	4608      	mov	r0, r1
 8025e68:	4611      	mov	r1, r2
 8025e6a:	2200      	movs	r2, #0
 8025e6c:	602a      	str	r2, [r5, #0]
 8025e6e:	461a      	mov	r2, r3
 8025e70:	f7db fc97 	bl	80017a2 <_write>
 8025e74:	1c43      	adds	r3, r0, #1
 8025e76:	d102      	bne.n	8025e7e <_write_r+0x1e>
 8025e78:	682b      	ldr	r3, [r5, #0]
 8025e7a:	b103      	cbz	r3, 8025e7e <_write_r+0x1e>
 8025e7c:	6023      	str	r3, [r4, #0]
 8025e7e:	bd38      	pop	{r3, r4, r5, pc}
 8025e80:	24003a34 	.word	0x24003a34

08025e84 <__errno>:
 8025e84:	4b01      	ldr	r3, [pc, #4]	; (8025e8c <__errno+0x8>)
 8025e86:	6818      	ldr	r0, [r3, #0]
 8025e88:	4770      	bx	lr
 8025e8a:	bf00      	nop
 8025e8c:	240000f4 	.word	0x240000f4

08025e90 <__libc_init_array>:
 8025e90:	b570      	push	{r4, r5, r6, lr}
 8025e92:	4d0d      	ldr	r5, [pc, #52]	; (8025ec8 <__libc_init_array+0x38>)
 8025e94:	4c0d      	ldr	r4, [pc, #52]	; (8025ecc <__libc_init_array+0x3c>)
 8025e96:	1b64      	subs	r4, r4, r5
 8025e98:	10a4      	asrs	r4, r4, #2
 8025e9a:	2600      	movs	r6, #0
 8025e9c:	42a6      	cmp	r6, r4
 8025e9e:	d109      	bne.n	8025eb4 <__libc_init_array+0x24>
 8025ea0:	4d0b      	ldr	r5, [pc, #44]	; (8025ed0 <__libc_init_array+0x40>)
 8025ea2:	4c0c      	ldr	r4, [pc, #48]	; (8025ed4 <__libc_init_array+0x44>)
 8025ea4:	f000 fd70 	bl	8026988 <_init>
 8025ea8:	1b64      	subs	r4, r4, r5
 8025eaa:	10a4      	asrs	r4, r4, #2
 8025eac:	2600      	movs	r6, #0
 8025eae:	42a6      	cmp	r6, r4
 8025eb0:	d105      	bne.n	8025ebe <__libc_init_array+0x2e>
 8025eb2:	bd70      	pop	{r4, r5, r6, pc}
 8025eb4:	f855 3b04 	ldr.w	r3, [r5], #4
 8025eb8:	4798      	blx	r3
 8025eba:	3601      	adds	r6, #1
 8025ebc:	e7ee      	b.n	8025e9c <__libc_init_array+0xc>
 8025ebe:	f855 3b04 	ldr.w	r3, [r5], #4
 8025ec2:	4798      	blx	r3
 8025ec4:	3601      	adds	r6, #1
 8025ec6:	e7f2      	b.n	8025eae <__libc_init_array+0x1e>
 8025ec8:	0804c864 	.word	0x0804c864
 8025ecc:	0804c864 	.word	0x0804c864
 8025ed0:	0804c864 	.word	0x0804c864
 8025ed4:	0804c87c 	.word	0x0804c87c

08025ed8 <__retarget_lock_init_recursive>:
 8025ed8:	4770      	bx	lr

08025eda <__retarget_lock_acquire_recursive>:
 8025eda:	4770      	bx	lr

08025edc <__retarget_lock_release_recursive>:
 8025edc:	4770      	bx	lr

08025ede <memcpy>:
 8025ede:	440a      	add	r2, r1
 8025ee0:	4291      	cmp	r1, r2
 8025ee2:	f100 33ff 	add.w	r3, r0, #4294967295
 8025ee6:	d100      	bne.n	8025eea <memcpy+0xc>
 8025ee8:	4770      	bx	lr
 8025eea:	b510      	push	{r4, lr}
 8025eec:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025ef0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025ef4:	4291      	cmp	r1, r2
 8025ef6:	d1f9      	bne.n	8025eec <memcpy+0xe>
 8025ef8:	bd10      	pop	{r4, pc}
	...

08025efc <__register_exitproc>:
 8025efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025f00:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8025fb4 <__register_exitproc+0xb8>
 8025f04:	4606      	mov	r6, r0
 8025f06:	f8d8 0000 	ldr.w	r0, [r8]
 8025f0a:	461f      	mov	r7, r3
 8025f0c:	460d      	mov	r5, r1
 8025f0e:	4691      	mov	r9, r2
 8025f10:	f7ff ffe3 	bl	8025eda <__retarget_lock_acquire_recursive>
 8025f14:	4b23      	ldr	r3, [pc, #140]	; (8025fa4 <__register_exitproc+0xa8>)
 8025f16:	681c      	ldr	r4, [r3, #0]
 8025f18:	b934      	cbnz	r4, 8025f28 <__register_exitproc+0x2c>
 8025f1a:	4c23      	ldr	r4, [pc, #140]	; (8025fa8 <__register_exitproc+0xac>)
 8025f1c:	601c      	str	r4, [r3, #0]
 8025f1e:	4b23      	ldr	r3, [pc, #140]	; (8025fac <__register_exitproc+0xb0>)
 8025f20:	b113      	cbz	r3, 8025f28 <__register_exitproc+0x2c>
 8025f22:	681b      	ldr	r3, [r3, #0]
 8025f24:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8025f28:	6863      	ldr	r3, [r4, #4]
 8025f2a:	2b1f      	cmp	r3, #31
 8025f2c:	dd07      	ble.n	8025f3e <__register_exitproc+0x42>
 8025f2e:	f8d8 0000 	ldr.w	r0, [r8]
 8025f32:	f7ff ffd3 	bl	8025edc <__retarget_lock_release_recursive>
 8025f36:	f04f 30ff 	mov.w	r0, #4294967295
 8025f3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f3e:	b32e      	cbz	r6, 8025f8c <__register_exitproc+0x90>
 8025f40:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8025f44:	b968      	cbnz	r0, 8025f62 <__register_exitproc+0x66>
 8025f46:	4b1a      	ldr	r3, [pc, #104]	; (8025fb0 <__register_exitproc+0xb4>)
 8025f48:	2b00      	cmp	r3, #0
 8025f4a:	d0f0      	beq.n	8025f2e <__register_exitproc+0x32>
 8025f4c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8025f50:	f7ff fd14 	bl	802597c <malloc>
 8025f54:	2800      	cmp	r0, #0
 8025f56:	d0ea      	beq.n	8025f2e <__register_exitproc+0x32>
 8025f58:	2300      	movs	r3, #0
 8025f5a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8025f5e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8025f62:	6863      	ldr	r3, [r4, #4]
 8025f64:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025f68:	2201      	movs	r2, #1
 8025f6a:	409a      	lsls	r2, r3
 8025f6c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025f70:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8025f74:	4313      	orrs	r3, r2
 8025f76:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8025f7a:	2e02      	cmp	r6, #2
 8025f7c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8025f80:	bf02      	ittt	eq
 8025f82:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8025f86:	4313      	orreq	r3, r2
 8025f88:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8025f8c:	6863      	ldr	r3, [r4, #4]
 8025f8e:	f8d8 0000 	ldr.w	r0, [r8]
 8025f92:	1c5a      	adds	r2, r3, #1
 8025f94:	3302      	adds	r3, #2
 8025f96:	6062      	str	r2, [r4, #4]
 8025f98:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8025f9c:	f7ff ff9e 	bl	8025edc <__retarget_lock_release_recursive>
 8025fa0:	2000      	movs	r0, #0
 8025fa2:	e7ca      	b.n	8025f3a <__register_exitproc+0x3e>
 8025fa4:	24003ac8 	.word	0x24003ac8
 8025fa8:	24003a3c 	.word	0x24003a3c
 8025fac:	08028f9c 	.word	0x08028f9c
 8025fb0:	0802597d 	.word	0x0802597d
 8025fb4:	240000f8 	.word	0x240000f8

08025fb8 <_free_r>:
 8025fb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8025fba:	2900      	cmp	r1, #0
 8025fbc:	d044      	beq.n	8026048 <_free_r+0x90>
 8025fbe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025fc2:	9001      	str	r0, [sp, #4]
 8025fc4:	2b00      	cmp	r3, #0
 8025fc6:	f1a1 0404 	sub.w	r4, r1, #4
 8025fca:	bfb8      	it	lt
 8025fcc:	18e4      	addlt	r4, r4, r3
 8025fce:	f7ff fd85 	bl	8025adc <__malloc_lock>
 8025fd2:	4a1e      	ldr	r2, [pc, #120]	; (802604c <_free_r+0x94>)
 8025fd4:	9801      	ldr	r0, [sp, #4]
 8025fd6:	6813      	ldr	r3, [r2, #0]
 8025fd8:	b933      	cbnz	r3, 8025fe8 <_free_r+0x30>
 8025fda:	6063      	str	r3, [r4, #4]
 8025fdc:	6014      	str	r4, [r2, #0]
 8025fde:	b003      	add	sp, #12
 8025fe0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8025fe4:	f7ff bd80 	b.w	8025ae8 <__malloc_unlock>
 8025fe8:	42a3      	cmp	r3, r4
 8025fea:	d908      	bls.n	8025ffe <_free_r+0x46>
 8025fec:	6825      	ldr	r5, [r4, #0]
 8025fee:	1961      	adds	r1, r4, r5
 8025ff0:	428b      	cmp	r3, r1
 8025ff2:	bf01      	itttt	eq
 8025ff4:	6819      	ldreq	r1, [r3, #0]
 8025ff6:	685b      	ldreq	r3, [r3, #4]
 8025ff8:	1949      	addeq	r1, r1, r5
 8025ffa:	6021      	streq	r1, [r4, #0]
 8025ffc:	e7ed      	b.n	8025fda <_free_r+0x22>
 8025ffe:	461a      	mov	r2, r3
 8026000:	685b      	ldr	r3, [r3, #4]
 8026002:	b10b      	cbz	r3, 8026008 <_free_r+0x50>
 8026004:	42a3      	cmp	r3, r4
 8026006:	d9fa      	bls.n	8025ffe <_free_r+0x46>
 8026008:	6811      	ldr	r1, [r2, #0]
 802600a:	1855      	adds	r5, r2, r1
 802600c:	42a5      	cmp	r5, r4
 802600e:	d10b      	bne.n	8026028 <_free_r+0x70>
 8026010:	6824      	ldr	r4, [r4, #0]
 8026012:	4421      	add	r1, r4
 8026014:	1854      	adds	r4, r2, r1
 8026016:	42a3      	cmp	r3, r4
 8026018:	6011      	str	r1, [r2, #0]
 802601a:	d1e0      	bne.n	8025fde <_free_r+0x26>
 802601c:	681c      	ldr	r4, [r3, #0]
 802601e:	685b      	ldr	r3, [r3, #4]
 8026020:	6053      	str	r3, [r2, #4]
 8026022:	440c      	add	r4, r1
 8026024:	6014      	str	r4, [r2, #0]
 8026026:	e7da      	b.n	8025fde <_free_r+0x26>
 8026028:	d902      	bls.n	8026030 <_free_r+0x78>
 802602a:	230c      	movs	r3, #12
 802602c:	6003      	str	r3, [r0, #0]
 802602e:	e7d6      	b.n	8025fde <_free_r+0x26>
 8026030:	6825      	ldr	r5, [r4, #0]
 8026032:	1961      	adds	r1, r4, r5
 8026034:	428b      	cmp	r3, r1
 8026036:	bf04      	itt	eq
 8026038:	6819      	ldreq	r1, [r3, #0]
 802603a:	685b      	ldreq	r3, [r3, #4]
 802603c:	6063      	str	r3, [r4, #4]
 802603e:	bf04      	itt	eq
 8026040:	1949      	addeq	r1, r1, r5
 8026042:	6021      	streq	r1, [r4, #0]
 8026044:	6054      	str	r4, [r2, #4]
 8026046:	e7ca      	b.n	8025fde <_free_r+0x26>
 8026048:	b003      	add	sp, #12
 802604a:	bd30      	pop	{r4, r5, pc}
 802604c:	240038f0 	.word	0x240038f0

08026050 <__sfputc_r>:
 8026050:	6893      	ldr	r3, [r2, #8]
 8026052:	3b01      	subs	r3, #1
 8026054:	2b00      	cmp	r3, #0
 8026056:	b410      	push	{r4}
 8026058:	6093      	str	r3, [r2, #8]
 802605a:	da08      	bge.n	802606e <__sfputc_r+0x1e>
 802605c:	6994      	ldr	r4, [r2, #24]
 802605e:	42a3      	cmp	r3, r4
 8026060:	db01      	blt.n	8026066 <__sfputc_r+0x16>
 8026062:	290a      	cmp	r1, #10
 8026064:	d103      	bne.n	802606e <__sfputc_r+0x1e>
 8026066:	f85d 4b04 	ldr.w	r4, [sp], #4
 802606a:	f000 bb73 	b.w	8026754 <__swbuf_r>
 802606e:	6813      	ldr	r3, [r2, #0]
 8026070:	1c58      	adds	r0, r3, #1
 8026072:	6010      	str	r0, [r2, #0]
 8026074:	7019      	strb	r1, [r3, #0]
 8026076:	4608      	mov	r0, r1
 8026078:	f85d 4b04 	ldr.w	r4, [sp], #4
 802607c:	4770      	bx	lr

0802607e <__sfputs_r>:
 802607e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026080:	4606      	mov	r6, r0
 8026082:	460f      	mov	r7, r1
 8026084:	4614      	mov	r4, r2
 8026086:	18d5      	adds	r5, r2, r3
 8026088:	42ac      	cmp	r4, r5
 802608a:	d101      	bne.n	8026090 <__sfputs_r+0x12>
 802608c:	2000      	movs	r0, #0
 802608e:	e007      	b.n	80260a0 <__sfputs_r+0x22>
 8026090:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026094:	463a      	mov	r2, r7
 8026096:	4630      	mov	r0, r6
 8026098:	f7ff ffda 	bl	8026050 <__sfputc_r>
 802609c:	1c43      	adds	r3, r0, #1
 802609e:	d1f3      	bne.n	8026088 <__sfputs_r+0xa>
 80260a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080260a4 <_vfiprintf_r>:
 80260a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260a8:	460d      	mov	r5, r1
 80260aa:	b09d      	sub	sp, #116	; 0x74
 80260ac:	4614      	mov	r4, r2
 80260ae:	4698      	mov	r8, r3
 80260b0:	4606      	mov	r6, r0
 80260b2:	b118      	cbz	r0, 80260bc <_vfiprintf_r+0x18>
 80260b4:	6a03      	ldr	r3, [r0, #32]
 80260b6:	b90b      	cbnz	r3, 80260bc <_vfiprintf_r+0x18>
 80260b8:	f7ff fdb6 	bl	8025c28 <__sinit>
 80260bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80260be:	07d9      	lsls	r1, r3, #31
 80260c0:	d405      	bmi.n	80260ce <_vfiprintf_r+0x2a>
 80260c2:	89ab      	ldrh	r3, [r5, #12]
 80260c4:	059a      	lsls	r2, r3, #22
 80260c6:	d402      	bmi.n	80260ce <_vfiprintf_r+0x2a>
 80260c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80260ca:	f7ff ff06 	bl	8025eda <__retarget_lock_acquire_recursive>
 80260ce:	89ab      	ldrh	r3, [r5, #12]
 80260d0:	071b      	lsls	r3, r3, #28
 80260d2:	d501      	bpl.n	80260d8 <_vfiprintf_r+0x34>
 80260d4:	692b      	ldr	r3, [r5, #16]
 80260d6:	b99b      	cbnz	r3, 8026100 <_vfiprintf_r+0x5c>
 80260d8:	4629      	mov	r1, r5
 80260da:	4630      	mov	r0, r6
 80260dc:	f000 fb78 	bl	80267d0 <__swsetup_r>
 80260e0:	b170      	cbz	r0, 8026100 <_vfiprintf_r+0x5c>
 80260e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80260e4:	07dc      	lsls	r4, r3, #31
 80260e6:	d504      	bpl.n	80260f2 <_vfiprintf_r+0x4e>
 80260e8:	f04f 30ff 	mov.w	r0, #4294967295
 80260ec:	b01d      	add	sp, #116	; 0x74
 80260ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260f2:	89ab      	ldrh	r3, [r5, #12]
 80260f4:	0598      	lsls	r0, r3, #22
 80260f6:	d4f7      	bmi.n	80260e8 <_vfiprintf_r+0x44>
 80260f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80260fa:	f7ff feef 	bl	8025edc <__retarget_lock_release_recursive>
 80260fe:	e7f3      	b.n	80260e8 <_vfiprintf_r+0x44>
 8026100:	2300      	movs	r3, #0
 8026102:	9309      	str	r3, [sp, #36]	; 0x24
 8026104:	2320      	movs	r3, #32
 8026106:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802610a:	f8cd 800c 	str.w	r8, [sp, #12]
 802610e:	2330      	movs	r3, #48	; 0x30
 8026110:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80262c4 <_vfiprintf_r+0x220>
 8026114:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026118:	f04f 0901 	mov.w	r9, #1
 802611c:	4623      	mov	r3, r4
 802611e:	469a      	mov	sl, r3
 8026120:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026124:	b10a      	cbz	r2, 802612a <_vfiprintf_r+0x86>
 8026126:	2a25      	cmp	r2, #37	; 0x25
 8026128:	d1f9      	bne.n	802611e <_vfiprintf_r+0x7a>
 802612a:	ebba 0b04 	subs.w	fp, sl, r4
 802612e:	d00b      	beq.n	8026148 <_vfiprintf_r+0xa4>
 8026130:	465b      	mov	r3, fp
 8026132:	4622      	mov	r2, r4
 8026134:	4629      	mov	r1, r5
 8026136:	4630      	mov	r0, r6
 8026138:	f7ff ffa1 	bl	802607e <__sfputs_r>
 802613c:	3001      	adds	r0, #1
 802613e:	f000 80a9 	beq.w	8026294 <_vfiprintf_r+0x1f0>
 8026142:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026144:	445a      	add	r2, fp
 8026146:	9209      	str	r2, [sp, #36]	; 0x24
 8026148:	f89a 3000 	ldrb.w	r3, [sl]
 802614c:	2b00      	cmp	r3, #0
 802614e:	f000 80a1 	beq.w	8026294 <_vfiprintf_r+0x1f0>
 8026152:	2300      	movs	r3, #0
 8026154:	f04f 32ff 	mov.w	r2, #4294967295
 8026158:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802615c:	f10a 0a01 	add.w	sl, sl, #1
 8026160:	9304      	str	r3, [sp, #16]
 8026162:	9307      	str	r3, [sp, #28]
 8026164:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026168:	931a      	str	r3, [sp, #104]	; 0x68
 802616a:	4654      	mov	r4, sl
 802616c:	2205      	movs	r2, #5
 802616e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026172:	4854      	ldr	r0, [pc, #336]	; (80262c4 <_vfiprintf_r+0x220>)
 8026174:	f7da f8cc 	bl	8000310 <memchr>
 8026178:	9a04      	ldr	r2, [sp, #16]
 802617a:	b9d8      	cbnz	r0, 80261b4 <_vfiprintf_r+0x110>
 802617c:	06d1      	lsls	r1, r2, #27
 802617e:	bf44      	itt	mi
 8026180:	2320      	movmi	r3, #32
 8026182:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026186:	0713      	lsls	r3, r2, #28
 8026188:	bf44      	itt	mi
 802618a:	232b      	movmi	r3, #43	; 0x2b
 802618c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026190:	f89a 3000 	ldrb.w	r3, [sl]
 8026194:	2b2a      	cmp	r3, #42	; 0x2a
 8026196:	d015      	beq.n	80261c4 <_vfiprintf_r+0x120>
 8026198:	9a07      	ldr	r2, [sp, #28]
 802619a:	4654      	mov	r4, sl
 802619c:	2000      	movs	r0, #0
 802619e:	f04f 0c0a 	mov.w	ip, #10
 80261a2:	4621      	mov	r1, r4
 80261a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80261a8:	3b30      	subs	r3, #48	; 0x30
 80261aa:	2b09      	cmp	r3, #9
 80261ac:	d94d      	bls.n	802624a <_vfiprintf_r+0x1a6>
 80261ae:	b1b0      	cbz	r0, 80261de <_vfiprintf_r+0x13a>
 80261b0:	9207      	str	r2, [sp, #28]
 80261b2:	e014      	b.n	80261de <_vfiprintf_r+0x13a>
 80261b4:	eba0 0308 	sub.w	r3, r0, r8
 80261b8:	fa09 f303 	lsl.w	r3, r9, r3
 80261bc:	4313      	orrs	r3, r2
 80261be:	9304      	str	r3, [sp, #16]
 80261c0:	46a2      	mov	sl, r4
 80261c2:	e7d2      	b.n	802616a <_vfiprintf_r+0xc6>
 80261c4:	9b03      	ldr	r3, [sp, #12]
 80261c6:	1d19      	adds	r1, r3, #4
 80261c8:	681b      	ldr	r3, [r3, #0]
 80261ca:	9103      	str	r1, [sp, #12]
 80261cc:	2b00      	cmp	r3, #0
 80261ce:	bfbb      	ittet	lt
 80261d0:	425b      	neglt	r3, r3
 80261d2:	f042 0202 	orrlt.w	r2, r2, #2
 80261d6:	9307      	strge	r3, [sp, #28]
 80261d8:	9307      	strlt	r3, [sp, #28]
 80261da:	bfb8      	it	lt
 80261dc:	9204      	strlt	r2, [sp, #16]
 80261de:	7823      	ldrb	r3, [r4, #0]
 80261e0:	2b2e      	cmp	r3, #46	; 0x2e
 80261e2:	d10c      	bne.n	80261fe <_vfiprintf_r+0x15a>
 80261e4:	7863      	ldrb	r3, [r4, #1]
 80261e6:	2b2a      	cmp	r3, #42	; 0x2a
 80261e8:	d134      	bne.n	8026254 <_vfiprintf_r+0x1b0>
 80261ea:	9b03      	ldr	r3, [sp, #12]
 80261ec:	1d1a      	adds	r2, r3, #4
 80261ee:	681b      	ldr	r3, [r3, #0]
 80261f0:	9203      	str	r2, [sp, #12]
 80261f2:	2b00      	cmp	r3, #0
 80261f4:	bfb8      	it	lt
 80261f6:	f04f 33ff 	movlt.w	r3, #4294967295
 80261fa:	3402      	adds	r4, #2
 80261fc:	9305      	str	r3, [sp, #20]
 80261fe:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80262d4 <_vfiprintf_r+0x230>
 8026202:	7821      	ldrb	r1, [r4, #0]
 8026204:	2203      	movs	r2, #3
 8026206:	4650      	mov	r0, sl
 8026208:	f7da f882 	bl	8000310 <memchr>
 802620c:	b138      	cbz	r0, 802621e <_vfiprintf_r+0x17a>
 802620e:	9b04      	ldr	r3, [sp, #16]
 8026210:	eba0 000a 	sub.w	r0, r0, sl
 8026214:	2240      	movs	r2, #64	; 0x40
 8026216:	4082      	lsls	r2, r0
 8026218:	4313      	orrs	r3, r2
 802621a:	3401      	adds	r4, #1
 802621c:	9304      	str	r3, [sp, #16]
 802621e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026222:	4829      	ldr	r0, [pc, #164]	; (80262c8 <_vfiprintf_r+0x224>)
 8026224:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026228:	2206      	movs	r2, #6
 802622a:	f7da f871 	bl	8000310 <memchr>
 802622e:	2800      	cmp	r0, #0
 8026230:	d03f      	beq.n	80262b2 <_vfiprintf_r+0x20e>
 8026232:	4b26      	ldr	r3, [pc, #152]	; (80262cc <_vfiprintf_r+0x228>)
 8026234:	bb1b      	cbnz	r3, 802627e <_vfiprintf_r+0x1da>
 8026236:	9b03      	ldr	r3, [sp, #12]
 8026238:	3307      	adds	r3, #7
 802623a:	f023 0307 	bic.w	r3, r3, #7
 802623e:	3308      	adds	r3, #8
 8026240:	9303      	str	r3, [sp, #12]
 8026242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026244:	443b      	add	r3, r7
 8026246:	9309      	str	r3, [sp, #36]	; 0x24
 8026248:	e768      	b.n	802611c <_vfiprintf_r+0x78>
 802624a:	fb0c 3202 	mla	r2, ip, r2, r3
 802624e:	460c      	mov	r4, r1
 8026250:	2001      	movs	r0, #1
 8026252:	e7a6      	b.n	80261a2 <_vfiprintf_r+0xfe>
 8026254:	2300      	movs	r3, #0
 8026256:	3401      	adds	r4, #1
 8026258:	9305      	str	r3, [sp, #20]
 802625a:	4619      	mov	r1, r3
 802625c:	f04f 0c0a 	mov.w	ip, #10
 8026260:	4620      	mov	r0, r4
 8026262:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026266:	3a30      	subs	r2, #48	; 0x30
 8026268:	2a09      	cmp	r2, #9
 802626a:	d903      	bls.n	8026274 <_vfiprintf_r+0x1d0>
 802626c:	2b00      	cmp	r3, #0
 802626e:	d0c6      	beq.n	80261fe <_vfiprintf_r+0x15a>
 8026270:	9105      	str	r1, [sp, #20]
 8026272:	e7c4      	b.n	80261fe <_vfiprintf_r+0x15a>
 8026274:	fb0c 2101 	mla	r1, ip, r1, r2
 8026278:	4604      	mov	r4, r0
 802627a:	2301      	movs	r3, #1
 802627c:	e7f0      	b.n	8026260 <_vfiprintf_r+0x1bc>
 802627e:	ab03      	add	r3, sp, #12
 8026280:	9300      	str	r3, [sp, #0]
 8026282:	462a      	mov	r2, r5
 8026284:	4b12      	ldr	r3, [pc, #72]	; (80262d0 <_vfiprintf_r+0x22c>)
 8026286:	a904      	add	r1, sp, #16
 8026288:	4630      	mov	r0, r6
 802628a:	f3af 8000 	nop.w
 802628e:	4607      	mov	r7, r0
 8026290:	1c78      	adds	r0, r7, #1
 8026292:	d1d6      	bne.n	8026242 <_vfiprintf_r+0x19e>
 8026294:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026296:	07d9      	lsls	r1, r3, #31
 8026298:	d405      	bmi.n	80262a6 <_vfiprintf_r+0x202>
 802629a:	89ab      	ldrh	r3, [r5, #12]
 802629c:	059a      	lsls	r2, r3, #22
 802629e:	d402      	bmi.n	80262a6 <_vfiprintf_r+0x202>
 80262a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80262a2:	f7ff fe1b 	bl	8025edc <__retarget_lock_release_recursive>
 80262a6:	89ab      	ldrh	r3, [r5, #12]
 80262a8:	065b      	lsls	r3, r3, #25
 80262aa:	f53f af1d 	bmi.w	80260e8 <_vfiprintf_r+0x44>
 80262ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80262b0:	e71c      	b.n	80260ec <_vfiprintf_r+0x48>
 80262b2:	ab03      	add	r3, sp, #12
 80262b4:	9300      	str	r3, [sp, #0]
 80262b6:	462a      	mov	r2, r5
 80262b8:	4b05      	ldr	r3, [pc, #20]	; (80262d0 <_vfiprintf_r+0x22c>)
 80262ba:	a904      	add	r1, sp, #16
 80262bc:	4630      	mov	r0, r6
 80262be:	f000 f879 	bl	80263b4 <_printf_i>
 80262c2:	e7e4      	b.n	802628e <_vfiprintf_r+0x1ea>
 80262c4:	08028fa0 	.word	0x08028fa0
 80262c8:	08028faa 	.word	0x08028faa
 80262cc:	00000000 	.word	0x00000000
 80262d0:	0802607f 	.word	0x0802607f
 80262d4:	08028fa6 	.word	0x08028fa6

080262d8 <_printf_common>:
 80262d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80262dc:	4616      	mov	r6, r2
 80262de:	4699      	mov	r9, r3
 80262e0:	688a      	ldr	r2, [r1, #8]
 80262e2:	690b      	ldr	r3, [r1, #16]
 80262e4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80262e8:	4293      	cmp	r3, r2
 80262ea:	bfb8      	it	lt
 80262ec:	4613      	movlt	r3, r2
 80262ee:	6033      	str	r3, [r6, #0]
 80262f0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80262f4:	4607      	mov	r7, r0
 80262f6:	460c      	mov	r4, r1
 80262f8:	b10a      	cbz	r2, 80262fe <_printf_common+0x26>
 80262fa:	3301      	adds	r3, #1
 80262fc:	6033      	str	r3, [r6, #0]
 80262fe:	6823      	ldr	r3, [r4, #0]
 8026300:	0699      	lsls	r1, r3, #26
 8026302:	bf42      	ittt	mi
 8026304:	6833      	ldrmi	r3, [r6, #0]
 8026306:	3302      	addmi	r3, #2
 8026308:	6033      	strmi	r3, [r6, #0]
 802630a:	6825      	ldr	r5, [r4, #0]
 802630c:	f015 0506 	ands.w	r5, r5, #6
 8026310:	d106      	bne.n	8026320 <_printf_common+0x48>
 8026312:	f104 0a19 	add.w	sl, r4, #25
 8026316:	68e3      	ldr	r3, [r4, #12]
 8026318:	6832      	ldr	r2, [r6, #0]
 802631a:	1a9b      	subs	r3, r3, r2
 802631c:	42ab      	cmp	r3, r5
 802631e:	dc26      	bgt.n	802636e <_printf_common+0x96>
 8026320:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026324:	1e13      	subs	r3, r2, #0
 8026326:	6822      	ldr	r2, [r4, #0]
 8026328:	bf18      	it	ne
 802632a:	2301      	movne	r3, #1
 802632c:	0692      	lsls	r2, r2, #26
 802632e:	d42b      	bmi.n	8026388 <_printf_common+0xb0>
 8026330:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026334:	4649      	mov	r1, r9
 8026336:	4638      	mov	r0, r7
 8026338:	47c0      	blx	r8
 802633a:	3001      	adds	r0, #1
 802633c:	d01e      	beq.n	802637c <_printf_common+0xa4>
 802633e:	6823      	ldr	r3, [r4, #0]
 8026340:	6922      	ldr	r2, [r4, #16]
 8026342:	f003 0306 	and.w	r3, r3, #6
 8026346:	2b04      	cmp	r3, #4
 8026348:	bf02      	ittt	eq
 802634a:	68e5      	ldreq	r5, [r4, #12]
 802634c:	6833      	ldreq	r3, [r6, #0]
 802634e:	1aed      	subeq	r5, r5, r3
 8026350:	68a3      	ldr	r3, [r4, #8]
 8026352:	bf0c      	ite	eq
 8026354:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026358:	2500      	movne	r5, #0
 802635a:	4293      	cmp	r3, r2
 802635c:	bfc4      	itt	gt
 802635e:	1a9b      	subgt	r3, r3, r2
 8026360:	18ed      	addgt	r5, r5, r3
 8026362:	2600      	movs	r6, #0
 8026364:	341a      	adds	r4, #26
 8026366:	42b5      	cmp	r5, r6
 8026368:	d11a      	bne.n	80263a0 <_printf_common+0xc8>
 802636a:	2000      	movs	r0, #0
 802636c:	e008      	b.n	8026380 <_printf_common+0xa8>
 802636e:	2301      	movs	r3, #1
 8026370:	4652      	mov	r2, sl
 8026372:	4649      	mov	r1, r9
 8026374:	4638      	mov	r0, r7
 8026376:	47c0      	blx	r8
 8026378:	3001      	adds	r0, #1
 802637a:	d103      	bne.n	8026384 <_printf_common+0xac>
 802637c:	f04f 30ff 	mov.w	r0, #4294967295
 8026380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026384:	3501      	adds	r5, #1
 8026386:	e7c6      	b.n	8026316 <_printf_common+0x3e>
 8026388:	18e1      	adds	r1, r4, r3
 802638a:	1c5a      	adds	r2, r3, #1
 802638c:	2030      	movs	r0, #48	; 0x30
 802638e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026392:	4422      	add	r2, r4
 8026394:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8026398:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802639c:	3302      	adds	r3, #2
 802639e:	e7c7      	b.n	8026330 <_printf_common+0x58>
 80263a0:	2301      	movs	r3, #1
 80263a2:	4622      	mov	r2, r4
 80263a4:	4649      	mov	r1, r9
 80263a6:	4638      	mov	r0, r7
 80263a8:	47c0      	blx	r8
 80263aa:	3001      	adds	r0, #1
 80263ac:	d0e6      	beq.n	802637c <_printf_common+0xa4>
 80263ae:	3601      	adds	r6, #1
 80263b0:	e7d9      	b.n	8026366 <_printf_common+0x8e>
	...

080263b4 <_printf_i>:
 80263b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80263b8:	7e0f      	ldrb	r7, [r1, #24]
 80263ba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80263bc:	2f78      	cmp	r7, #120	; 0x78
 80263be:	4691      	mov	r9, r2
 80263c0:	4680      	mov	r8, r0
 80263c2:	460c      	mov	r4, r1
 80263c4:	469a      	mov	sl, r3
 80263c6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80263ca:	d807      	bhi.n	80263dc <_printf_i+0x28>
 80263cc:	2f62      	cmp	r7, #98	; 0x62
 80263ce:	d80a      	bhi.n	80263e6 <_printf_i+0x32>
 80263d0:	2f00      	cmp	r7, #0
 80263d2:	f000 80d4 	beq.w	802657e <_printf_i+0x1ca>
 80263d6:	2f58      	cmp	r7, #88	; 0x58
 80263d8:	f000 80c0 	beq.w	802655c <_printf_i+0x1a8>
 80263dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80263e0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80263e4:	e03a      	b.n	802645c <_printf_i+0xa8>
 80263e6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80263ea:	2b15      	cmp	r3, #21
 80263ec:	d8f6      	bhi.n	80263dc <_printf_i+0x28>
 80263ee:	a101      	add	r1, pc, #4	; (adr r1, 80263f4 <_printf_i+0x40>)
 80263f0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80263f4:	0802644d 	.word	0x0802644d
 80263f8:	08026461 	.word	0x08026461
 80263fc:	080263dd 	.word	0x080263dd
 8026400:	080263dd 	.word	0x080263dd
 8026404:	080263dd 	.word	0x080263dd
 8026408:	080263dd 	.word	0x080263dd
 802640c:	08026461 	.word	0x08026461
 8026410:	080263dd 	.word	0x080263dd
 8026414:	080263dd 	.word	0x080263dd
 8026418:	080263dd 	.word	0x080263dd
 802641c:	080263dd 	.word	0x080263dd
 8026420:	08026565 	.word	0x08026565
 8026424:	0802648d 	.word	0x0802648d
 8026428:	0802651f 	.word	0x0802651f
 802642c:	080263dd 	.word	0x080263dd
 8026430:	080263dd 	.word	0x080263dd
 8026434:	08026587 	.word	0x08026587
 8026438:	080263dd 	.word	0x080263dd
 802643c:	0802648d 	.word	0x0802648d
 8026440:	080263dd 	.word	0x080263dd
 8026444:	080263dd 	.word	0x080263dd
 8026448:	08026527 	.word	0x08026527
 802644c:	682b      	ldr	r3, [r5, #0]
 802644e:	1d1a      	adds	r2, r3, #4
 8026450:	681b      	ldr	r3, [r3, #0]
 8026452:	602a      	str	r2, [r5, #0]
 8026454:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026458:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802645c:	2301      	movs	r3, #1
 802645e:	e09f      	b.n	80265a0 <_printf_i+0x1ec>
 8026460:	6820      	ldr	r0, [r4, #0]
 8026462:	682b      	ldr	r3, [r5, #0]
 8026464:	0607      	lsls	r7, r0, #24
 8026466:	f103 0104 	add.w	r1, r3, #4
 802646a:	6029      	str	r1, [r5, #0]
 802646c:	d501      	bpl.n	8026472 <_printf_i+0xbe>
 802646e:	681e      	ldr	r6, [r3, #0]
 8026470:	e003      	b.n	802647a <_printf_i+0xc6>
 8026472:	0646      	lsls	r6, r0, #25
 8026474:	d5fb      	bpl.n	802646e <_printf_i+0xba>
 8026476:	f9b3 6000 	ldrsh.w	r6, [r3]
 802647a:	2e00      	cmp	r6, #0
 802647c:	da03      	bge.n	8026486 <_printf_i+0xd2>
 802647e:	232d      	movs	r3, #45	; 0x2d
 8026480:	4276      	negs	r6, r6
 8026482:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026486:	485a      	ldr	r0, [pc, #360]	; (80265f0 <_printf_i+0x23c>)
 8026488:	230a      	movs	r3, #10
 802648a:	e012      	b.n	80264b2 <_printf_i+0xfe>
 802648c:	682b      	ldr	r3, [r5, #0]
 802648e:	6820      	ldr	r0, [r4, #0]
 8026490:	1d19      	adds	r1, r3, #4
 8026492:	6029      	str	r1, [r5, #0]
 8026494:	0605      	lsls	r5, r0, #24
 8026496:	d501      	bpl.n	802649c <_printf_i+0xe8>
 8026498:	681e      	ldr	r6, [r3, #0]
 802649a:	e002      	b.n	80264a2 <_printf_i+0xee>
 802649c:	0641      	lsls	r1, r0, #25
 802649e:	d5fb      	bpl.n	8026498 <_printf_i+0xe4>
 80264a0:	881e      	ldrh	r6, [r3, #0]
 80264a2:	4853      	ldr	r0, [pc, #332]	; (80265f0 <_printf_i+0x23c>)
 80264a4:	2f6f      	cmp	r7, #111	; 0x6f
 80264a6:	bf0c      	ite	eq
 80264a8:	2308      	moveq	r3, #8
 80264aa:	230a      	movne	r3, #10
 80264ac:	2100      	movs	r1, #0
 80264ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80264b2:	6865      	ldr	r5, [r4, #4]
 80264b4:	60a5      	str	r5, [r4, #8]
 80264b6:	2d00      	cmp	r5, #0
 80264b8:	bfa2      	ittt	ge
 80264ba:	6821      	ldrge	r1, [r4, #0]
 80264bc:	f021 0104 	bicge.w	r1, r1, #4
 80264c0:	6021      	strge	r1, [r4, #0]
 80264c2:	b90e      	cbnz	r6, 80264c8 <_printf_i+0x114>
 80264c4:	2d00      	cmp	r5, #0
 80264c6:	d04b      	beq.n	8026560 <_printf_i+0x1ac>
 80264c8:	4615      	mov	r5, r2
 80264ca:	fbb6 f1f3 	udiv	r1, r6, r3
 80264ce:	fb03 6711 	mls	r7, r3, r1, r6
 80264d2:	5dc7      	ldrb	r7, [r0, r7]
 80264d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80264d8:	4637      	mov	r7, r6
 80264da:	42bb      	cmp	r3, r7
 80264dc:	460e      	mov	r6, r1
 80264de:	d9f4      	bls.n	80264ca <_printf_i+0x116>
 80264e0:	2b08      	cmp	r3, #8
 80264e2:	d10b      	bne.n	80264fc <_printf_i+0x148>
 80264e4:	6823      	ldr	r3, [r4, #0]
 80264e6:	07de      	lsls	r6, r3, #31
 80264e8:	d508      	bpl.n	80264fc <_printf_i+0x148>
 80264ea:	6923      	ldr	r3, [r4, #16]
 80264ec:	6861      	ldr	r1, [r4, #4]
 80264ee:	4299      	cmp	r1, r3
 80264f0:	bfde      	ittt	le
 80264f2:	2330      	movle	r3, #48	; 0x30
 80264f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80264f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 80264fc:	1b52      	subs	r2, r2, r5
 80264fe:	6122      	str	r2, [r4, #16]
 8026500:	f8cd a000 	str.w	sl, [sp]
 8026504:	464b      	mov	r3, r9
 8026506:	aa03      	add	r2, sp, #12
 8026508:	4621      	mov	r1, r4
 802650a:	4640      	mov	r0, r8
 802650c:	f7ff fee4 	bl	80262d8 <_printf_common>
 8026510:	3001      	adds	r0, #1
 8026512:	d14a      	bne.n	80265aa <_printf_i+0x1f6>
 8026514:	f04f 30ff 	mov.w	r0, #4294967295
 8026518:	b004      	add	sp, #16
 802651a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802651e:	6823      	ldr	r3, [r4, #0]
 8026520:	f043 0320 	orr.w	r3, r3, #32
 8026524:	6023      	str	r3, [r4, #0]
 8026526:	4833      	ldr	r0, [pc, #204]	; (80265f4 <_printf_i+0x240>)
 8026528:	2778      	movs	r7, #120	; 0x78
 802652a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802652e:	6823      	ldr	r3, [r4, #0]
 8026530:	6829      	ldr	r1, [r5, #0]
 8026532:	061f      	lsls	r7, r3, #24
 8026534:	f851 6b04 	ldr.w	r6, [r1], #4
 8026538:	d402      	bmi.n	8026540 <_printf_i+0x18c>
 802653a:	065f      	lsls	r7, r3, #25
 802653c:	bf48      	it	mi
 802653e:	b2b6      	uxthmi	r6, r6
 8026540:	07df      	lsls	r7, r3, #31
 8026542:	bf48      	it	mi
 8026544:	f043 0320 	orrmi.w	r3, r3, #32
 8026548:	6029      	str	r1, [r5, #0]
 802654a:	bf48      	it	mi
 802654c:	6023      	strmi	r3, [r4, #0]
 802654e:	b91e      	cbnz	r6, 8026558 <_printf_i+0x1a4>
 8026550:	6823      	ldr	r3, [r4, #0]
 8026552:	f023 0320 	bic.w	r3, r3, #32
 8026556:	6023      	str	r3, [r4, #0]
 8026558:	2310      	movs	r3, #16
 802655a:	e7a7      	b.n	80264ac <_printf_i+0xf8>
 802655c:	4824      	ldr	r0, [pc, #144]	; (80265f0 <_printf_i+0x23c>)
 802655e:	e7e4      	b.n	802652a <_printf_i+0x176>
 8026560:	4615      	mov	r5, r2
 8026562:	e7bd      	b.n	80264e0 <_printf_i+0x12c>
 8026564:	682b      	ldr	r3, [r5, #0]
 8026566:	6826      	ldr	r6, [r4, #0]
 8026568:	6961      	ldr	r1, [r4, #20]
 802656a:	1d18      	adds	r0, r3, #4
 802656c:	6028      	str	r0, [r5, #0]
 802656e:	0635      	lsls	r5, r6, #24
 8026570:	681b      	ldr	r3, [r3, #0]
 8026572:	d501      	bpl.n	8026578 <_printf_i+0x1c4>
 8026574:	6019      	str	r1, [r3, #0]
 8026576:	e002      	b.n	802657e <_printf_i+0x1ca>
 8026578:	0670      	lsls	r0, r6, #25
 802657a:	d5fb      	bpl.n	8026574 <_printf_i+0x1c0>
 802657c:	8019      	strh	r1, [r3, #0]
 802657e:	2300      	movs	r3, #0
 8026580:	6123      	str	r3, [r4, #16]
 8026582:	4615      	mov	r5, r2
 8026584:	e7bc      	b.n	8026500 <_printf_i+0x14c>
 8026586:	682b      	ldr	r3, [r5, #0]
 8026588:	1d1a      	adds	r2, r3, #4
 802658a:	602a      	str	r2, [r5, #0]
 802658c:	681d      	ldr	r5, [r3, #0]
 802658e:	6862      	ldr	r2, [r4, #4]
 8026590:	2100      	movs	r1, #0
 8026592:	4628      	mov	r0, r5
 8026594:	f7d9 febc 	bl	8000310 <memchr>
 8026598:	b108      	cbz	r0, 802659e <_printf_i+0x1ea>
 802659a:	1b40      	subs	r0, r0, r5
 802659c:	6060      	str	r0, [r4, #4]
 802659e:	6863      	ldr	r3, [r4, #4]
 80265a0:	6123      	str	r3, [r4, #16]
 80265a2:	2300      	movs	r3, #0
 80265a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80265a8:	e7aa      	b.n	8026500 <_printf_i+0x14c>
 80265aa:	6923      	ldr	r3, [r4, #16]
 80265ac:	462a      	mov	r2, r5
 80265ae:	4649      	mov	r1, r9
 80265b0:	4640      	mov	r0, r8
 80265b2:	47d0      	blx	sl
 80265b4:	3001      	adds	r0, #1
 80265b6:	d0ad      	beq.n	8026514 <_printf_i+0x160>
 80265b8:	6823      	ldr	r3, [r4, #0]
 80265ba:	079b      	lsls	r3, r3, #30
 80265bc:	d413      	bmi.n	80265e6 <_printf_i+0x232>
 80265be:	68e0      	ldr	r0, [r4, #12]
 80265c0:	9b03      	ldr	r3, [sp, #12]
 80265c2:	4298      	cmp	r0, r3
 80265c4:	bfb8      	it	lt
 80265c6:	4618      	movlt	r0, r3
 80265c8:	e7a6      	b.n	8026518 <_printf_i+0x164>
 80265ca:	2301      	movs	r3, #1
 80265cc:	4632      	mov	r2, r6
 80265ce:	4649      	mov	r1, r9
 80265d0:	4640      	mov	r0, r8
 80265d2:	47d0      	blx	sl
 80265d4:	3001      	adds	r0, #1
 80265d6:	d09d      	beq.n	8026514 <_printf_i+0x160>
 80265d8:	3501      	adds	r5, #1
 80265da:	68e3      	ldr	r3, [r4, #12]
 80265dc:	9903      	ldr	r1, [sp, #12]
 80265de:	1a5b      	subs	r3, r3, r1
 80265e0:	42ab      	cmp	r3, r5
 80265e2:	dcf2      	bgt.n	80265ca <_printf_i+0x216>
 80265e4:	e7eb      	b.n	80265be <_printf_i+0x20a>
 80265e6:	2500      	movs	r5, #0
 80265e8:	f104 0619 	add.w	r6, r4, #25
 80265ec:	e7f5      	b.n	80265da <_printf_i+0x226>
 80265ee:	bf00      	nop
 80265f0:	08028fb1 	.word	0x08028fb1
 80265f4:	08028fc2 	.word	0x08028fc2

080265f8 <__sflush_r>:
 80265f8:	898a      	ldrh	r2, [r1, #12]
 80265fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80265fe:	4605      	mov	r5, r0
 8026600:	0710      	lsls	r0, r2, #28
 8026602:	460c      	mov	r4, r1
 8026604:	d458      	bmi.n	80266b8 <__sflush_r+0xc0>
 8026606:	684b      	ldr	r3, [r1, #4]
 8026608:	2b00      	cmp	r3, #0
 802660a:	dc05      	bgt.n	8026618 <__sflush_r+0x20>
 802660c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802660e:	2b00      	cmp	r3, #0
 8026610:	dc02      	bgt.n	8026618 <__sflush_r+0x20>
 8026612:	2000      	movs	r0, #0
 8026614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026618:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802661a:	2e00      	cmp	r6, #0
 802661c:	d0f9      	beq.n	8026612 <__sflush_r+0x1a>
 802661e:	2300      	movs	r3, #0
 8026620:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026624:	682f      	ldr	r7, [r5, #0]
 8026626:	6a21      	ldr	r1, [r4, #32]
 8026628:	602b      	str	r3, [r5, #0]
 802662a:	d032      	beq.n	8026692 <__sflush_r+0x9a>
 802662c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802662e:	89a3      	ldrh	r3, [r4, #12]
 8026630:	075a      	lsls	r2, r3, #29
 8026632:	d505      	bpl.n	8026640 <__sflush_r+0x48>
 8026634:	6863      	ldr	r3, [r4, #4]
 8026636:	1ac0      	subs	r0, r0, r3
 8026638:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802663a:	b10b      	cbz	r3, 8026640 <__sflush_r+0x48>
 802663c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802663e:	1ac0      	subs	r0, r0, r3
 8026640:	2300      	movs	r3, #0
 8026642:	4602      	mov	r2, r0
 8026644:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026646:	6a21      	ldr	r1, [r4, #32]
 8026648:	4628      	mov	r0, r5
 802664a:	47b0      	blx	r6
 802664c:	1c43      	adds	r3, r0, #1
 802664e:	89a3      	ldrh	r3, [r4, #12]
 8026650:	d106      	bne.n	8026660 <__sflush_r+0x68>
 8026652:	6829      	ldr	r1, [r5, #0]
 8026654:	291d      	cmp	r1, #29
 8026656:	d82b      	bhi.n	80266b0 <__sflush_r+0xb8>
 8026658:	4a29      	ldr	r2, [pc, #164]	; (8026700 <__sflush_r+0x108>)
 802665a:	410a      	asrs	r2, r1
 802665c:	07d6      	lsls	r6, r2, #31
 802665e:	d427      	bmi.n	80266b0 <__sflush_r+0xb8>
 8026660:	2200      	movs	r2, #0
 8026662:	6062      	str	r2, [r4, #4]
 8026664:	04d9      	lsls	r1, r3, #19
 8026666:	6922      	ldr	r2, [r4, #16]
 8026668:	6022      	str	r2, [r4, #0]
 802666a:	d504      	bpl.n	8026676 <__sflush_r+0x7e>
 802666c:	1c42      	adds	r2, r0, #1
 802666e:	d101      	bne.n	8026674 <__sflush_r+0x7c>
 8026670:	682b      	ldr	r3, [r5, #0]
 8026672:	b903      	cbnz	r3, 8026676 <__sflush_r+0x7e>
 8026674:	6560      	str	r0, [r4, #84]	; 0x54
 8026676:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026678:	602f      	str	r7, [r5, #0]
 802667a:	2900      	cmp	r1, #0
 802667c:	d0c9      	beq.n	8026612 <__sflush_r+0x1a>
 802667e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026682:	4299      	cmp	r1, r3
 8026684:	d002      	beq.n	802668c <__sflush_r+0x94>
 8026686:	4628      	mov	r0, r5
 8026688:	f7ff fc96 	bl	8025fb8 <_free_r>
 802668c:	2000      	movs	r0, #0
 802668e:	6360      	str	r0, [r4, #52]	; 0x34
 8026690:	e7c0      	b.n	8026614 <__sflush_r+0x1c>
 8026692:	2301      	movs	r3, #1
 8026694:	4628      	mov	r0, r5
 8026696:	47b0      	blx	r6
 8026698:	1c41      	adds	r1, r0, #1
 802669a:	d1c8      	bne.n	802662e <__sflush_r+0x36>
 802669c:	682b      	ldr	r3, [r5, #0]
 802669e:	2b00      	cmp	r3, #0
 80266a0:	d0c5      	beq.n	802662e <__sflush_r+0x36>
 80266a2:	2b1d      	cmp	r3, #29
 80266a4:	d001      	beq.n	80266aa <__sflush_r+0xb2>
 80266a6:	2b16      	cmp	r3, #22
 80266a8:	d101      	bne.n	80266ae <__sflush_r+0xb6>
 80266aa:	602f      	str	r7, [r5, #0]
 80266ac:	e7b1      	b.n	8026612 <__sflush_r+0x1a>
 80266ae:	89a3      	ldrh	r3, [r4, #12]
 80266b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80266b4:	81a3      	strh	r3, [r4, #12]
 80266b6:	e7ad      	b.n	8026614 <__sflush_r+0x1c>
 80266b8:	690f      	ldr	r7, [r1, #16]
 80266ba:	2f00      	cmp	r7, #0
 80266bc:	d0a9      	beq.n	8026612 <__sflush_r+0x1a>
 80266be:	0793      	lsls	r3, r2, #30
 80266c0:	680e      	ldr	r6, [r1, #0]
 80266c2:	bf08      	it	eq
 80266c4:	694b      	ldreq	r3, [r1, #20]
 80266c6:	600f      	str	r7, [r1, #0]
 80266c8:	bf18      	it	ne
 80266ca:	2300      	movne	r3, #0
 80266cc:	eba6 0807 	sub.w	r8, r6, r7
 80266d0:	608b      	str	r3, [r1, #8]
 80266d2:	f1b8 0f00 	cmp.w	r8, #0
 80266d6:	dd9c      	ble.n	8026612 <__sflush_r+0x1a>
 80266d8:	6a21      	ldr	r1, [r4, #32]
 80266da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80266dc:	4643      	mov	r3, r8
 80266de:	463a      	mov	r2, r7
 80266e0:	4628      	mov	r0, r5
 80266e2:	47b0      	blx	r6
 80266e4:	2800      	cmp	r0, #0
 80266e6:	dc06      	bgt.n	80266f6 <__sflush_r+0xfe>
 80266e8:	89a3      	ldrh	r3, [r4, #12]
 80266ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80266ee:	81a3      	strh	r3, [r4, #12]
 80266f0:	f04f 30ff 	mov.w	r0, #4294967295
 80266f4:	e78e      	b.n	8026614 <__sflush_r+0x1c>
 80266f6:	4407      	add	r7, r0
 80266f8:	eba8 0800 	sub.w	r8, r8, r0
 80266fc:	e7e9      	b.n	80266d2 <__sflush_r+0xda>
 80266fe:	bf00      	nop
 8026700:	dfbffffe 	.word	0xdfbffffe

08026704 <_fflush_r>:
 8026704:	b538      	push	{r3, r4, r5, lr}
 8026706:	690b      	ldr	r3, [r1, #16]
 8026708:	4605      	mov	r5, r0
 802670a:	460c      	mov	r4, r1
 802670c:	b913      	cbnz	r3, 8026714 <_fflush_r+0x10>
 802670e:	2500      	movs	r5, #0
 8026710:	4628      	mov	r0, r5
 8026712:	bd38      	pop	{r3, r4, r5, pc}
 8026714:	b118      	cbz	r0, 802671e <_fflush_r+0x1a>
 8026716:	6a03      	ldr	r3, [r0, #32]
 8026718:	b90b      	cbnz	r3, 802671e <_fflush_r+0x1a>
 802671a:	f7ff fa85 	bl	8025c28 <__sinit>
 802671e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026722:	2b00      	cmp	r3, #0
 8026724:	d0f3      	beq.n	802670e <_fflush_r+0xa>
 8026726:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026728:	07d0      	lsls	r0, r2, #31
 802672a:	d404      	bmi.n	8026736 <_fflush_r+0x32>
 802672c:	0599      	lsls	r1, r3, #22
 802672e:	d402      	bmi.n	8026736 <_fflush_r+0x32>
 8026730:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026732:	f7ff fbd2 	bl	8025eda <__retarget_lock_acquire_recursive>
 8026736:	4628      	mov	r0, r5
 8026738:	4621      	mov	r1, r4
 802673a:	f7ff ff5d 	bl	80265f8 <__sflush_r>
 802673e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026740:	07da      	lsls	r2, r3, #31
 8026742:	4605      	mov	r5, r0
 8026744:	d4e4      	bmi.n	8026710 <_fflush_r+0xc>
 8026746:	89a3      	ldrh	r3, [r4, #12]
 8026748:	059b      	lsls	r3, r3, #22
 802674a:	d4e1      	bmi.n	8026710 <_fflush_r+0xc>
 802674c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802674e:	f7ff fbc5 	bl	8025edc <__retarget_lock_release_recursive>
 8026752:	e7dd      	b.n	8026710 <_fflush_r+0xc>

08026754 <__swbuf_r>:
 8026754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026756:	460e      	mov	r6, r1
 8026758:	4614      	mov	r4, r2
 802675a:	4605      	mov	r5, r0
 802675c:	b118      	cbz	r0, 8026766 <__swbuf_r+0x12>
 802675e:	6a03      	ldr	r3, [r0, #32]
 8026760:	b90b      	cbnz	r3, 8026766 <__swbuf_r+0x12>
 8026762:	f7ff fa61 	bl	8025c28 <__sinit>
 8026766:	69a3      	ldr	r3, [r4, #24]
 8026768:	60a3      	str	r3, [r4, #8]
 802676a:	89a3      	ldrh	r3, [r4, #12]
 802676c:	071a      	lsls	r2, r3, #28
 802676e:	d525      	bpl.n	80267bc <__swbuf_r+0x68>
 8026770:	6923      	ldr	r3, [r4, #16]
 8026772:	b31b      	cbz	r3, 80267bc <__swbuf_r+0x68>
 8026774:	6823      	ldr	r3, [r4, #0]
 8026776:	6922      	ldr	r2, [r4, #16]
 8026778:	1a98      	subs	r0, r3, r2
 802677a:	6963      	ldr	r3, [r4, #20]
 802677c:	b2f6      	uxtb	r6, r6
 802677e:	4283      	cmp	r3, r0
 8026780:	4637      	mov	r7, r6
 8026782:	dc04      	bgt.n	802678e <__swbuf_r+0x3a>
 8026784:	4621      	mov	r1, r4
 8026786:	4628      	mov	r0, r5
 8026788:	f7ff ffbc 	bl	8026704 <_fflush_r>
 802678c:	b9e0      	cbnz	r0, 80267c8 <__swbuf_r+0x74>
 802678e:	68a3      	ldr	r3, [r4, #8]
 8026790:	3b01      	subs	r3, #1
 8026792:	60a3      	str	r3, [r4, #8]
 8026794:	6823      	ldr	r3, [r4, #0]
 8026796:	1c5a      	adds	r2, r3, #1
 8026798:	6022      	str	r2, [r4, #0]
 802679a:	701e      	strb	r6, [r3, #0]
 802679c:	6962      	ldr	r2, [r4, #20]
 802679e:	1c43      	adds	r3, r0, #1
 80267a0:	429a      	cmp	r2, r3
 80267a2:	d004      	beq.n	80267ae <__swbuf_r+0x5a>
 80267a4:	89a3      	ldrh	r3, [r4, #12]
 80267a6:	07db      	lsls	r3, r3, #31
 80267a8:	d506      	bpl.n	80267b8 <__swbuf_r+0x64>
 80267aa:	2e0a      	cmp	r6, #10
 80267ac:	d104      	bne.n	80267b8 <__swbuf_r+0x64>
 80267ae:	4621      	mov	r1, r4
 80267b0:	4628      	mov	r0, r5
 80267b2:	f7ff ffa7 	bl	8026704 <_fflush_r>
 80267b6:	b938      	cbnz	r0, 80267c8 <__swbuf_r+0x74>
 80267b8:	4638      	mov	r0, r7
 80267ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80267bc:	4621      	mov	r1, r4
 80267be:	4628      	mov	r0, r5
 80267c0:	f000 f806 	bl	80267d0 <__swsetup_r>
 80267c4:	2800      	cmp	r0, #0
 80267c6:	d0d5      	beq.n	8026774 <__swbuf_r+0x20>
 80267c8:	f04f 37ff 	mov.w	r7, #4294967295
 80267cc:	e7f4      	b.n	80267b8 <__swbuf_r+0x64>
	...

080267d0 <__swsetup_r>:
 80267d0:	b538      	push	{r3, r4, r5, lr}
 80267d2:	4b2a      	ldr	r3, [pc, #168]	; (802687c <__swsetup_r+0xac>)
 80267d4:	4605      	mov	r5, r0
 80267d6:	6818      	ldr	r0, [r3, #0]
 80267d8:	460c      	mov	r4, r1
 80267da:	b118      	cbz	r0, 80267e4 <__swsetup_r+0x14>
 80267dc:	6a03      	ldr	r3, [r0, #32]
 80267de:	b90b      	cbnz	r3, 80267e4 <__swsetup_r+0x14>
 80267e0:	f7ff fa22 	bl	8025c28 <__sinit>
 80267e4:	89a3      	ldrh	r3, [r4, #12]
 80267e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80267ea:	0718      	lsls	r0, r3, #28
 80267ec:	d422      	bmi.n	8026834 <__swsetup_r+0x64>
 80267ee:	06d9      	lsls	r1, r3, #27
 80267f0:	d407      	bmi.n	8026802 <__swsetup_r+0x32>
 80267f2:	2309      	movs	r3, #9
 80267f4:	602b      	str	r3, [r5, #0]
 80267f6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80267fa:	81a3      	strh	r3, [r4, #12]
 80267fc:	f04f 30ff 	mov.w	r0, #4294967295
 8026800:	e034      	b.n	802686c <__swsetup_r+0x9c>
 8026802:	0758      	lsls	r0, r3, #29
 8026804:	d512      	bpl.n	802682c <__swsetup_r+0x5c>
 8026806:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026808:	b141      	cbz	r1, 802681c <__swsetup_r+0x4c>
 802680a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802680e:	4299      	cmp	r1, r3
 8026810:	d002      	beq.n	8026818 <__swsetup_r+0x48>
 8026812:	4628      	mov	r0, r5
 8026814:	f7ff fbd0 	bl	8025fb8 <_free_r>
 8026818:	2300      	movs	r3, #0
 802681a:	6363      	str	r3, [r4, #52]	; 0x34
 802681c:	89a3      	ldrh	r3, [r4, #12]
 802681e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026822:	81a3      	strh	r3, [r4, #12]
 8026824:	2300      	movs	r3, #0
 8026826:	6063      	str	r3, [r4, #4]
 8026828:	6923      	ldr	r3, [r4, #16]
 802682a:	6023      	str	r3, [r4, #0]
 802682c:	89a3      	ldrh	r3, [r4, #12]
 802682e:	f043 0308 	orr.w	r3, r3, #8
 8026832:	81a3      	strh	r3, [r4, #12]
 8026834:	6923      	ldr	r3, [r4, #16]
 8026836:	b94b      	cbnz	r3, 802684c <__swsetup_r+0x7c>
 8026838:	89a3      	ldrh	r3, [r4, #12]
 802683a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802683e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026842:	d003      	beq.n	802684c <__swsetup_r+0x7c>
 8026844:	4621      	mov	r1, r4
 8026846:	4628      	mov	r0, r5
 8026848:	f000 f840 	bl	80268cc <__smakebuf_r>
 802684c:	89a0      	ldrh	r0, [r4, #12]
 802684e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026852:	f010 0301 	ands.w	r3, r0, #1
 8026856:	d00a      	beq.n	802686e <__swsetup_r+0x9e>
 8026858:	2300      	movs	r3, #0
 802685a:	60a3      	str	r3, [r4, #8]
 802685c:	6963      	ldr	r3, [r4, #20]
 802685e:	425b      	negs	r3, r3
 8026860:	61a3      	str	r3, [r4, #24]
 8026862:	6923      	ldr	r3, [r4, #16]
 8026864:	b943      	cbnz	r3, 8026878 <__swsetup_r+0xa8>
 8026866:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802686a:	d1c4      	bne.n	80267f6 <__swsetup_r+0x26>
 802686c:	bd38      	pop	{r3, r4, r5, pc}
 802686e:	0781      	lsls	r1, r0, #30
 8026870:	bf58      	it	pl
 8026872:	6963      	ldrpl	r3, [r4, #20]
 8026874:	60a3      	str	r3, [r4, #8]
 8026876:	e7f4      	b.n	8026862 <__swsetup_r+0x92>
 8026878:	2000      	movs	r0, #0
 802687a:	e7f7      	b.n	802686c <__swsetup_r+0x9c>
 802687c:	240000f4 	.word	0x240000f4

08026880 <__swhatbuf_r>:
 8026880:	b570      	push	{r4, r5, r6, lr}
 8026882:	460c      	mov	r4, r1
 8026884:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026888:	2900      	cmp	r1, #0
 802688a:	b096      	sub	sp, #88	; 0x58
 802688c:	4615      	mov	r5, r2
 802688e:	461e      	mov	r6, r3
 8026890:	da0d      	bge.n	80268ae <__swhatbuf_r+0x2e>
 8026892:	89a3      	ldrh	r3, [r4, #12]
 8026894:	f013 0f80 	tst.w	r3, #128	; 0x80
 8026898:	f04f 0100 	mov.w	r1, #0
 802689c:	bf0c      	ite	eq
 802689e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80268a2:	2340      	movne	r3, #64	; 0x40
 80268a4:	2000      	movs	r0, #0
 80268a6:	6031      	str	r1, [r6, #0]
 80268a8:	602b      	str	r3, [r5, #0]
 80268aa:	b016      	add	sp, #88	; 0x58
 80268ac:	bd70      	pop	{r4, r5, r6, pc}
 80268ae:	466a      	mov	r2, sp
 80268b0:	f000 f848 	bl	8026944 <_fstat_r>
 80268b4:	2800      	cmp	r0, #0
 80268b6:	dbec      	blt.n	8026892 <__swhatbuf_r+0x12>
 80268b8:	9901      	ldr	r1, [sp, #4]
 80268ba:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80268be:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80268c2:	4259      	negs	r1, r3
 80268c4:	4159      	adcs	r1, r3
 80268c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80268ca:	e7eb      	b.n	80268a4 <__swhatbuf_r+0x24>

080268cc <__smakebuf_r>:
 80268cc:	898b      	ldrh	r3, [r1, #12]
 80268ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80268d0:	079d      	lsls	r5, r3, #30
 80268d2:	4606      	mov	r6, r0
 80268d4:	460c      	mov	r4, r1
 80268d6:	d507      	bpl.n	80268e8 <__smakebuf_r+0x1c>
 80268d8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80268dc:	6023      	str	r3, [r4, #0]
 80268de:	6123      	str	r3, [r4, #16]
 80268e0:	2301      	movs	r3, #1
 80268e2:	6163      	str	r3, [r4, #20]
 80268e4:	b002      	add	sp, #8
 80268e6:	bd70      	pop	{r4, r5, r6, pc}
 80268e8:	ab01      	add	r3, sp, #4
 80268ea:	466a      	mov	r2, sp
 80268ec:	f7ff ffc8 	bl	8026880 <__swhatbuf_r>
 80268f0:	9900      	ldr	r1, [sp, #0]
 80268f2:	4605      	mov	r5, r0
 80268f4:	4630      	mov	r0, r6
 80268f6:	f7ff f871 	bl	80259dc <_malloc_r>
 80268fa:	b948      	cbnz	r0, 8026910 <__smakebuf_r+0x44>
 80268fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026900:	059a      	lsls	r2, r3, #22
 8026902:	d4ef      	bmi.n	80268e4 <__smakebuf_r+0x18>
 8026904:	f023 0303 	bic.w	r3, r3, #3
 8026908:	f043 0302 	orr.w	r3, r3, #2
 802690c:	81a3      	strh	r3, [r4, #12]
 802690e:	e7e3      	b.n	80268d8 <__smakebuf_r+0xc>
 8026910:	89a3      	ldrh	r3, [r4, #12]
 8026912:	6020      	str	r0, [r4, #0]
 8026914:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8026918:	81a3      	strh	r3, [r4, #12]
 802691a:	9b00      	ldr	r3, [sp, #0]
 802691c:	6163      	str	r3, [r4, #20]
 802691e:	9b01      	ldr	r3, [sp, #4]
 8026920:	6120      	str	r0, [r4, #16]
 8026922:	b15b      	cbz	r3, 802693c <__smakebuf_r+0x70>
 8026924:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026928:	4630      	mov	r0, r6
 802692a:	f000 f81d 	bl	8026968 <_isatty_r>
 802692e:	b128      	cbz	r0, 802693c <__smakebuf_r+0x70>
 8026930:	89a3      	ldrh	r3, [r4, #12]
 8026932:	f023 0303 	bic.w	r3, r3, #3
 8026936:	f043 0301 	orr.w	r3, r3, #1
 802693a:	81a3      	strh	r3, [r4, #12]
 802693c:	89a3      	ldrh	r3, [r4, #12]
 802693e:	431d      	orrs	r5, r3
 8026940:	81a5      	strh	r5, [r4, #12]
 8026942:	e7cf      	b.n	80268e4 <__smakebuf_r+0x18>

08026944 <_fstat_r>:
 8026944:	b538      	push	{r3, r4, r5, lr}
 8026946:	4d07      	ldr	r5, [pc, #28]	; (8026964 <_fstat_r+0x20>)
 8026948:	2300      	movs	r3, #0
 802694a:	4604      	mov	r4, r0
 802694c:	4608      	mov	r0, r1
 802694e:	4611      	mov	r1, r2
 8026950:	602b      	str	r3, [r5, #0]
 8026952:	f7da ff4e 	bl	80017f2 <_fstat>
 8026956:	1c43      	adds	r3, r0, #1
 8026958:	d102      	bne.n	8026960 <_fstat_r+0x1c>
 802695a:	682b      	ldr	r3, [r5, #0]
 802695c:	b103      	cbz	r3, 8026960 <_fstat_r+0x1c>
 802695e:	6023      	str	r3, [r4, #0]
 8026960:	bd38      	pop	{r3, r4, r5, pc}
 8026962:	bf00      	nop
 8026964:	24003a34 	.word	0x24003a34

08026968 <_isatty_r>:
 8026968:	b538      	push	{r3, r4, r5, lr}
 802696a:	4d06      	ldr	r5, [pc, #24]	; (8026984 <_isatty_r+0x1c>)
 802696c:	2300      	movs	r3, #0
 802696e:	4604      	mov	r4, r0
 8026970:	4608      	mov	r0, r1
 8026972:	602b      	str	r3, [r5, #0]
 8026974:	f7da ff4d 	bl	8001812 <_isatty>
 8026978:	1c43      	adds	r3, r0, #1
 802697a:	d102      	bne.n	8026982 <_isatty_r+0x1a>
 802697c:	682b      	ldr	r3, [r5, #0]
 802697e:	b103      	cbz	r3, 8026982 <_isatty_r+0x1a>
 8026980:	6023      	str	r3, [r4, #0]
 8026982:	bd38      	pop	{r3, r4, r5, pc}
 8026984:	24003a34 	.word	0x24003a34

08026988 <_init>:
 8026988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802698a:	bf00      	nop
 802698c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802698e:	bc08      	pop	{r3}
 8026990:	469e      	mov	lr, r3
 8026992:	4770      	bx	lr

08026994 <_fini>:
 8026994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026996:	bf00      	nop
 8026998:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802699a:	bc08      	pop	{r3}
 802699c:	469e      	mov	lr, r3
 802699e:	4770      	bx	lr
